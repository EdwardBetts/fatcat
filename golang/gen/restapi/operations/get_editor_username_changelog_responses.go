// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.archive.org/bnewbold/fatcat/golang/gen/models"
)

// GetEditorUsernameChangelogOKCode is the HTTP code returned for type GetEditorUsernameChangelogOK
const GetEditorUsernameChangelogOKCode int = 200

/*GetEditorUsernameChangelogOK find changes (editgroups) by this editor which have been merged

swagger:response getEditorUsernameChangelogOK
*/
type GetEditorUsernameChangelogOK struct {

	/*
	  In: Body
	*/
	Payload *models.Changelogentry `json:"body,omitempty"`
}

// NewGetEditorUsernameChangelogOK creates GetEditorUsernameChangelogOK with default headers values
func NewGetEditorUsernameChangelogOK() *GetEditorUsernameChangelogOK {

	return &GetEditorUsernameChangelogOK{}
}

// WithPayload adds the payload to the get editor username changelog o k response
func (o *GetEditorUsernameChangelogOK) WithPayload(payload *models.Changelogentry) *GetEditorUsernameChangelogOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get editor username changelog o k response
func (o *GetEditorUsernameChangelogOK) SetPayload(payload *models.Changelogentry) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEditorUsernameChangelogOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEditorUsernameChangelogNotFoundCode is the HTTP code returned for type GetEditorUsernameChangelogNotFound
const GetEditorUsernameChangelogNotFoundCode int = 404

/*GetEditorUsernameChangelogNotFound username not found

swagger:response getEditorUsernameChangelogNotFound
*/
type GetEditorUsernameChangelogNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEditorUsernameChangelogNotFound creates GetEditorUsernameChangelogNotFound with default headers values
func NewGetEditorUsernameChangelogNotFound() *GetEditorUsernameChangelogNotFound {

	return &GetEditorUsernameChangelogNotFound{}
}

// WithPayload adds the payload to the get editor username changelog not found response
func (o *GetEditorUsernameChangelogNotFound) WithPayload(payload *models.Error) *GetEditorUsernameChangelogNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get editor username changelog not found response
func (o *GetEditorUsernameChangelogNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEditorUsernameChangelogNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetEditorUsernameChangelogDefault generic error response

swagger:response getEditorUsernameChangelogDefault
*/
type GetEditorUsernameChangelogDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEditorUsernameChangelogDefault creates GetEditorUsernameChangelogDefault with default headers values
func NewGetEditorUsernameChangelogDefault(code int) *GetEditorUsernameChangelogDefault {
	if code <= 0 {
		code = 500
	}

	return &GetEditorUsernameChangelogDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get editor username changelog default response
func (o *GetEditorUsernameChangelogDefault) WithStatusCode(code int) *GetEditorUsernameChangelogDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get editor username changelog default response
func (o *GetEditorUsernameChangelogDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get editor username changelog default response
func (o *GetEditorUsernameChangelogDefault) WithPayload(payload *models.Error) *GetEditorUsernameChangelogDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get editor username changelog default response
func (o *GetEditorUsernameChangelogDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEditorUsernameChangelogDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
