// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReleaseEntity release entity
// swagger:model release_entity
type ReleaseEntity struct {

	// ident
	// Required: true
	Ident *string `json:"ident"`

	// name
	Name string `json:"name,omitempty"`

	// orcid
	Orcid string `json:"orcid,omitempty"`

	// redirect
	Redirect string `json:"redirect,omitempty"`

	// revision
	Revision int64 `json:"revision,omitempty"`

	// state
	// Required: true
	// Enum: [wip active redirect deleted]
	State *string `json:"state"`
}

// Validate validates this release entity
func (m *ReleaseEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIdent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReleaseEntity) validateIdent(formats strfmt.Registry) error {

	if err := validate.Required("ident", "body", m.Ident); err != nil {
		return err
	}

	return nil
}

var releaseEntityTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["wip","active","redirect","deleted"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		releaseEntityTypeStatePropEnum = append(releaseEntityTypeStatePropEnum, v)
	}
}

const (

	// ReleaseEntityStateWip captures enum value "wip"
	ReleaseEntityStateWip string = "wip"

	// ReleaseEntityStateActive captures enum value "active"
	ReleaseEntityStateActive string = "active"

	// ReleaseEntityStateRedirect captures enum value "redirect"
	ReleaseEntityStateRedirect string = "redirect"

	// ReleaseEntityStateDeleted captures enum value "deleted"
	ReleaseEntityStateDeleted string = "deleted"
)

// prop value enum
func (m *ReleaseEntity) validateStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, releaseEntityTypeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ReleaseEntity) validateState(formats strfmt.Registry) error {

	if err := validate.Required("state", "body", m.State); err != nil {
		return err
	}

	// value enum
	if err := m.validateStateEnum("state", "body", *m.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReleaseEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReleaseEntity) UnmarshalBinary(b []byte) error {
	var res ReleaseEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
