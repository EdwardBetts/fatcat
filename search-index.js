var searchIndex = {};
searchIndex["aho_corasick"] = {"doc":"An implementation of the Aho-Corasick string search algorithm.","items":[[3,"Match","aho_corasick","Records a match in the search text.",null,null],[12,"pati","","The pattern index.",0,null],[12,"start","","The starting byte offset of the match in the search text.",0,null],[12,"end","","The ending byte offset of the match in the search text.",0,null],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",null,null],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",null,null],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",null,null],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",null,null],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",null,null],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",null,null],[3,"Dense","","State transitions that can be stored either sparsely or densely.",null,null],[3,"Sparse","","State transitions that are always sparse.",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"match"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"match"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"match"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",1,{"i":[{"n":"self"}],"o":{"g":["match"],"n":"option"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",2,{"i":[{"n":"self"}],"o":{"g":["result"],"n":"option"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",3,{"i":[{"n":"self"}],"o":{"g":["match"],"n":"option"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",4,{"i":[{"n":"self"}],"o":{"g":["result"],"n":"option"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"fullacautomaton"}}],[11,"new","","Build a new expanded Aho-Corasick automaton from an existing Aho-Corasick automaton.",5,{"i":[{"n":"acautomaton"}],"o":{"n":"fullacautomaton"}}],[11,"next_state","","",5,{"i":[{"n":"self"},{"n":"stateidx"},{"n":"u8"}],"o":{"n":"stateidx"}}],[11,"get_match","","",5,{"i":[{"n":"self"},{"n":"stateidx"},{"n":"usize"},{"n":"usize"}],"o":{"n":"match"}}],[11,"has_match","","",5,{"i":[{"n":"self"},{"n":"stateidx"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"start_bytes","","",5,null],[11,"patterns","","",5,null],[11,"pattern","","",5,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"p"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[6,"StateIdx","","The integer type used for the state index.",null,null],[8,"Automaton","","An abstraction over automatons and their corresponding iterators. The type parameter `P` is the type of the pattern that was used to construct this Automaton.",null,null],[10,"next_state","","Return the next state given the current state and next character.",6,{"i":[{"n":"self"},{"n":"stateidx"},{"n":"u8"}],"o":{"n":"stateidx"}}],[10,"has_match","","Return true if and only if the given state and current pattern index indicate a match.",6,{"i":[{"n":"self"},{"n":"stateidx"},{"n":"usize"}],"o":{"n":"bool"}}],[10,"get_match","","Build a match given the current state, pattern index and input index.",6,{"i":[{"n":"self"},{"n":"stateidx"},{"n":"usize"},{"n":"usize"}],"o":{"n":"match"}}],[10,"start_bytes","","Return the set of bytes that have transitions in the root state.",6,null],[10,"patterns","","Returns all of the patterns matched by this automaton.",6,null],[10,"pattern","","Returns the pattern indexed at `i`.",6,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"p"}}],[11,"len","","Return the number of patterns in the automaton.",6,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the automaton has no patterns.",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,{"i":[{"n":"self"},{"n":"q"}],"o":{"n":"matches"}}],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,{"i":[{"n":"self"},{"n":"q"}],"o":{"n":"matchesoverlapping"}}],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"streammatches"}}],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"streammatchesoverlapping"}}],[8,"Transitions","","An abstraction over state transition strategies.",null,null],[10,"new","","Return a new state at the given depth.",7,{"i":[{"n":"u32"}],"o":{"n":"self"}}],[10,"goto","","Return the next state index given the next character.",7,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"stateidx"}}],[10,"set_goto","","Set the next state index for the character given.",7,{"i":[{"n":"self"},{"n":"u8"},{"n":"stateidx"}]}],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of transitions.",7,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"acautomaton"}}],[11,"new","","Create a new automaton from an iterator of patterns.",8,{"i":[{"n":"i"}],"o":{"g":["dense"],"n":"acautomaton"}}],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",8,{"i":[{"n":"i"}],"o":{"n":"acautomaton"}}],[11,"into_full","","Build out the entire automaton into a single matrix.",8,{"i":[{"n":"self"}],"o":{"n":"fullacautomaton"}}],[11,"next_state","","",8,{"i":[{"n":"self"},{"n":"stateidx"},{"n":"u8"}],"o":{"n":"stateidx"}}],[11,"get_match","","",8,{"i":[{"n":"self"},{"n":"stateidx"},{"n":"usize"},{"n":"usize"}],"o":{"n":"match"}}],[11,"has_match","","",8,{"i":[{"n":"self"},{"n":"stateidx"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"start_bytes","","",8,null],[11,"patterns","","",8,null],[11,"pattern","","",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"p"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"dense"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",9,{"i":[{"n":"u32"}],"o":{"n":"dense"}}],[11,"goto","","",9,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"stateidx"}}],[11,"set_goto","","",9,{"i":[{"n":"self"},{"n":"u8"},{"n":"stateidx"}]}],[11,"heap_bytes","","",9,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"sparse"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",10,{"i":[{"n":"u32"}],"o":{"n":"sparse"}}],[11,"goto","","",10,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"stateidx"}}],[11,"set_goto","","",10,{"i":[{"n":"self"},{"n":"u8"},{"n":"stateidx"}]}],[11,"heap_bytes","","",10,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"from_iter","","Create an automaton from an iterator of strings.",8,{"i":[{"n":"t"}],"o":{"n":"acautomaton"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"len","","Return the number of patterns in the automaton.",6,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the automaton has no patterns.",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,{"i":[{"n":"self"},{"n":"q"}],"o":{"n":"matches"}}],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,{"i":[{"n":"self"},{"n":"q"}],"o":{"n":"matchesoverlapping"}}],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"streammatches"}}],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"streammatchesoverlapping"}}]],"paths":[[3,"Match"],[3,"Matches"],[3,"StreamMatches"],[3,"MatchesOverlapping"],[3,"StreamMatchesOverlapping"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["ansi_term"] = {"doc":"This is a library for controlling colours and formatting, such as red bold text or blue underlined text, on ANSI terminals.","items":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference between two styles.",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[3,"Style","","A style is a collection of properties that can format a string using ANSI escape codes.",null,null],[12,"foreground","","The style's foreground colour, if it has one.",0,null],[12,"background","","The style's background colour, if it has one.",0,null],[12,"is_bold","","Whether this style is bold.",0,null],[12,"is_dimmed","","Whether this style is dimmed.",0,null],[12,"is_italic","","Whether this style is italic.",0,null],[12,"is_underline","","Whether this style is underlined.",0,null],[12,"is_blink","","Whether this style is blinking.",0,null],[12,"is_reverse","","Whether this style has reverse colours.",0,null],[12,"is_hidden","","Whether this style is hidden.",0,null],[12,"is_strikethrough","","Whether this style is struckthrough.",0,null],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and a `Style` to display that string.  `ANSIString` and `ANSIByteString` are aliases for this type on `str` and `[u8]`, respectively.",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order to be written with a minimum of control characters.",null,null],[12,"0","","",1,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can refer to either the foreground or background colour.",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal environments.",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[4,"Color","","A colour is one specific type of ANSI escape code, and can refer to either the foreground or background colour.",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal environments.",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",null,null],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",null,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"prefix"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"infix"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"suffix"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"prefix","","The prefix for this style.",0,{"i":[{"n":"self"}],"o":{"n":"prefix"}}],[11,"infix","","The infix between this style and another.",0,{"i":[{"n":"self"},{"n":"style"}],"o":{"n":"infix"}}],[11,"suffix","","The suffix for this style.",0,{"i":[{"n":"self"}],"o":{"n":"suffix"}}],[11,"prefix","","The prefix for this colour.",2,{"i":[{"n":"self"}],"o":{"n":"prefix"}}],[11,"infix","","The infix between this colour and another.",2,{"i":[{"n":"self"},{"n":"colour"}],"o":{"n":"infix"}}],[11,"suffix","","The suffix for this colour.",2,{"i":[{"n":"self"}],"o":{"n":"suffix"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"style"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"style"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"new","","Creates a new Style with no differences.",0,{"o":{"n":"style"}}],[11,"bold","","Returns a `Style` with the bold property set.",0,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"italic","","Returns a `Style` with the italic property set.",0,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"underline","","Returns a `Style` with the underline property set.",0,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"blink","","Returns a `Style` with the blink property set.",0,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"reverse","","Returns a `Style` with the reverse property set.",0,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"hidden","","Returns a `Style` with the hidden property set.",0,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,{"i":[{"n":"self"},{"n":"colour"}],"o":{"n":"style"}}],[11,"on","","Returns a `Style` with the background colour property set.",0,{"i":[{"n":"self"},{"n":"colour"}],"o":{"n":"style"}}],[11,"is_plain","","Return true if this `Style` has no actual styles, and can be written without any control characters.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"default","","Returns a style with no properties set. Formatting text using this style returns the exact same text.",0,{"o":{"n":"style"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"colour"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"colour"}],"o":{"n":"bool"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"colour"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"normal","","Return a `Style` with the foreground colour set to this colour.",2,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"bold","","Returns a `Style` with the bold property set.",2,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"italic","","Returns a `Style` with the italic property set.",2,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"underline","","Returns a `Style` with the underline property set.",2,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"blink","","Returns a `Style` with the blink property set.",2,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"reverse","","Returns a `Style` with the reverse property set.",2,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"hidden","","Returns a `Style` with the hidden property set.",2,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"on","","Returns a `Style` with the background colour property set.",2,{"i":[{"n":"self"},{"n":"colour"}],"o":{"n":"style"}}],[11,"from","","You can turn a `Colour` into a `Style` with the foreground colour set with the `From` trait.",0,{"i":[{"n":"colour"}],"o":{"n":"style"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"ansigenericstring"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"ansigenericstring"}],"o":{"n":"bool"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"ansigenericstring"}}],[11,"from","","",6,{"i":[{"n":"i"}],"o":{"n":"ansigenericstring"}}],[11,"deref","","",6,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"paint","","Paints the given text with this colour, returning an ANSI string.",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"ansigenericstring"}}],[11,"paint","","Paints the given text with this colour, returning an ANSI string. This is a short-cut so you don’t have to use `Blue.normal()` just to get blue text.",2,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"ansigenericstring"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to display it in a terminal.",null,null],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of bytes.  Use `ANSIByteString` when styling text with an unknown encoding.",null,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be written with a minimum of control characters.",null,null],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to be written with a minimum of control characters.",null,null],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`.  This writes the escape sequences for the associated `Style` around the bytes.",8,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`.  This writes the minimal escape sequences for the associated `Style`s around each set of bytes.",10,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}]],"paths":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,"ANSIGenericString"],[6,"ANSIString"],[6,"ANSIByteString"],[6,"ANSIStrings"],[6,"ANSIByteStrings"]]};
searchIndex["antidote"] = {"doc":"Mutex and RwLock types that do not poison themselves.","items":[[3,"WaitTimeoutResult","antidote","A type indicating whether a timed wait on a condition variable returned due to a time out or not.",null,null],[3,"Mutex","","Like `std::sync::Mutex` except that it does not poison itself.",null,null],[3,"MutexGuard","","Like `std::sync::MutexGuard`.",null,null],[3,"Condvar","","Like `std::sync::Condvar`.",null,null],[3,"TryLockError","","Like `std::sync::TryLockError`.",null,null],[3,"RwLock","","Like `std::sync::RwLock` except that it does not poison itself.",null,null],[3,"RwLockReadGuard","","Like `std::sync::RwLockReadGuard`.",null,null],[3,"RwLockWriteGuard","","Like `std::sync::RwLockWriteGuard`.",null,null],[6,"TryLockResult","","Like `std::sync::TryLockResult`.",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Like `std::sync::Mutex::new`.",0,{"i":[{"n":"t"}],"o":{"n":"mutex"}}],[11,"into_inner","","Like `std::sync::Mutex::into_inner`.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"lock","","Like `std::sync::Mutex::lock`.",0,{"i":[{"n":"self"}],"o":{"n":"mutexguard"}}],[11,"try_lock","","Like `std::sync::Mutex::try_lock`.",0,{"i":[{"n":"self"}],"o":{"g":["mutexguard"],"n":"trylockresult"}}],[11,"get_mut","","Like `std::sync::Mutex::get_mut`.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref","","",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"new","","Like `std::sync::Condvar::new`.",2,{"o":{"n":"condvar"}}],[11,"wait","","Like `std::sync::Condvar::wait`.",2,{"i":[{"n":"self"},{"n":"mutexguard"}],"o":{"n":"mutexguard"}}],[11,"wait_timeout","","Like `std::sync::Condvar::wait_timeout`.",2,null],[11,"notify_one","","Like `std::sync::Condvar::notify_one`.",2,{"i":[{"n":"self"}]}],[11,"notify_all","","Like `std::sync::Condvar::notify_all`.",2,{"i":[{"n":"self"}]}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Like `std::sync::RwLock::new`.",4,{"i":[{"n":"t"}],"o":{"n":"rwlock"}}],[11,"into_inner","","Like `std::sync::RwLock::into_inner`.",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"read","","Like `std::sync::RwLock::read`.",4,{"i":[{"n":"self"}],"o":{"n":"rwlockreadguard"}}],[11,"try_read","","Like `std::sync::RwLock::try_read`.",4,{"i":[{"n":"self"}],"o":{"g":["rwlockreadguard"],"n":"trylockresult"}}],[11,"write","","Like `std::sync::RwLock::write`.",4,{"i":[{"n":"self"}],"o":{"n":"rwlockwriteguard"}}],[11,"try_write","","Like `std::sync::RwLock::try_write`.",4,{"i":[{"n":"self"}],"o":{"g":["rwlockwriteguard"],"n":"trylockresult"}}],[11,"get_mut","","Like `std::sync::RwLock::get_mut`.",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref","","",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref","","",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"waittimeoutresult"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"waittimeoutresult"}],"o":{"n":"bool"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"waittimeoutresult"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}]],"paths":[[3,"Mutex"],[3,"MutexGuard"],[3,"Condvar"],[3,"TryLockError"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"WaitTimeoutResult"]]};
searchIndex["arrayvec"] = {"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:  array-backed vector and string types, which store their contents inline.","items":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",null,null],[3,"CapacityError","","Error value indicating insufficient capacity",null,null],[3,"ArrayVec","","A vector with a fixed capacity.",null,null],[3,"IntoIter","","By-value iterator for `ArrayVec`.",null,null],[3,"Drain","","A draining iterator for `ArrayVec`.",null,null],[11,"default","","Return an empty `ArrayString`",0,{"o":{"n":"arraystring"}}],[11,"new","","Create a new empty `ArrayString`.",0,{"o":{"n":"arraystring"}}],[11,"from","","Create a new `ArrayString` from a `str`.",0,{"i":[{"n":"str"}],"o":{"g":["capacityerror"],"n":"result"}}],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,{"i":[{"n":"a"}],"o":{"g":["utf8error"],"n":"result"}}],[11,"capacity","","Return the capacity of the `ArrayString`.",0,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Adds the given char to the end of the string.",0,{"i":[{"n":"self"},{"n":"char"}]}],[11,"try_push","","Adds the given char to the end of the string.",0,{"i":[{"n":"self"},{"n":"char"}],"o":{"g":["capacityerror"],"n":"result"}}],[11,"push_str","","Adds the given string slice to the end of the string.",0,{"i":[{"n":"self"},{"n":"str"}]}],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["capacityerror"],"n":"result"}}],[11,"pop","","Removes the last character from the string and returns it.",0,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"remove","","Removes a `char` from this `ArrayString` at a byte position and returns it.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"char"}}],[11,"clear","","Make the string empty.",0,{"i":[{"n":"self"}]}],[11,"set_len","","Set the strings’s length.",0,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"hash","","",0,{"i":[{"n":"self"},{"n":"h"}]}],[11,"borrow","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"as_ref","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"write_char","","",0,{"i":[{"n":"self"},{"n":"char"}],"o":{"n":"result"}}],[11,"write_str","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"arraystring"}}],[11,"clone_from","","",0,{"i":[{"n":"self"},{"n":"self"}]}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"ordering"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"capacityerror"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"ordering"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"new","","Create a new `CapacityError` from `element`.",1,{"i":[{"n":"t"}],"o":{"n":"capacityerror"}}],[11,"element","","Extract the overflowing element",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"simplify","","Convert into a `CapacityError` that does not carry an element.",1,{"i":[{"n":"self"}],"o":{"n":"capacityerror"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[8,"Array","","Trait for fixed size arrays.",null,null],[16,"Item","","The array’s element type",2,null],[8,"RangeArgument","","`RangeArgument` is implemented by Rust's built-in range types, produced by range syntax like `..`, `a..`, `..b` or `c..d`.",null,null],[11,"start","","Start index (inclusive)",3,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"end","","End index (exclusive)",3,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"drop","","",4,{"i":[{"n":"self"}]}],[11,"new","","Create a new empty `ArrayVec`.",4,{"o":{"n":"arrayvec"}}],[11,"len","","Return the number of elements in the `ArrayVec`.",4,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"capacity","","Return the capacity of the `ArrayVec`.",4,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_full","","Return if the `ArrayVec` is completely filled.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Push `element` to the end of the vector.",4,null],[11,"try_push","","Push `element` to the end of the vector.",4,null],[11,"push_unchecked","","Push `element` to the end of the vector without checking the capacity.",4,null],[11,"insert","","Insert `element` at position `index`.",4,null],[11,"try_insert","","Insert `element` at position `index`.",4,null],[11,"pop","","Remove the last element in the vector and return it.",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"swap_remove","","Remove the element at `index` and swap the last element into its place.",4,null],[11,"swap_pop","","Remove the element at `index` and swap the last element into its place.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"remove","","Remove the element at `index` and shift down the following elements.",4,null],[11,"pop_at","","Remove the element at `index` and shift down the following elements.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"truncate","","Shortens the vector, keeping the first `len` elements and dropping the rest.",4,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clear","","Remove all elements in the vector.",4,{"i":[{"n":"self"}]}],[11,"retain","","Retains only the elements specified by the predicate.",4,{"i":[{"n":"self"},{"n":"f"}]}],[11,"set_len","","Set the vector’s length without dropping or moving out elements",4,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"drain","","Create a draining iterator that removes the specified range in the vector and yields the removed items from start to end. The element range is removed even if the iterator is not consumed until the end.",4,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"drain"}}],[11,"into_inner","","Return the inner fixed size array, if it is full to its capacity.",4,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"dispose","","Dispose of `self` without the overwriting that is needed in Drop.",4,{"i":[{"n":"self"}]}],[11,"as_slice","","Return a slice containing all elements of the vector.",4,null],[11,"as_mut_slice","","Return a mutable slice containing all elements of the vector.",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"from","","",4,{"i":[{"n":"a"}],"o":{"n":"self"}}],[11,"into_iter","","",4,{"i":[{"n":"self"}],"o":{"n":"intoiter"}}],[11,"next","","",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"drop","","",5,{"i":[{"n":"self"}]}],[11,"next","","",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",6,null],[11,"next_back","","",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"drop","","",6,{"i":[{"n":"self"}]}],[11,"extend","","",4,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",4,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone_from","","",4,{"i":[{"n":"self"},{"n":"self"}]}],[11,"hash","","",4,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"eq","","",4,null],[11,"borrow","","",4,null],[11,"borrow_mut","","",4,null],[11,"as_ref","","",4,null],[11,"as_mut","","",4,null],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","Return an empty array",4,{"o":{"n":"arrayvec"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"arrayvec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"le","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"ge","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"gt","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"arrayvec"}],"o":{"n":"ordering"}}],[11,"start","","Start index (inclusive)",3,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"end","","End index (exclusive)",3,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}]],"paths":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[8,"RangeArgument"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["atty"] = {"doc":"atty is a simple utility that answers one question > is this a tty?","items":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,{"i":[{"n":"stream"}],"o":{"n":"bool"}}],[5,"isnt","","returns true if this is not a tty",null,{"i":[{"n":"stream"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"stream"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[4,"Stream"]]};
searchIndex["backtrace"] = {"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to the `trace` function of this crate.",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic accessors to the demangled name, the raw bytes, the raw string, etc.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[5,"trace","","Inspects the current call-stack, passing all active frames into the closure provided to calculate a stack trace.",null,{"i":[{"n":"f"}]}],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the specified closure.",null,null],[11,"ip","","Returns the current instruction pointer of this frame.",0,null],[11,"symbol_address","","Returns the starting symbol address of the frame of this function.",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"name","","Returns the name of this function.",1,{"i":[{"n":"self"}],"o":{"g":["symbolname"],"n":"option"}}],[11,"addr","","Returns the starting address of this function.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"filename","","Returns the file name where this function was defined.",1,{"i":[{"n":"self"}],"o":{"g":["path"],"n":"option"}}],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new symbol name from the raw underlying bytes.",2,null],[11,"as_str","","Returns the raw symbol name as a `str` if the symbols is valid utf-8.",2,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",2,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"backtrace"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"backtraceframe"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"backtracesymbol"}}],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",3,{"o":{"n":"backtrace"}}],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",3,{"o":{"n":"backtrace"}}],[11,"frames","","Returns the frames from when this backtrace was captured.",3,null],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",3,{"i":[{"n":"self"}]}],[11,"from","","",3,{"i":[{"g":["backtraceframe"],"n":"vec"}],"o":{"n":"self"}}],[11,"into","","",3,{"i":[{"n":"self"}],"o":{"g":["backtraceframe"],"n":"vec"}}],[11,"ip","","Same as `Frame::ip`",4,null],[11,"symbol_address","","Same as `Frame::symbol_address`",4,null],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",4,null],[11,"name","","Same as `Symbol::name`",5,{"i":[{"n":"self"}],"o":{"g":["symbolname"],"n":"option"}}],[11,"addr","","Same as `Symbol::addr`",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"filename","","Same as `Symbol::filename`",5,{"i":[{"n":"self"}],"o":{"g":["path"],"n":"option"}}],[11,"lineno","","Same as `Symbol::lineno`",5,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",3,{"o":{"n":"backtrace"}}]],"paths":[[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"] = {"doc":"","items":[[4,"backtrace_state","backtrace_sys","",null,null],[5,"backtrace_create_state","","",null,null],[5,"backtrace_syminfo","","",null,null],[5,"backtrace_pcinfo","","",null,null],[6,"backtrace_syminfo_callback","","",null,null],[6,"backtrace_full_callback","","",null,null],[6,"backtrace_error_callback","","",null,null]],"paths":[]};
searchIndex["base64"] = {"doc":"","items":[[3,"Config","base64","Contains configuration parameters for base64 encoding",null,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",0,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",0,null],[4,"LineEnding","","",null,null],[13,"LF","","",1,null],[13,"CRLF","","",1,null],[4,"LineWrap","","",null,null],[13,"NoWrap","","",2,null],[13,"Wrap","","",2,null],[4,"DecodeError","","",null,null],[13,"InvalidByte","","",3,null],[13,"InvalidLength","","",3,null],[5,"encode","","Encode arbitrary octets as base64. Returns a String. Convenience for `encode_config(input, base64::STANDARD);`.",null,{"i":[{"n":"t"}],"o":{"n":"string"}}],[5,"decode","","Decode from string reference as octets. Returns a Result containing a Vec. Convenience `decode_config(input, base64::STANDARD);`.",null,{"i":[{"n":"t"}],"o":{"g":["vec","decodeerror"],"n":"result"}}],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",null,{"i":[{"n":"t"},{"n":"config"}],"o":{"n":"string"}}],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the supplied buffer to avoid allocations.",null,{"i":[{"n":"t"},{"n":"config"},{"n":"string"}]}],[5,"decode_config","","Decode from string reference as octets. Returns a Result containing a Vec.",null,{"i":[{"n":"t"},{"n":"config"}],"o":{"g":["vec","decodeerror"],"n":"result"}}],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the supplied buffer to avoid allocation. Returns a Result containing an empty tuple, aka ().",null,{"i":[{"n":"t"},{"n":"config"},{"n":"vec"}],"o":{"g":["decodeerror"],"n":"result"}}],[7,"STANDARD","","",null,null],[7,"MIME","","",null,null],[7,"URL_SAFE","","",null,null],[7,"URL_SAFE_NO_PAD","","",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"characterset"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"lineending"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"linewrap"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"config"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",4,{"i":[{"n":"characterset"},{"n":"bool"},{"n":"bool"},{"n":"linewrap"}],"o":{"n":"config"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"decodeerror"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"decodeerror"}],"o":{"n":"bool"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",3,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}]],"paths":[[4,"CharacterSet"],[4,"LineEnding"],[4,"LineWrap"],[4,"DecodeError"],[3,"Config"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[0,"example_generated","bitflags","This module shows an example of code generated by the macro. IT MUST NOT BE USED OUTSIDE THIS CRATE.",null,null],[3,"Flags","bitflags::example_generated","This is the same `Flags` struct defined in the crate level example. Note that this struct is just for documentation purposes only, it must not be used outside this crate.",null,null],[17,"FLAG_A","","",null,null],[17,"FLAG_B","","",null,null],[17,"FLAG_C","","",null,null],[17,"FLAG_ABC","","",null,null],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"flags"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"ordering"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"empty","","Returns an empty set of flags.",0,{"o":{"n":"flags"}}],[11,"all","","Returns the set containing all flags.",0,{"o":{"n":"flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",0,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",0,{"i":[{"n":"u32"}],"o":{"g":["flags"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",0,{"i":[{"n":"u32"}],"o":{"n":"flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",0,{"i":[{"n":"self"},{"n":"flags"}]}],[11,"remove","","Removes the specified flags in-place.",0,{"i":[{"n":"self"},{"n":"flags"}]}],[11,"toggle","","Toggles the specified flags in-place.",0,{"i":[{"n":"self"},{"n":"flags"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",0,{"i":[{"n":"self"},{"n":"flags"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"flags"}}],[11,"bitor_assign","","Adds the set of flags.",0,{"i":[{"n":"self"},{"n":"flags"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"flags"}}],[11,"bitxor_assign","","Toggles the set of flags.",0,{"i":[{"n":"self"},{"n":"flags"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"flags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",0,{"i":[{"n":"self"},{"n":"flags"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",0,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"flags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",0,{"i":[{"n":"self"},{"n":"flags"}]}],[11,"not","","Returns the complement of this set of flags.",0,{"i":[{"n":"self"}],"o":{"n":"flags"}}],[11,"extend","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",0,{"i":[{"n":"t"}],"o":{"n":"flags"}}],[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"paths":[[3,"Flags"]]};
searchIndex["bodyparser"] = {"doc":"Body Parser Plugin for Iron","items":[[3,"BodyError","bodyparser","",null,null],[12,"detail","","",0,null],[12,"cause","","",0,null],[3,"LimitReader","","Original impl",null,null],[3,"MaxBodyLength","","Use this key to modify the default body limit.",null,null],[3,"Raw","","Raw is a plugin to read a request body into UTF-8 String. Doesn't read `multipart/form-data`.",null,null],[3,"Json","","Json is a plugin to parse a request body into JSON. Uses Raw plugin to parse the body with limit.",null,null],[3,"Struct","","Struct is a plugin to parse a request body into a struct. Uses Raw plugin to parse the body with limit.",null,null],[4,"BodyErrorCause","","",null,null],[13,"Utf8Error","","",1,null],[13,"IoError","","",1,null],[13,"JsonError","","",1,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",0,{"i":[{"n":"self"}],"o":{"g":["stderror"],"n":"option"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",2,{"i":[{"n":"r"},{"n":"usize"}],"o":{"n":"limitreader"}}],[11,"into_inner","","",2,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"limit","","",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"read","","",2,null],[11,"eval","","",3,{"i":[{"n":"request"}],"o":{"g":["option","bodyerror"],"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"json"}}],[11,"eval","","",4,{"i":[{"n":"request"}],"o":{"g":["option","bodyerror"],"n":"result"}}],[11,"eval","","",5,{"i":[{"n":"request"}],"o":{"g":["option","bodyerror"],"n":"result"}}]],"paths":[[3,"BodyError"],[4,"BodyErrorCause"],[3,"LimitReader"],[3,"Raw"],[3,"Json"],[3,"Struct"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers in either [big-endian or little-endian order].","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"bigendian"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"ordering"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"default","","",3,{"o":{"n":"bigendian"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"littleendian"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"ordering"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"default","","",4,{"o":{"n":"littleendian"}}],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16_into","","",3,null],[11,"read_u32_into","","",3,null],[11,"read_u64_into","","",3,null],[11,"write_u16_into","","",3,null],[11,"write_u32_into","","",3,null],[11,"write_u64_into","","",3,null],[11,"from_slice_u16","","",3,null],[11,"from_slice_u32","","",3,null],[11,"from_slice_u64","","",3,null],[11,"from_slice_f32","","",3,null],[11,"from_slice_f64","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u16_into","","",4,null],[11,"read_u32_into","","",4,null],[11,"read_u64_into","","",4,null],[11,"write_u16_into","","",4,null],[11,"write_u32_into","","",4,null],[11,"write_u64_into","","",4,null],[11,"from_slice_u16","","",4,null],[11,"from_slice_u32","","",4,null],[11,"from_slice_u64","","",4,null],[11,"from_slice_f32","","",4,null],[11,"from_slice_f64","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["chrono"] = {"doc":"Chrono 0.4.0","items":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",null,null],[3,"Date","","ISO 8601 calendar date with time zone.",null,null],[3,"DateTime","","ISO 8601 combined date and time with time zone.",null,null],[3,"ParseWeekdayError","","An error resulting from reading `Weekday` value with `FromStr`.",null,null],[4,"SecondsFormat","","Specific formatting options for seconds. This may be extended in the future, so exhaustive matching in external code is not recommended.",null,null],[13,"Secs","","Format whole seconds only, with no decimal point nor subseconds.",0,null],[13,"Millis","","Use fixed 3 subsecond digits. This corresponds to Fixed::Nanosecond3.",0,null],[13,"Micros","","Use fixed 6 subsecond digits. This corresponds to Fixed::Nanosecond6.",0,null],[13,"Nanos","","Use fixed 9 subsecond digits. This corresponds to Fixed::Nanosecond9.",0,null],[13,"AutoSi","","Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to display all available non-zero sub-second digits.  This corresponds to Fixed::Nanosecond.",0,null],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",1,null],[13,"Tue","","Tuesday.",1,null],[13,"Wed","","Wednesday.",1,null],[13,"Thu","","Thursday.",1,null],[13,"Fri","","Friday.",1,null],[13,"Sat","","Saturday.",1,null],[13,"Sun","","Sunday.",1,null],[0,"prelude","","A convenience module appropriate for glob imports (`use chrono::prelude::*;`).",null,null],[0,"offset","","The time zone, which calculates offsets from the local time to UTC.",null,null],[3,"Utc","chrono::offset","The UTC time zone. This is the most efficient time zone when you don't need the local time. It is also used as an offset (which is also a dummy type).",null,null],[3,"FixedOffset","","The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.",null,null],[3,"Local","","The local timescale. This is implemented via the standard `time` crate.",null,null],[4,"LocalResult","","The conversion result from the local time to the timezone-aware datetime types.",null,null],[13,"None","","Given local time representation is invalid. This can occur when, for example, the positive timezone transition.",2,null],[13,"Single","","Given local time representation has a single unique result.",2,null],[13,"Ambiguous","","Given local time representation has multiple results and thus ambiguous. This can occur when, for example, the negative timezone transition.",2,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"utc"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"utc"}],"o":{"n":"bool"}}],[11,"today","","Returns a `Date` which corresponds to the current date.",3,{"o":{"g":["utc"],"n":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",3,{"o":{"g":["utc"],"n":"datetime"}}],[11,"from_offset","","",3,{"i":[{"n":"utc"}],"o":{"n":"utc"}}],[11,"offset_from_local_date","","",3,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["utc"],"n":"localresult"}}],[11,"offset_from_local_datetime","","",3,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["utc"],"n":"localresult"}}],[11,"offset_from_utc_date","","",3,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"utc"}}],[11,"offset_from_utc_datetime","","",3,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"utc"}}],[11,"fix","","",3,{"i":[{"n":"self"}],"o":{"n":"fixedoffset"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"fixedoffset"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"bool"}}],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference. The negative `secs` means the Western Hemisphere.",4,{"i":[{"n":"i32"}],"o":{"n":"fixedoffset"}}],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference. The negative `secs` means the Western Hemisphere.",4,{"i":[{"n":"i32"}],"o":{"g":["fixedoffset"],"n":"option"}}],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference. The negative `secs` means the Eastern Hemisphere.",4,{"i":[{"n":"i32"}],"o":{"n":"fixedoffset"}}],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference. The negative `secs` means the Eastern Hemisphere.",4,{"i":[{"n":"i32"}],"o":{"g":["fixedoffset"],"n":"option"}}],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC to the local time.",4,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the local time to UTC.",4,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"from_offset","","",4,{"i":[{"n":"fixedoffset"}],"o":{"n":"fixedoffset"}}],[11,"offset_from_local_date","","",4,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["fixedoffset"],"n":"localresult"}}],[11,"offset_from_local_datetime","","",4,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["fixedoffset"],"n":"localresult"}}],[11,"offset_from_utc_date","","",4,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"fixedoffset"}}],[11,"offset_from_utc_datetime","","",4,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"fixedoffset"}}],[11,"fix","","",4,{"i":[{"n":"self"}],"o":{"n":"fixedoffset"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"add","chrono","",5,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"datetime"}}],[11,"sub","","",5,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"datetime"}}],[11,"clone","chrono::offset","",6,{"i":[{"n":"self"}],"o":{"n":"local"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"today","","Returns a `Date` which corresponds to the current date.",6,{"o":{"g":["local"],"n":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",6,{"o":{"g":["local"],"n":"datetime"}}],[11,"from_offset","","",6,{"i":[{"n":"fixedoffset"}],"o":{"n":"local"}}],[11,"offset_from_local_date","","",6,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["fixedoffset"],"n":"localresult"}}],[11,"offset_from_local_datetime","","",6,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["fixedoffset"],"n":"localresult"}}],[11,"offset_from_utc_date","","",6,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"fixedoffset"}}],[11,"offset_from_utc_datetime","","",6,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"fixedoffset"}}],[11,"from_local_date","","",6,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["date"],"n":"localresult"}}],[11,"from_local_datetime","","",6,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"from_utc_date","","",6,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["local"],"n":"date"}}],[11,"from_utc_datetime","","",6,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["local"],"n":"datetime"}}],[8,"Offset","","The offset from the local time to UTC.",null,null],[10,"fix","","Returns the fixed offset from UTC to the local time stored.",7,{"i":[{"n":"self"}],"o":{"n":"fixedoffset"}}],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type. This type is used to store the actual offset in date and time types. The original `TimeZone` value can be recovered via `TimeZone::from_offset`.",8,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"date"}}],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["date"],"n":"localresult"}}],[11,"yo","","Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"}],"o":{"n":"date"}}],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"}],"o":{"g":["date"],"n":"localresult"}}],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE. The resulting `Date` may have a different year from the input year.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"},{"n":"weekday"}],"o":{"n":"date"}}],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE. The resulting `Date` may have a different year from the input year.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"},{"n":"weekday"}],"o":{"g":["date"],"n":"localresult"}}],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",8,{"i":[{"n":"self"},{"n":"i64"},{"n":"u32"}],"o":{"n":"datetime"}}],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",8,{"i":[{"n":"self"},{"n":"i64"},{"n":"u32"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"datetime_from_str","","Parses a string with the specified format string and returns a `DateTime` with the current offset. See the `format::strftime` module on the supported escape sequences.",8,{"i":[{"n":"self"},{"n":"str"},{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[10,"from_offset","","Reconstructs the time zone from the offset.",8,null],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if possible.",8,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"localresult"}}],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if possible.",8,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"localresult"}}],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware `Date` if possible.",8,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["date"],"n":"localresult"}}],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.",8,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["datetime"],"n":"localresult"}}],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot fail.",8,null],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This cannot fail.",8,null],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is continuous and thus this cannot fail (but can give the duplicate local time).",8,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"date"}}],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The UTC is continuous and thus this cannot fail (but can give the duplicate local time).",8,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"datetime"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"localresult"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"localresult"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"localresult"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"single","","Returns `Some` only when the conversion result is unique, or `None` otherwise.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"earliest","","Returns `Some` for the earliest possible conversion result, or `None` if none.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"latest","","Returns `Some` for the latest possible conversion result, or `None` if none.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given function.",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"localresult"}}],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`. The offset in the current date is preserved.",2,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",2,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",2,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",2,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",2,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"unwrap","","Returns the single unique conversion result, or panics accordingly.",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[0,"naive","chrono","Date and time types which do not concern about the timezones.",null,null],[3,"NaiveDate","chrono::naive","ISO 8601 calendar date without timezone. Allows for every proleptic Gregorian date from Jan 1, 262145 BCE to Dec 31, 262143 CE. Also supports the conversion from ISO 8601 ordinal and week date.",null,null],[3,"IsoWeek","","ISO 8601 week.",null,null],[3,"NaiveTime","","ISO 8601 time without timezone. Allows for the nanosecond precision and optional leap second representation.",null,null],[3,"NaiveDateTime","","ISO 8601 combined date and time without timezone.",null,null],[11,"serialize","","",9,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"deserialize","","",9,{"i":[{"n":"d"}],"o":{"n":"result"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"ne","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"hash","","",9,null],[11,"partial_cmp","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"le","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"gt","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"ge","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"cmp","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"ordering"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year, month and day).",9,{"i":[{"n":"i32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivedate"}}],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year, month and day).",9,{"i":[{"n":"i32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and day of the year).",9,{"i":[{"n":"i32"},{"n":"u32"}],"o":{"n":"naivedate"}}],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and day of the year).",9,{"i":[{"n":"i32"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week number and day of the week). The resulting `NaiveDate` may have a different year from the input year.",9,{"i":[{"n":"i32"},{"n":"u32"},{"n":"weekday"}],"o":{"n":"naivedate"}}],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week number and day of the week). The resulting `NaiveDate` may have a different year from the input year.",9,{"i":[{"n":"i32"},{"n":"u32"},{"n":"weekday"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",9,{"i":[{"n":"i32"}],"o":{"n":"naivedate"}}],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",9,{"i":[{"n":"i32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDate`. See the `format::strftime` module on the supported escape sequences.",9,{"i":[{"n":"str"},{"n":"str"}],"o":{"g":["naivedate"],"n":"parseresult"}}],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.",9,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"naivedatetime"}}],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivedatetime"}}],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivedatetime"}}],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivedatetime"}}],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivedatetime"}}],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",9,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",9,{"i":[{"n":"self"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",9,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",9,{"i":[{"n":"self"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current date.",9,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the current date.",9,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date. Returns a `Duration` of integral numbers.",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"oldduration"}}],[11,"format_with_items","","Formats the date with the specified formatting items. Otherwise it is same to the ordinary `format` method.",9,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"format","","Formats the date with the specified format string. See the `format::strftime` module on the supported escape sequences.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["strftimeitems"],"n":"delayedformat"}}],[11,"year","","Returns the year number in the calendar date.",9,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"month","","Returns the month number starting from 1.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"month0","","Returns the month number starting from 0.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day","","Returns the day of month starting from 1.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day0","","Returns the day of month starting from 0.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal","","Returns the day of year starting from 1.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal0","","Returns the day of year starting from 0.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"weekday","","Returns the day of week.",9,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"iso_week","","",9,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",9,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting from 1) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting from 0) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting from 1) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting from 0) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting from 1) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting from 0) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"add","","",9,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivedate"}}],[11,"add_assign","","",9,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",9,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivedate"}}],[11,"sub_assign","","",9,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"oldduration"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",9,{"i":[{"n":"str"}],"o":{"g":["naivedate"],"n":"parseresult"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"le","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"gt","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"ge","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"cmp","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"ordering"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[11,"year","","Returns the year number for this ISO week.",10,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"week","","Returns the ISO week number starting from 1.",10,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"week0","","Returns the ISO week number starting from 0.",10,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"serialize","","",11,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"deserialize","","",11,{"i":[{"n":"d"}],"o":{"n":"result"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"ne","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"le","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"gt","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"ge","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"cmp","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"ordering"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"naivetime"}}],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivetime"}}],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivetime"}}],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivetime"}}],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivetime"}}],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",11,{"i":[{"n":"u32"},{"n":"u32"}],"o":{"n":"naivetime"}}],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",11,{"i":[{"n":"u32"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveTime`. See the `format::strftime` module on the supported escape sequences.",11,{"i":[{"n":"str"},{"n":"str"}],"o":{"g":["naivetime"],"n":"parseresult"}}],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also returns the number of seconds in the integral number of days ignored from the addition. (We cannot return `Duration` because it is subject to overflow or underflow.)",11,null],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also returns the number of seconds in the integral number of days ignored from the subtraction. (We cannot return `Duration` because it is subject to overflow or underflow.)",11,null],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time. Returns a `Duration` within +/- 1 day. This does not overflow or underflow at all.",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"oldduration"}}],[11,"format_with_items","","Formats the time with the specified formatting items. Otherwise it is same to the ordinary `format` method.",11,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"format","","Formats the time with the specified format string. See the `format::strftime` module on the supported escape sequences.",11,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["strftimeitems"],"n":"delayedformat"}}],[11,"hour","","Returns the hour number from 0 to 23.",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"minute","","Returns the minute number from 0 to 59.",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"second","","Returns the second number from 0 to 59.",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",11,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",11,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",11,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.",11,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"hash","","",11,{"i":[{"n":"self"},{"n":"h"}]}],[11,"add","","",11,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivetime"}}],[11,"add_assign","","",11,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",11,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivetime"}}],[11,"sub_assign","","",11,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"oldduration"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",11,{"i":[{"n":"str"}],"o":{"g":["naivetime"],"n":"parseresult"}}],[11,"serialize","","",12,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"deserialize","","",12,{"i":[{"n":"d"}],"o":{"n":"result"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"ne","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"le","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"gt","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"ge","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"cmp","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"ordering"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"naivedatetime"}}],[11,"new","","Makes a new `NaiveDateTime` from date and time components. Equivalent to `date.and_time(time)` and many other helper constructors on `NaiveDate`.",12,{"i":[{"n":"naivedate"},{"n":"naivetime"}],"o":{"n":"naivedatetime"}}],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date and time, from the number of non-leap seconds since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",12,{"i":[{"n":"i64"},{"n":"u32"}],"o":{"n":"naivedatetime"}}],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date and time, from the number of non-leap seconds since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",12,{"i":[{"n":"i64"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDateTime`. See the `format::strftime` module on the supported escape sequences.",12,{"i":[{"n":"str"},{"n":"str"}],"o":{"g":["naivedatetime"],"n":"parseresult"}}],[11,"date","","Retrieves a date component.",12,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"time","","Retrieves a time component.",12,{"i":[{"n":"self"}],"o":{"n":"naivetime"}}],[11,"timestamp","","Returns the number of non-leap seconds since the midnight on January 1, 1970.",12,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"timestamp_millis","","Returns the number of non-leap milliseconds since midnight on January 1, 1970.",12,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole non-leap second.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole non-leap second.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole non-leap second.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",12,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",12,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date and time. This does not overflow or underflow at all.",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"oldduration"}}],[11,"format_with_items","","Formats the combined date and time with the specified formatting items. Otherwise it is same to the ordinary `format` method.",12,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"format","","Formats the combined date and time with the specified format string. See the `format::strftime` module on the supported escape sequences.",12,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["strftimeitems"],"n":"delayedformat"}}],[11,"year","","Returns the year number in the calendar date.",12,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"month","","Returns the month number starting from 1.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"month0","","Returns the month number starting from 0.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day","","Returns the day of month starting from 1.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day0","","Returns the day of month starting from 0.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal","","Returns the day of year starting from 1.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal0","","Returns the day of year starting from 0.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"weekday","","Returns the day of week.",12,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"iso_week","","",12,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",12,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_month","","Makes a new `NaiveDateTime` with the month number (starting from 1) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number (starting from 0) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"hour","","Returns the hour number from 0 to 23.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"minute","","Returns the minute number from 0 to 59.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"second","","Returns the second number from 0 to 59.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"hash","","",12,{"i":[{"n":"self"},{"n":"h"}]}],[11,"add","","",12,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivedatetime"}}],[11,"add_assign","","",12,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",12,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivedatetime"}}],[11,"sub_assign","","",12,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"oldduration"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",12,{"i":[{"n":"str"}],"o":{"g":["naivedatetime"],"n":"parseresult"}}],[0,"serde","","Serialization/Deserialization of naive types in alternate formats",null,null],[0,"ts_seconds","chrono::naive::serde","Used to serialize/deserialize from second-precision timestamps",null,null],[5,"deserialize","chrono::naive::serde::ts_seconds","Deserialize a `DateTime` from a seconds timestamp",null,{"i":[{"n":"d"}],"o":{"g":["naivedatetime"],"n":"result"}}],[5,"serialize","","Serialize a UTC datetime into an integer number of seconds since the epoch",null,{"i":[{"n":"naivedatetime"},{"n":"s"}],"o":{"n":"result"}}],[17,"MIN_DATE","chrono::naive","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[17,"MAX_DATE","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[11,"clone","chrono","",13,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"from_utc","","Makes a new `Date` with given UTC date and offset. The local date should be constructed via the `TimeZone` trait.",13,null],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"g":["datetime"],"n":"option"}}],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"datetime"}}],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"datetime"}}],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"datetime"}}],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"datetime"}}],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"succ","","Makes a new `Date` for the next date.",13,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"succ_opt","","Makes a new `Date` for the next date.",13,{"i":[{"n":"self"}],"o":{"g":["date"],"n":"option"}}],[11,"pred","","Makes a new `Date` for the prior date.",13,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"pred_opt","","Makes a new `Date` for the prior date.",13,{"i":[{"n":"self"}],"o":{"g":["date"],"n":"option"}}],[11,"offset","","Retrieves an associated offset from UTC.",13,null],[11,"timezone","","Retrieves an associated time zone.",13,{"i":[{"n":"self"}],"o":{"n":"tz"}}],[11,"with_timezone","","Changes the associated time zone. This does not change the actual `Date` (but will change the string representation).",13,{"i":[{"n":"self"},{"n":"tz2"}],"o":{"n":"date"}}],[11,"checked_add_signed","","Adds given `Duration` to the current date.",13,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["date"],"n":"option"}}],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date.",13,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["date"],"n":"option"}}],[11,"signed_duration_since","","Subtracts another `Date` from the current date. Returns a `Duration` of integral numbers.",13,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"oldduration"}}],[11,"naive_utc","","Returns a view to the naive UTC date.",13,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"naive_local","","Returns a view to the naive local date.",13,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"format_with_items","","Formats the date with the specified formatting items.",13,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"format","","Formats the date with the specified format string. See the `format::strftime` module on the supported escape sequences.",13,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["strftimeitems"],"n":"delayedformat"}}],[11,"year","","",13,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"month","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"month0","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day0","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal0","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"weekday","","",13,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"iso_week","","",13,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[11,"with_year","","",13,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_month","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_month0","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_day","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_day0","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_ordinal","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_ordinal0","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",13,{"i":[{"n":"self"},{"n":"date"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",13,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"ordering"}}],[11,"hash","","",13,{"i":[{"n":"self"},{"n":"h"}]}],[11,"add","","",13,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"date"}}],[11,"sub","","",13,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"date"}}],[11,"sub","","",13,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"oldduration"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"serialize","","Serialize into a rfc3339 time string",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"deserialize","","",5,{"i":[{"n":"d"}],"o":{"n":"result"}}],[11,"deserialize","","",5,{"i":[{"n":"d"}],"o":{"n":"result"}}],[11,"deserialize","","",5,{"i":[{"n":"d"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"secondsformat"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"secondsformat"}],"o":{"n":"bool"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"datetime"}}],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset. The local datetime should be constructed via the `TimeZone` trait.",5,null],[11,"date","","Retrieves a date component.",5,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"time","","Retrieves a time component. Unlike `date`, this is not associated to the time zone.",5,{"i":[{"n":"self"}],"o":{"n":"naivetime"}}],[11,"timestamp","","Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").",5,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January 1, 1970 UTC",5,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second boundary",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second boundary",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second boundary",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"offset","","Retrieves an associated offset from UTC.",5,null],[11,"timezone","","Retrieves an associated time zone.",5,{"i":[{"n":"self"}],"o":{"n":"tz"}}],[11,"with_timezone","","Changes the associated time zone. This does not change the actual `DateTime` (but will change the string representation).",5,{"i":[{"n":"self"},{"n":"tz2"}],"o":{"n":"datetime"}}],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",5,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["datetime"],"n":"option"}}],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",5,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["datetime"],"n":"option"}}],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and time. This does not overflow or underflow at all.",5,{"i":[{"n":"self"},{"n":"datetime"}],"o":{"n":"oldduration"}}],[11,"naive_utc","","Returns a view to the naive UTC datetime.",5,{"i":[{"n":"self"}],"o":{"n":"naivedatetime"}}],[11,"naive_local","","Returns a view to the naive local datetime.",5,{"i":[{"n":"self"}],"o":{"n":"naivedatetime"}}],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`, then returns a new `DateTime` with a parsed `FixedOffset`.",5,{"i":[{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`, then returns a new `DateTime` with a parsed `FixedOffset`.",5,{"i":[{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `DateTime` with a parsed `FixedOffset`. See the `format::strftime` module on the supported escape sequences.",5,{"i":[{"n":"str"},{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.",5,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.",5,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with subseconds formatted as per a `SecondsFormat`. If passed `use_z` true and the timezone is UTC (offset 0), use 'Z', as per Fixed::TimezoneOffsetColonZ. If passed `use_z` false, use Fixed::TimezoneOffsetColon.",5,{"i":[{"n":"self"},{"n":"secondsformat"},{"n":"bool"}],"o":{"n":"string"}}],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",5,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"format","","Formats the combined date and time with the specified format string. See the `format::strftime` module on the supported escape sequences.",5,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["strftimeitems"],"n":"delayedformat"}}],[11,"year","","",5,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"month","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"month0","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day0","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal0","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"weekday","","",5,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"iso_week","","",5,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[11,"with_year","","",5,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_month","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_month0","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_day","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_day0","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_ordinal","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_ordinal0","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"hour","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"minute","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"second","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"nanosecond","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"with_hour","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_minute","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_second","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_nanosecond","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"datetime"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",5,{"i":[{"n":"self"},{"n":"datetime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",5,{"i":[{"n":"self"},{"n":"datetime"}],"o":{"n":"ordering"}}],[11,"hash","","",5,{"i":[{"n":"self"},{"n":"h"}]}],[11,"add","","",5,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"datetime"}}],[11,"sub","","",5,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"datetime"}}],[11,"sub","","",5,{"i":[{"n":"self"},{"n":"datetime"}],"o":{"n":"oldduration"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",5,{"i":[{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"from_str","","",5,{"i":[{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"from_str","","",5,{"i":[{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"from","","",5,{"i":[{"n":"systemtime"}],"o":{"g":["utc"],"n":"datetime"}}],[11,"from","","",5,{"i":[{"n":"systemtime"}],"o":{"g":["local"],"n":"datetime"}}],[0,"format","","Formatting (and parsing) utilities for date and time.",null,null],[3,"Parsed","chrono::format","Parsed parts of date and time. There are two classes of methods:",null,null],[12,"year","","Year.",14,null],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"isoyear","","Year in the ISO week date.",14,null],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"month","","Month (1--12).",14,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday of January (0--53, 1--53 or 1--52 depending on the year).",14,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday of January (0--53, 1--53 or 1--52 depending on the year).",14,null],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",14,null],[12,"weekday","","Day of the week.",14,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",14,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).",14,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.",14,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",14,null],[12,"minute","","Minute number (0--59).",14,null],[12,"second","","Second number (0--60, accounting for leap seconds).",14,null],[12,"nanosecond","","The number of nanoseconds since the whole second (0--999,999,999).",14,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970.",14,null],[12,"offset","","Offset from the local time to UTC, in seconds.",14,null],[3,"InternalNumeric","","An opaque type representing numeric item types for internal uses only.",null,null],[3,"InternalFixed","","An opaque type representing fixed-format item types for internal uses only.",null,null],[3,"ParseError","","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A temporary object which can be used as an argument to `format!` or others. This is normally constructed via `format` methods of each date and time type.",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",15,null],[13,"Zero","","Zero (`0`) padding.",15,null],[13,"Space","","Space padding.",15,null],[4,"Numeric","","Numeric item types. They have associated formatting width (FW) and parsing width (PW).",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞). May accept years before 1 BCE or after 9999 CE, given an initial sign.",16,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.",16,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",16,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞). May accept years before 1 BCE or after 9999 CE, given an initial sign.",16,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.",16,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.",16,null],[13,"Month","","Month (FW=PW=2).",16,null],[13,"Day","","Day of the month (FW=PW=2).",16,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).",16,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday of January (FW=PW=2).",16,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",16,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).",16,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",16,null],[13,"Ordinal","","Day of the year (FW=PW=3).",16,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",16,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",16,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",16,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",16,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second (FW=PW=9). Note that this is not left-aligned; see also `Fixed::Nanosecond`.",16,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞). For formatting, it assumes UTC upon the absence of time zone offset.",16,null],[13,"Internal","","Internal uses only.",16,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",17,null],[13,"LongMonthName","","Full month names.",17,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",17,null],[13,"LongWeekdayName","","Full day of the week names.",17,null],[13,"LowerAmPm","","AM/PM.",17,null],[13,"UpperAmPm","","AM/PM.",17,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned nanoseconds. May print nothing, 3, 6 or 9 digits according to the available accuracy. See also `Numeric::Nanosecond`.",17,null],[13,"Nanosecond3","","Same to `Nanosecond` but the accuracy is fixed to 3.",17,null],[13,"Nanosecond6","","Same to `Nanosecond` but the accuracy is fixed to 6.",17,null],[13,"Nanosecond9","","Same to `Nanosecond` but the accuracy is fixed to 9.",17,null],[13,"TimezoneName","","Timezone name.",17,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).",17,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).",17,null],[13,"TimezoneOffset","","Same to `TimezoneOffsetColon` but prints no colon. Parsing allows an optional colon.",17,null],[13,"TimezoneOffsetZ","","Same to `TimezoneOffsetColonZ` but prints no colon. Parsing allows an optional colon.",17,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and MIME date and time.",17,null],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",17,null],[13,"Internal","","Internal uses only.",17,null],[4,"Item","","A single formatting item. This is used for both formatting and parsing.",null,null],[13,"Literal","","A literally printed and parsed text.",18,null],[13,"OwnedLiteral","","Same to `Literal` but with the string owned by the item.",18,null],[13,"Space","","Whitespace. Prints literally but reads zero or more whitespace.",18,null],[13,"OwnedSpace","","Same to `Space` but with the string owned by the item.",18,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal length (if any) when formatting; the parser simply ignores any padded whitespace and zeroes.",18,null],[13,"Fixed","","Fixed-format item.",18,null],[13,"Error","","Issues a formatting error. Used to signal an invalid format string.",18,null],[5,"parse","","Tries to parse given string into `parsed` with given formatting items. Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used). There should be no trailing string after parsing; use a stray `Item::Space` to trim whitespaces.",null,{"i":[{"n":"parsed"},{"n":"str"},{"n":"i"}],"o":{"n":"parseresult"}}],[5,"format","","Tries to format given arguments with given formatting items. Internally used by `DelayedFormat`.",null,{"i":[{"n":"formatter"},{"g":["naivedate"],"n":"option"},{"g":["naivetime"],"n":"option"},{"n":"option"},{"n":"i"}],"o":{"n":"result"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"parsed"}}],[11,"eq","","",14,{"i":[{"n":"self"},{"n":"parsed"}],"o":{"n":"bool"}}],[11,"ne","","",14,{"i":[{"n":"self"},{"n":"parsed"}],"o":{"n":"bool"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",14,{"o":{"n":"parsed"}}],[11,"new","","Returns the initial value of parsed parts.",14,{"o":{"n":"parsed"}}],[11,"set_year","","Tries to set the `year` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_month","","Tries to set the `month` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_weekday","","Tries to set the `weekday` field from given value.",14,{"i":[{"n":"self"},{"n":"weekday"}],"o":{"n":"parseresult"}}],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_day","","Tries to set the `day` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value. (`false` for AM, `true` for PM)",14,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parseresult"}}],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour number in 12-hour clocks.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_minute","","Tries to set the `minute` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_second","","Tries to set the `second` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_offset","","Tries to set the `offset` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",14,{"i":[{"n":"self"}],"o":{"g":["naivedate"],"n":"parseresult"}}],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",14,{"i":[{"n":"self"}],"o":{"g":["naivetime"],"n":"parseresult"}}],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields, except for the `offset` field (assumed to have a given value). This is required for parsing a local time or other known-timezone inputs.",14,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["naivedatetime"],"n":"parseresult"}}],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",14,{"i":[{"n":"self"}],"o":{"g":["fixedoffset"],"n":"parseresult"}}],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given fields.",14,{"i":[{"n":"self"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given fields, with an additional `TimeZone` used to interpret and validate the local date.",14,{"i":[{"n":"self"},{"n":"tz"}],"o":{"g":["datetime"],"n":"parseresult"}}],[0,"strftime","","`strftime`/`strptime`-inspired date and time formatting syntax.",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"strftimeitems"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new parsing iterator from the `strftime`-like format string.",19,{"i":[{"n":"str"}],"o":{"n":"strftimeitems"}}],[11,"next","","",19,{"i":[{"n":"self"}],"o":{"g":["item"],"n":"option"}}],[6,"ParseResult","chrono::format","Same to `Result<T, ParseError>`.",null,null],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"pad"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"pad"}],"o":{"n":"bool"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"numeric"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"numeric"}],"o":{"n":"bool"}}],[11,"ne","","",16,{"i":[{"n":"self"},{"n":"numeric"}],"o":{"n":"bool"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"internalnumeric"}],"o":{"n":"bool"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"fixed"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"fixed"}],"o":{"n":"bool"}}],[11,"ne","","",17,{"i":[{"n":"self"},{"n":"fixed"}],"o":{"n":"bool"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"internalfixed"}],"o":{"n":"bool"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"item"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"item"}],"o":{"n":"bool"}}],[11,"ne","","",18,{"i":[{"n":"self"},{"n":"item"}],"o":{"n":"bool"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"parseerror"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"ne","","",22,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",22,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Makes a new `DelayedFormat` value out of local date and time.",23,{"i":[{"g":["naivedate"],"n":"option"},{"g":["naivetime"],"n":"option"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and time and UTC offset.",23,{"i":[{"g":["naivedate"],"n":"option"},{"g":["naivetime"],"n":"option"},{"n":"off"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","chrono","",1,{"i":[{"n":"str"}],"o":{"n":"result"}}],[0,"serde","","Serialization/Deserialization in alternate formats",null,null],[0,"ts_seconds","chrono::serde","Ser/de to/from timestamps in seconds",null,null],[5,"deserialize","chrono::serde::ts_seconds","Deserialize a `DateTime` from a seconds timestamp",null,{"i":[{"n":"d"}],"o":{"g":["datetime"],"n":"result"}}],[5,"serialize","","Serialize a UTC datetime into an integer number of seconds since the epoch",null,{"i":[{"n":"datetime"},{"n":"s"}],"o":{"n":"result"}}],[11,"serialize","chrono","",1,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"deserialize","","",1,{"i":[{"n":"d"}],"o":{"n":"result"}}],[17,"MIN_DATE","","The minimum possible `Date`.",null,null],[17,"MAX_DATE","","The maximum possible `Date`.",null,null],[8,"SubsecRound","","Extension trait for subsecond rounding or truncation to a maximum number of digits. Rounding can be used to decrease the error variance when serializing/persisting to lower precision. Truncation is the default behavior in Chrono display formatting.  Either can be used to guarantee equality (e.g. for testing) when round-tripping through a lower precision format.",null,null],[10,"round_subsecs","","Return a copy rounded to the specified number of subsecond digits. With 9 or more digits, self is returned unmodified. Halfway values are rounded up (away from zero).",24,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"self"}}],[10,"trunc_subsecs","","Return a copy truncated to the specified number of subsecond digits. With 9 or more digits, self is returned unmodified.",24,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"self"}}],[8,"Datelike","","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the calendar date.",25,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"year_ce","","Returns the absolute year number starting from 1 with a boolean flag, which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).",25,null],[10,"month","","Returns the month number starting from 1.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"month0","","Returns the month number starting from 0.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"day","","Returns the day of month starting from 1.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"day0","","Returns the day of month starting from 0.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"ordinal","","Returns the day of year starting from 1.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"ordinal0","","Returns the day of year starting from 0.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"weekday","","Returns the day of week.",25,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[10,"iso_week","","Returns the ISO week.",25,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[10,"with_year","","Makes a new value with the year number changed.",25,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"option"}}],[10,"with_month","","Makes a new value with the month number (starting from 1) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_month0","","Makes a new value with the month number (starting from 0) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_day","","Makes a new value with the day of month (starting from 1) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_day0","","Makes a new value with the day of month (starting from 0) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[11,"num_days_from_ce","","Returns the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",25,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag, which is false for AM and true for PM.",26,null],[10,"minute","","Returns the minute number from 0 to 59.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"second","","Returns the second number from 0 to 59.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"with_hour","","Makes a new value with the hour number changed.",26,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_minute","","Makes a new value with the minute number changed.",26,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_second","","Makes a new value with the second number changed.",26,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole non-leap second changed.",26,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"weekday"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,null],[11,"succ","","The next day in the week.",1,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"pred","","The previous day in the week.",1,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)",1,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",1,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",1,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",1,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_i64","","",1,{"i":[{"n":"i64"}],"o":{"g":["weekday"],"n":"option"}}],[11,"from_u64","","",1,{"i":[{"n":"u64"}],"o":{"g":["weekday"],"n":"option"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"parseweekdayerror"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"parseweekdayerror"}],"o":{"n":"bool"}}],[11,"ne","","",27,{"i":[{"n":"self"},{"n":"parseweekdayerror"}],"o":{"n":"bool"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",28,{"i":[{"n":"f"}],"o":{"n":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 263 microseconds in either direction).",28,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 263 nanoseconds in either direction).",28,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["duration"],"n":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["duration"],"n":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",28,{"o":{"n":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",28,{"o":{"n":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",28,{"o":{"n":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",28,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",28,{"i":[{"n":"duration"}],"o":{"g":["duration","outofrangeerror"],"n":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",28,{"i":[{"n":"self"}],"o":{"g":["duration","outofrangeerror"],"n":"result"}}],[11,"neg","","",28,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"div","","",28,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"duration"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"ne","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"add","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"duration"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"partial_cmp","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"le","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"gt","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"ge","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"sub","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"duration"}}],[11,"cmp","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"ordering"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"mul","","",28,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"duration"}}],[11,"add","chrono::naive","",11,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"naivetime"}}],[11,"sub","","",11,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"naivetime"}}],[11,"add","","",12,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"naivedatetime"}}],[11,"sub","","",12,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"naivedatetime"}}]],"paths":[[4,"SecondsFormat"],[4,"Weekday"],[4,"LocalResult"],[3,"Utc"],[3,"FixedOffset"],[3,"DateTime"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"IsoWeek"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"StrftimeItems"],[3,"InternalNumeric"],[3,"InternalFixed"],[3,"ParseError"],[3,"DelayedFormat"],[8,"SubsecRound"],[8,"Datelike"],[8,"Timelike"],[3,"ParseWeekdayError"],[3,"Duration"]]};
searchIndex["clap"] = {"doc":"`clap` is a simple-to-use, efficient, and full-featured library for parsing command line arguments and subcommands when writing console/terminal applications.","items":[[3,"Arg","clap","The abstract representation of a command line argument. Used to set all the options and relationships that define a valid argument for the program.",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way for you to express, \"Any of these arguments\". By placing arguments in a logical group, you can create easier requirement and exclusion rules instead of having to list each argument individually, or when you want a rule to apply \"any but not all\" arguments.",null,null],[3,"ArgMatches","","Used to get information about the arguments that where supplied to the program at runtime by the user. New instances of this struct are obtained by using the [`App::get_matches`] family of methods.",null,null],[3,"OsValues","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of_os`] method. Usage of this iterator allows values which contain invalid UTF-8 code points unlike [`Values`].",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of`] method.",null,null],[3,"App","","Used to create a representation of a command line program and all possible command line arguments. Application settings are set using the \"builder pattern\" with the [`App::get_matches`] family of methods being the terminal methods that starts the runtime-parsing process. These methods then return information about the user supplied arguments (or lack there of).",null,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formatted error message",0,null],[12,"kind","","The type of error",0,null],[12,"info","","Any additional information passed along, such as the argument name that caused the error",0,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set, unset, and checked via getter/setter methods [`Arg::set`], [`Arg::unset`], and [`Arg::is_set`]",null,null],[13,"Required","","The argument must be used",1,null],[13,"Multiple","","The argument may be used multiple times such as `--flag --flag`",1,null],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",1,null],[13,"Global","","The argument should be propagated down through all child [`SubCommands`] [`SubCommand`]: ./struct.SubCommand.html",1,null],[13,"Hidden","","The argument should not be shown in help text",1,null],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",1,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via a delimiter",1,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple values",1,null],[13,"HidePossibleValues","","Hides the possible values from the help string",1,null],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",1,null],[13,"RequireEquals","","Require options use `--option=val` syntax",1,null],[13,"Last","","Specifies that the arg is the last positional argument and may be accessed early via `--` syntax",1,null],[13,"HideDefaultValue","","Hides the default value from the help string",1,null],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",1,null],[13,"HideEnvValues","","Hides ENV values in the help message",1,null],[4,"AppSettings","","Application level settings, which affect how [`App`] operates",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be treated as an error. This is the default behavior of `clap`.",2,null],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all arguments.",2,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument values, such as negative numbers like `-10`. (which would otherwise be parsed as another flag or option)",2,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar to `AllowLeadingHyphen` except that it only allows numbers, all other undefined leading hyphens will fail to parse.",2,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where positionals can be used out of order.",2,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which would otherwise cause a [`ErrorKind::UnknownArgument`] error, should instead be treated as a [`SubCommand`] within the [`ArgMatches`] struct.",2,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates [subcomands] being used after. By default `clap` allows arguments between subcommands such as `<cmd> [cmd_args] <cmd2> [cmd2_args] <cmd3> [cmd3_args]`. This setting disables that functionality and says that arguments can only follow the final subcommand. For instance using this setting makes only the following invocations possible:",2,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then exit gracefully), if no arguments are present at runtime (i.e. an empty run such as, `$ myprog`.",2,null],[13,"ColoredHelp","","Uses colorized help messages.",2,null],[13,"ColorAuto","","Enables colored output only when the output is going to a terminal or TTY.",2,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the output is going to a terminal/TTY.",2,null],[13,"ColorNever","","Disables colored output no matter if the output is going to a terminal/TTY, or not.",2,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into `[ARGS]` inside the usage string",2,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or [`AppSettings::TrailingVarArg`] was used.",2,null],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,null],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting any of the [`SubCommand`]s (Defaults to `false`; application does have a version flag)",2,null],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help message in the order that they were declared in, and not alphabetically which is the default.",2,null],[13,"GlobalVersion","","Specifies to use the version of the current command for all child [`SubCommand`]s. (Defaults to `false`; subcommands have independent version strings from their parents.)",2,null],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from help messages",2,null],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying help information. This can be useful if there are many values, or they are explained elsewhere.",2,null],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or their [aliases]. For example to match a subcommand named `test`, one could use `t`, `te`, `tes`, and `test`.",2,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first argument passed is the binary name. This is normally the case when using a \"daemon\" style mode, or an interactive CLI where one one would not normally type the binary or program name for each command.",2,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after the argument.",2,null],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to propagate values up or down",2,null],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the parent command. For example if you had a subcommand or top level application with a required argument that is only required as long as there is no subcommand present, using this setting would allow you to set those arguments to [`Arg::required(true)`] and yet receive no error so long as the user uses a valid subcommand instead.",2,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before exiting gracefully) if no [`SubCommand`]s are present at runtime (i.e. an empty run such as `$ myprog`).",2,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be treated as an error and fail with a [`ErrorKind::InvalidUtf8`] error.",2,null],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at runtime, error and exit gracefully.",2,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\" and that `clap` should not attempt to parse any further args.",2,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more unified help message (a la `getopts` or `docopt` style).",2,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s (Defaults to `false`; subcommands do have version flags.)",2,null],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to continue...\" and wait for user before exiting",2,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and the user provides a value which isn't in that set.",3,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or subcommand which isn't defined.",3,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized [`SubCommand`] which meets the threshold for being similar enough to an existing subcommand. If it doesn't meet the threshold, or the 'suggestions' feature is disabled, the more general [`UnknownArgument`] error is returned.",3,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized [`SubCommand`] which either doesn't meet the threshold for being similar enough to an existing subcommand, or the 'suggestions' feature is disabled. Otherwise the more detailed [`InvalidSubcommand`] error is returned.",3,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option that does not allow empty values.",3,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with a custom validation and the value fails that validation.",3,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument than were defined by setting [`Arg::max_values`].",3,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument than were defined by setting [`Arg::min_values`].",3,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values for an argument than what's been defined by setting [`Arg::number_of_values`] or than was implicitly set by [`Arg::value_names`].",3,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict with each other and can't be used together.",3,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required arguments.",3,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by [`AppSettings::SubcommandRequired`]), but the user does not provide one.",3,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is required, as defined by [`AppSettings::ArgRequiredElseHelp`], but the user did not provide one.",3,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an argument which doesn't allow that.",3,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid UTF-8 for an argument and [`AppSettings::StrictUtf8`] is set.",3,null],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was used. The help message will be sent to `stdout`.",3,null],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was used. The message will be sent to `stdout`.",3,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`] macros to convert an argument value into type `T`, but the argument you requested wasn't used. I.e. you asked for an argument with name `config` to be converted, but `config` wasn't used by the user. [`value_t!`]: ./macro.value_t!.html [`values_t!`]: ./macro.values_t!.html",3,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to `stderr` or `stdout` or reading a configuration file. [I/O error]: https://doc.rust-lang.org/std/io/struct.Error.html",3,null],[13,"Format","","Represents a [Format error] (which is a part of [`Display`]). Typically caused by writing to `stderr` or `stdout`. [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html [Format error]: https://doc.rust-lang.org/std/fmt/struct.Error.html",3,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash completion file for the Bourne Again SHell (BASH)",4,null],[13,"Fish","","Generates a .fish completion file for the Friendly Interactive SHell (fish)",4,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,null],[13,"PowerShell","","Generates a completion file for PowerShell",4,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"appsettings"}],"o":{"n":"bool"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"appsettings"}}],[11,"from_str","","",2,{"i":[{"n":"str"}],"o":{"n":"result"}}],[11,"new","","Creates a new instance of an application requiring a name. The name may be, but doesn't have to be same as the binary. The name will be displayed to the user when they request to print version or help and usage information.",5,{"i":[{"n":"s"}],"o":{"n":"self"}}],[11,"get_name","","Get the name of the app",5,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"get_bin_name","","Get the name of the binary",5,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"with_defaults","","Creates a new instance of an application requiring a name, but uses the [`crate_authors!`] and [`crate_version!`] macros to fill in the [`App::author`] and [`App::version`] fields.",5,{"i":[{"n":"s"}],"o":{"n":"self"}}],[11,"author","","Sets a string of author(s) that will be displayed to the user when they request the help information with `--help` or `-h`.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"bin_name","","Overrides the system-determined binary name. This should only be used when absolutely necessary, such as when the binary name for your application is misleading, or perhaps not how the user should invoke your program.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"about","","Sets a string describing what the program does. This will be displayed when displaying help information with `-h`.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"long_about","","Sets a string describing what the program does. This will be displayed when displaying help information.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"name","","Sets the program's name. This will be displayed when displaying help information.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"after_help","","Adds additional help information to be displayed in addition to auto-generated help. This information is displayed after the auto-generated help information. This is often used to describe how to use the arguments, or caveats to be noted.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"before_help","","Adds additional help information to be displayed in addition to auto-generated help. This information is displayed before the auto-generated help information. This is often used for header information.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"version","","Sets a string of the version number to be displayed when displaying version or help information with `-V`.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"long_version","","Sets a string of the version number to be displayed when displaying version or help information with `--version`.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"usage","","Sets a custom usage string to override the auto-generated usage string.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"help","","Sets a custom help message and overrides the auto-generated one. This should only be used when the auto-generated message does not suffice.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"version_short","","Sets the [`short`] for the auto-generated `version` argument.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"version_message","","Sets the help text for the auto-generated `version` argument.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"template","","Sets the help template to be used, overriding the default format.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,{"i":[{"n":"self"},{"n":"appsettings"}],"o":{"n":"self"}}],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,null],[11,"global_setting","","Enables a single setting that is propagated down through all child [`SubCommand`]s.",5,{"i":[{"n":"self"},{"n":"appsettings"}],"o":{"n":"self"}}],[11,"global_settings","","Enables multiple settings which are propagated down through all child [`SubCommand`]s.",5,null],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,{"i":[{"n":"self"},{"n":"appsettings"}],"o":{"n":"self"}}],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level settings.",5,null],[11,"set_term_width","","Sets the terminal width at which to wrap help messages. Defaults to `120`. Using `0` will ignore terminal widths and use source formatting.",5,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"max_term_width","","Sets the max terminal width at which to wrap help messages. Using `0` will ignore terminal widths and use source formatting.",5,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"self"}}],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",5,null],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a usage type string. The string used follows the same rules and syntax as [`Arg::from_usage`]",5,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one per line. See [`Arg::from_usage`] for details on the syntax and rules supported.",5,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as \"hidden\" subcommands that automatically dispatch as if this subcommand was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as \"hidden\" subcommands that automatically dispatch as if this subcommand was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",5,null],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions exactly like those defined with [`App::alias`], except that they are visible inside the help message.",5,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that functions exactly like those defined with [`App::aliases`], except that they are visible inside the help message.",5,null],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are a family of related arguments. By placing them in a logical group, you can build easier requirement and exclusion rules. For instance, you can make an entire [`ArgGroup`] required, meaning that one (and only one) argument from that group must be present at runtime.",5,{"i":[{"n":"self"},{"n":"arggroup"}],"o":{"n":"self"}}],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,null],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities. Subcommands are effectively sub-[`App`]s, because they can contain their own arguments, subcommands, version, usage, etc. They also function just like [`App`]s, in that they get their own auto generated help, version, and usage.",5,{"i":[{"n":"self"},{"n":"app"}],"o":{"n":"self"}}],[11,"subcommands","","Adds multiple subcommands to the list of valid possibilities by iterating over an [`IntoIterator`] of [`SubCommand`]s",5,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"self"}}],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help message. Subcommands with a lower value will be displayed first in the help message. This is helpful when one would like to emphasise frequently used subcommands, or prioritize those towards the top of the list. Duplicate values are allowed. Subcommands with duplicate display orders will be displayed in alphabetical order.",5,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a [`BufWriter`] using the same method as if someone ran `-h` to request the help message",5,{"i":[{"n":"self"}],"o":{"n":"clapresult"}}],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a [`BufWriter`] using the same method as if someone ran `--help` to request the help message",5,{"i":[{"n":"self"}],"o":{"n":"clapresult"}}],[11,"write_help","","Writes the full help message to the user to a [`io::Write`] object in the same method as if the user ran `-h`",5,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"clapresult"}}],[11,"write_long_help","","Writes the full help message to the user to a [`io::Write`] object in the same method as if the user ran `--help`",5,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"clapresult"}}],[11,"write_version","","Writes the version message to the user to a [`io::Write`] object as if the user ran `-V`.",5,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"clapresult"}}],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`] object",5,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"clapresult"}}],[11,"gen_completions","","Generate a completions file for a specified shell at compile time.",5,{"i":[{"n":"self"},{"n":"s"},{"n":"shell"},{"n":"t"}]}],[11,"gen_completions_to","","Generate a completions file for a specified shell at runtime.  Until `cargo install` can install extra files like a completion script, this may be used e.g. in a command that outputs the contents of the completion script, to be redirected into a file by the user.",5,{"i":[{"n":"self"},{"n":"s"},{"n":"shell"},{"n":"w"}]}],[11,"get_matches","","Starts the parsing process, upon a failed parse an error will be displayed to the user and the process will exit with the appropriate error code. By default this method gets all user provided arguments from [`env::args_os`] in order to allow for invalid UTF-8 code points, which are legal on many platforms.",5,{"i":[{"n":"self"}],"o":{"n":"argmatches"}}],[11,"get_matches_safe","","Starts the parsing process. This method will return a [`clap::Result`] type instead of exiting the process on failed parse. By default this method gets matches from [`env::args_os`]",5,{"i":[{"n":"self"}],"o":{"g":["argmatches"],"n":"clapresult"}}],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this method does not return a [`clap::Result`] and will automatically exit with an error message. This method, however, lets you specify what iterator to use when performing matches, such as a [`Vec`] of your making.",5,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"argmatches"}}],[11,"get_matches_from_safe","","Starts the parsing process. A combination of [`App::get_matches_from`], and [`App::get_matches_safe`]",5,{"i":[{"n":"self"},{"n":"i"}],"o":{"g":["argmatches"],"n":"clapresult"}}],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`] struct `self`. This is normally not the desired functionality, instead prefer [`App::get_matches_from_safe`] which does consume `self`.",5,{"i":[{"n":"self"},{"n":"i"}],"o":{"g":["argmatches"],"n":"clapresult"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",6,{"o":{"n":"arg"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"arg"}}],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string name. The name will be used to get information about whether or not the argument was used at runtime, get values, set relationships with other args, etc..",6,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string. Allows creation of basic settings for the [`Arg`]. The syntax is flexible, but there are some rules to follow.",6,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"short","","Sets the short version of the argument without the preceding `-`.",6,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"long","","Sets the long version of the argument without the preceding `--`.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\" arguments that automatically dispatch as if this argument was used. This is more efficient, and easier than creating multiple hidden arguments as one only needs to check for the existence of this command, and not all variants.",6,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\" arguments that automatically dispatch as if this argument was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",6,null],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like those defined with [`Arg::alias`], except that they are visible inside the help message.",6,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions exactly like those defined with [`Arg::aliases`], except that they are visible inside the help message.",6,null],[11,"help","","Sets the short help text of the argument that will be displayed to the user when they print the help information with `-h`. Typically, this is a short (one line) description of the arg.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"long_help","","Sets the long help text of the argument that will be displayed to the user when they print the help information with `--help`. Typically this a more detailed (multi-line) message that describes the arg.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"last","","Specifies that this arg is the last, or final, positional argument (i.e. has the highest index) and is only able to be accessed via the `--` syntax (i.e. `$ prog args -- last_arg`). Even, if no other arguments are left to parse, if the user omits the `--` syntax they will receive an [`UnknownArgument`] error. Setting an argument to `.last(true)` also allows one to access this arg early using the `--` syntax. Accessing an arg early, even with the `--` syntax is otherwise not possible.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"required","","Sets whether or not the argument is required by default. Required by default means it is required, when no other conflicting rules have been evaluated. Conflicting rules take precedence over being required. Default: `false`",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e. an equals between the option and associated value) Default: `false`",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"required_unless","","Sets an arg that override this arg's required setting. (i.e. this arg will be required unless this other argument is present).",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e. this arg will be required unless all these other arguments are present).",6,null],[11,"required_unless_one","","Sets args that override this arg's [required] setting. (i.e. this arg will be required unless at least one of these other arguments are present).",6,null],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this argument, the following argument can't be present and vice versa.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying multiple two-way conlicts per argument.",6,null],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument and the following argument will override each other in POSIX style (whichever argument was specified at runtime last \"wins\")",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e. this argument and the following argument will override each other in POSIX style (whichever argument was specified at runtime last \"wins\")",6,null],[11,"requires","","Sets an argument by name that is required when this one is present I.e. when using this argument, the following argument must be present.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"requires_if","","Allows a conditional requirement. The requirement will only become valid if this arg's value equals `val`.",6,{"i":[{"n":"self"},{"n":"str"},{"n":"str"}],"o":{"n":"self"}}],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement will only become valid if this arg's value equals `val`.",6,null],[11,"required_if","","Allows specifying that an argument is [required] conditionally. The requirement will only become valid if the specified `arg`'s value equals `val`.",6,{"i":[{"n":"self"},{"n":"str"},{"n":"str"}],"o":{"n":"self"}}],[11,"required_ifs","","Allows specifying that an argument is [required] based on multiple conditions. The conditions are set up in a `(arg, val)` style tuple. The requirement will only become valid if one of the specified `arg`'s value equals it's corresponding `val`.",6,null],[11,"requires_all","","Sets multiple arguments by names that are required when this one is present I.e. when using this argument, the following arguments must be present.",6,null],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"hide_possible_values","","Specifies if the possible values of an argument should be displayed in the help text or not. Defaults to `false` (i.e. show possible values)",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"hide_default_value","","Specifies if the default value of an argument should be displayed in the help text or not. Defaults to `false` (i.e. show default value)",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"index","","Specifies the index of a positional argument starting at 1.",6,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"self"}}],[11,"multiple","","Specifies that the argument may appear more than once. For flags, this results in the number of occurrences of the flag being recorded. For example `-ddd` or `-d -d -d` would count as three occurrences. For options there is a distinct difference in multiple occurrences vs multiple values.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a give argument. By default when one sets [`multiple(true)`] on an argument, clap will continue parsing values for that argument until it reaches another valid argument, or one of the other more specific settings for multiple values is used (such as [`min_values`], [`max_values`] or [`number_of_values`]).",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"global","","Specifies that an argument can be matched to all child [`SubCommand`]s.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"empty_values","","Allows an argument to accept explicitly empty values. An empty value must be specified at the command line with an explicit `\"\"`, or `''`",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"hidden","","Hides an argument from help message output.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"possible_values","","Specifies a list of possible values for this argument. At runtime, `clap` verifies that only one of the specified values was used, or fails with an error message.",6,null],[11,"possible_value","","Specifies a possible value for this argument, one at a time. At runtime, `clap` verifies that only one of the specified values was used, or fails with error message.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the argument value to pass validation even if the case differs from that of the specified `possible_value`.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"group","","Specifies the name of the [`ArgGroup`] the argument belongs to.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the argument belongs to.",6,null],[11,"number_of_values","","Specifies how many values are required to satisfy this argument. For example, if you had a `-f <file>` argument where you wanted exactly 3 'files' you would set `.number_of_values(3)`, and this argument wouldn't be satisfied unless the user provided 3 and only 3 values.",6,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"self"}}],[11,"validator","","Allows one to perform a custom validation on the argument value. You provide a closure which accepts a [`String`] value, and return a [`Result`] where the [`Err(String)`] is a message displayed to the user.",6,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"validator_os","","Works identically to Validator but is intended to be used with values that could contain non UTF-8 formatted strings.",6,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"max_values","","Specifies the maximum number of values are for this argument. For example, if you had a `-f <file>` argument where you wanted up to 3 'files' you would set `.max_values(3)`, and this argument would be satisfied if the user provided, 1, 2, or 3 values.",6,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"self"}}],[11,"min_values","","Specifies the minimum number of values for this argument. For example, if you had a `-f <file>` argument where you wanted at least 2 'files' you would set `.min_values(2)`, and this argument would be satisfied if the user provided, 2 or more values.",6,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"self"}}],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping of multiple values via a delimiter. I.e. should `--option=val1,val2,val3` be parsed as three values (`val1`, `val2`, and `val3`) or as a single value (`val1,val2,val3`). Defaults to using `,` (comma) as the value delimiter for all arguments that accept values (options and positional arguments)",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"require_delimiter","","Specifies that multiple values may only be set using the delimiter. This means if an if an option is encountered, and no delimiter is found, it automatically assumed that no additional values for that option follow. This is unlike the default, where it is generally assumed that more values will follow regardless of whether or not a delimiter is used.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"value_delimiter","","Specifies the separator to use when values are clumped together, defaults to `,` (comma).",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"value_names","","Specify multiple names for values of option arguments. These names are cosmetic only, used for help and usage strings only. The names are not used to access arguments. The values of the arguments are accessed in numeric order (i.e. if you specify two names `one` and `two` `one` will be the first matched value, `two` will be the second).",6,null],[11,"value_name","","Specifies the name for value of [option] or [positional] arguments inside of help documentation. This name is cosmetic only, the name is not used to access arguments. This setting can be very helpful when describing the type of input the user should be using, such as `FILE`, `INTERFACE`, etc. Although not required, it's somewhat convention to use all capital letters for the value name.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"default_value","","Specifies the value of the argument when not specified at runtime.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"default_value_os","","Provides a default value in the exact same manner as [`Arg::default_value`] only using [`OsStr`]s instead. [`Arg::default_value`]: ./struct.Arg.html#method.default_value [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,{"i":[{"n":"self"},{"n":"osstr"}],"o":{"n":"self"}}],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used at runtime. If `val` is set to `None`, `arg` only needs to be present. If `val` is set to `\"some-val\"` then `arg` must be present at runtime and have the value `val`.",6,{"i":[{"n":"self"},{"n":"str"},{"g":["str"],"n":"option"},{"n":"str"}],"o":{"n":"self"}}],[11,"default_value_if_os","","Provides a conditional default value in the exact same manner as [`Arg::default_value_if`] only using [`OsStr`]s instead. [`Arg::default_value_if`]: ./struct.Arg.html#method.default_value_if [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,{"i":[{"n":"self"},{"n":"str"},{"g":["osstr"],"n":"option"},{"n":"osstr"}],"o":{"n":"self"}}],[11,"default_value_ifs","","Specifies multiple values and conditions in the same manner as [`Arg::default_value_if`]. The method takes a slice of tuples in the `(arg, Option<val>, default)` format.",6,null],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact same manner as [`Arg::default_value_ifs`] only using [`OsStr`]s instead. [`Arg::default_value_ifs`]: ./struct.Arg.html#method.default_value_ifs [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,null],[11,"env","","Specifies that if the value is not passed in as an argument, that it should be retrieved from the environment, if available. If it is not present in the environment, then default rules will apply.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"env_os","","Specifies that if the value is not passed in as an argument, that it should be retrieved from the environment if available in the exact same manner as [`Arg::env`] only using [`OsStr`]s instead.",6,{"i":[{"n":"self"},{"n":"osstr"}],"o":{"n":"self"}}],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"next_line_help","","When set to `true` the help string will be displayed on the line after the argument and indented once. This can be helpful for arguments with very long or complex help messages. This can also be helpful for arguments with very long flag names, or many/long value names.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"display_order","","Allows custom ordering of args within the help message. Args with a lower value will be displayed first in the help message. This is helpful when one would like to emphasise frequently used args, or prioritize those towards the top of the list. Duplicate values are allowed. Args with duplicate display orders will be displayed in alphabetical order.",6,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"raw","","Indicates that all parameters passed after this should not be parsed individually, but rather passed in their entirety. It is worth noting that setting this requires all values to come after a `--` to indicate they should all be captured. For example:",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,{"i":[{"n":"self"},{"n":"argsettings"}],"o":{"n":"bool"}}],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,{"i":[{"n":"self"},{"n":"argsettings"}],"o":{"n":"self"}}],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,{"i":[{"n":"self"},{"n":"argsettings"}],"o":{"n":"self"}}],[11,"from","","",6,{"i":[{"n":"arg"}],"o":{"n":"self"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"arg"}],"o":{"n":"bool"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"argmatches"}}],[11,"default","","",7,{"o":{"n":"self"}}],[11,"value_of","","Gets the value of a specific [option] or [positional] argument (i.e. an argument that takes an additional value at runtime). If the option wasn't present at runtime it returns `None`.",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["str"],"n":"option"}}],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the argument wasn't present at runtime it returns `None`. A lossy value is one which contains invalid UTF-8 code points, those invalid points will be replaced with `\\u{FFFD}`",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["cow"],"n":"option"}}],[11,"value_of_os","","Gets the OS version of a string value of a specific argument. If the option wasn't present at runtime it returns `None`. An OS value on Unix-like systems is any series of bytes, regardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid filename on a Unix system as an argument value may contain invalid UTF-8 code points.",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["osstr"],"n":"option"}}],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for values of a specific argument (i.e. an argument that takes multiple values at runtime). If the option wasn't present at runtime it returns `None`",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["values"],"n":"option"}}],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the option wasn't present at runtime it returns `None`. A lossy value is one where if it contains invalid UTF-8 code points, those invalid points will be replaced with `\\u{FFFD}`",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["vec"],"n":"option"}}],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements [`Iterator`] for [`OsString`] values of a specific argument. If the option wasn't present at runtime it returns `None`. An OS value on Unix-like systems is any series of bytes, regardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid filename as an argument value on Linux (for example) may contain invalid UTF-8 code points.",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["osvalues"],"n":"option"}}],[11,"is_present","","Returns `true` if an argument was present at runtime, otherwise `false`.",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"bool"}}],[11,"occurrences_of","","Returns the number of times an argument was used at runtime. If an argument isn't present it will return `0`.",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"u64"}}],[11,"index_of","","Gets the starting index of the argument in respect to all other arguments. Indices are similar to argv indices, but are not exactly 1:1.",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["usize"],"n":"option"}}],[11,"indices_of","","Gets all indices of the argument in respect to all other arguments. Indices are similar to argv indices, but are not exactly 1:1.",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["indices"],"n":"option"}}],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\" they have their own [`ArgMatches`] as well. This method returns the [`ArgMatches`] for a particular subcommand or `None` if the subcommand wasn't present at runtime.",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["argmatches"],"n":"option"}}],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\" they have their own [`ArgMatches`] as well.But simply getting the sub-[`ArgMatches`] doesn't help much if we don't also know which subcommand was actually used. This method returns the name of the subcommand that was used at runtime, or `None` if one wasn't.",7,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`] and [`ArgMatches::subcommand_name`] by returning a tuple with both pieces of information.",7,null],[11,"usage","","Returns a string slice of the usage statement for the [`App`] or [`SubCommand`]",7,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"values"}}],[11,"next","","",8,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"size_hint","","",8,null],[11,"next_back","","",8,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"default","","",8,{"o":{"n":"self"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"osvalues"}}],[11,"next","","",9,{"i":[{"n":"self"}],"o":{"g":["osstr"],"n":"option"}}],[11,"size_hint","","",9,null],[11,"next_back","","",9,{"i":[{"n":"self"}],"o":{"g":["osstr"],"n":"option"}}],[11,"default","","",9,{"o":{"n":"self"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"subcommand"}}],[11,"with_name","","Creates a new instance of a subcommand requiring a name. The name will be displayed to the user when they print version or help and usage information.",10,{"i":[{"n":"str"}],"o":{"n":"app"}}],[11,"default","","",11,{"o":{"n":"arggroup"}}],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string name. The name will be used to get values from the group or refer to the group inside of conflict and requirement rules.",11,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"arg","","Adds an [argument] to this group by name",11,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"args","","Adds multiple [arguments] to this group by name",11,null],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be used. (Default: `false`)",11,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"required","","Sets the group as required or not. A required group will be displayed in the usage string of the application in the format `<arg|arg2|arg3>`. A required `ArgGroup` simply states that one argument from this group must be present at runtime (unless conflicting with another argument).",11,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"requires","","Sets the requirement rules of this group. This is not to be confused with a [required group]. Requirement rules function just like [argument requirement rules], you can name other arguments or groups that must be present when any one of the arguments from this group is used.",11,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"requires_all","","Sets the requirement rules of this group. This is not to be confused with a [required group]. Requirement rules function just like [argument requirement rules], you can name other arguments or groups that must be present when one of the arguments from this group is used.",11,null],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka conflict) rules function just like [argument exclusion rules], you can name other arguments or groups that must not be present when one of the arguments from this group are used.",11,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules function just like [argument exclusion rules], you can name other arguments or groups that must not be present when one of the arguments from this group are used.",11,null],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",11,{"i":[{"n":"arggroup"}],"o":{"n":"self"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"argsettings"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"argsettings"}}],[11,"from_str","","",1,{"i":[{"n":"str"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"errorkind"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"use_stderr","","Should the message be written to `stdout` or not",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,null],[11,"with_description","","Create an error with a custom description.",0,{"i":[{"n":"str"},{"n":"errorkind"}],"o":{"n":"self"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"shell"}}],[11,"variants","","A list of possible variants in `&'static str` form",4,null],[11,"from_str","","",4,{"i":[{"n":"str"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[6,"Result","","Short hand for [`Result`] type",null,null],[14,"value_t","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] from an argument value. This macro returns a `Result<T,String>` which allows you as the developer to decide what you'd like to do on a failed parse. There are two types of errors, parse failures and those where the argument wasn't present (such as a non-required argument). You can use it to get a single value, or a iterator as with the [`ArgMatches::values_of`]",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] or exiting upon error, instead of returning a [`Result`] type.",null,null],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where `T` implements [`std::str::FromStr`] This macro returns a [`clap::Result<Vec<T>>`] which allows you as the developer to decide what you'd like to do on a failed parse.",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where `T` implements [`std::str::FromStr`] or exiting upon error.",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to it.  The result is a compile-time evaluable expression, suitable for use as a static array size, or the value of a `const`.",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with variants to be used as a type when parsing arguments. This enum also provides a `variants()` function which can be used to retrieve a `Vec<&'static str>` of the variant names, as well as implementing [`FromStr`] and [`Display`] automatically.",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at compile time as `MAJOR.MINOR.PATCH_PKGVERSION_PRE`",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your Cargo.toml at compile time in the form: `\"author1 lastname <author1@example.com>:author2 lastname <author2@example.com>\"`",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at compile time.",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at compile time.",null,null],[14,"app_from_crate","","Allows you to build the `App` instance from your Cargo.toml at compile time.",null,null],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with Usage-string like input but without the associated parsing runtime cost.",null,null]],"paths":[[3,"Error"],[4,"ArgSettings"],[4,"AppSettings"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"SubCommand"],[3,"ArgGroup"]]};
searchIndex["conduit_mime_types"] = {"doc":"","items":[[3,"Types","conduit_mime_types","",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"types"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"types"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"types"}],"o":{"n":"bool"}}],[11,"new","","",0,{"o":{"g":["types"],"n":"result"}}],[11,"get_extension","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"option"}}],[11,"get_mime_type","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["str"],"n":"option"}}],[11,"mime_for_path","","",0,{"i":[{"n":"self"},{"n":"path"}],"o":{"n":"str"}}]],"paths":[[3,"Types"]]};
searchIndex["crossbeam_channel"] = {"doc":"Multi-producer multi-consumer channels for message passing.","items":[[3,"Receiver","crossbeam_channel","The receiving side of a channel.",null,null],[3,"Sender","","The sending side of a channel.",null,null],[5,"bounded","","Creates a channel of bounded capacity.",null,null],[5,"unbounded","","Creates a channel of unbounded capacity.",null,null],[5,"after","","Creates a receiver that delivers a message after a certain duration of time.",null,{"i":[{"n":"duration"}],"o":{"g":["instant"],"n":"receiver"}}],[5,"tick","","Creates a receiver that delivers messages periodically.",null,{"i":[{"n":"duration"}],"o":{"g":["instant"],"n":"receiver"}}],[11,"send","","Sends a message into the channel, blocking the current thread if the channel is full.",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"is_empty","","Returns `true` if the channel is empty.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_full","","Returns `true` if the channel is full.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"len","","Returns the number of messages in the channel.",0,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"capacity","","If the channel is bounded, returns its capacity.",0,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"drop","","",0,{"i":[{"n":"self"}]}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",0,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"sender"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"receiver"}],"o":{"n":"bool"}}],[11,"recv","","Blocks the current thread until a message is received or the channel is closed.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"try_recv","","Attempts to receive a message from the channel without blocking.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"is_empty","","Returns `true` if the channel is empty.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_full","","Returns `true` if the channel is full.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"len","","Returns the number of messages in the channel.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"capacity","","If the channel is bounded, returns its capacity.",1,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"receiver"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"sender"}],"o":{"n":"bool"}}],[11,"next","","",1,{"i":[{"n":"self"}],"o":{"n":"option"}}],[14,"select","","Waits on a set of channel operations.",null,null]],"paths":[[3,"Sender"],[3,"Receiver"]]};
searchIndex["crossbeam_epoch"] = {"doc":"Epoch-based memory reclamation.","items":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed operation.",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[3,"Owned","","An owned heap-allocated object.",null,null],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.",null,{"o":{"n":"guard"}}],[5,"default_collector","","Returns the default global collector.",null,{"o":{"n":"collector"}}],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,{"o":{"n":"bool"}}],[5,"pin","","Pins the current thread.",null,{"o":{"n":"guard"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"null","","Returns a new null atomic pointer.",1,{"o":{"n":"atomic"}}],[11,"new","","Allocates `value` on the heap and returns a new atomic pointer pointing to it.",1,{"i":[{"n":"t"}],"o":{"n":"atomic"}}],[11,"load","","Loads a `Shared` from the atomic pointer.",1,{"i":[{"n":"self"},{"n":"ordering"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.",1,{"i":[{"n":"self"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic pointer.",1,{"i":[{"n":"self"},{"n":"p"},{"n":"ordering"}]}],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous `Shared`.",1,{"i":[{"n":"self"},{"n":"p"},{"n":"ordering"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current value is the same as `current`. The tag is also taken into account, so two pointers to the same object, but with different tags, will not be considered equal.",1,{"i":[{"n":"self"},{"n":"shared"},{"n":"p"},{"n":"o"},{"n":"guard"}],"o":{"g":["shared","compareandseterror"],"n":"result"}}],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current value is the same as `current`. The tag is also taken into account, so two pointers to the same object, but with different tags, will not be considered equal.",1,{"i":[{"n":"self"},{"n":"shared"},{"n":"p"},{"n":"o"},{"n":"guard"}],"o":{"g":["shared","compareandseterror"],"n":"result"}}],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"ordering"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"ordering"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"ordering"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","Returns a copy of the atomic value.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"default","","",1,{"o":{"n":"self"}}],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,{"i":[{"n":"owned"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"box"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,{"i":[{"n":"shared"}],"o":{"n":"self"}}],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,null],[11,"into_usize","","",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"new","","Allocates `value` on the heap and returns a new owned pointer pointing to it.",2,{"i":[{"n":"t"}],"o":{"n":"owned"}}],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,null],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,{"i":[{"n":"self"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"into_box","","Converts the owned pointer into a `Box`.",2,{"i":[{"n":"self"}],"o":{"n":"box"}}],[11,"tag","","Returns the tag stored within the pointer.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the unused bits of the pointer to `T`.",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"owned"}}],[11,"drop","","",2,{"i":[{"n":"self"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"deref","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"from","","",2,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"from","","Returns a new owned pointer pointing to `b`.",2,{"i":[{"n":"box"}],"o":{"n":"self"}}],[11,"borrow","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"borrow_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_ref","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"into_usize","","",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"from_usize","","",3,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"null","","Returns a new null pointer.",3,{"o":{"n":"shared"}}],[11,"is_null","","Returns `true` if the pointer is null.",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,null],[11,"deref","","Dereferences the pointer.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_ref","","Converts the pointer to a reference.",3,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_owned","","Takes ownership of the pointee.",3,{"i":[{"n":"self"}],"o":{"n":"owned"}}],[11,"tag","","Returns the tag stored within the pointer.",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the unused bits of the pointer to `T`.",3,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"shared"}}],[11,"from","","Returns a new pointer pointing to `raw`.",3,null],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"ordering"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",3,{"o":{"n":"self"}}],[11,"new","","Creates a new collector.",4,{"o":{"n":"self"}}],[11,"register","","Registers a new handle for the collector.",4,{"i":[{"n":"self"}],"o":{"n":"localhandle"}}],[11,"clone","","Creates another reference to the same garbage collector.",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","Checks if both handles point to the same collector.",4,{"i":[{"n":"self"},{"n":"collector"}],"o":{"n":"bool"}}],[11,"pin","","Pins the handle.",5,{"i":[{"n":"self"}],"o":{"n":"guard"}}],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"collector","","Returns the `Collector` associated with this handle.",5,{"i":[{"n":"self"}],"o":{"n":"collector"}}],[11,"drop","","",5,{"i":[{"n":"self"}]}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"defer","","Stores a function so that it can be executed at some point after all currently pinned threads get unpinned.",6,{"i":[{"n":"self"},{"n":"f"}]}],[11,"defer_unchecked","","Stores a function so that it can be executed at some point after all currently pinned threads get unpinned.",6,{"i":[{"n":"self"},{"n":"f"}]}],[11,"defer_destroy","","Stores a destructor for an object so that it can be deallocated and dropped at some point after all currently pinned threads get unpinned.",6,{"i":[{"n":"self"},{"n":"shared"}]}],[11,"flush","","Clears up the thread-local cache of deferred functions by executing them or moving into the global cache.",6,{"i":[{"n":"self"}]}],[11,"repin","","Unpins and then immediately re-pins the thread.",6,{"i":[{"n":"self"}]}],[11,"repin_after","","Temporarily unpins the thread, executes the given function and then re-pins the thread.",6,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"r"}}],[11,"collector","","Returns the `Collector` associated with this guard.",6,{"i":[{"n":"self"}],"o":{"g":["collector"],"n":"option"}}],[11,"drop","","",6,{"i":[{"n":"self"}]}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"guard"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",7,{"i":[{"n":"self"}],"o":{"n":"ordering"}}],[10,"failure","","The ordering of the operation when it fails.",7,{"i":[{"n":"self"}],"o":{"n":"ordering"}}],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",8,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",8,{"i":[{"n":"usize"}],"o":{"n":"self"}}]],"paths":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]};
searchIndex["crossbeam_utils"] = {"doc":"","items":[[3,"CachePadded","crossbeam_utils","Pads `T` to the length of a cache line.",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"cachepadded"}}],[11,"default","","",0,{"o":{"n":"cachepadded"}}],[11,"new","","Pads a value to the length of a cache line.",0,{"i":[{"n":"t"}],"o":{"n":"cachepadded"}}],[11,"deref","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",0,{"i":[{"n":"t"}],"o":{"n":"self"}}],[0,"thread","","",null,null],[3,"Scope","crossbeam_utils::thread","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[3,"ScopedThreadBuilder","","Scoped thread configuration. Provides detailed control over the properties and behavior of new scoped threads.",null,null],[5,"spawn_unchecked","","Like `std::thread::spawn`, but without the closure bounds.",null,{"i":[{"n":"f"}],"o":{"n":"joinhandle"}}],[5,"builder_spawn_unchecked","","Like `std::thread::Builder::spawn`, but without the closure bounds.",null,{"i":[{"n":"builder"},{"n":"f"}],"o":{"g":["joinhandle"],"n":"result"}}],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"i":[{"n":"f"}],"o":{"n":"r"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"defer","","Schedule code to be executed when exiting the scope.",1,{"i":[{"n":"self"},{"n":"f"}]}],[11,"spawn","","Create a scoped thread.",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"scopedjoinhandle"}}],[11,"builder","","Generates the base configuration for spawning a scoped thread, from which configuration methods can be chained.",1,{"i":[{"n":"self"}],"o":{"n":"scopedthreadbuilder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification only in panic messages.",3,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"scopedthreadbuilder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",3,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"scopedthreadbuilder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["scopedjoinhandle"],"n":"result"}}],[11,"join","","Join the scoped thread, returning the result it produced.",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"thread","","Get the underlying thread handle.",2,{"i":[{"n":"self"}],"o":{"n":"thread"}}],[11,"drop","","",1,{"i":[{"n":"self"}]}],[8,"AtomicConsume","crossbeam_utils","Trait which allows reading from an atomic type with \"consume\" ordering.",null,null],[16,"Val","","Type returned by `load_consume`.",4,null],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory ordering.",4,null]],"paths":[[3,"CachePadded"],[3,"Scope"],[3,"ScopedJoinHandle"],[3,"ScopedThreadBuilder"],[8,"AtomicConsume"]]};
searchIndex["data_encoding"] = {"doc":"Efficient and customizable data-encoding functions","items":[[3,"DecodeError","data_encoding","Decoding error",null,null],[12,"position","","Error position",0,null],[12,"kind","","Error kind",0,null],[3,"DecodePartial","","Decoding error with partial result",null,null],[12,"read","","Number of bytes read from input",1,null],[12,"written","","Number of bytes written to output",1,null],[12,"error","","Decoding error",1,null],[3,"Encoding","","Base-conversion encoding",null,null],[12,"0","","",2,null],[3,"Translate","","How to translate characters when decoding",null,null],[12,"from","","Characters to translate from",3,null],[12,"to","","Characters to translate to",3,null],[3,"Wrap","","How to wrap the output when encoding",null,null],[12,"width","","Wrapping width",4,null],[12,"separator","","Wrapping characters",4,null],[3,"Specification","","Base-conversion specification",null,null],[12,"symbols","","Symbols",5,null],[12,"bit_order","","Bit-order",5,null],[12,"check_trailing_bits","","Check trailing bits",5,null],[12,"padding","","Padding",5,null],[12,"ignore","","Characters to ignore when decoding",5,null],[12,"wrap","","How to wrap the output when encoding",5,null],[12,"translate","","How to translate characters when decoding",5,null],[3,"SpecificationError","","Specification error",null,null],[4,"DecodeKind","","Decoding error kind",null,null],[13,"Length","","Invalid length",6,null],[13,"Symbol","","Invalid symbol",6,null],[13,"Trailing","","Non-zero trailing bits",6,null],[13,"Padding","","Invalid padding length",6,null],[4,"BitOrder","","Order in which bits are read from a byte",null,null],[13,"MostSignificantFirst","","Most significant bit first",7,null],[13,"LeastSignificantFirst","","Least significant bit first",7,null],[17,"HEXLOWER","","Lowercase hexadecimal encoding",null,null],[17,"HEXLOWER_PERMISSIVE","","Lowercase hexadecimal encoding with case-insensitive decoding",null,null],[17,"HEXUPPER","","Uppercase hexadecimal encoding",null,null],[17,"HEXUPPER_PERMISSIVE","","Uppercase hexadecimal encoding with case-insensitive decoding",null,null],[17,"BASE32","","Padded base32 encoding",null,null],[17,"BASE32_NOPAD","","Unpadded base32 encoding",null,null],[17,"BASE32HEX","","Padded base32hex encoding",null,null],[17,"BASE32HEX_NOPAD","","Unpadded base32hex encoding",null,null],[17,"BASE32_DNSSEC","","DNSSEC base32 encoding",null,null],[17,"BASE32_DNSCURVE","","DNSCurve base32 encoding",null,null],[17,"BASE64","","Padded base64 encoding",null,null],[17,"BASE64_NOPAD","","Unpadded base64 encoding",null,null],[17,"BASE64_MIME","","MIME base64 encoding",null,null],[17,"BASE64URL","","Padded base64url encoding",null,null],[17,"BASE64URL_NOPAD","","Unpadded base64url encoding",null,null],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"decodekind"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"decodekind"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"decodeerror"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"decodeerror"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"decodeerror"}],"o":{"n":"bool"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"decodepartial"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"decodepartial"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"decodepartial"}],"o":{"n":"bool"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"bitorder"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"bitorder"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"encoding"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"encoding"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"encoding"}],"o":{"n":"bool"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"translate"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"wrap"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"specification"}}],[11,"new","","Returns a default specification",5,{"o":{"n":"specification"}}],[11,"encode_len","","Returns the encoded length of an input of length `len`",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"usize"}}],[11,"encode_mut","","Encodes `input` in `output`",2,null],[11,"encode","","Returns encoded `input`",2,null],[11,"decode_len","","Returns the decoded length of an input of length `len`",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["usize","decodeerror"],"n":"result"}}],[11,"decode_mut","","Decodes `input` in `output`",2,null],[11,"decode","","Returns decoded `input`",2,null],[11,"bit_width","","Returns the bit-width",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_canonical","","Returns whether the encoding is canonical",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"specification","","Returns the encoding specification",2,{"i":[{"n":"self"}],"o":{"n":"specification"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"specificationerror"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",8,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"encoding","","Returns the specified encoding",5,{"i":[{"n":"self"}],"o":{"g":["encoding","specificationerror"],"n":"result"}}]],"paths":[[3,"DecodeError"],[3,"DecodePartial"],[3,"Encoding"],[3,"Translate"],[3,"Wrap"],[3,"Specification"],[4,"DecodeKind"],[4,"BitOrder"],[3,"SpecificationError"]]};
searchIndex["diesel"] = {"doc":"Diesel","items":[[5,"debug_query","diesel","Takes a query `QueryFragment` expression as an argument and returns a type that implements `fmt::Display` and `fmt::Debug` to show the query.",null,{"i":[{"n":"t"}],"o":{"n":"debugquery"}}],[5,"delete","","Creates a `DELETE` statement.",null,{"i":[{"n":"t"}],"o":{"n":"deletestatement"}}],[5,"insert_into","","Creates an `INSERT` statement for the target table.",null,{"i":[{"n":"t"}],"o":{"g":["insert"],"n":"incompleteinsertstatement"}}],[5,"insert_or_ignore_into","","Creates an `INSERT [OR] IGNORE` statement.",null,{"i":[{"n":"t"}],"o":{"g":["insertorignore"],"n":"incompleteinsertstatement"}}],[5,"replace_into","","Creates a `REPLACE` statement.",null,{"i":[{"n":"t"}],"o":{"g":["replace"],"n":"incompleteinsertstatement"}}],[5,"select","","Creates a bare select statement, with no from clause. Primarily used for testing diesel itself, but likely useful for third party crates as well. The given expressions must be selectable from anywhere.",null,{"i":[{"n":"t"}],"o":{"g":["selectstatement"],"n":"select"}}],[5,"sql_query","","Construct a full SQL query using raw SQL.",null,{"i":[{"n":"t"}],"o":{"n":"sqlquery"}}],[5,"update","","Creates an `UPDATE` statement.",null,{"i":[{"n":"t"}],"o":{"n":"updatestatement"}}],[0,"associations","","Traits related to relationships between multiple tables.",null,null],[8,"BelongsTo","diesel::associations","Indicates that a type belongs to `Parent`",null,null],[16,"ForeignKey","","The foreign key of this struct",0,null],[16,"ForeignKeyColumn","","The database column representing the foreign key of the table this struct represents",0,null],[10,"foreign_key","","Returns the foreign key for `self`",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[10,"foreign_key_column","","Returns the foreign key column of this struct's table",0,null],[8,"GroupedBy","","The `grouped_by` function groups records by their parent.",null,null],[10,"grouped_by","","See the trait documentation.",1,null],[8,"HasTable","","This trait indicates that a struct is associated with a single database table.",null,null],[16,"Table","","The table this type is associated with.",2,null],[10,"table","","Returns the table this type is associated with.",2,null],[8,"Identifiable","","This trait indicates that a struct represents a single row in a database table.",null,null],[16,"Id","","The type of this struct's identifier.",3,null],[10,"id","","Returns the identifier for this record.",3,null],[0,"backend","diesel","Types which represent various database backends",null,null],[8,"Backend","diesel::backend","A database backend",null,null],[16,"QueryBuilder","","The concrete `QueryBuilder` implementation for this backend.",4,null],[16,"BindCollector","","The concrete `BindCollector` implementation for this backend.",4,null],[16,"RawValue","","The raw representation of a database value given to `FromSql`.",4,null],[16,"ByteOrder","","What byte order is used to transmit integers?",4,null],[8,"SupportsReturningClause","","Does this backend support `RETURNING` clauses?",null,null],[8,"SupportsDefaultKeyword","","Does this backend support the bare `DEFAULT` keyword?",null,null],[8,"UsesAnsiSavepointSyntax","","Does this backend use the standard `SAVEPOINT` syntax?",null,null],[0,"connection","diesel","Types related to database connections",null,null],[3,"AnsiTransactionManager","diesel::connection","An implementation of `TransactionManager` which can be used for backends which use ANSI standard syntax for savepoints such as SQLite and PostgreSQL.",null,null],[11,"default","","",5,{"o":{"n":"ansitransactionmanager"}}],[11,"new","","Create a new transaction manager",5,{"o":{"n":"self"}}],[11,"begin_transaction_sql","","Begin a transaction with custom SQL",5,{"i":[{"n":"self"},{"n":"conn"},{"n":"str"}],"o":{"n":"queryresult"}}],[11,"begin_transaction","","",5,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[11,"rollback_transaction","","",5,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[11,"commit_transaction","","",5,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[11,"get_transaction_depth","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[8,"TransactionManager","","Manages the internal transaction state for a connection.",null,null],[10,"begin_transaction","","Begin a new transaction or savepoint",6,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[10,"rollback_transaction","","Rollback the inner-most transaction or savepoint",6,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[10,"commit_transaction","","Commit the inner-most transaction or savepoint",6,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[10,"get_transaction_depth","","Fetch the current transaction depth",6,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[8,"SimpleConnection","","Perform simple operations on a backend.",null,null],[10,"batch_execute","","Execute multiple SQL statements within the same string.",7,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"queryresult"}}],[8,"Connection","","A connection to a database",null,null],[16,"Backend","","The backend this type connects to",8,null],[10,"establish","","Establishes a new connection to the database",8,{"i":[{"n":"str"}],"o":{"n":"connectionresult"}}],[11,"transaction","","Executes the given function inside of a database transaction",8,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[11,"begin_test_transaction","","Creates a transaction that will never be committed. This is useful for tests. Panics if called while inside of a transaction.",8,{"i":[{"n":"self"}],"o":{"n":"queryresult"}}],[11,"test_transaction","","Executes the given function inside a transaction, but does not commit it. Panics if the given function returns an error.",8,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[0,"data_types","diesel","Structs to represent the primitive equivalent of SQL types where there is no existing Rust primitive, or where using it would be confusing (such as date and time types). This module will re-export all backend specific data structures when compiled against that backend.",null,null],[0,"deserialize","","Types and traits related to deserializing values from the database",null,null],[6,"Result","diesel::deserialize","A specialized result type representing the result of deserializing a value from the database.",null,null],[8,"Queryable","","Trait indicating that a record can be queried from the database.",null,null],[16,"Row","","The Rust type you'd like to map from.",9,null],[10,"build","","Construct an instance of this type",9,null],[8,"QueryableByName","","Deserializes the result of a query constructed with [`sql_query`].",null,null],[10,"build","","Construct an instance of `Self` from the database row",10,{"i":[{"n":"r"}],"o":{"n":"result"}}],[8,"FromSql","","Deserialize a single field of a given SQL type.",null,null],[10,"from_sql","","See the trait documentation.",11,{"i":[{"n":"option"}],"o":{"n":"result"}}],[8,"FromSqlRow","","Deserialize one or more fields.",null,null],[18,"FIELDS_NEEDED","","The number of fields that this type will consume. Must be equal to the number of times you would call `row.take()` in `build_from_row`",12,null],[10,"build_from_row","","See the trait documentation.",12,{"i":[{"n":"t"}],"o":{"n":"result"}}],[0,"expression","diesel","AST types representing various typed SQL expressions.",null,null],[3,"SqlLiteral","diesel::expression","Returned by the [`sql()`] function.",null,null],[3,"UncheckedBind","","Returned by the [`SqlLiteral::bind()`] method when binding a value to a fragment of SQL.",null,null],[11,"add","","",13,null],[11,"sub","","",13,null],[11,"mul","","",13,null],[11,"div","","",13,null],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"sqlliteral"}}],[11,"bind","","Bind a value for use with this SQL query.",13,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"uncheckedbind"}}],[11,"sql","","Use literal SQL in the query builder",13,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"sqlliteral"}}],[11,"walk_ast","","",13,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"uncheckedbind"}}],[11,"sql","","Use literal SQL in the query builder",14,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"sqlliteral"}}],[11,"walk_ast","","",14,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[8,"Expression","","Represents a typed fragment of SQL.",null,null],[16,"SqlType","","The type that this expression represents in SQL",15,null],[8,"AsExpression","","Converts a type to its representation for use in Diesel's query builder.",null,null],[16,"Expression","","The expression being returned",16,null],[10,"as_expression","","Perform the conversion",16,null],[8,"IntoSql","","Converts a type to its representation for use in Diesel's query builder.",null,null],[11,"into_sql","","Convert `self` to an expression for Diesel's query builder.",17,{"i":[{"n":"self"}],"o":{"n":"asexprof"}}],[11,"as_sql","","Convert `&self` to an expression for Diesel's query builder.",17,{"i":[{"n":"self"}],"o":{"n":"asexprof"}}],[8,"AppearsOnTable","","Indicates that all elements of an expression are valid given a from clause.",null,null],[8,"SelectableExpression","","Indicates that an expression can be selected from a source.",null,null],[8,"NonAggregate","","Marker trait to indicate that an expression does not include any aggregate functions.",null,null],[8,"BoxableExpression","","Helper trait used when boxing expressions.",null,null],[8,"AsExpressionList","","Converts a tuple of values into a tuple of Diesel expressions.",null,null],[16,"Expression","","The final output expression",18,null],[10,"as_expression_list","","Perform the conversion",18,null],[0,"expression_methods","diesel","Adds various methods to construct new expressions. These traits are exported by default, and implemented automatically.",null,null],[8,"BoolExpressionMethods","diesel::expression_methods","Methods present on boolean expressions",null,null],[11,"and","","Creates a SQL `AND` expression",19,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"and"}}],[11,"or","","Creates a SQL `OR` expression",19,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["or"],"n":"grouped"}}],[8,"EscapeExpressionMethods","","Adds the `escape` method to `LIKE` and `NOT LIKE`. This is used to specify the escape character for the pattern.",null,null],[11,"escape","","See the trait documentation.",20,{"i":[{"n":"self"},{"n":"char"}],"o":{"g":["asexprof"],"n":"escape"}}],[8,"ExpressionMethods","","Methods present on all expressions, except tuples",null,null],[11,"eq","","Creates a SQL `=` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"eq"}}],[11,"ne","","Creates a SQL `!=` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"noteq"}}],[11,"eq_any","","Creates a SQL `IN` statement.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"in"}}],[11,"ne_any","","Deprecated alias for `ne_all`",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"notin"}}],[11,"ne_all","","Creates a SQL `NOT IN` statement.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"notin"}}],[11,"is_null","","Creates a SQL `IS NULL` expression.",21,{"i":[{"n":"self"}],"o":{"n":"isnull"}}],[11,"is_not_null","","Creates a SQL `IS NOT NULL` expression.",21,{"i":[{"n":"self"}],"o":{"n":"isnotnull"}}],[11,"gt","","Creates a SQL `>` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"gt"}}],[11,"ge","","Creates a SQL `>=` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"gteq"}}],[11,"lt","","Creates a SQL `<` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"lt"}}],[11,"le","","Creates a SQL `<=` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"lteq"}}],[11,"between","","Creates a SQL `BETWEEN` expression using the given lower and upper bounds.",21,{"i":[{"n":"self"},{"n":"t"},{"n":"u"}],"o":{"g":["and"],"n":"between"}}],[11,"not_between","","Creates a SQL `NOT BETWEEN` expression using the given lower and upper bounds.",21,{"i":[{"n":"self"},{"n":"t"},{"n":"u"}],"o":{"g":["and"],"n":"notbetween"}}],[11,"desc","","Creates a SQL `DESC` expression, representing this expression in descending order.",21,{"i":[{"n":"self"}],"o":{"n":"desc"}}],[11,"asc","","Creates a SQL `ASC` expression, representing this expression in ascending order.",21,{"i":[{"n":"self"}],"o":{"n":"asc"}}],[8,"NullableExpressionMethods","","Methods present on all expressions",null,null],[11,"nullable","","Converts this potentially non-null expression into one which is treated as nullable. This method has no impact on the generated SQL, and is only used to allow certain comparisons that would otherwise fail to compile.",22,{"i":[{"n":"self"}],"o":{"n":"nullable"}}],[8,"TextExpressionMethods","","Methods present on text expressions",null,null],[11,"concat","","Concatenates two strings using the `||` operator.",23,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"concat"}}],[11,"like","","Returns a SQL `LIKE` expression",23,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"like"}}],[11,"not_like","","Returns a SQL `NOT LIKE` expression",23,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"notlike"}}],[8,"PgExpressionMethods","","PostgreSQL specific methods which are present on all expressions.",null,null],[11,"is_not_distinct_from","","Creates a PostgreSQL `IS NOT DISTINCT FROM` expression.",24,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"isnotdistinctfrom"}}],[11,"is_distinct_from","","Creates a PostgreSQL `IS DISTINCT FROM` expression.",24,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"isdistinctfrom"}}],[8,"PgTimestampExpressionMethods","","PostgreSQL specific methods present on timestamp expressions.",null,null],[11,"at_time_zone","","Creates a PostgreSQL \"AT TIME ZONE\" expression.",25,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"attimezone"}}],[8,"PgArrayExpressionMethods","","PostgreSQL specific methods present on array expressions.",null,null],[11,"overlaps_with","","Creates a PostgreSQL `&&` expression.",26,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"overlapswith"}}],[11,"contains","","Creates a PostgreSQL `@>` expression.",26,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"contains"}}],[11,"is_contained_by","","Creates a PostgreSQL `<@` expression.",26,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"iscontainedby"}}],[8,"PgSortExpressionMethods","","PostgreSQL expression methods related to sorting.",null,null],[11,"nulls_first","","Specify that nulls should come before other values in this ordering.",27,{"i":[{"n":"self"}],"o":{"n":"nullsfirst"}}],[11,"nulls_last","","Specify that nulls should come after other values in this ordering.",27,{"i":[{"n":"self"}],"o":{"n":"nullslast"}}],[8,"PgTextExpressionMethods","","PostgreSQL specific methods present on text expressions.",null,null],[11,"ilike","","Creates a  PostgreSQL `ILIKE` expression",28,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ilike"}}],[11,"not_ilike","","Creates a PostgreSQL `NOT ILIKE` expression",28,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"notilike"}}],[0,"query_builder","diesel","Contains traits responsible for the actual construction of SQL statements",null,null],[3,"AstPass","diesel::query_builder","The primary type used when walking a Diesel AST during query execution.",null,null],[3,"DebugQuery","","A struct that implements `fmt::Display` and `fmt::Debug` to show the SQL representation of a query.",null,null],[3,"DeleteStatement","","Represents a SQL `DELETE` statement.",null,null],[3,"IncompleteInsertStatement","","The structure returned by [`insert_into`].",null,null],[3,"InsertStatement","","A fully constructed insert statement.",null,null],[3,"SqlQuery","","The return value of `sql_query`.",null,null],[3,"UpdateStatement","","Represents a complete `UPDATE` statement.",null,null],[5,"debug_query","","Takes a query `QueryFragment` expression as an argument and returns a type that implements `fmt::Display` and `fmt::Debug` to show the query.",null,{"i":[{"n":"t"}],"o":{"n":"debugquery"}}],[11,"reborrow","","Call this method whenever you pass an instance of `AstPass` by value.",29,{"i":[{"n":"self"}],"o":{"n":"astpass"}}],[11,"unsafe_to_cache_prepared","","Mark the current query being constructed as unsafe to store in the prepared statement cache.",29,{"i":[{"n":"self"}]}],[11,"push_sql","","Push the given SQL string on the end of the query being constructed.",29,{"i":[{"n":"self"},{"n":"str"}]}],[11,"push_identifier","","Push the given SQL identifier on the end of the query being constructed.",29,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"queryresult"}}],[11,"push_bind_param","","Push a value onto the given query to be sent separate from the SQL",29,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"queryresult"}}],[0,"bind_collector","","Types related to managing bind parameters during query construction.",null,null],[3,"RawBytesBindCollector","diesel::query_builder::bind_collector","A bind collector used by backends which transmit bind parameters as an opaque blob of bytes.",null,null],[12,"metadata","","The metadata associated with each bind parameter.",30,null],[12,"binds","","The serialized bytes for each bind parameter.",30,null],[8,"BindCollector","","A type which manages serializing bind parameters during query construction.",null,null],[10,"push_bound_value","","Serializes the given bind value, and collects the result.",31,null],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct an empty `RawBytesBindCollector`",30,{"o":{"n":"self"}}],[11,"push_bound_value","","",30,null],[11,"fmt","diesel::query_builder","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"deletestatement"}}],[11,"filter","","Adds the given predicate to the `WHERE` clause of the statement being constructed.",33,{"i":[{"n":"self"},{"n":"predicate"}],"o":{"n":"filter"}}],[11,"into_boxed","","Boxes the `WHERE` clause of this delete statement.",33,{"i":[{"n":"self"}],"o":{"n":"intoboxed"}}],[11,"filter","","",33,null],[11,"internal_into_boxed","","",33,null],[11,"walk_ast","","",33,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"as_query","","",33,null],[11,"returning","","Specify what expression is returned after execution of the `delete`.",33,{"i":[{"n":"self"},{"n":"e"}],"o":{"g":["returningclause"],"n":"deletestatement"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"incompleteinsertstatement"}}],[11,"default_values","","Inserts `DEFAULT VALUES` into the targeted table.",34,{"i":[{"n":"self"}],"o":{"g":["defaultvalues"],"n":"insertstatement"}}],[11,"values","","Inserts the given values into the table passed to `insert_into`.",34,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"insertstatement"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"insertstatement"}}],[11,"into_columns","","Set the column list when inserting from a select statement",35,{"i":[{"n":"self"},{"n":"c2"}],"o":{"g":["insertfromselect"],"n":"insertstatement"}}],[11,"walk_ast","","",35,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"as_query","","",35,null],[11,"returning","","Specify what expression is returned after execution of the `insert`. # Examples",35,{"i":[{"n":"self"},{"n":"e"}],"o":{"g":["returningclause"],"n":"insertstatement"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"sqlquery"}}],[11,"bind","","Bind a value for use with this SQL query.",36,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"uncheckedbind"}}],[11,"walk_ast","","",36,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"internal_load","","",36,{"i":[{"n":"self"},{"n":"conn"}],"o":{"g":["vec"],"n":"queryresult"}}],[11,"set","","Provides the `SET` clause of the `UPDATE` statement.",37,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"updatestatement"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"updatestatement"}}],[11,"filter","","Adds the given predicate to the `WHERE` clause of the statement being constructed.",37,{"i":[{"n":"self"},{"n":"predicate"}],"o":{"n":"filter"}}],[11,"into_boxed","","Boxes the `WHERE` clause of this update statement.",37,{"i":[{"n":"self"}],"o":{"n":"intoboxed"}}],[11,"filter","","",37,null],[11,"internal_into_boxed","","",37,null],[11,"walk_ast","","",37,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"as_query","","",37,null],[11,"returning","","Specify what expression is returned after execution of the `update`. # Examples",37,{"i":[{"n":"self"},{"n":"e"}],"o":{"g":["returningclause"],"n":"updatestatement"}}],[6,"BoxedDeleteStatement","","A `DELETE` statement with a boxed `WHERE` clause",null,null],[6,"IncompleteUpdateStatement","","The type returned by `update`. The only thing you can do with this type is call `set` on it.",null,null],[6,"BoxedUpdateStatement","","An `UPDATE` statement with a boxed `WHERE` clause.",null,null],[6,"BuildQueryResult","","A specialized Result type used with the query builder.",null,null],[8,"UndecoratedInsertRecord","","Marker trait to indicate that no additional operations have been added to a record for insert.",null,null],[8,"QueryId","","Uniquely identifies queries by their type for the purpose of prepared statement caching.",null,null],[16,"QueryId","","A type which uniquely represents `Self` in a SQL query.",38,null],[18,"HAS_STATIC_QUERY_ID","","Can the SQL generated by `Self` be uniquely identified by its type?",38,null],[11,"query_id","","Returns the type id of `Self::QueryId` if `Self::HAS_STATIC_QUERY_ID`. Returns `None` otherwise.",38,{"o":{"g":["typeid"],"n":"option"}}],[8,"AsChangeset","","Types which can be passed to `update.set`.",null,null],[16,"Target","","The table which `Self::Changeset` will be updating",39,null],[16,"Changeset","","The update statement this type represents",39,null],[10,"as_changeset","","Convert `self` into the actual update statement being executed",39,null],[8,"IntoUpdateTarget","","A type which can be passed to [`update`] or [`delete`].",null,null],[16,"WhereClause","","What is the `WHERE` clause of this target?",40,null],[10,"into_update_target","","Decomposes `self` into the table and where clause.",40,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[8,"QueryBuilder","","Constructs a SQL query from a Diesel AST.",null,null],[10,"push_sql","","Add `sql` to the end of the query being constructed.",41,{"i":[{"n":"self"},{"n":"str"}]}],[10,"push_identifier","","Quote `identifier`, and add it to the end of the query being constructed.",41,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"queryresult"}}],[10,"push_bind_param","","Add a placeholder for a bind parameter to the end of the query being constructed.",41,{"i":[{"n":"self"}]}],[10,"finish","","Returns the constructed SQL query.",41,{"i":[{"n":"self"}],"o":{"n":"string"}}],[8,"Query","","A complete SQL query with a return type.",null,null],[16,"SqlType","","The SQL type that this query represents.",42,null],[8,"SelectQuery","","Indicates that a type is a `SELECT` statement.",null,null],[16,"SqlType","","The SQL type of the `SELECT` clause",43,null],[8,"QueryFragment","","An untyped fragment of SQL.",null,null],[10,"walk_ast","","Walk over this `QueryFragment` for all passes.",44,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"to_sql","","Converts this `QueryFragment` to its SQL representation.",44,null],[11,"collect_binds","","Serializes all bind parameters in this query.",44,null],[11,"is_safe_to_cache_prepared","","Is this query safe to store in the prepared statement cache?",44,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"queryresult"}}],[8,"AsQuery","","Types that can be converted into a complete, typed SQL query.",null,null],[16,"SqlType","","The SQL type of `Self::Query`",45,null],[16,"Query","","What kind of query does this type represent?",45,null],[10,"as_query","","Converts a type which semantically represents a SQL query into the actual query being executed. See the trait level docs for more.",45,null],[0,"query_dsl","diesel","Traits that construct SELECT statements",null,null],[0,"methods","diesel::query_dsl","The traits used by `QueryDsl`.",null,null],[8,"BoxedDsl","diesel::query_dsl::methods","The `into_boxed` method",null,null],[16,"Output","","The return type of `internal_into_boxed`",46,null],[10,"internal_into_boxed","","See the trait documentation.",46,null],[8,"DistinctDsl","","The `distinct` method",null,null],[16,"Output","","The type returned by `.distinct`",47,null],[10,"distinct","","See the trait documentation.",47,null],[8,"DistinctOnDsl","","The `distinct_on` method",null,null],[16,"Output","","The type returned by `.distinct_on`",48,null],[10,"distinct_on","","See the trait documentation",48,null],[8,"FilterDsl","","The `filter` method",null,null],[16,"Output","","The type returned by `.filter`.",49,null],[10,"filter","","See the trait documentation.",49,null],[8,"FindDsl","","The `find` method",null,null],[16,"Output","","The type returned by `.find`.",50,null],[10,"find","","See the trait documentation.",50,null],[8,"OrFilterDsl","","The `or_filter` method",null,null],[16,"Output","","The type returned by `.filter`.",51,null],[10,"or_filter","","See the trait documentation.",51,null],[8,"LimitDsl","","The `limit` method",null,null],[16,"Output","","The type returned by `.limit`",52,null],[10,"limit","","See the trait documentation",52,null],[8,"ExecuteDsl","","The `execute` method",null,null],[10,"execute","","Execute this command",53,{"i":[{"n":"self"},{"n":"conn"}],"o":{"g":["usize"],"n":"queryresult"}}],[8,"LoadQuery","","The `load` method",null,null],[10,"internal_load","","Load this query",54,{"i":[{"n":"self"},{"n":"conn"}],"o":{"g":["vec"],"n":"queryresult"}}],[8,"ForUpdateDsl","","The `for_update` method",null,null],[16,"Output","","The type returned by `for_update`. See [`dsl::ForUpdate`] for convenient access to this type.",55,null],[10,"for_update","","See the trait level documentation",55,null],[8,"LockingDsl","","Methods related to locking select statements",null,null],[16,"Output","","The type returned by `set_lock`. See [`dsl::ForUpdate`] and friends for convenient access to this type.",56,null],[10,"with_lock","","See the trait level documentation",56,null],[8,"ModifyLockDsl","","Methods related to modifiers on locking select statements",null,null],[16,"Output","","The type returned by `modify_lock`. See [`dsl::SkipLocked`] and friends for convenient access to this type.",57,null],[10,"modify_lock","","See the trait level documentation",57,null],[8,"OffsetDsl","","The `offset` method",null,null],[16,"Output","","The type returned by `.offset`.",58,null],[10,"offset","","See the trait documentation",58,null],[8,"OrderDsl","","The `order` method",null,null],[16,"Output","","The type returned by `.order`.",59,null],[10,"order","","See the trait documentation.",59,null],[8,"ThenOrderDsl","","The `then_order_by` method",null,null],[16,"Output","","The type returned by `.then_order_by`.",60,null],[10,"then_order_by","","See the trait documentation.",60,null],[8,"SelectDsl","","The `select` method",null,null],[16,"Output","","The type returned by `.select`",61,null],[10,"select","","See the trait documentation",61,null],[8,"SingleValueDsl","","The `single_value` method",null,null],[16,"Output","","The type returned by `.single_value`.",62,null],[10,"single_value","","See the trait documentation.",62,null],[8,"BelongingToDsl","diesel::query_dsl","Constructs a query that finds record(s) based on directional association with other record(s).",null,null],[16,"Output","","The query returned by `belonging_to`",63,null],[10,"belonging_to","","Get the record(s) belonging to record(s) `other`",63,null],[8,"JoinOnDsl","","Specify the `ON` clause for a join statement. This will override any implicit `ON` clause that would come from [`joinable!`]",null,null],[11,"on","","See the trait documentation.",64,{"i":[{"n":"self"},{"n":"on"}],"o":{"n":"onclausewrapper"}}],[8,"SaveChangesDsl","","Sugar for types which implement both `AsChangeset` and `Identifiable`",null,null],[11,"save_changes","","See the trait documentation.",65,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[8,"QueryDsl","","Methods used to construct select statements.",null,null],[11,"distinct","","Adds the `DISTINCT` keyword to a query.",66,{"i":[{"n":"self"}],"o":{"n":"distinct"}}],[11,"distinct_on","","Adds the `DISTINCT ON` clause to a query.",66,{"i":[{"n":"self"},{"n":"expr"}],"o":{"n":"distincton"}}],[11,"select","","Adds a `SELECT` clause to the query.",66,{"i":[{"n":"self"},{"n":"selection"}],"o":{"n":"select"}}],[11,"count","","Get the count of a query. This is equivalent to `.select(count_star())`",66,{"i":[{"n":"self"}],"o":{"g":["countstar"],"n":"select"}}],[11,"inner_join","","Join two tables using a SQL `INNER JOIN`.",66,null],[11,"left_outer_join","","Join two tables using a SQL `LEFT OUTER JOIN`.",66,null],[11,"left_join","","Alias for [`left_outer_join`].",66,null],[11,"filter","","Adds to the `WHERE` clause of a query.",66,{"i":[{"n":"self"},{"n":"predicate"}],"o":{"n":"filter"}}],[11,"or_filter","","Adds to the `WHERE` clause of a query using `OR`",66,{"i":[{"n":"self"},{"n":"predicate"}],"o":{"n":"orfilter"}}],[11,"find","","Attempts to find a single record from the given table by primary key.",66,{"i":[{"n":"self"},{"n":"pk"}],"o":{"n":"find"}}],[11,"order","","Sets the order clause of a query.",66,{"i":[{"n":"self"},{"n":"expr"}],"o":{"n":"order"}}],[11,"order_by","","Alias for `order`",66,{"i":[{"n":"self"},{"n":"expr"}],"o":{"n":"order"}}],[11,"then_order_by","","Appends to the `ORDER BY` clause of this SQL query.",66,{"i":[{"n":"self"},{"n":"order"}],"o":{"n":"thenorderby"}}],[11,"limit","","Sets the limit clause of the query.",66,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"limit"}}],[11,"offset","","Sets the offset clause of the query.",66,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"offset"}}],[11,"for_update","","Adds `FOR UPDATE` to the end of the select statement.",66,{"i":[{"n":"self"}],"o":{"n":"forupdate"}}],[11,"for_no_key_update","","Adds `FOR NO KEY UPDATE` to the end of the select statement.",66,{"i":[{"n":"self"}],"o":{"n":"fornokeyupdate"}}],[11,"for_share","","Adds `FOR SHARE` to the end of the select statement.",66,{"i":[{"n":"self"}],"o":{"n":"forshare"}}],[11,"for_key_share","","Adds `FOR KEY SHARE` to the end of the select statement.",66,{"i":[{"n":"self"}],"o":{"n":"forkeyshare"}}],[11,"skip_locked","","Adds `SKIP LOCKED` to the end of a `FOR UPDATE` clause.",66,{"i":[{"n":"self"}],"o":{"n":"skiplocked"}}],[11,"no_wait","","Adds `NOWAIT` to the end of a `FOR UPDATE` clause.",66,{"i":[{"n":"self"}],"o":{"n":"nowait"}}],[11,"into_boxed","","Boxes the pieces of a query into a single type.",66,{"i":[{"n":"self"}],"o":{"n":"intoboxed"}}],[11,"single_value","","Wraps this select statement in parenthesis, allowing it to be used as an expression.",66,{"i":[{"n":"self"}],"o":{"n":"singlevalue"}}],[8,"RunQueryDsl","","Methods used to execute queries.",null,null],[11,"execute","","Executes the given command, returning the number of rows affected.",67,{"i":[{"n":"self"},{"n":"conn"}],"o":{"g":["usize"],"n":"queryresult"}}],[11,"load","","Executes the given query, returning a `Vec` with the returned rows.",67,{"i":[{"n":"self"},{"n":"conn"}],"o":{"g":["vec"],"n":"queryresult"}}],[11,"get_result","","Runs the command, and returns the affected row.",67,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[11,"get_results","","Runs the command, returning an `Vec` with the affected rows.",67,{"i":[{"n":"self"},{"n":"conn"}],"o":{"g":["vec"],"n":"queryresult"}}],[11,"first","","Attempts to load a single record.",67,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[0,"query_source","diesel","Types related to describing schema, and interactions between tables.",null,null],[3,"Never","diesel::query_source","A table never appears in the from clause.",null,null],[3,"Once","","A table appears in the from clause exactly one time.",null,null],[3,"MoreThanOnce","","A table appears in the from clause two or more times.",null,null],[8,"JoinTo","","Indicates that two tables can be joined without an explicit `ON` clause.",null,null],[8,"Plus","","Add two peano numbers together.",null,null],[16,"Output","","The result of adding these numbers together",68,null],[8,"QuerySource","","Represents a type which can appear in the `FROM` clause. Apps should not need to concern themselves with this trait.",null,null],[16,"FromClause","","The type returned by `from_clause`",69,null],[16,"DefaultSelection","","The type returned by `default_selection`",69,null],[10,"from_clause","","The actual `FROM` clause of this type. This is typically only called in `QueryFragment` implementations.",69,null],[10,"default_selection","","The default select clause of this type, which should be used if no select clause was explicitly specified. This should always be a tuple of all the desired columns, not `star`",69,null],[8,"Column","","A column on a database table. Types which implement this trait should have been generated by the `table!` macro.",null,null],[16,"Table","","The table which this column belongs to",70,null],[18,"NAME","","The name of this column",70,null],[8,"Table","","A SQL database table. Types which implement this trait should have been generated by the `table!` macro.",null,null],[16,"PrimaryKey","","The type returned by `primary_key`",71,null],[16,"AllColumns","","The type returned by `all_columns`",71,null],[10,"primary_key","","Returns the primary key of this table.",71,null],[10,"all_columns","","Returns a tuple of all columns belonging to this table.",71,null],[8,"AppearsInFromClause","","Determines how many times `Self` appears in `QS`",null,null],[16,"Count","","How many times does `Self` appear in `QS`?",72,null],[0,"r2d2","diesel","Connection pooling via r2d2",null,null],[8,"ManageConnection","diesel::r2d2","A trait which provides connection-specific functionality.",null,null],[16,"Connection","","The connection type this manager deals with.",73,null],[16,"Error","","The error type returned by `Connection`s.",73,null],[10,"connect","","Attempts to create a new connection.",73,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"is_valid","","Determines if the connection is still connected to the database.",73,null],[10,"has_broken","","Quickly determines if the connection is no longer usable.",73,null],[8,"HandleError","","A trait which handles errors reported by the `ManageConnection`.",null,null],[10,"handle_error","","Handles an error.",74,null],[3,"NopErrorHandler","","A `HandleError` implementation which does nothing.",null,null],[3,"LoggingErrorHandler","","A `HandleError` implementation which logs at the error level.",null,null],[8,"CustomizeConnection","","A trait which allows for customization of connections.",null,null],[11,"on_acquire","","Called with connections immediately after they are returned from `ManageConnection::connect`.",75,{"i":[{"n":"self"},{"n":"c"}],"o":{"n":"result"}}],[11,"on_release","","Called with connections when they are removed from the pool.",75,null],[3,"NopConnectionCustomizer","","A `CustomizeConnection` which does nothing.",null,null],[3,"Pool","","A generic connection pool.",null,null],[3,"Error","","The error type returned by methods in this crate.",null,null],[3,"State","","Information about the state of a `Pool`.",null,null],[12,"connections","","The number of connections currently being managed by the pool.",76,null],[12,"idle_connections","","The number of idle connections.",76,null],[3,"PooledConnection","","A smart pointer wrapping a connection.",null,null],[3,"Builder","","A builder for a connection pool.",null,null],[3,"ConnectionManager","","An r2d2 connection manager for use with Diesel.",null,null],[4,"Error","","The error used when managing connections with `r2d2`.",null,null],[13,"ConnectionError","","An error occurred establishing the connection",77,null],[13,"QueryError","","An error occurred pinging the database",77,null],[6,"PoolError","","A re-export of [`r2d2::Error`], which is only used by methods on [`r2d2::Pool`].",null,null],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"connectionmanager"}}],[11,"new","","Returns a new connection manager, which establishes connections to the given database URL.",78,{"i":[{"n":"s"}],"o":{"n":"self"}}],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",77,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"connect","","",78,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"is_valid","","",78,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["error"],"n":"result"}}],[11,"has_broken","","",78,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"batch_execute","","",79,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"queryresult"}}],[11,"establish","","",79,{"i":[{"n":"str"}],"o":{"n":"connectionresult"}}],[11,"execute","","",79,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["usize"],"n":"queryresult"}}],[11,"query_by_index","","",79,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["vec"],"n":"queryresult"}}],[11,"query_by_name","","",79,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["vec"],"n":"queryresult"}}],[11,"execute_returning_count","","",79,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["usize"],"n":"queryresult"}}],[11,"transaction_manager","","",79,null],[0,"result","diesel","Errors, type aliases, and functions related to working with `Result`.",null,null],[3,"UnexpectedNullError","diesel::result","An unexpected `NULL` was encountered during deserialization",null,null],[4,"Error","","Represents all the ways that a query can fail.",null,null],[13,"InvalidCString","","The query contained a nul byte.",80,null],[13,"DatabaseError","","The database returned an error.",80,null],[13,"NotFound","","No rows were returned by a query expected to return at least one row.",80,null],[13,"QueryBuilderError","","The query could not be constructed",80,null],[13,"DeserializationError","","An error occurred deserializing the data being sent to the database.",80,null],[13,"SerializationError","","An error occurred serializing the data being sent to the database.",80,null],[13,"RollbackTransaction","","Roll back the current transaction.",80,null],[13,"AlreadyInTransaction","","Attempted to perform an operation that cannot be done inside a transaction when a transaction was already open.",80,null],[4,"DatabaseErrorKind","","The kind of database error that occurred.",null,null],[13,"UniqueViolation","","A unique constraint was violated.",81,null],[13,"ForeignKeyViolation","","A foreign key constraint was violated.",81,null],[13,"UnableToSendCommand","","The query could not be sent to the database due to a protocol violation.",81,null],[4,"ConnectionError","","Errors which can occur during [`Connection::establish`]",null,null],[13,"InvalidCString","","The connection URL contained a `NUL` byte.",82,null],[13,"BadConnection","","The database returned an error.",82,null],[13,"InvalidConnectionUrl","","The connection URL could not be parsed.",82,null],[13,"CouldntSetupConfiguration","","Diesel could not configure the database connection.",82,null],[6,"QueryResult","","A specialized result type for queries.",null,null],[6,"ConnectionResult","","A specialized result type for establishing connections.",null,null],[8,"DatabaseErrorInformation","","Information about an error that was returned by the database.",null,null],[10,"message","","The primary human-readable error message. Typically one line.",83,{"i":[{"n":"self"}],"o":{"n":"str"}}],[10,"details","","An optional secondary error message providing more details about the problem, if it was provided by the database. Might span multiple lines.",83,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[10,"hint","","An optional suggestion of what to do about the problem, if one was provided by the database.",83,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[10,"table_name","","The name of the table the error was associated with, if the error was associated with a specific table and the backend supports retrieving that information.",83,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[10,"column_name","","The name of the column the error was associated with, if the error was associated with a specific column and the backend supports retrieving that information.",83,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[10,"constraint_name","","The constraint that was violated if this error is a constraint violation and the backend supports retrieving that information.",83,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[8,"OptionalExtension","","See the method documentation.",null,null],[10,"optional","","Converts a `QueryResult<T>` into a `QueryResult<Option<T>>`.",84,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"result"}}],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"databaseerrorkind"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",82,{"i":[{"n":"self"},{"n":"connectionerror"}],"o":{"n":"bool"}}],[11,"ne","","",82,{"i":[{"n":"self"},{"n":"connectionerror"}],"o":{"n":"bool"}}],[11,"optional","","",85,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"result"}}],[11,"from","","",82,{"i":[{"n":"nulerror"}],"o":{"n":"self"}}],[11,"from","","",80,{"i":[{"n":"nulerror"}],"o":{"n":"self"}}],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",80,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",80,{"i":[{"n":"self"}],"o":{"g":["stderror"],"n":"option"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",82,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",82,{"i":[{"n":"self"}],"o":{"g":["stderror"],"n":"option"}}],[11,"eq","","",80,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"unexpectednullerror"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",86,{"i":[{"n":"self"}],"o":{"n":"str"}}],[0,"serialize","diesel","Types and traits related to serializing values for the database",null,null],[3,"Output","diesel::serialize","Wraps a buffer to be written by `ToSql` with additional backend specific utilities.",null,null],[4,"IsNull","","Tiny enum to make the return type of `ToSql` more descriptive",null,null],[13,"Yes","","No data was written, as this type is null",87,null],[13,"No","","The value is not null",87,null],[6,"Result","","A specialized result type representing the result of serializing a value for the database.",null,null],[8,"ToSql","","Serializes a single value to be sent to the database.",null,null],[10,"to_sql","","See the trait documentation.",88,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"isnull"}}],[11,"eq","","",87,{"i":[{"n":"self"},{"n":"isnull"}],"o":{"n":"bool"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"output"}}],[11,"new","","Construct a new `Output`",89,null],[11,"with_buffer","","Create a new `Output` with the given buffer",89,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"output"}}],[11,"into_inner","","Return the raw buffer this type is wrapping",89,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"metadata_lookup","","Returns the backend's mechanism for dynamically looking up type metadata at runtime, if relevant for the given backend.",89,null],[11,"write","","",89,null],[11,"flush","","",89,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"write_all","","",89,null],[11,"write_fmt","","",89,{"i":[{"n":"self"},{"n":"arguments"}],"o":{"n":"result"}}],[11,"deref","","",89,null],[11,"deref_mut","","",89,null],[11,"eq","","",89,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"bool"}}],[11,"fmt","","",89,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"sql_types","diesel","Types which represent a SQL data type.",null,null],[3,"Bool","diesel::sql_types","The boolean SQL type.",null,null],[3,"Tinyint","","The tiny integer SQL type.",null,null],[3,"SmallInt","","The small integer SQL type.",null,null],[3,"Integer","","The integer SQL type.",null,null],[3,"BigInt","","The big integer SQL type.",null,null],[3,"Float","","The float SQL type.",null,null],[3,"Double","","The double precision float SQL type.",null,null],[3,"Numeric","","The arbitrary precision numeric SQL type.",null,null],[3,"Text","","The text SQL type.",null,null],[3,"Binary","","The binary SQL type.",null,null],[3,"Date","","The date SQL type.",null,null],[3,"Interval","","The interval SQL type.",null,null],[3,"Time","","The time SQL type.",null,null],[3,"Timestamp","","The timestamp SQL type.",null,null],[3,"Nullable","","The nullable SQL type.",null,null],[0,"ops","","Represents the output of numeric operators in SQL",null,null],[8,"Add","diesel::sql_types::ops","Represents SQL types which can be added.",null,null],[16,"Rhs","","The SQL type which can be added to this one",90,null],[16,"Output","","The SQL type of the result of adding `Rhs` to `Self`",90,null],[8,"Sub","","Represents SQL types which can be subtracted.",null,null],[16,"Rhs","","The SQL type which can be subtracted from this one",91,null],[16,"Output","","The SQL type of the result of subtracting `Rhs` from `Self`",91,null],[8,"Mul","","Represents SQL types which can be multiplied.",null,null],[16,"Rhs","","The SQL type which this can be multiplied by",92,null],[16,"Output","","The SQL type of the result of multiplying `Self` by `Rhs`",92,null],[8,"Div","","Represents SQL types which can be divided.",null,null],[16,"Rhs","","The SQL type which this one can be divided by",93,null],[16,"Output","","The SQL type of the result of dividing `Self` by `Rhs`",93,null],[6,"Decimal","diesel::sql_types","Alias for `Numeric`",null,null],[6,"VarChar","","The SQL `VARCHAR` type",null,null],[8,"Foldable","","Represents SQL types which can be used with `SUM` and `AVG`",null,null],[16,"Sum","","The SQL type of `sum(this_type)`",94,null],[16,"Avg","","The SQL type of `avg(this_type)`",94,null],[8,"SqlOrd","","Marker trait for types which can be used with `MAX` and `MIN`",null,null],[8,"HasSqlType","","Indicates that a SQL type exists for a backend.",null,null],[10,"metadata","","Fetch the metadata for the given type",95,null],[8,"TypeMetadata","","Information about how a backend stores metadata about given SQL types",null,null],[16,"TypeMetadata","","The actual type used to represent metadata.",96,null],[16,"MetadataLookup","","The type used for runtime lookup of metadata.",96,null],[8,"NotNull","","A marker trait indicating that a SQL type is not null.",null,null],[8,"IntoNullable","","Converts a type which may or may not be nullable into its nullable representation.",null,null],[16,"Nullable","","The nullable representation of this type.",97,null],[8,"SingleValue","","A marker trait indicating that a SQL type represents a single value, as opposed to a list of values.",null,null],[11,"fmt","","",98,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",98,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"default","","",98,{"o":{"n":"bool"}}],[11,"fmt","","",99,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",99,{"i":[{"n":"self"}],"o":{"n":"tinyint"}}],[11,"default","","",99,{"o":{"n":"tinyint"}}],[11,"fmt","","",100,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",100,{"i":[{"n":"self"}],"o":{"n":"smallint"}}],[11,"default","","",100,{"o":{"n":"smallint"}}],[11,"fmt","","",101,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",101,{"i":[{"n":"self"}],"o":{"n":"integer"}}],[11,"default","","",101,{"o":{"n":"integer"}}],[11,"fmt","","",102,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",102,{"i":[{"n":"self"}],"o":{"n":"bigint"}}],[11,"default","","",102,{"o":{"n":"bigint"}}],[11,"fmt","","",103,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",103,{"i":[{"n":"self"}],"o":{"n":"float"}}],[11,"default","","",103,{"o":{"n":"float"}}],[11,"fmt","","",104,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",104,{"i":[{"n":"self"}],"o":{"n":"double"}}],[11,"default","","",104,{"o":{"n":"double"}}],[11,"fmt","","",105,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",105,{"i":[{"n":"self"}],"o":{"n":"numeric"}}],[11,"default","","",105,{"o":{"n":"numeric"}}],[11,"fmt","","",106,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",106,{"i":[{"n":"self"}],"o":{"n":"text"}}],[11,"default","","",106,{"o":{"n":"text"}}],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"binary"}}],[11,"default","","",107,{"o":{"n":"binary"}}],[11,"fmt","","",108,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",108,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"default","","",108,{"o":{"n":"date"}}],[11,"fmt","","",109,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",109,{"i":[{"n":"self"}],"o":{"n":"interval"}}],[11,"default","","",109,{"o":{"n":"interval"}}],[11,"fmt","","",110,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"time"}}],[11,"default","","",110,{"o":{"n":"time"}}],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"timestamp"}}],[11,"default","","",111,{"o":{"n":"timestamp"}}],[11,"fmt","","",112,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",112,{"i":[{"n":"self"}],"o":{"n":"nullable"}}],[11,"default","","",112,{"o":{"n":"nullable"}}],[0,"migration","diesel","Representation of migrations",null,null],[4,"MigrationError","diesel::migration","Errors that occur while preparing to run migrations",null,null],[13,"MigrationDirectoryNotFound","","The migration directory wasn't found",113,null],[13,"UnknownMigrationFormat","","Provided migration was in an unknown format",113,null],[13,"IoError","","General system IO error",113,null],[13,"UnknownMigrationVersion","","Provided migration had an incompatible version number",113,null],[13,"NoMigrationRun","","No migrations had to be/ could be run",113,null],[4,"RunMigrationsError","","Errors that occur while running migrations",null,null],[13,"MigrationError","","A general migration error occured",114,null],[13,"QueryError","","The provided migration included an invalid query",114,null],[13,"EmptyMigration","","The provided migration was empty",114,null],[11,"fmt","","",113,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",113,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",113,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",113,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"from","","",113,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"fmt","","",114,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",114,{"i":[{"n":"self"},{"n":"runmigrationserror"}],"o":{"n":"bool"}}],[11,"ne","","",114,{"i":[{"n":"self"},{"n":"runmigrationserror"}],"o":{"n":"bool"}}],[11,"description","","",114,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",114,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"from","","",114,{"i":[{"n":"migrationerror"}],"o":{"n":"self"}}],[11,"from","","",114,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",114,{"i":[{"n":"error"}],"o":{"n":"self"}}],[8,"Migration","","Represents a migration that interacts with diesel",null,null],[10,"version","","Get the migration version",115,{"i":[{"n":"self"}],"o":{"n":"str"}}],[10,"run","","Apply this migration",115,{"i":[{"n":"self"},{"n":"simpleconnection"}],"o":{"g":["runmigrationserror"],"n":"result"}}],[10,"revert","","Revert this migration",115,{"i":[{"n":"self"},{"n":"simpleconnection"}],"o":{"g":["runmigrationserror"],"n":"result"}}],[11,"file_path","","Get the migration file path",115,{"i":[{"n":"self"}],"o":{"g":["path"],"n":"option"}}],[0,"row","diesel","Contains the `Row` trait",null,null],[8,"Row","diesel::row","Represents a single database row. Apps should not need to concern themselves with this trait.",null,null],[10,"take","","Returns the value of the next column in the row.",116,{"i":[{"n":"self"}],"o":{"n":"option"}}],[10,"next_is_null","","Returns whether the next `count` columns are all `NULL`.",116,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"advance","","Skips the next `count` columns. This method must be called if you are choosing not to call `take` as a result of `next_is_null` returning `true`.",116,{"i":[{"n":"self"},{"n":"usize"}]}],[8,"NamedRow","","Represents a row of a SQL query, where the values are accessed by name rather than by index.",null,null],[11,"get","","Retrieve and deserialize a single value from the query",117,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[0,"types","diesel","",null,null],[6,"Bool","diesel::types","",null,null],[6,"Tinyint","","",null,null],[6,"SmallInt","","",null,null],[6,"Integer","","",null,null],[6,"BigInt","","",null,null],[6,"Float","","",null,null],[6,"Double","","",null,null],[6,"Numeric","","",null,null],[6,"Text","","",null,null],[6,"Binary","","",null,null],[6,"Date","","",null,null],[6,"Interval","","",null,null],[6,"Time","","",null,null],[6,"Timestamp","","",null,null],[6,"Oid","","",null,null],[6,"Timestamptz","","",null,null],[6,"Array","","",null,null],[6,"Range","","",null,null],[6,"Uuid","","",null,null],[6,"Json","","",null,null],[6,"Jsonb","","",null,null],[6,"Money","","",null,null],[6,"MacAddr","","",null,null],[6,"Inet","","",null,null],[6,"Cidr","","",null,null],[6,"Nullable","","",null,null],[6,"ToSqlOutput","","",null,null],[0,"pg","diesel","Provides types and functions related to working with PostgreSQL",null,null],[3,"Pg","diesel::pg","The PostgreSQL backend",null,null],[3,"PgTypeMetadata","","The [OIDs] for a SQL type",null,null],[12,"oid","","The [OID] of `T`",118,null],[12,"array_oid","","The [OID] of `T[]`",118,null],[3,"PgConnection","","The connection string expected by `PgConnection::establish` should be a PostgreSQL connection string, as documented at https://www.postgresql.org/docs/9.4/static/libpq-connect.html#LIBPQ-CONNSTRING",null,null],[3,"PgMetadataLookup","","Determines the OID of types at runtime",null,null],[3,"DistinctOnClause","","Represents `DISTINCT ON (...)`",null,null],[3,"PgQueryBuilder","","The PostgreSQL query builder",null,null],[3,"TransactionBuilder","","Used to build a transaction, specifying additional details.",null,null],[0,"expression","","PostgreSQL related query builder extensions",null,null],[11,"is_not_distinct_from","diesel::expression_methods","Creates a PostgreSQL `IS NOT DISTINCT FROM` expression.",24,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"isnotdistinctfrom"}}],[11,"is_distinct_from","","Creates a PostgreSQL `IS DISTINCT FROM` expression.",24,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"isdistinctfrom"}}],[11,"at_time_zone","","Creates a PostgreSQL \"AT TIME ZONE\" expression.",25,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"attimezone"}}],[11,"overlaps_with","","Creates a PostgreSQL `&&` expression.",26,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"overlapswith"}}],[11,"contains","","Creates a PostgreSQL `@>` expression.",26,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"contains"}}],[11,"is_contained_by","","Creates a PostgreSQL `<@` expression.",26,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"iscontainedby"}}],[11,"nulls_first","","Specify that nulls should come before other values in this ordering.",27,{"i":[{"n":"self"}],"o":{"n":"nullsfirst"}}],[11,"nulls_last","","Specify that nulls should come after other values in this ordering.",27,{"i":[{"n":"self"}],"o":{"n":"nullslast"}}],[11,"ilike","","Creates a  PostgreSQL `ILIKE` expression",28,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ilike"}}],[11,"not_ilike","","Creates a PostgreSQL `NOT ILIKE` expression",28,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"notilike"}}],[0,"extensions","diesel::pg::expression","This module contains extensions that are added to core types to aid in building expressions. These traits are not exported by default. The are also re-exported in `diesel::dsl`",null,null],[8,"IntervalDsl","diesel::pg::expression::extensions","A DSL added to integers and `f64` to construct PostgreSQL intervals.",null,null],[10,"microseconds","","Returns a PgInterval representing `self` as microseconds",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[10,"days","","Returns a PgInterval representing `self` in days",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[10,"months","","Returns a PgInterval representing `self` in months",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"milliseconds","","Returns a PgInterval representing `self` as milliseconds",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"seconds","","Returns a PgInterval representing `self` as seconds",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"minutes","","Returns a PgInterval representing `self` as minutes",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"hours","","Returns a PgInterval representing `self` as hours",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"weeks","","Returns a PgInterval representing `self` in weeks",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"years","","Returns a PgInterval representing `self` in weeks",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"microsecond","","Identical to `microseconds`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"millisecond","","Identical to `milliseconds`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"second","","Identical to `seconds`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"minute","","Identical to `minutes`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"hour","","Identical to `hours`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"day","","Identical to `days`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"week","","Identical to `weeks`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"month","","Identical to `months`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"year","","Identical to `years`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[0,"dsl","diesel::pg::expression","PostgreSQL specific expression DSL methods.",null,null],[5,"all","diesel::pg::expression::dsl","Creates a PostgreSQL `ALL` expression.",null,{"i":[{"n":"t"}],"o":{"n":"all"}}],[5,"any","","Creates a PostgreSQL `ANY` expression.",null,{"i":[{"n":"t"}],"o":{"n":"any"}}],[5,"array","","Creates an `ARRAY[...]` expression.",null,{"i":[{"n":"t"}],"o":{"n":"arrayliteral"}}],[0,"types","diesel::pg","PostgreSQL specific types",null,null],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[0,"sql_types","diesel::pg::types","PostgreSQL specific SQL types",null,null],[3,"Oid","diesel::pg::types::sql_types","The `OID` SQL type. This is a PostgreSQL specific type.",null,null],[3,"Timestamptz","","The \"timestamp with time zone\" SQL type, which PostgreSQL abbreviates to `timestamptz`.",null,null],[3,"Array","","The `Array` SQL type.",null,null],[3,"Range","","The `Range` SQL type.",null,null],[3,"Record","","The `Record` (a.k.a. tuple) SQL type.",null,null],[3,"Uuid","","The `UUID` SQL type. This type can only be used with `feature = \"uuid\"`",null,null],[3,"Json","","The JSON SQL type.  This type can only be used with `feature = \"serde_json\"`",null,null],[3,"Jsonb","","The `jsonb` SQL type.  This type can only be used with `feature = \"serde_json\"`",null,null],[3,"Money","","The PostgreSQL Money type.",null,null],[3,"MacAddr","","The `MACADDR` SQL type. This type can only be used with `feature = \"network-address\"`",null,null],[3,"Inet","","The `INET` SQL type. This type can only be used with `feature = \"network-address\"`",null,null],[3,"Cidr","","The `CIDR` SQL type. This type can only be used with `feature = \"network-address\"`",null,null],[11,"metadata","diesel::pg","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[6,"SmallSerial","diesel::pg::types::sql_types","Alias for `SmallInt`",null,null],[6,"Serial","","Alias for `Integer`",null,null],[6,"BigSerial","","Alias for `BigInt`",null,null],[11,"fmt","","",121,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",121,{"i":[{"n":"self"}],"o":{"n":"oid"}}],[11,"default","","",121,{"o":{"n":"oid"}}],[11,"fmt","","",122,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",122,{"i":[{"n":"self"}],"o":{"n":"timestamptz"}}],[11,"default","","",122,{"o":{"n":"timestamptz"}}],[11,"fmt","","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",123,{"i":[{"n":"self"}],"o":{"n":"array"}}],[11,"default","","",123,{"o":{"n":"array"}}],[11,"fmt","","",124,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",124,{"i":[{"n":"self"}],"o":{"n":"range"}}],[11,"default","","",124,{"o":{"n":"range"}}],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",125,{"i":[{"n":"self"}],"o":{"n":"record"}}],[11,"default","","",125,{"o":{"n":"record"}}],[11,"fmt","","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",126,{"i":[{"n":"self"}],"o":{"n":"uuid"}}],[11,"default","","",126,{"o":{"n":"uuid"}}],[11,"fmt","","",127,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",127,{"i":[{"n":"self"}],"o":{"n":"json"}}],[11,"default","","",127,{"o":{"n":"json"}}],[11,"fmt","","",128,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",128,{"i":[{"n":"self"}],"o":{"n":"jsonb"}}],[11,"default","","",128,{"o":{"n":"jsonb"}}],[11,"fmt","","",129,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",129,{"i":[{"n":"self"}],"o":{"n":"money"}}],[11,"default","","",129,{"o":{"n":"money"}}],[11,"fmt","","",130,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",130,{"i":[{"n":"self"}],"o":{"n":"macaddr"}}],[11,"default","","",130,{"o":{"n":"macaddr"}}],[11,"fmt","","",131,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",131,{"i":[{"n":"self"}],"o":{"n":"inet"}}],[11,"default","","",131,{"o":{"n":"inet"}}],[11,"fmt","","",132,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",132,{"i":[{"n":"self"}],"o":{"n":"cidr"}}],[11,"default","","",132,{"o":{"n":"cidr"}}],[0,"upsert","diesel::pg","Types and functions related to PG's `ON CONFLICT` clause",null,null],[3,"IncompleteOnConflict","diesel::pg::upsert","A partially constructed `ON CONFLICT` clause.",null,null],[3,"IncompleteDoUpdate","","A partially constructed `ON CONFLICT DO UPDATE` clause.",null,null],[5,"excluded","","Represents `excluded.column` in an `ON CONFLICT DO UPDATE` clause.",null,{"i":[{"n":"t"}],"o":{"n":"excluded"}}],[5,"on_constraint","","Used to specify the constraint name for an upsert statement in the form `ON CONFLICT ON CONSTRAINT`. Note that `constraint_name` must be the name of a unique constraint, not the name of an index.",null,{"i":[{"n":"str"}],"o":{"n":"onconstraint"}}],[11,"on_conflict_do_nothing","diesel::query_builder","Adds `ON CONFLICT DO NOTHING` to the insert statement, without specifying any columns or constraints to restrict the conflict to.",35,{"i":[{"n":"self"}],"o":{"g":["onconflictvalues"],"n":"insertstatement"}}],[11,"on_conflict","","Adds an `ON CONFLICT` to the insert statement, if a conflict occurs for the given unique constraint.",35,{"i":[{"n":"self"},{"n":"target"}],"o":{"g":["conflicttarget"],"n":"incompleteonconflict"}}],[11,"fmt","diesel::pg::upsert","",133,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",133,{"i":[{"n":"self"}],"o":{"n":"incompleteonconflict"}}],[11,"do_nothing","","Creates a query with `ON CONFLICT (target) DO NOTHING`",133,{"i":[{"n":"self"}],"o":{"g":["onconflictvalues"],"n":"insertstatement"}}],[11,"do_update","","Used to create a query in the form `ON CONFLICT (...) DO UPDATE ...`",133,{"i":[{"n":"self"}],"o":{"n":"incompletedoupdate"}}],[11,"fmt","","",134,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",134,{"i":[{"n":"self"}],"o":{"n":"incompletedoupdate"}}],[11,"set","","See [`do_update`] for usage examples.",134,{"i":[{"n":"self"},{"n":"changes"}],"o":{"g":["onconflictvalues"],"n":"insertstatement"}}],[11,"fmt","diesel::pg","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",120,{"i":[{"n":"self"}],"o":{"n":"pg"}}],[11,"hash","","",120,null],[11,"eq","","",120,{"i":[{"n":"self"},{"n":"pg"}],"o":{"n":"bool"}}],[11,"fmt","","",118,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"pgtypemetadata"}}],[11,"hash","","",118,null],[11,"eq","","",118,{"i":[{"n":"self"},{"n":"pgtypemetadata"}],"o":{"n":"bool"}}],[11,"ne","","",118,{"i":[{"n":"self"},{"n":"pgtypemetadata"}],"o":{"n":"bool"}}],[11,"default","","",118,{"o":{"n":"pgtypemetadata"}}],[11,"build","","",118,null],[11,"batch_execute","","",135,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"queryresult"}}],[11,"establish","","",135,{"i":[{"n":"str"}],"o":{"g":["pgconnection"],"n":"connectionresult"}}],[11,"build_transaction","","Build a transaction, specifying additional details such as isolation level",135,{"i":[{"n":"self"}],"o":{"n":"transactionbuilder"}}],[11,"lookup_type","","Determine the type metadata for the given `type_name`",136,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"pgtypemetadata"}}],[11,"fmt","","",137,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",137,{"i":[{"n":"self"}],"o":{"n":"distinctonclause"}}],[11,"walk_ast","","",137,{"i":[{"n":"self"},{"g":["pg"],"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"default","","",138,{"o":{"n":"pgquerybuilder"}}],[11,"new","","Constructs a new query builder with an empty query",138,{"o":{"n":"self"}}],[11,"push_sql","","",138,{"i":[{"n":"self"},{"n":"str"}]}],[11,"push_identifier","","",138,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"queryresult"}}],[11,"push_bind_param","","",138,{"i":[{"n":"self"}]}],[11,"finish","","",138,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"clone","","",139,{"i":[{"n":"self"}],"o":{"n":"transactionbuilder"}}],[11,"read_only","","Makes the transaction `READ ONLY`",139,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"read_write","","Makes the transaction `READ WRITE`",139,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"deferrable","","Makes the transaction `DEFERRABLE`",139,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"not_deferrable","","Makes the transaction `NOT DEFERRABLE`",139,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"read_committed","","Makes the transaction `ISOLATION LEVEL READ COMMITTED`",139,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"repeatable_read","","Makes the transaction `ISOLATION LEVEL REPEATABLE READ`",139,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"serializable","","Makes the transaction `ISOLATION LEVEL SERIALIZABLE`",139,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"run","","Runs the given function inside of the transaction with the parameters given to this builder.",139,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[11,"walk_ast","","",139,{"i":[{"n":"self"},{"g":["pg"],"n":"astpass"}],"o":{"n":"queryresult"}}],[0,"data_types","","Data structures for PG types which have no corresponding Rust type",null,null],[3,"PgDate","diesel::pg::data_types","Dates are represented in Postgres as a 32 bit signed integer representing the number of julian days since January 1st 2000. This struct is a dumb wrapper type, meant only to indicate the integer's meaning.",null,null],[12,"0","","",140,null],[3,"PgInterval","","Intervals in Postgres are separated into 3 parts. A 64 bit integer representing time in microseconds, a 32 bit integer representing number of days, and a 32 bit integer representing number of months. This struct is a dumb wrapper type, meant only to indicate the meaning of these parts.",null,null],[12,"microseconds","","The number of whole microseconds",141,null],[12,"days","","The number of whole days",141,null],[12,"months","","The number of whole months",141,null],[3,"PgTime","","Time is represented in Postgres as a 64 bit signed integer representing the number of microseconds since midnight. This struct is a dumb wrapper type, meant only to indicate the integer's meaning.",null,null],[12,"0","","",142,null],[3,"PgTimestamp","","Timestamps are represented in Postgres as a 64 bit signed integer representing the number of microseconds since January 1st 2000. This struct is a dumb wrapper type, meant only to indicate the integer's meaning.",null,null],[12,"0","","",143,null],[3,"PgMoney","","Money is represented in Postgres as a 64 bit signed integer.  This struct is a dumb wrapper type, meant only to indicate the integer's meaning.  The fractional precision of the value is determined by the `lc_monetary` setting of the database. This struct is re-exported as `Cents` as a convenient and conventional expression of a typical unit of 1/100th of currency. For other names or precisions, users might consider a differently named `use` of the `PgMoney` struct.",null,null],[12,"0","","",144,null],[3,"Cents","","Money is represented in Postgres as a 64 bit signed integer.  This struct is a dumb wrapper type, meant only to indicate the integer's meaning.  The fractional precision of the value is determined by the `lc_monetary` setting of the database. This struct is re-exported as `Cents` as a convenient and conventional expression of a typical unit of 1/100th of currency. For other names or precisions, users might consider a differently named `use` of the `PgMoney` struct.",null,null],[12,"0","","",144,null],[4,"PgNumeric","","Represents a NUMERIC value, closely mirroring the PG wire protocol representation",null,null],[13,"Positive","","A positive number",145,null],[12,"weight","diesel::pg::data_types::PgNumeric","How many digits come before the decimal point?",145,null],[12,"scale","","How many significant digits are there?",145,null],[12,"digits","","The digits in this number, stored in base 10000",145,null],[13,"Negative","diesel::pg::data_types","A negative number",145,null],[12,"weight","diesel::pg::data_types::PgNumeric","How many digits come before the decimal point?",145,null],[12,"scale","","How many significant digits are there?",145,null],[12,"digits","","The digits in this number, stored in base 10000",145,null],[13,"NaN","diesel::pg::data_types","Not a number",145,null],[0,"dsl","diesel","Includes various helper types and bare functions which are named too generically to be included in prelude, but are often used when using Diesel.",null,null],[3,"now","diesel::dsl","Represents the SQL `CURRENT_TIMESTAMP` constant. This is equivalent to the `NOW()` function on backends that support it.",null,null],[5,"count","","Creates a SQL `COUNT` expression",null,{"i":[{"n":"expr"}],"o":{"n":"count"}}],[5,"count_star","","Creates a SQL `COUNT(*)` expression",null,{"o":{"n":"countstar"}}],[5,"exists","","Creates a SQL `EXISTS` expression.",null,{"i":[{"n":"t"}],"o":{"n":"exists"}}],[5,"sum","","Represents a SQL `SUM` function. This function can only take types which are Foldable.",null,{"i":[{"n":"expr"}],"o":{"n":"sum"}}],[5,"avg","","Represents a SQL `AVG` function. This function can only take types which are Foldable.",null,{"i":[{"n":"expr"}],"o":{"n":"avg"}}],[5,"max","","Represents a SQL `MAX` function. This function can only take types which are ordered.",null,{"i":[{"n":"expr"}],"o":{"n":"max"}}],[5,"min","","Represents a SQL `MIN` function. This function can only take types which are ordered.",null,{"i":[{"n":"expr"}],"o":{"n":"min"}}],[5,"date","","Represents the SQL `DATE` function. The argument should be a Timestamp expression, and the return value will be an expression of type Date. # Examples `ignore # #[macro_use] extern crate diesel; # extern crate chrono; # include!(\\\"../../doctest_setup.rs\\\"); # use diesel::dsl::*; # # fn main() { # let connection = establish_connection(); let today: chrono::NaiveDate = diesel::select(date(now)).first(&connection).unwrap(); # }`",null,{"i":[{"n":"expr"}],"o":{"n":"date"}}],[5,"not","","Creates a SQL `NOT` expression",null,{"i":[{"n":"t"}],"o":{"n":"not"}}],[5,"sql","","Use literal SQL in the query builder",null,{"i":[{"n":"str"}],"o":{"n":"sqlliteral"}}],[5,"delete","","Creates a `DELETE` statement.",null,{"i":[{"n":"t"}],"o":{"n":"deletestatement"}}],[5,"insert_into","","Creates an `INSERT` statement for the target table.",null,{"i":[{"n":"t"}],"o":{"g":["insert"],"n":"incompleteinsertstatement"}}],[5,"insert_or_ignore_into","","Creates an `INSERT [OR] IGNORE` statement.",null,{"i":[{"n":"t"}],"o":{"g":["insertorignore"],"n":"incompleteinsertstatement"}}],[5,"replace_into","","Creates a `REPLACE` statement.",null,{"i":[{"n":"t"}],"o":{"g":["replace"],"n":"incompleteinsertstatement"}}],[5,"select","","Creates a bare select statement, with no from clause. Primarily used for testing diesel itself, but likely useful for third party crates as well. The given expressions must be selectable from anywhere.",null,{"i":[{"n":"t"}],"o":{"g":["selectstatement"],"n":"select"}}],[5,"sql_query","","Construct a full SQL query using raw SQL.",null,{"i":[{"n":"t"}],"o":{"n":"sqlquery"}}],[5,"update","","Creates an `UPDATE` statement.",null,{"i":[{"n":"t"}],"o":{"n":"updatestatement"}}],[6,"SqlTypeOf","","The SQL type of an expression",null,null],[6,"AsExpr","","The type of `Item` when converted to an expression with the same type as `TargetExpr`",null,null],[6,"AsExprOf","","The type of `Item` when converted to an expression of `Type`",null,null],[6,"Eq","","The return type of `lhs.eq(rhs)`",null,null],[6,"NotEq","","The return type of `lhs.ne(rhs)`",null,null],[6,"EqAny","","The return type of `lhs.eq_any(rhs)`",null,null],[6,"NeAny","","The return type of `lhs.ne_any(rhs)`",null,null],[6,"IsNull","","The return type of `expr.is_null()`",null,null],[6,"IsNotNull","","The return type of `expr.is_not_null()`",null,null],[6,"Gt","","The return type of `lhs.gt(rhs)`",null,null],[6,"GtEq","","The return type of `lhs.ge(rhs)`",null,null],[6,"Lt","","The return type of `lhs.lt(rhs)`",null,null],[6,"LtEq","","The return type of `lhs.le(rhs)`",null,null],[6,"Between","","The return type of `lhs.between(lower, upper)`",null,null],[6,"NotBetween","","The return type of `lhs.not_between(lower, upper)`",null,null],[6,"Desc","","The return type of `expr.desc()`",null,null],[6,"Asc","","The return type of `expr.asc()`",null,null],[6,"Nullable","","The return type of `expr.nullable()`",null,null],[6,"And","","The return type of `lhs.and(rhs)`",null,null],[6,"Or","","The return type of `lhs.or(rhs)`",null,null],[6,"Escape","","The return type of `lhs.escape('x')`",null,null],[6,"Like","","The return type of `lhs.like(rhs)`",null,null],[6,"NotLike","","The return type of `lhs.not_like(rhs)`",null,null],[6,"not","","The return type of `not(expr)`",null,null],[6,"Not","","The return type of `not(expr)`",null,null],[6,"max","","The return type of `max(expr)`",null,null],[6,"min","","The return type of `min(expr)`",null,null],[6,"sum","","The return type of `sum(expr)`",null,null],[6,"avg","","The return type of `avg(expr)`",null,null],[6,"Select","","Represents the return type of `.select(selection)`",null,null],[6,"Filter","","Represents the return type of `.filter(predicate)`",null,null],[6,"FindBy","","Represents the return type of `.filter(lhs.eq(rhs))`",null,null],[6,"ForUpdate","","Represents the return type of `.for_update()`",null,null],[6,"ForNoKeyUpdate","","Represents the return type of `.for_no_key_update()`",null,null],[6,"ForShare","","Represents the return type of `.for_share()`",null,null],[6,"ForKeyShare","","Represents the return type of `.for_key_share()`",null,null],[6,"SkipLocked","","Represents the return type of `.skip_locked()`",null,null],[6,"NoWait","","Represents the return type of `.no_wait()`",null,null],[6,"Find","","Represents the return type of `.find(pk)`",null,null],[6,"OrFilter","","Represents the return type of `.or_filter(predicate)`",null,null],[6,"Order","","Represents the return type of `.order(ordering)`",null,null],[6,"ThenOrderBy","","Represents the return type of `.then_order_by(ordering)`",null,null],[6,"Limit","","Represents the return type of `.limit()`",null,null],[6,"Offset","","Represents the return type of `.offset()`",null,null],[6,"InnerJoin","","Represents the return type of `.inner_join(rhs)`",null,null],[6,"LeftJoin","","Represents the return type of `.left_join(rhs)`",null,null],[6,"Update","","Represents the return type of `update(lhs).set(rhs)`",null,null],[6,"IntoBoxed","","Represents the return type of `.into_boxed::<'a, DB>()`",null,null],[6,"Distinct","","Represents the return type of `.distinct()`",null,null],[6,"DistinctOn","","Represents the return type of `.distinct_on(expr)`",null,null],[6,"SingleValue","","Represents the return type of `.single_value()`",null,null],[6,"count","","The return type of `count(expr)`",null,null],[6,"count_star","","The return type of `count_star)(`",null,null],[6,"date","","The return type of `date(expr)`",null,null],[0,"helper_types","diesel","Provide helper types for concisely writing the return type of functions. As with iterators, it is unfortunately difficult to return a partially constructed query without exposing the exact implementation of the function. Without higher kinded types, these various DSLs can't be combined into a single trait for boxing purposes.",null,null],[6,"SqlTypeOf","diesel::helper_types","The SQL type of an expression",null,null],[6,"AsExpr","","The type of `Item` when converted to an expression with the same type as `TargetExpr`",null,null],[6,"AsExprOf","","The type of `Item` when converted to an expression of `Type`",null,null],[6,"Eq","","The return type of `lhs.eq(rhs)`",null,null],[6,"NotEq","","The return type of `lhs.ne(rhs)`",null,null],[6,"EqAny","","The return type of `lhs.eq_any(rhs)`",null,null],[6,"NeAny","","The return type of `lhs.ne_any(rhs)`",null,null],[6,"IsNull","","The return type of `expr.is_null()`",null,null],[6,"IsNotNull","","The return type of `expr.is_not_null()`",null,null],[6,"Gt","","The return type of `lhs.gt(rhs)`",null,null],[6,"GtEq","","The return type of `lhs.ge(rhs)`",null,null],[6,"Lt","","The return type of `lhs.lt(rhs)`",null,null],[6,"LtEq","","The return type of `lhs.le(rhs)`",null,null],[6,"Between","","The return type of `lhs.between(lower, upper)`",null,null],[6,"NotBetween","","The return type of `lhs.not_between(lower, upper)`",null,null],[6,"Desc","","The return type of `expr.desc()`",null,null],[6,"Asc","","The return type of `expr.asc()`",null,null],[6,"Nullable","","The return type of `expr.nullable()`",null,null],[6,"And","","The return type of `lhs.and(rhs)`",null,null],[6,"Or","","The return type of `lhs.or(rhs)`",null,null],[6,"Escape","","The return type of `lhs.escape('x')`",null,null],[6,"Like","","The return type of `lhs.like(rhs)`",null,null],[6,"NotLike","","The return type of `lhs.not_like(rhs)`",null,null],[6,"not","","The return type of `not(expr)`",null,null],[6,"Not","","The return type of `not(expr)`",null,null],[6,"max","","The return type of `max(expr)`",null,null],[6,"min","","The return type of `min(expr)`",null,null],[6,"sum","","The return type of `sum(expr)`",null,null],[6,"avg","","The return type of `avg(expr)`",null,null],[6,"Select","","Represents the return type of `.select(selection)`",null,null],[6,"Filter","","Represents the return type of `.filter(predicate)`",null,null],[6,"FindBy","","Represents the return type of `.filter(lhs.eq(rhs))`",null,null],[6,"ForUpdate","","Represents the return type of `.for_update()`",null,null],[6,"ForNoKeyUpdate","","Represents the return type of `.for_no_key_update()`",null,null],[6,"ForShare","","Represents the return type of `.for_share()`",null,null],[6,"ForKeyShare","","Represents the return type of `.for_key_share()`",null,null],[6,"SkipLocked","","Represents the return type of `.skip_locked()`",null,null],[6,"NoWait","","Represents the return type of `.no_wait()`",null,null],[6,"Find","","Represents the return type of `.find(pk)`",null,null],[6,"OrFilter","","Represents the return type of `.or_filter(predicate)`",null,null],[6,"Order","","Represents the return type of `.order(ordering)`",null,null],[6,"ThenOrderBy","","Represents the return type of `.then_order_by(ordering)`",null,null],[6,"Limit","","Represents the return type of `.limit()`",null,null],[6,"Offset","","Represents the return type of `.offset()`",null,null],[6,"InnerJoin","","Represents the return type of `.inner_join(rhs)`",null,null],[6,"LeftJoin","","Represents the return type of `.left_join(rhs)`",null,null],[6,"Update","","Represents the return type of `update(lhs).set(rhs)`",null,null],[6,"IntoBoxed","","Represents the return type of `.into_boxed::<'a, DB>()`",null,null],[6,"Distinct","","Represents the return type of `.distinct()`",null,null],[6,"DistinctOn","","Represents the return type of `.distinct_on(expr)`",null,null],[6,"SingleValue","","Represents the return type of `.single_value()`",null,null],[0,"prelude","diesel","Re-exports important traits and types. Meant to be glob imported when using Diesel.",null,null],[3,"PgConnection","diesel::prelude","The connection string expected by `PgConnection::establish` should be a PostgreSQL connection string, as documented at https://www.postgresql.org/docs/9.4/static/libpq-connect.html#LIBPQ-CONNSTRING",null,null],[8,"GroupedBy","","The `grouped_by` function groups records by their parent.",null,null],[10,"grouped_by","","See the trait documentation.",1,null],[8,"Insertable","","Represents that a structure can be used to insert a new row into the database. This is automatically implemented for `&[T]` and `&Vec<T>` for inserting more than one record.",null,null],[16,"Values","","The `VALUES` clause to insert these records",146,null],[10,"values","","Construct `Self::Values`",146,null],[11,"insert_into","","Insert `self` into a given table.",146,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"insertstatement"}}],[8,"BelongingToDsl","","Constructs a query that finds record(s) based on directional association with other record(s).",null,null],[16,"Output","","The query returned by `belonging_to`",63,null],[10,"belonging_to","","Get the record(s) belonging to record(s) `other`",63,null],[8,"JoinOnDsl","","Specify the `ON` clause for a join statement. This will override any implicit `ON` clause that would come from [`joinable!`]",null,null],[11,"on","diesel::query_dsl","See the trait documentation.",64,{"i":[{"n":"self"},{"n":"on"}],"o":{"n":"onclausewrapper"}}],[8,"SaveChangesDsl","diesel::prelude","Sugar for types which implement both `AsChangeset` and `Identifiable`",null,null],[11,"save_changes","diesel::query_dsl","See the trait documentation.",65,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[8,"JoinTo","diesel::prelude","Indicates that two tables can be joined without an explicit `ON` clause.",null,null],[14,"table","diesel","Specifies that a table exists, and what columns it has. This will create a new public module, with the same name, as the name of the table. In this module, you'll find a unit struct named `table`, and a unit struct with the names of each of the columns. In the definition, you can also specify an additional set of columns which exist, but should not be selected by default (for example, for things like full text search)",null,null],[14,"joinable","","Allow two tables to be referenced in a join query without providing an explicit `ON` clause.",null,null],[14,"allow_tables_to_appear_in_same_query","","Allow two or more tables which are otherwise unrelated to be used together in a query.",null,null],[14,"not_none","","Gets the value out of an option, or returns an error.",null,null],[14,"impl_query_id","","Provides a standard implementation of `QueryId`. Apps should not need to concern themselves with this macro.",null,null],[14,"operator_allowed","","Implements the Rust operator for a given type. If you create a new SQL function, which returns a type that you'd like to use an operator on, you should invoke this macro. Unfortunately, Rust disallows us from automatically implementing `Add` and other traits from `std::ops`, under its orphan rules.",null,null],[14,"numeric_expr","","Indicates that an expression allows all numeric operators. If you create new SQL functions that return a numeric type, you should invoke this macro that type. Unfortunately, Rust disallows us from automatically implementing `Add` for types which implement `Expression`, under its orphan rules.",null,null],[14,"__diesel_for_each_tuple","","",null,null],[14,"sql_function","","Declare a sql function for use in your code.",null,null],[14,"no_arg_sql_function","","Declare a 0 argument SQL function for use in your code. This will generate a unit struct, which is an expression representing calling this function. See `now` for example output. `now` was generated using:",null,null],[14,"diesel_infix_operator","","Useful for libraries adding support for new SQL types. Apps should never need to call this.",null,null],[14,"diesel_postfix_operator","","Useful for libraries adding support for new SQL types. Apps should never need to call this.",null,null],[14,"diesel_prefix_operator","","Useful for libraries adding support for new SQL types. Apps should never need to call this.",null,null],[11,"fmt","diesel::dsl","",147,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",147,{"i":[{"n":"self"}],"o":{"n":"now"}}],[11,"walk_ast","","",147,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"add","","",147,null],[11,"sub","","",147,null],[11,"as_expression","","",147,null],[11,"as_expression","","",147,null],[11,"and","diesel::expression_methods","Creates a SQL `AND` expression",19,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"and"}}],[11,"or","","Creates a SQL `OR` expression",19,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["or"],"n":"grouped"}}],[11,"escape","","See the trait documentation.",20,{"i":[{"n":"self"},{"n":"char"}],"o":{"g":["asexprof"],"n":"escape"}}],[11,"eq","","Creates a SQL `=` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"eq"}}],[11,"ne","","Creates a SQL `!=` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"noteq"}}],[11,"eq_any","","Creates a SQL `IN` statement.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"in"}}],[11,"ne_any","","Deprecated alias for `ne_all`",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"notin"}}],[11,"ne_all","","Creates a SQL `NOT IN` statement.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"notin"}}],[11,"is_null","","Creates a SQL `IS NULL` expression.",21,{"i":[{"n":"self"}],"o":{"n":"isnull"}}],[11,"is_not_null","","Creates a SQL `IS NOT NULL` expression.",21,{"i":[{"n":"self"}],"o":{"n":"isnotnull"}}],[11,"gt","","Creates a SQL `>` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"gt"}}],[11,"ge","","Creates a SQL `>=` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"gteq"}}],[11,"lt","","Creates a SQL `<` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"lt"}}],[11,"le","","Creates a SQL `<=` expression.",21,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"lteq"}}],[11,"between","","Creates a SQL `BETWEEN` expression using the given lower and upper bounds.",21,{"i":[{"n":"self"},{"n":"t"},{"n":"u"}],"o":{"g":["and"],"n":"between"}}],[11,"not_between","","Creates a SQL `NOT BETWEEN` expression using the given lower and upper bounds.",21,{"i":[{"n":"self"},{"n":"t"},{"n":"u"}],"o":{"g":["and"],"n":"notbetween"}}],[11,"desc","","Creates a SQL `DESC` expression, representing this expression in descending order.",21,{"i":[{"n":"self"}],"o":{"n":"desc"}}],[11,"asc","","Creates a SQL `ASC` expression, representing this expression in ascending order.",21,{"i":[{"n":"self"}],"o":{"n":"asc"}}],[11,"nullable","","Converts this potentially non-null expression into one which is treated as nullable. This method has no impact on the generated SQL, and is only used to allow certain comparisons that would otherwise fail to compile.",22,{"i":[{"n":"self"}],"o":{"n":"nullable"}}],[11,"concat","","Concatenates two strings using the `||` operator.",23,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"concat"}}],[11,"like","","Returns a SQL `LIKE` expression",23,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"like"}}],[11,"not_like","","Returns a SQL `NOT LIKE` expression",23,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"notlike"}}],[11,"insert_into","diesel::prelude","Insert `self` into a given table.",146,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"insertstatement"}}],[18,"HAS_STATIC_QUERY_ID","diesel::query_builder","Can the SQL generated by `Self` be uniquely identified by its type?",38,null],[11,"query_id","","Returns the type id of `Self::QueryId` if `Self::HAS_STATIC_QUERY_ID`. Returns `None` otherwise.",38,{"o":{"g":["typeid"],"n":"option"}}],[11,"on","diesel::query_dsl","See the trait documentation.",64,{"i":[{"n":"self"},{"n":"on"}],"o":{"n":"onclausewrapper"}}],[11,"save_changes","","See the trait documentation.",65,{"i":[{"n":"self"},{"n":"conn"}],"o":{"n":"queryresult"}}],[11,"drop","diesel::r2d2","",79,null],[11,"handle_error","","",148,null],[11,"handle_error","","",149,null],[11,"fmt","","",150,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"deref_mut","","",79,null],[11,"clone","","",151,{"i":[{"n":"self"}],"o":{"n":"pool"}}],[11,"clone","","",152,{"i":[{"n":"self"}],"o":{"n":"nopconnectioncustomizer"}}],[11,"clone","","",148,{"i":[{"n":"self"}],"o":{"n":"noperrorhandler"}}],[11,"clone","","",149,{"i":[{"n":"self"}],"o":{"n":"loggingerrorhandler"}}],[11,"description","","",150,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"default","","",153,{"o":{"n":"builder"}}],[11,"deref","","",79,null],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",151,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",149,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",150,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",148,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",153,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",152,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"new","","Creates a new connection pool with a default configuration.",151,{"i":[{"n":"m"}],"o":{"g":["pool","error"],"n":"result"}}],[11,"builder","","Returns a builder type to configure a new pool.",151,{"o":{"n":"builder"}}],[11,"get","","Retrieves a connection from the pool.",151,{"i":[{"n":"self"}],"o":{"g":["pooledconnection","error"],"n":"result"}}],[11,"try_get","","Attempts to retrieve a connection from the pool if there is one available.",151,{"i":[{"n":"self"}],"o":{"g":["pooledconnection"],"n":"option"}}],[11,"state","","Returns information about the current state of the pool.",151,{"i":[{"n":"self"}],"o":{"n":"state"}}],[11,"max_size","","Returns the configured maximum pool size.",151,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"min_idle","","Returns the configured mimimum idle connection count.",151,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"test_on_check_out","","Returns if the pool is configured to test connections on check out.",151,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"max_lifetime","","Returns the configured maximum connection lifetime.",151,{"i":[{"n":"self"}],"o":{"g":["duration"],"n":"option"}}],[11,"idle_timeout","","Returns the configured idle connection timeout.",151,{"i":[{"n":"self"}],"o":{"g":["duration"],"n":"option"}}],[11,"connection_timeout","","Returns the configured connection timeout.",151,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"new","","Constructs a new `Builder`.",153,{"o":{"n":"builder"}}],[11,"max_size","","Sets the maximum number of connections managed by the pool.",153,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"builder"}}],[11,"min_idle","","Sets the minimum idle connection count maintained by the pool.",153,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"builder"}}],[11,"thread_pool","","Sets the thread pool used for asynchronous operations such as connection creation.",153,{"i":[{"n":"self"},{"g":["scheduledthreadpool"],"n":"arc"}],"o":{"n":"builder"}}],[11,"test_on_check_out","","If true, the health of a connection will be verified via a call to `ConnectionManager::is_valid` before it is checked out of the pool.",153,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"builder"}}],[11,"max_lifetime","","Sets the maximum lifetime of connections in the pool.",153,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"builder"}}],[11,"idle_timeout","","Sets the idle timeout used by the pool.",153,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"builder"}}],[11,"connection_timeout","","Sets the connection timeout used by the pool.",153,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"builder"}}],[11,"error_handler","","Sets the handler for errors reported in the pool.",153,{"i":[{"n":"self"},{"g":["handleerror"],"n":"box"}],"o":{"n":"builder"}}],[11,"connection_customizer","","Sets the connection customizer used by the pool.",153,{"i":[{"n":"self"},{"g":["customizeconnection"],"n":"box"}],"o":{"n":"builder"}}],[11,"build","","Consumes the builder, returning a new, initialized pool.",153,{"i":[{"n":"self"},{"n":"m"}],"o":{"g":["pool","error"],"n":"result"}}],[11,"build_unchecked","","Consumes the builder, returning a new pool.",153,{"i":[{"n":"self"},{"n":"m"}],"o":{"n":"pool"}}],[11,"metadata","diesel::pg","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"metadata","","",120,{"i":[{"n":"pgmetadatalookup"}],"o":{"n":"pgtypemetadata"}}],[11,"milliseconds","diesel::pg::expression::extensions","Returns a PgInterval representing `self` as milliseconds",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"seconds","","Returns a PgInterval representing `self` as seconds",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"minutes","","Returns a PgInterval representing `self` as minutes",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"hours","","Returns a PgInterval representing `self` as hours",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"weeks","","Returns a PgInterval representing `self` in weeks",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"years","","Returns a PgInterval representing `self` in weeks",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"microsecond","","Identical to `microseconds`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"millisecond","","Identical to `milliseconds`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"second","","Identical to `seconds`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"minute","","Identical to `minutes`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"hour","","Identical to `hours`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"day","","Identical to `days`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"week","","Identical to `weeks`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"month","","Identical to `months`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"year","","Identical to `years`",119,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"build_from_row","diesel::pg::data_types","",143,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"build","","",143,null],[11,"to_sql","","",143,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"as_expression","","",143,null],[11,"as_expression","","",143,null],[11,"to_sql","","",143,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"as_expression","","",143,null],[11,"as_expression","","",143,null],[11,"build_from_row","","",140,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"build","","",140,null],[11,"to_sql","","",140,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"as_expression","","",140,null],[11,"as_expression","","",140,null],[11,"build_from_row","","",142,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"build","","",142,null],[11,"to_sql","","",142,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"as_expression","","",142,null],[11,"as_expression","","",142,null],[11,"build_from_row","","",141,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"build","","",141,null],[11,"to_sql","","",141,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"as_expression","","",141,null],[11,"as_expression","","",141,null],[11,"fmt","","",143,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",143,{"i":[{"n":"self"}],"o":{"n":"pgtimestamp"}}],[11,"eq","","",143,{"i":[{"n":"self"},{"n":"pgtimestamp"}],"o":{"n":"bool"}}],[11,"ne","","",143,{"i":[{"n":"self"},{"n":"pgtimestamp"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",143,{"i":[{"n":"self"},{"n":"pgtimestamp"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",143,{"i":[{"n":"self"},{"n":"pgtimestamp"}],"o":{"n":"bool"}}],[11,"le","","",143,{"i":[{"n":"self"},{"n":"pgtimestamp"}],"o":{"n":"bool"}}],[11,"gt","","",143,{"i":[{"n":"self"},{"n":"pgtimestamp"}],"o":{"n":"bool"}}],[11,"ge","","",143,{"i":[{"n":"self"},{"n":"pgtimestamp"}],"o":{"n":"bool"}}],[11,"cmp","","",143,{"i":[{"n":"self"},{"n":"pgtimestamp"}],"o":{"n":"ordering"}}],[11,"fmt","","",140,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",140,{"i":[{"n":"self"}],"o":{"n":"pgdate"}}],[11,"eq","","",140,{"i":[{"n":"self"},{"n":"pgdate"}],"o":{"n":"bool"}}],[11,"ne","","",140,{"i":[{"n":"self"},{"n":"pgdate"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",140,{"i":[{"n":"self"},{"n":"pgdate"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",140,{"i":[{"n":"self"},{"n":"pgdate"}],"o":{"n":"bool"}}],[11,"le","","",140,{"i":[{"n":"self"},{"n":"pgdate"}],"o":{"n":"bool"}}],[11,"gt","","",140,{"i":[{"n":"self"},{"n":"pgdate"}],"o":{"n":"bool"}}],[11,"ge","","",140,{"i":[{"n":"self"},{"n":"pgdate"}],"o":{"n":"bool"}}],[11,"cmp","","",140,{"i":[{"n":"self"},{"n":"pgdate"}],"o":{"n":"ordering"}}],[11,"fmt","","",142,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",142,{"i":[{"n":"self"}],"o":{"n":"pgtime"}}],[11,"eq","","",142,{"i":[{"n":"self"},{"n":"pgtime"}],"o":{"n":"bool"}}],[11,"ne","","",142,{"i":[{"n":"self"},{"n":"pgtime"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",142,{"i":[{"n":"self"},{"n":"pgtime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",142,{"i":[{"n":"self"},{"n":"pgtime"}],"o":{"n":"bool"}}],[11,"le","","",142,{"i":[{"n":"self"},{"n":"pgtime"}],"o":{"n":"bool"}}],[11,"gt","","",142,{"i":[{"n":"self"},{"n":"pgtime"}],"o":{"n":"bool"}}],[11,"ge","","",142,{"i":[{"n":"self"},{"n":"pgtime"}],"o":{"n":"bool"}}],[11,"cmp","","",142,{"i":[{"n":"self"},{"n":"pgtime"}],"o":{"n":"ordering"}}],[11,"fmt","","",141,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",141,{"i":[{"n":"self"}],"o":{"n":"pginterval"}}],[11,"eq","","",141,{"i":[{"n":"self"},{"n":"pginterval"}],"o":{"n":"bool"}}],[11,"ne","","",141,{"i":[{"n":"self"},{"n":"pginterval"}],"o":{"n":"bool"}}],[11,"new","","Constructs a new `PgInterval`",141,{"i":[{"n":"i64"},{"n":"i32"},{"n":"i32"}],"o":{"n":"self"}}],[11,"from_microseconds","","Equivalent to `new(microseconds, 0, 0)`",141,{"i":[{"n":"i64"}],"o":{"n":"self"}}],[11,"from_days","","Equivalent to `new(0, days, 0)`",141,{"i":[{"n":"i32"}],"o":{"n":"self"}}],[11,"from_months","","Equivalent to `new(0, 0, months)`",141,{"i":[{"n":"i32"}],"o":{"n":"self"}}],[11,"to_sql","","",143,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"from_sql","","",143,{"i":[{"n":"option"}],"o":{"n":"result"}}],[11,"to_sql","","",143,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"from_sql","","",143,{"i":[{"n":"option"}],"o":{"n":"result"}}],[11,"to_sql","","",140,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"from_sql","","",140,{"i":[{"n":"option"}],"o":{"n":"result"}}],[11,"to_sql","","",142,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"from_sql","","",142,{"i":[{"n":"option"}],"o":{"n":"result"}}],[11,"to_sql","","",141,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"from_sql","","",141,{"i":[{"n":"option"}],"o":{"n":"result"}}],[11,"add","","",141,null],[11,"build_from_row","","",145,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"build","","",145,null],[11,"to_sql","","",145,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"as_expression","","",145,null],[11,"as_expression","","",145,null],[11,"fmt","","",145,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",145,{"i":[{"n":"self"}],"o":{"n":"pgnumeric"}}],[11,"eq","","",145,{"i":[{"n":"self"},{"n":"pgnumeric"}],"o":{"n":"bool"}}],[11,"ne","","",145,{"i":[{"n":"self"},{"n":"pgnumeric"}],"o":{"n":"bool"}}],[11,"from_sql","","",145,{"i":[{"n":"option"}],"o":{"n":"result"}}],[11,"to_sql","","",145,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"build_from_row","","",144,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"build","","",144,null],[11,"to_sql","","",144,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"as_expression","","",144,null],[11,"as_expression","","",144,null],[11,"fmt","","",144,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",144,{"i":[{"n":"self"}],"o":{"n":"pgmoney"}}],[11,"eq","","",144,{"i":[{"n":"self"},{"n":"pgmoney"}],"o":{"n":"bool"}}],[11,"ne","","",144,{"i":[{"n":"self"},{"n":"pgmoney"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",144,{"i":[{"n":"self"},{"n":"pgmoney"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",144,{"i":[{"n":"self"},{"n":"pgmoney"}],"o":{"n":"bool"}}],[11,"le","","",144,{"i":[{"n":"self"},{"n":"pgmoney"}],"o":{"n":"bool"}}],[11,"gt","","",144,{"i":[{"n":"self"},{"n":"pgmoney"}],"o":{"n":"bool"}}],[11,"ge","","",144,{"i":[{"n":"self"},{"n":"pgmoney"}],"o":{"n":"bool"}}],[11,"cmp","","",144,{"i":[{"n":"self"},{"n":"pgmoney"}],"o":{"n":"ordering"}}],[11,"from_sql","","",144,{"i":[{"n":"option"}],"o":{"n":"result"}}],[11,"to_sql","","",144,{"i":[{"n":"self"},{"n":"output"}],"o":{"n":"result"}}],[11,"add","","Panics",144,null],[11,"add_assign","","Panics",144,{"i":[{"n":"self"},{"n":"pgmoney"}]}],[11,"sub","","Panics",144,null],[11,"sub_assign","","Panics",144,{"i":[{"n":"self"},{"n":"pgmoney"}]}]],"paths":[[8,"BelongsTo"],[8,"GroupedBy"],[8,"HasTable"],[8,"Identifiable"],[8,"Backend"],[3,"AnsiTransactionManager"],[8,"TransactionManager"],[8,"SimpleConnection"],[8,"Connection"],[8,"Queryable"],[8,"QueryableByName"],[8,"FromSql"],[8,"FromSqlRow"],[3,"SqlLiteral"],[3,"UncheckedBind"],[8,"Expression"],[8,"AsExpression"],[8,"IntoSql"],[8,"AsExpressionList"],[8,"BoolExpressionMethods"],[8,"EscapeExpressionMethods"],[8,"ExpressionMethods"],[8,"NullableExpressionMethods"],[8,"TextExpressionMethods"],[8,"PgExpressionMethods"],[8,"PgTimestampExpressionMethods"],[8,"PgArrayExpressionMethods"],[8,"PgSortExpressionMethods"],[8,"PgTextExpressionMethods"],[3,"AstPass"],[3,"RawBytesBindCollector"],[8,"BindCollector"],[3,"DebugQuery"],[3,"DeleteStatement"],[3,"IncompleteInsertStatement"],[3,"InsertStatement"],[3,"SqlQuery"],[3,"UpdateStatement"],[8,"QueryId"],[8,"AsChangeset"],[8,"IntoUpdateTarget"],[8,"QueryBuilder"],[8,"Query"],[8,"SelectQuery"],[8,"QueryFragment"],[8,"AsQuery"],[8,"BoxedDsl"],[8,"DistinctDsl"],[8,"DistinctOnDsl"],[8,"FilterDsl"],[8,"FindDsl"],[8,"OrFilterDsl"],[8,"LimitDsl"],[8,"ExecuteDsl"],[8,"LoadQuery"],[8,"ForUpdateDsl"],[8,"LockingDsl"],[8,"ModifyLockDsl"],[8,"OffsetDsl"],[8,"OrderDsl"],[8,"ThenOrderDsl"],[8,"SelectDsl"],[8,"SingleValueDsl"],[8,"BelongingToDsl"],[8,"JoinOnDsl"],[8,"SaveChangesDsl"],[8,"QueryDsl"],[8,"RunQueryDsl"],[8,"Plus"],[8,"QuerySource"],[8,"Column"],[8,"Table"],[8,"AppearsInFromClause"],[8,"ManageConnection"],[8,"HandleError"],[8,"CustomizeConnection"],[3,"State"],[4,"Error"],[3,"ConnectionManager"],[3,"PooledConnection"],[4,"Error"],[4,"DatabaseErrorKind"],[4,"ConnectionError"],[8,"DatabaseErrorInformation"],[8,"OptionalExtension"],[6,"QueryResult"],[3,"UnexpectedNullError"],[4,"IsNull"],[8,"ToSql"],[3,"Output"],[8,"Add"],[8,"Sub"],[8,"Mul"],[8,"Div"],[8,"Foldable"],[8,"HasSqlType"],[8,"TypeMetadata"],[8,"IntoNullable"],[3,"Bool"],[3,"Tinyint"],[3,"SmallInt"],[3,"Integer"],[3,"BigInt"],[3,"Float"],[3,"Double"],[3,"Numeric"],[3,"Text"],[3,"Binary"],[3,"Date"],[3,"Interval"],[3,"Time"],[3,"Timestamp"],[3,"Nullable"],[4,"MigrationError"],[4,"RunMigrationsError"],[8,"Migration"],[8,"Row"],[8,"NamedRow"],[3,"PgTypeMetadata"],[8,"IntervalDsl"],[3,"Pg"],[3,"Oid"],[3,"Timestamptz"],[3,"Array"],[3,"Range"],[3,"Record"],[3,"Uuid"],[3,"Json"],[3,"Jsonb"],[3,"Money"],[3,"MacAddr"],[3,"Inet"],[3,"Cidr"],[3,"IncompleteOnConflict"],[3,"IncompleteDoUpdate"],[3,"PgConnection"],[3,"PgMetadataLookup"],[3,"DistinctOnClause"],[3,"PgQueryBuilder"],[3,"TransactionBuilder"],[3,"PgDate"],[3,"PgInterval"],[3,"PgTime"],[3,"PgTimestamp"],[3,"Cents"],[4,"PgNumeric"],[8,"Insertable"],[3,"now"],[3,"NopErrorHandler"],[3,"LoggingErrorHandler"],[3,"Error"],[3,"Pool"],[3,"NopConnectionCustomizer"],[3,"Builder"]]};
searchIndex["diesel_derives"] = {"doc":"","items":[[5,"derive_as_changeset","diesel_derives","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_as_expression","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_associations","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_diesel_numeric_ops","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_from_sql_row","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_identifiable","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_insertable","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_query_id","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_queryable","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_queryable_by_name","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_sql_type","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}]],"paths":[]};
searchIndex["diesel_migrations"] = {"doc":"Provides functions for maintaining database schema.","items":[[8,"Migration","diesel_migrations","Represents a migration that interacts with diesel",null,null],[10,"version","","Get the migration version",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[10,"run","","Apply this migration",0,{"i":[{"n":"self"},{"n":"simpleconnection"}],"o":{"g":["runmigrationserror"],"n":"result"}}],[10,"revert","","Revert this migration",0,{"i":[{"n":"self"},{"n":"simpleconnection"}],"o":{"g":["runmigrationserror"],"n":"result"}}],[11,"file_path","","Get the migration file path",0,{"i":[{"n":"self"}],"o":{"g":["path"],"n":"option"}}],[3,"MigrationName","","",null,null],[12,"migration","","",1,null],[8,"MigrationConnection","","A connection which can be passed to the migration methods. This exists only to wrap up some constraints which are meant to hold for all connections. This trait will go away at some point in the future. Any Diesel connection should be useable where this trait is required.",null,null],[10,"previously_run_migration_versions","","",2,{"i":[{"n":"self"}],"o":{"g":["hashset","error"],"n":"result"}}],[10,"latest_run_migration_version","","",2,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"result"}}],[10,"insert_new_migration","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["error"],"n":"result"}}],[4,"MigrationError","","Errors that occur while preparing to run migrations",null,null],[13,"MigrationDirectoryNotFound","","The migration directory wasn't found",3,null],[13,"UnknownMigrationFormat","","Provided migration was in an unknown format",3,null],[13,"IoError","","General system IO error",3,null],[13,"UnknownMigrationVersion","","Provided migration had an incompatible version number",3,null],[13,"NoMigrationRun","","No migrations had to be/ could be run",3,null],[4,"RunMigrationsError","","Errors that occur while running migrations",null,null],[13,"MigrationError","","A general migration error occured",4,null],[13,"QueryError","","The provided migration included an invalid query",4,null],[13,"EmptyMigration","","The provided migration was empty",4,null],[5,"run_migrations","","Run all pending migrations in the given list. Apps should likely be calling `run_pending_migrations` or `run_pending_migrations_in_directory` instead.",null,{"i":[{"n":"conn"},{"n":"list"},{"n":"write"}],"o":{"g":["runmigrationserror"],"n":"result"}}],[5,"run_pending_migrations","","Runs all migrations that have not yet been run. This function will print all progress to stdout. This function will return an `Err` if some error occurs reading the migrations, or if any migration fails to run. Each migration is run in its own transaction, so some migrations may be committed, even if a later migration fails to run.",null,{"i":[{"n":"conn"}],"o":{"g":["runmigrationserror"],"n":"result"}}],[5,"revert_latest_migration","","Reverts the last migration that was run. Returns the version that was reverted. Returns an `Err` if no migrations have ever been run.",null,{"i":[{"n":"conn"}],"o":{"g":["string","runmigrationserror"],"n":"result"}}],[5,"revert_latest_migration_in_directory","","",null,{"i":[{"n":"conn"},{"n":"path"}],"o":{"g":["string","runmigrationserror"],"n":"result"}}],[5,"mark_migrations_in_directory","","Compares migrations found in `migrations_dir` to those that have been applied. Returns a list of pathbufs and whether they have been applied.",null,{"i":[{"n":"conn"},{"n":"path"}],"o":{"g":["vec","runmigrationserror"],"n":"result"}}],[5,"any_pending_migrations","","See the module level documentation for information on how migrations should be structured, and where Diesel will look for them by default.",null,{"i":[{"n":"conn"}],"o":{"g":["bool","runmigrationserror"],"n":"result"}}],[5,"migration_from","","",null,{"i":[{"n":"pathbuf"}],"o":{"g":["box","migrationerror"],"n":"result"}}],[5,"find_migrations_directory","","Returns the directory containing migrations. Will look at for $PWD/migrations. If it is not found, it will search the parents of the current directory, until it reaches the root directory.  Returns `MigrationError::MigrationDirectoryNotFound` if no directory is found.",null,{"o":{"g":["pathbuf","migrationerror"],"n":"result"}}],[5,"search_for_migrations_directory","","Searches for the migrations directory relative to the given path. See `find_migrations_directory` for more details.",null,{"i":[{"n":"path"}],"o":{"g":["pathbuf","migrationerror"],"n":"result"}}],[5,"name","","",null,{"i":[{"n":"migration"}],"o":{"n":"migrationname"}}],[0,"connection","","",null,null],[8,"MigrationConnection","diesel_migrations::connection","A connection which can be passed to the migration methods. This exists only to wrap up some constraints which are meant to hold for all connections. This trait will go away at some point in the future. Any Diesel connection should be useable where this trait is required.",null,null],[10,"previously_run_migration_versions","","",2,{"i":[{"n":"self"}],"o":{"g":["hashset","error"],"n":"result"}}],[10,"latest_run_migration_version","","",2,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"result"}}],[10,"insert_new_migration","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["error"],"n":"result"}}],[14,"embed_migrations","diesel_migrations","This macro will read your migrations at compile time, and embed a module you can use to execute them at runtime without the migration files being present on the file system. This is useful if you would like to use Diesel's migration infrastructure, but want to ship a single executable file (such as for embedded applications). It can also be used to apply migrations to an in memory database (Diesel does this for its own test suite).",null,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"migrationname"}}],[11,"from","","",4,{"i":[{"n":"error"}],"o":{"n":"runmigrationserror"}}],[11,"from","","",4,{"i":[{"n":"migrationerror"}],"o":{"n":"runmigrationserror"}}],[11,"from","","",3,{"i":[{"n":"error"}],"o":{"n":"migrationerror"}}],[11,"from","","",4,{"i":[{"n":"error"}],"o":{"n":"runmigrationserror"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"runmigrationserror"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"runmigrationserror"}],"o":{"n":"bool"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"migrationerror"}],"o":{"n":"bool"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"description","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","","",4,{"i":[{"n":"self"}],"o":{"n":"str"}}]],"paths":[[8,"Migration"],[3,"MigrationName"],[8,"MigrationConnection"],[4,"MigrationError"],[4,"RunMigrationsError"]]};
searchIndex["dotenv"] = {"doc":"This crate provides a configuration loader in the style of the ruby dotenv gem. This library is meant to be used on development or testing environments in which setting environment variables is not practical. It loads environment variables from a .env file, if available, and mashes those with the actual environment variables provided by the operating system.","items":[[4,"DotenvError","dotenv","",null,null],[13,"Parsing","","",0,null],[12,"line","dotenv::DotenvError","",0,null],[13,"ParseFormatter","dotenv","",0,null],[13,"Io","","",0,null],[5,"var","","After loading the dotenv file, fetches the environment variable key from the current process.",null,{"i":[{"n":"k"}],"o":{"g":["string","varerror"],"n":"result"}}],[5,"vars","","After loading the dotenv file, returns an iterator of (variable, value) pairs of strings, for all the environment variables of the current process.",null,{"o":{"n":"vars"}}],[5,"from_path","","Loads the file at the specified absolute path.",null,{"i":[{"n":"path"}],"o":{"g":["dotenverror"],"n":"result"}}],[5,"from_filename","","Loads the specified file from the environment's current directory or its parents in sequence.",null,{"i":[{"n":"str"}],"o":{"g":["dotenverror"],"n":"result"}}],[5,"dotenv","","This is usually what you want. It loads the .env file located in the environment's current directory or its parents in sequence.",null,{"o":{"g":["dotenverror"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"dotenverror"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"dotenverror"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",0,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}]],"paths":[[4,"DotenvError"]]};
searchIndex["dtoa"] = {"doc":"","items":[[5,"write","dtoa","",null,{"i":[{"n":"w"},{"n":"v"}],"o":{"g":["usize"],"n":"result"}}],[8,"Floating","","",null,null],[10,"write","","",0,{"i":[{"n":"self"},{"n":"w"}],"o":{"g":["usize"],"n":"result"}}],[14,"diyfp","","",null,null],[14,"dtoa","","",null,null]],"paths":[[8,"Floating"]]};
searchIndex["env_logger"] = {"doc":"A simple logger configured via environment variables which writes to stdout or stderr, for use with the logging facade exposed by the [`log` crate][log-crate-url].","items":[[3,"Env","env_logger","Set of environment variables to configure from.",null,null],[3,"Logger","","The env logger.",null,null],[3,"Builder","","`Builder` acts as builder for initializing a `Logger`.",null,null],[5,"try_init","","Attempts to initialize the global logger with an env logger.",null,{"o":{"g":["setloggererror"],"n":"result"}}],[5,"init","","Initializes the global logger with an env logger.",null,{}],[5,"try_init_from_env","","Attempts to initialize the global logger with an env logger from the given environment variables.",null,{"i":[{"n":"e"}],"o":{"g":["setloggererror"],"n":"result"}}],[5,"init_from_env","","Initializes the global logger with an env logger from the given environment variables.",null,{"i":[{"n":"e"}]}],[0,"filter","","Filtering for log records.",null,null],[3,"Filter","env_logger::filter","A log filter.",null,null],[3,"Builder","","A builder for a log filter.",null,null],[11,"filter","","Returns the maximum `LevelFilter` that this filter instance is configured to output.",0,{"i":[{"n":"self"}],"o":{"n":"levelfilter"}}],[11,"matches","","Checks if this record matches the configured filter.",0,{"i":[{"n":"self"},{"n":"record"}],"o":{"n":"bool"}}],[11,"enabled","","Determines if a log message with the specified metadata would be logged.",0,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"new","","Initializes the filter builder with defaults.",1,{"o":{"n":"builder"}}],[11,"from_env","","Initializes the filter builder from an environment.",1,{"i":[{"n":"str"}],"o":{"n":"builder"}}],[11,"filter_module","","Adds a directive to the filter for a specific module.",1,{"i":[{"n":"self"},{"n":"str"},{"n":"levelfilter"}],"o":{"n":"self"}}],[11,"filter_level","","Adds a directive to the filter for all modules.",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"self"}}],[11,"filter","","Adds a directive to the filter.",1,{"i":[{"n":"self"},{"g":["str"],"n":"option"},{"n":"levelfilter"}],"o":{"n":"self"}}],[11,"parse","","Parses the directives string.",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"build","","Build a log filter.",1,{"i":[{"n":"self"}],"o":{"n":"filter"}}],[11,"default","","",1,{"o":{"n":"self"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"fmt","env_logger","Formatting for log records.",null,null],[3,"Formatter","env_logger::fmt","A formatter to write logs into.",null,null],[3,"Style","","A set of styles to apply to the terminal output.",null,null],[3,"StyledValue","","A value that can be printed using the given styles.",null,null],[3,"Timestamp","","An [RFC3339] formatted timestamp.",null,null],[3,"PreciseTimestamp","","An [RFC3339] formatted timestamp with nanos",null,null],[3,"ParseColorError","","An error from parsing an invalid color specification.",null,null],[4,"Target","","Log target, either `stdout` or `stderr`.",null,null],[13,"Stdout","","Logs will be sent to standard output.",2,null],[13,"Stderr","","Logs will be sent to standard error.",2,null],[4,"WriteStyle","","Whether or not to print styles to the target.",null,null],[13,"Auto","","Try to print styles, but don't force the issue.",3,null],[13,"Always","","Try very hard to print styles.",3,null],[13,"Never","","Never print styles.",3,null],[4,"Color","","The set of available colors for the terminal foreground/background.",null,null],[13,"Black","","",4,null],[13,"Blue","","",4,null],[13,"Green","","",4,null],[13,"Red","","",4,null],[13,"Cyan","","",4,null],[13,"Magenta","","",4,null],[13,"Yellow","","",4,null],[13,"White","","",4,null],[13,"Ansi256","","",4,null],[13,"Rgb","","",4,null],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"target"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",2,null],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"target"}],"o":{"n":"bool"}}],[11,"default","","",2,{"o":{"n":"self"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"writestyle"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"writestyle"}],"o":{"n":"bool"}}],[11,"default","","",3,{"o":{"n":"self"}}],[11,"set_color","","Set the text color.",5,{"i":[{"n":"self"},{"n":"color"}],"o":{"n":"style"}}],[11,"set_bold","","Set the text weight.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"style"}}],[11,"set_intense","","Set the text intensity.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"style"}}],[11,"set_bg","","Set the background color.",5,{"i":[{"n":"self"},{"n":"color"}],"o":{"n":"style"}}],[11,"value","","Wrap a value in the style.",5,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"styledvalue"}}],[11,"style","","Begin a new [`Style`].",7,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"timestamp","","Get a [`Timestamp`] for the current date and time in UTC.",7,{"i":[{"n":"self"}],"o":{"n":"timestamp"}}],[11,"precise_timestamp","","Get a [`PreciseTimestamp`] for the current date and time in UTC with nanos.",7,{"i":[{"n":"self"}],"o":{"n":"precisetimestamp"}}],[11,"write","","",7,null],[11,"flush","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"color"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"color"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"color"}],"o":{"n":"bool"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"parsecolorerror"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"parsecolorerror"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"parsecolorerror"}],"o":{"n":"bool"}}],[11,"invalid","","Return the string that couldn't be parsed as a valid color.",10,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","","",10,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",4,{"i":[{"n":"str"}],"o":{"g":["color","parsecolorerror"],"n":"result"}}],[11,"fmt","env_logger","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[17,"DEFAULT_FILTER_ENV","","The default name for the environment variable to read filters from.",null,null],[17,"DEFAULT_WRITE_STYLE_ENV","","The default name for the environment variable to read style preferences from.",null,null],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",12,{"o":{"n":"builder"}}],[11,"new","","Initializes the log builder with defaults.",12,{"o":{"n":"builder"}}],[11,"from_env","","Initializes the log builder from the environment.",12,{"i":[{"n":"e"}],"o":{"n":"self"}}],[11,"from_default_env","","Initializes the log builder from the environment using default variable names.",12,{"o":{"n":"self"}}],[11,"format","","Sets the format function for formatting the log output.",12,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"default_format","","Use the default format.",12,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"default_format_level","","Whether or not to write the level in the default format.",12,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"default_format_module_path","","Whether or not to write the module path in the default format.",12,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"default_format_timestamp","","Whether or not to write the timestamp in the default format.",12,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"default_format_timestamp_nanos","","Whether or not to write the timestamp with nanos.",12,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"filter_module","","Adds a directive to the filter for a specific module.",12,{"i":[{"n":"self"},{"n":"str"},{"n":"levelfilter"}],"o":{"n":"self"}}],[11,"filter_level","","Adds a directive to the filter for all modules.",12,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"self"}}],[11,"filter","","Adds filters to the logger.",12,{"i":[{"n":"self"},{"g":["str"],"n":"option"},{"n":"levelfilter"}],"o":{"n":"self"}}],[11,"parse","","Parses the directives string in the same form as the `RUST_LOG` environment variable.",12,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"target","","Sets the target for the log output.",12,{"i":[{"n":"self"},{"n":"target"}],"o":{"n":"self"}}],[11,"write_style","","Sets whether or not styles will be written.",12,{"i":[{"n":"self"},{"n":"writestyle"}],"o":{"n":"self"}}],[11,"parse_write_style","","Parses whether or not to write styles in the same form as the `RUST_LOG_STYLE` environment variable.",12,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"try_init","","Initializes the global logger with the built env logger.",12,{"i":[{"n":"self"}],"o":{"g":["setloggererror"],"n":"result"}}],[11,"init","","Initializes the global logger with the built env logger.",12,{"i":[{"n":"self"}]}],[11,"build","","Build an env logger.",12,{"i":[{"n":"self"}],"o":{"n":"logger"}}],[11,"from_env","","Creates the logger from the environment.",11,{"i":[{"n":"e"}],"o":{"n":"self"}}],[11,"from_default_env","","Creates the logger from the environment using default variable names.",11,{"o":{"n":"self"}}],[11,"filter","","Returns the maximum `LevelFilter` that this env logger instance is configured to output.",11,{"i":[{"n":"self"}],"o":{"n":"levelfilter"}}],[11,"matches","","Checks if this record matches the configured filter.",11,{"i":[{"n":"self"},{"n":"record"}],"o":{"n":"bool"}}],[11,"enabled","","",11,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"log","","",11,{"i":[{"n":"self"},{"n":"record"}]}],[11,"flush","","",11,{"i":[{"n":"self"}]}],[11,"new","","Get a default set of environment variables.",13,{"o":{"n":"self"}}],[11,"filter","","Specify an environment variable to read the filter from.",13,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"self"}}],[11,"filter_or","","Specify an environment variable to read the filter from.",13,{"i":[{"n":"self"},{"n":"e"},{"n":"v"}],"o":{"n":"self"}}],[11,"write_style","","Specify an environment variable to read the style from.",13,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"self"}}],[11,"write_style_or","","Specify an environment variable to read the style from.",13,{"i":[{"n":"self"},{"n":"e"},{"n":"v"}],"o":{"n":"self"}}],[11,"from","","",13,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"default","","",13,{"o":{"n":"self"}}]],"paths":[[3,"Filter"],[3,"Builder"],[4,"Target"],[4,"WriteStyle"],[4,"Color"],[3,"Style"],[3,"PreciseTimestamp"],[3,"Formatter"],[3,"Timestamp"],[3,"StyledValue"],[3,"ParseColorError"],[3,"Logger"],[3,"Builder"],[3,"Env"]]};
searchIndex["error"] = {"doc":"A generic, extendable Error type.","items":[[8,"Error","error","An extension to std::error::Error which provides dynamic downcasting of errors for use in highly generic contexts.",null,null],[11,"is","","Is this `Error` object of type `E`?",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"downcast","","If this error is `E`, downcast this error to `E`, by reference.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"is","","Is this `Error + Send` object of type `E`?",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"downcast","","If this error is `E`, downcast this error to `E`, by reference.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[14,"match_error","","",null,null]],"paths":[[8,"Error"]]};
searchIndex["error_chain"] = {"doc":"A library for consistent and reliable error handling","items":[[3,"Backtrace","error_chain","Representation of an owned and self-contained backtrace.",null,null],[3,"Iter","","Iterator over the error chain using the `Error::cause()` method.",null,null],[3,"DisplayChain","","A struct which formats an error for output.",null,null],[0,"example_generated","","These modules show an example of code generated by the macro. IT MUST NOT BE USED OUTSIDE THIS CRATE.",null,null],[3,"Error","error_chain::example_generated","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",1,null],[13,"Inner","","Link to another `ErrorChain`.",1,null],[13,"Io","","Link to a `std::io::Error` type.",1,null],[13,"Custom","","A custom error kind.",1,null],[0,"inner","","Another code generated by the macro.",null,null],[3,"Error","error_chain::example_generated::inner","The Error type.",null,null],[12,"0","","The kind of the error.",2,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",3,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",2,{"i":[{"n":"errorkind"},{"n":"state"}],"o":{"n":"error"}}],[11,"from_kind","","",2,null],[11,"with_chain","","",2,{"i":[{"n":"e"},{"n":"k"}],"o":{"n":"self"}}],[11,"kind","","",2,null],[11,"iter","","",2,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"chain_err","","",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"backtrace","","",2,{"i":[{"n":"self"}],"o":{"g":["backtrace"],"n":"option"}}],[11,"extract_backtrace","","",2,{"i":[{"n":"error"}],"o":{"g":["internalbacktrace"],"n":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",2,{"i":[{"n":"errorkind"}],"o":{"n":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",2,{"i":[{"n":"e"},{"n":"k"}],"o":{"n":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",2,{"i":[{"g":["error"],"n":"box"},{"n":"k"}],"o":{"n":"error"}}],[11,"kind","","Returns the kind of the error.",2,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"iter","","Iterates over the error chain.",2,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",2,{"i":[{"n":"self"}],"o":{"g":["backtrace"],"n":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"error"}}],[11,"description","","A short description of the error. This method is identical to `Error::description()`",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",2,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",2,{"i":[{"n":"errorkind"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","A string describing the error kind.",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from","","",3,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",3,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"from","","",3,{"i":[{"n":"error"}],"o":{"n":"self"}}],[6,"Result","error_chain::example_generated","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",5,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",0,{"i":[{"n":"errorkind"},{"n":"state"}],"o":{"n":"error"}}],[11,"from_kind","","",0,null],[11,"with_chain","","",0,{"i":[{"n":"e"},{"n":"k"}],"o":{"n":"self"}}],[11,"kind","","",0,null],[11,"iter","","",0,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"chain_err","","",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"backtrace","","",0,{"i":[{"n":"self"}],"o":{"g":["backtrace"],"n":"option"}}],[11,"extract_backtrace","","",0,{"i":[{"n":"error"}],"o":{"g":["internalbacktrace"],"n":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,{"i":[{"n":"errorkind"}],"o":{"n":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",0,{"i":[{"n":"e"},{"n":"k"}],"o":{"n":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",0,{"i":[{"g":["error"],"n":"box"},{"n":"k"}],"o":{"n":"error"}}],[11,"kind","","Returns the kind of the error.",0,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"iter","","Iterates over the error chain.",0,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",0,{"i":[{"n":"self"}],"o":{"g":["backtrace"],"n":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"error"}}],[11,"description","","A short description of the error. This method is identical to `Error::description()`",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",0,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"errorkind"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","A string describing the error kind.",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from","","",1,{"i":[{"n":"errorkind"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"error"}],"o":{"n":"self"}}],[8,"ExitCode","error_chain","Represents a value that can be used as the exit status of the process. See `quick_main!`.",null,null],[10,"code","","Returns the value to use as the exit status.",6,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[8,"ChainedError","","This trait is implemented on all the errors generated by the `error_chain` macro.",null,null],[16,"ErrorKind","","Associated kind type.",7,null],[10,"from_kind","","Constructs an error from a kind, and generates a backtrace.",7,null],[10,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",7,{"i":[{"n":"e"},{"n":"k"}],"o":{"n":"self"}}],[10,"kind","","Returns the kind of the error.",7,null],[10,"iter","","Iterates over the error chain.",7,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[10,"backtrace","","Returns the backtrace associated with this error.",7,{"i":[{"n":"self"}],"o":{"g":["backtrace"],"n":"option"}}],[11,"display_chain","","Returns an object which implements `Display` for printing the full context of this error.",7,{"i":[{"n":"self"}],"o":{"n":"displaychain"}}],[10,"chain_err","","Extends the error chain with a new entry.",7,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Returns a new iterator over the error chain using `Error::cause()`.",8,{"i":[{"g":["error"],"n":"option"}],"o":{"n":"iter"}}],[11,"next","","",8,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[14,"error_chain","","Macro for generating error types and traits. See crate level documentation for details.",null,null],[14,"quick_main","","Convenient wrapper to be able to use `?` and such in the main. You can use it with a separated function:",null,null],[14,"bail","","Exits a function early with an error",null,null],[14,"ensure","","Exits a function early with an error if the condition is not satisfied",null,null],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",10,{"o":{"n":"backtrace"}}],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",10,{"o":{"n":"backtrace"}}],[11,"frames","","Returns the frames from when this backtrace was captured.",10,null],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",10,null],[11,"from","","",10,{"i":[{"g":["backtraceframe"],"n":"vec"}],"o":{"n":"backtrace"}}],[11,"into","","",10,{"i":[{"n":"self"}],"o":{"g":["backtraceframe"],"n":"vec"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"backtrace"}}],[11,"default","","",10,{"o":{"n":"backtrace"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}]],"paths":[[3,"Error"],[4,"ErrorKind"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[8,"ResultExt"],[8,"ExitCode"],[8,"ChainedError"],[3,"Iter"],[3,"DisplayChain"],[3,"Backtrace"]]};
searchIndex["fatcat"] = {"doc":"","items":[[3,"XClacksOverhead","fatcat","",null,null],[12,"0","","",0,null],[3,"XClacksOverheadMiddleware","","",null,null],[5,"establish_connection","","Establish a direct database connection. Not currently used, but could be helpful for single-threaded tests or utilities.",null,{"o":{"n":"pgconnection"}}],[5,"server","","Instantiate a new API server with a pooled database connection",null,{"o":{"g":["server"],"n":"result"}}],[5,"test_server","","",null,{"o":{"g":["server"],"n":"result"}}],[0,"api_entity_crud","","",null,null],[8,"EntityCrud","fatcat::api_entity_crud","",null,null],[16,"EditRow","","",1,null],[16,"EditNewRow","","",1,null],[16,"IdentRow","","",1,null],[16,"IdentNewRow","","",1,null],[16,"RevRow","","",1,null],[10,"db_get","","",1,{"i":[{"n":"dbconn"},{"n":"fatcatid"}],"o":{"n":"result"}}],[10,"db_get_rev","","",1,{"i":[{"n":"dbconn"},{"n":"uuid"}],"o":{"n":"result"}}],[10,"db_expand","","",1,{"i":[{"n":"self"},{"n":"dbconn"},{"n":"expandflags"}],"o":{"n":"result"}}],[10,"db_create","","",1,{"i":[{"n":"self"},{"n":"dbconn"},{"n":"editcontext"}],"o":{"n":"result"}}],[10,"db_create_batch","","",1,null],[10,"db_update","","",1,{"i":[{"n":"self"},{"n":"dbconn"},{"n":"editcontext"},{"n":"fatcatid"}],"o":{"n":"result"}}],[10,"db_delete","","",1,{"i":[{"n":"dbconn"},{"n":"editcontext"},{"n":"fatcatid"}],"o":{"n":"result"}}],[10,"db_get_history","","",1,{"i":[{"n":"dbconn"},{"n":"fatcatid"},{"g":["i64"],"n":"option"}],"o":{"g":["vec"],"n":"result"}}],[10,"db_accept_edits","","",1,{"i":[{"n":"dbconn"},{"n":"fatcatid"}],"o":{"g":["u64"],"n":"result"}}],[10,"db_from_row","","",1,null],[10,"db_insert_rev","","",1,{"i":[{"n":"self"},{"n":"dbconn"}],"o":{"g":["uuid"],"n":"result"}}],[10,"db_insert_revs","","",1,null],[0,"api_helpers","fatcat","",null,null],[3,"EditContext","fatcat::api_helpers","",null,null],[12,"editor_id","","",2,null],[12,"editgroup_id","","",2,null],[12,"extra_json","","",2,null],[12,"autoaccept","","",2,null],[3,"ExpandFlags","","",null,null],[12,"files","","",3,null],[12,"container","","",3,null],[12,"releases","","",3,null],[12,"creators","","",3,null],[3,"FatCatId","","",null,null],[5,"make_edit_context","","",null,{"i":[{"n":"dbconn"},{"g":["fatcatid"],"n":"option"},{"n":"bool"}],"o":{"g":["editcontext"],"n":"result"}}],[5,"get_or_create_editgroup","","This function should always be run within a transaction",null,{"i":[{"n":"uuid"},{"n":"dbconn"}],"o":{"g":["uuid"],"n":"result"}}],[5,"accept_editgroup","","This function should always be run within a transaction",null,{"i":[{"n":"fatcatid"},{"n":"dbconn"}],"o":{"g":["changelogrow"],"n":"result"}}],[5,"fcid2uuid","","Convert fatcat IDs (base32 strings) to UUID",null,{"i":[{"n":"str"}],"o":{"g":["uuid"],"n":"result"}}],[5,"uuid2fcid","","Convert UUID to fatcat ID string (base32 encoded)",null,{"i":[{"n":"uuid"}],"o":{"n":"string"}}],[5,"check_pmcid","","",null,{"i":[{"n":"str"}],"o":{"n":"result"}}],[5,"check_pmid","","",null,{"i":[{"n":"str"}],"o":{"n":"result"}}],[5,"check_wikidata_qid","","",null,{"i":[{"n":"str"}],"o":{"n":"result"}}],[5,"check_doi","","",null,{"i":[{"n":"str"}],"o":{"n":"result"}}],[5,"check_issn","","",null,{"i":[{"n":"str"}],"o":{"n":"result"}}],[5,"check_orcid","","",null,{"i":[{"n":"str"}],"o":{"n":"result"}}],[6,"DbConn","","",null,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"expandflags"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"expandflags"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"expandflags"}],"o":{"n":"bool"}}],[11,"from_str","","",3,{"i":[{"n":"str"}],"o":{"g":["expandflags"],"n":"result"}}],[11,"from_str_list","","",3,null],[11,"all","","",3,{"o":{"n":"expandflags"}}],[11,"none","","",3,{"o":{"n":"expandflags"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"fatcatid"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"fatcatid"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"fatcatid"}],"o":{"n":"bool"}}],[11,"to_string","","",4,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"from_str","","",4,{"i":[{"n":"str"}],"o":{"g":["fatcatid"],"n":"result"}}],[11,"to_uuid","","",4,{"i":[{"n":"self"}],"o":{"n":"uuid"}}],[11,"from_uuid","","",4,{"i":[{"n":"uuid"}],"o":{"n":"fatcatid"}}],[0,"api_server","fatcat","API endpoint handlers",null,null],[3,"Server","fatcat::api_server","",null,null],[12,"db_pool","","",5,null],[5,"get_release_files","","",null,{"i":[{"n":"fatcatid"},{"n":"dbconn"}],"o":{"g":["vec"],"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"server"}}],[11,"lookup_container_handler","","",5,{"i":[{"n":"self"},{"n":"str"},{"n":"dbconn"}],"o":{"g":["containerentity"],"n":"result"}}],[11,"lookup_creator_handler","","",5,{"i":[{"n":"self"},{"n":"str"},{"n":"dbconn"}],"o":{"g":["creatorentity"],"n":"result"}}],[11,"get_creator_releases_handler","","",5,{"i":[{"n":"self"},{"n":"fatcatid"},{"n":"dbconn"}],"o":{"g":["vec"],"n":"result"}}],[11,"lookup_file_handler","","",5,{"i":[{"n":"self"},{"n":"str"},{"n":"dbconn"}],"o":{"g":["fileentity"],"n":"result"}}],[11,"lookup_release_handler","","",5,{"i":[{"n":"self"},{"n":"str"},{"n":"dbconn"}],"o":{"g":["releaseentity"],"n":"result"}}],[11,"get_release_files_handler","","",5,{"i":[{"n":"self"},{"n":"fatcatid"},{"n":"dbconn"}],"o":{"g":["vec"],"n":"result"}}],[11,"get_work_releases_handler","","",5,{"i":[{"n":"self"},{"n":"fatcatid"},{"n":"dbconn"}],"o":{"g":["vec"],"n":"result"}}],[11,"accept_editgroup_handler","","",5,{"i":[{"n":"self"},{"n":"fatcatid"},{"n":"dbconn"}],"o":{"n":"result"}}],[11,"create_editgroup_handler","","",5,{"i":[{"n":"self"},{"n":"editgroup"},{"n":"dbconn"}],"o":{"g":["editgroup"],"n":"result"}}],[11,"get_editgroup_handler","","",5,{"i":[{"n":"self"},{"n":"fatcatid"},{"n":"dbconn"}],"o":{"g":["editgroup"],"n":"result"}}],[11,"get_editor_handler","","",5,{"i":[{"n":"self"},{"n":"fatcatid"},{"n":"dbconn"}],"o":{"g":["editor"],"n":"result"}}],[11,"get_editor_changelog_handler","","",5,{"i":[{"n":"self"},{"n":"fatcatid"},{"n":"dbconn"}],"o":{"g":["vec"],"n":"result"}}],[11,"get_changelog_handler","","",5,{"i":[{"n":"self"},{"g":["i64"],"n":"option"},{"n":"dbconn"}],"o":{"g":["vec"],"n":"result"}}],[11,"get_changelog_entry_handler","","",5,{"i":[{"n":"self"},{"n":"i64"},{"n":"dbconn"}],"o":{"g":["changelogentry"],"n":"result"}}],[11,"get_stats_handler","","",5,{"i":[{"n":"self"},{"n":"option"},{"n":"dbconn"}],"o":{"g":["statsresponse"],"n":"result"}}],[11,"create_container_batch_handler","","",5,null],[11,"create_creator_batch_handler","","",5,null],[11,"create_file_batch_handler","","",5,null],[11,"create_release_batch_handler","","",5,null],[11,"create_work_batch_handler","","",5,null],[0,"api_wrappers","fatcat","API endpoint handlers",null,null],[11,"get_container","fatcat::api_server","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_container","","",5,{"i":[{"n":"self"},{"n":"containerentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_container_batch","","",5,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"update_container","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"containerentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_container","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_container_history","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_creator","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_creator","","",5,{"i":[{"n":"self"},{"n":"creatorentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_creator_batch","","",5,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"update_creator","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"creatorentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_creator","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_creator_history","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_file","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_file","","",5,{"i":[{"n":"self"},{"n":"fileentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_file_batch","","",5,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"update_file","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"fileentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_file","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_file_history","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_release","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_release","","",5,{"i":[{"n":"self"},{"n":"releaseentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_release_batch","","",5,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"update_release","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"releaseentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_release","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_release_history","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_work","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_work","","",5,{"i":[{"n":"self"},{"n":"workentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_work_batch","","",5,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"update_work","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"workentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_work","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_work_history","","",5,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_container","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_creator","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_file","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_release","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_release_files","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_work_releases","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_creator_releases","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_editor","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_editor_changelog","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"accept_editgroup","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_editgroup","","",5,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_editgroup","","",5,{"i":[{"n":"self"},{"n":"editgroup"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_changelog","","",5,{"i":[{"n":"self"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_changelog_entry","","",5,{"i":[{"n":"self"},{"n":"i64"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_stats","","",5,{"i":[{"n":"self"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[0,"database_models","fatcat","",null,null],[3,"ContainerRevRow","fatcat::database_models","",null,null],[12,"id","","",6,null],[12,"extra_json","","",6,null],[12,"name","","",6,null],[12,"publisher","","",6,null],[12,"issnl","","",6,null],[12,"wikidata_qid","","",6,null],[12,"abbrev","","",6,null],[12,"coden","","",6,null],[3,"ContainerRevNewRow","","",null,null],[12,"extra_json","","",7,null],[12,"name","","",7,null],[12,"publisher","","",7,null],[12,"issnl","","",7,null],[12,"wikidata_qid","","",7,null],[12,"abbrev","","",7,null],[12,"coden","","",7,null],[3,"ContainerEditRow","","",null,null],[12,"id","","",8,null],[12,"editgroup_id","","",8,null],[12,"updated","","",8,null],[12,"ident_id","","",8,null],[12,"rev_id","","",8,null],[12,"redirect_id","","",8,null],[12,"prev_rev","","",8,null],[12,"extra_json","","",8,null],[3,"ContainerEditNewRow","","",null,null],[12,"editgroup_id","","",9,null],[12,"ident_id","","",9,null],[12,"rev_id","","",9,null],[12,"redirect_id","","",9,null],[12,"prev_rev","","",9,null],[12,"extra_json","","",9,null],[3,"ContainerIdentRow","","",null,null],[12,"id","","",10,null],[12,"is_live","","",10,null],[12,"rev_id","","",10,null],[12,"redirect_id","","",10,null],[3,"ContainerIdentNewRow","","",null,null],[12,"is_live","","",11,null],[12,"rev_id","","",11,null],[12,"redirect_id","","",11,null],[3,"CreatorRevRow","","",null,null],[12,"id","","",12,null],[12,"extra_json","","",12,null],[12,"display_name","","",12,null],[12,"given_name","","",12,null],[12,"surname","","",12,null],[12,"orcid","","",12,null],[12,"wikidata_qid","","",12,null],[3,"CreatorRevNewRow","","",null,null],[12,"extra_json","","",13,null],[12,"display_name","","",13,null],[12,"given_name","","",13,null],[12,"surname","","",13,null],[12,"orcid","","",13,null],[12,"wikidata_qid","","",13,null],[3,"CreatorEditRow","","",null,null],[12,"id","","",14,null],[12,"editgroup_id","","",14,null],[12,"updated","","",14,null],[12,"ident_id","","",14,null],[12,"rev_id","","",14,null],[12,"redirect_id","","",14,null],[12,"prev_rev","","",14,null],[12,"extra_json","","",14,null],[3,"CreatorEditNewRow","","",null,null],[12,"editgroup_id","","",15,null],[12,"ident_id","","",15,null],[12,"rev_id","","",15,null],[12,"redirect_id","","",15,null],[12,"prev_rev","","",15,null],[12,"extra_json","","",15,null],[3,"CreatorIdentRow","","",null,null],[12,"id","","",16,null],[12,"is_live","","",16,null],[12,"rev_id","","",16,null],[12,"redirect_id","","",16,null],[3,"CreatorIdentNewRow","","",null,null],[12,"is_live","","",17,null],[12,"rev_id","","",17,null],[12,"redirect_id","","",17,null],[3,"FileRevUrlRow","","",null,null],[12,"id","","",18,null],[12,"file_rev","","",18,null],[12,"rel","","",18,null],[12,"url","","",18,null],[3,"FileRevUrlNewRow","","",null,null],[12,"file_rev","","",19,null],[12,"rel","","",19,null],[12,"url","","",19,null],[3,"FileRevRow","","",null,null],[12,"id","","",20,null],[12,"extra_json","","",20,null],[12,"size","","",20,null],[12,"sha1","","",20,null],[12,"sha256","","",20,null],[12,"md5","","",20,null],[12,"mimetype","","",20,null],[3,"FileRevNewRow","","",null,null],[12,"extra_json","","",21,null],[12,"size","","",21,null],[12,"sha1","","",21,null],[12,"sha256","","",21,null],[12,"md5","","",21,null],[12,"mimetype","","",21,null],[3,"FileEditRow","","",null,null],[12,"id","","",22,null],[12,"editgroup_id","","",22,null],[12,"updated","","",22,null],[12,"ident_id","","",22,null],[12,"rev_id","","",22,null],[12,"redirect_id","","",22,null],[12,"prev_rev","","",22,null],[12,"extra_json","","",22,null],[3,"FileEditNewRow","","",null,null],[12,"editgroup_id","","",23,null],[12,"ident_id","","",23,null],[12,"rev_id","","",23,null],[12,"redirect_id","","",23,null],[12,"prev_rev","","",23,null],[12,"extra_json","","",23,null],[3,"FileIdentRow","","",null,null],[12,"id","","",24,null],[12,"is_live","","",24,null],[12,"rev_id","","",24,null],[12,"redirect_id","","",24,null],[3,"FileIdentNewRow","","",null,null],[12,"is_live","","",25,null],[12,"rev_id","","",25,null],[12,"redirect_id","","",25,null],[3,"ReleaseRevRow","","",null,null],[12,"id","","",26,null],[12,"extra_json","","",26,null],[12,"work_ident_id","","",26,null],[12,"container_ident_id","","",26,null],[12,"title","","",26,null],[12,"release_type","","",26,null],[12,"release_status","","",26,null],[12,"release_date","","",26,null],[12,"doi","","",26,null],[12,"pmid","","",26,null],[12,"pmcid","","",26,null],[12,"wikidata_qid","","",26,null],[12,"isbn13","","",26,null],[12,"core_id","","",26,null],[12,"volume","","",26,null],[12,"issue","","",26,null],[12,"pages","","",26,null],[12,"publisher","","",26,null],[12,"language","","",26,null],[3,"ReleaseRevNewRow","","",null,null],[12,"extra_json","","",27,null],[12,"work_ident_id","","",27,null],[12,"container_ident_id","","",27,null],[12,"title","","",27,null],[12,"release_type","","",27,null],[12,"release_status","","",27,null],[12,"release_date","","",27,null],[12,"doi","","",27,null],[12,"pmid","","",27,null],[12,"pmcid","","",27,null],[12,"wikidata_qid","","",27,null],[12,"isbn13","","",27,null],[12,"core_id","","",27,null],[12,"volume","","",27,null],[12,"issue","","",27,null],[12,"pages","","",27,null],[12,"publisher","","",27,null],[12,"language","","",27,null],[3,"ReleaseEditRow","","",null,null],[12,"id","","",28,null],[12,"editgroup_id","","",28,null],[12,"updated","","",28,null],[12,"ident_id","","",28,null],[12,"rev_id","","",28,null],[12,"redirect_id","","",28,null],[12,"prev_rev","","",28,null],[12,"extra_json","","",28,null],[3,"ReleaseEditNewRow","","",null,null],[12,"editgroup_id","","",29,null],[12,"ident_id","","",29,null],[12,"rev_id","","",29,null],[12,"redirect_id","","",29,null],[12,"prev_rev","","",29,null],[12,"extra_json","","",29,null],[3,"ReleaseIdentRow","","",null,null],[12,"id","","",30,null],[12,"is_live","","",30,null],[12,"rev_id","","",30,null],[12,"redirect_id","","",30,null],[3,"ReleaseIdentNewRow","","",null,null],[12,"is_live","","",31,null],[12,"rev_id","","",31,null],[12,"redirect_id","","",31,null],[3,"WorkRevRow","","",null,null],[12,"id","","",32,null],[12,"extra_json","","",32,null],[3,"WorkRevNewRow","","",null,null],[12,"extra_json","","",33,null],[3,"WorkEditRow","","",null,null],[12,"id","","",34,null],[12,"editgroup_id","","",34,null],[12,"updated","","",34,null],[12,"ident_id","","",34,null],[12,"rev_id","","",34,null],[12,"redirect_id","","",34,null],[12,"prev_rev","","",34,null],[12,"extra_json","","",34,null],[3,"WorkEditNewRow","","",null,null],[12,"editgroup_id","","",35,null],[12,"ident_id","","",35,null],[12,"rev_id","","",35,null],[12,"redirect_id","","",35,null],[12,"prev_rev","","",35,null],[12,"extra_json","","",35,null],[3,"WorkIdentRow","","",null,null],[12,"id","","",36,null],[12,"is_live","","",36,null],[12,"rev_id","","",36,null],[12,"redirect_id","","",36,null],[3,"WorkIdentNewRow","","",null,null],[12,"is_live","","",37,null],[12,"rev_id","","",37,null],[12,"redirect_id","","",37,null],[3,"ReleaseRevAbstractRow","","",null,null],[12,"id","","",38,null],[12,"release_rev","","",38,null],[12,"abstract_sha1","","",38,null],[12,"mimetype","","",38,null],[12,"lang","","",38,null],[3,"ReleaseRevAbstractNewRow","","",null,null],[12,"release_rev","","",39,null],[12,"abstract_sha1","","",39,null],[12,"mimetype","","",39,null],[12,"lang","","",39,null],[3,"ReleaseContribRow","","",null,null],[12,"id","","",40,null],[12,"release_rev","","",40,null],[12,"creator_ident_id","","",40,null],[12,"raw_name","","",40,null],[12,"role","","",40,null],[12,"index_val","","",40,null],[12,"extra_json","","",40,null],[3,"ReleaseContribNewRow","","",null,null],[12,"release_rev","","",41,null],[12,"creator_ident_id","","",41,null],[12,"raw_name","","",41,null],[12,"role","","",41,null],[12,"index_val","","",41,null],[12,"extra_json","","",41,null],[3,"ReleaseRefRow","","",null,null],[12,"id","","",42,null],[12,"release_rev","","",42,null],[12,"target_release_ident_id","","",42,null],[12,"index_val","","",42,null],[12,"key","","",42,null],[12,"extra_json","","",42,null],[12,"container_title","","",42,null],[12,"year","","",42,null],[12,"title","","",42,null],[12,"locator","","",42,null],[3,"ReleaseRefNewRow","","",null,null],[12,"release_rev","","",43,null],[12,"target_release_ident_id","","",43,null],[12,"index_val","","",43,null],[12,"key","","",43,null],[12,"extra_json","","",43,null],[12,"container_title","","",43,null],[12,"year","","",43,null],[12,"title","","",43,null],[12,"locator","","",43,null],[3,"FileReleaseRow","","",null,null],[12,"file_rev","","",44,null],[12,"target_release_ident_id","","",44,null],[3,"AbstractsRow","","",null,null],[12,"sha1","","",45,null],[12,"content","","",45,null],[3,"EditgroupRow","","",null,null],[12,"id","","",46,null],[12,"editor_id","","",46,null],[12,"created","","",46,null],[12,"extra_json","","",46,null],[12,"description","","",46,null],[3,"EditorRow","","",null,null],[12,"id","","",47,null],[12,"username","","",47,null],[12,"is_admin","","",47,null],[12,"registered","","",47,null],[12,"active_editgroup_id","","",47,null],[3,"ChangelogRow","","",null,null],[12,"id","","",48,null],[12,"editgroup_id","","",48,null],[12,"timestamp","","",48,null],[4,"EntityState","","",null,null],[13,"WorkInProgress","","",49,null],[13,"Active","","",49,null],[13,"Redirect","","",49,null],[13,"Deleted","","",49,null],[11,"build","","",6,null],[11,"table","","",6,null],[11,"as_changeset","","",6,null],[11,"as_changeset","","",7,null],[11,"values","","",7,null],[11,"build","","",8,null],[11,"table","","",8,null],[11,"as_changeset","","",8,null],[11,"build","","",8,{"i":[{"n":"__r"}],"o":{"n":"result"}}],[11,"as_changeset","","",9,null],[11,"build","","",9,{"i":[{"n":"__r"}],"o":{"n":"result"}}],[11,"values","","",9,null],[11,"build","","",10,null],[11,"table","","",10,null],[11,"as_changeset","","",10,null],[11,"as_changeset","","",11,null],[11,"values","","",11,null],[11,"build","","",12,null],[11,"table","","",12,null],[11,"as_changeset","","",12,null],[11,"as_changeset","","",13,null],[11,"values","","",13,null],[11,"build","","",14,null],[11,"table","","",14,null],[11,"as_changeset","","",14,null],[11,"build","","",14,{"i":[{"n":"__r"}],"o":{"n":"result"}}],[11,"as_changeset","","",15,null],[11,"build","","",15,{"i":[{"n":"__r"}],"o":{"n":"result"}}],[11,"values","","",15,null],[11,"build","","",16,null],[11,"table","","",16,null],[11,"as_changeset","","",16,null],[11,"as_changeset","","",17,null],[11,"values","","",17,null],[11,"build","","",18,null],[11,"table","","",18,null],[11,"as_changeset","","",18,null],[11,"build","","",19,null],[11,"as_changeset","","",19,null],[11,"values","","",19,null],[11,"build","","",20,null],[11,"table","","",20,null],[11,"as_changeset","","",20,null],[11,"as_changeset","","",21,null],[11,"values","","",21,null],[11,"build","","",22,null],[11,"table","","",22,null],[11,"as_changeset","","",22,null],[11,"build","","",22,{"i":[{"n":"__r"}],"o":{"n":"result"}}],[11,"as_changeset","","",23,null],[11,"build","","",23,{"i":[{"n":"__r"}],"o":{"n":"result"}}],[11,"values","","",23,null],[11,"build","","",24,null],[11,"table","","",24,null],[11,"as_changeset","","",24,null],[11,"as_changeset","","",25,null],[11,"values","","",25,null],[11,"build","","",26,null],[11,"table","","",26,null],[11,"as_changeset","","",26,null],[11,"as_changeset","","",27,null],[11,"values","","",27,null],[11,"build","","",28,null],[11,"table","","",28,null],[11,"as_changeset","","",28,null],[11,"build","","",28,{"i":[{"n":"__r"}],"o":{"n":"result"}}],[11,"as_changeset","","",29,null],[11,"build","","",29,{"i":[{"n":"__r"}],"o":{"n":"result"}}],[11,"values","","",29,null],[11,"build","","",30,null],[11,"table","","",30,null],[11,"as_changeset","","",30,null],[11,"as_changeset","","",31,null],[11,"values","","",31,null],[11,"build","","",32,null],[11,"table","","",32,null],[11,"as_changeset","","",32,null],[11,"as_changeset","","",33,null],[11,"values","","",33,null],[11,"build","","",34,null],[11,"table","","",34,null],[11,"as_changeset","","",34,null],[11,"build","","",34,{"i":[{"n":"__r"}],"o":{"n":"result"}}],[11,"as_changeset","","",35,null],[11,"build","","",35,{"i":[{"n":"__r"}],"o":{"n":"result"}}],[11,"values","","",35,null],[11,"build","","",36,null],[11,"table","","",36,null],[11,"as_changeset","","",36,null],[11,"as_changeset","","",37,null],[11,"values","","",37,null],[11,"build","","",38,null],[11,"table","","",38,null],[11,"as_changeset","","",38,null],[11,"build","","",39,null],[11,"as_changeset","","",39,null],[11,"values","","",39,null],[11,"build","","",40,null],[11,"table","","",40,null],[11,"as_changeset","","",40,null],[11,"values","","",41,null],[11,"build","","",42,null],[11,"table","","",42,null],[11,"as_changeset","","",42,null],[11,"values","","",43,null],[11,"as_changeset","","",43,null],[11,"build","","",44,null],[11,"values","","",44,null],[11,"as_changeset","","",44,null],[11,"build","","",45,null],[11,"values","","",45,null],[11,"as_changeset","","",45,null],[11,"build","","",46,null],[11,"table","","",46,null],[11,"as_changeset","","",46,null],[11,"build","","",47,null],[11,"table","","",47,null],[11,"as_changeset","","",47,null],[11,"build","","",48,null],[11,"table","","",48,null],[11,"as_changeset","","",48,null],[8,"EntityIdentRow","","",null,null],[10,"state","","",50,{"i":[{"n":"self"}],"o":{"g":["entitystate"],"n":"result"}}],[8,"EntityEditRow","","",null,null],[10,"into_model","","",51,{"i":[{"n":"self"}],"o":{"g":["entityedit"],"n":"result"}}],[11,"shortname","","",49,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_model","","Go from a row (SQL model) to an API model",8,{"i":[{"n":"self"}],"o":{"g":["entityedit"],"n":"result"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"state","","",10,{"i":[{"n":"self"}],"o":{"g":["entitystate"],"n":"result"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_model","","Go from a row (SQL model) to an API model",14,{"i":[{"n":"self"}],"o":{"g":["entityedit"],"n":"result"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"state","","",16,{"i":[{"n":"self"}],"o":{"g":["entitystate"],"n":"result"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_model","","Go from a row (SQL model) to an API model",22,{"i":[{"n":"self"}],"o":{"g":["entityedit"],"n":"result"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"state","","",24,{"i":[{"n":"self"}],"o":{"g":["entitystate"],"n":"result"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_model","","Go from a row (SQL model) to an API model",28,{"i":[{"n":"self"}],"o":{"g":["entityedit"],"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"state","","",30,{"i":[{"n":"self"}],"o":{"g":["entitystate"],"n":"result"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_model","","Go from a row (SQL model) to an API model",34,{"i":[{"n":"self"}],"o":{"g":["entityedit"],"n":"result"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"state","","",36,{"i":[{"n":"self"}],"o":{"g":["entitystate"],"n":"result"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_model_partial","","Returns an Edigroup API model without the entity edits actually populated. Useful for, eg, entity history queries (where we already have the entity edit we want)",46,{"i":[{"n":"self"}],"o":{"n":"editgroup"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_model","","",48,{"i":[{"n":"self"}],"o":{"n":"changelogentry"}}],[0,"database_schema","fatcat","",null,null],[0,"abstracts","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::abstracts","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::abstracts::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"sha1","","",null,null],[3,"content","","",null,null],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",52,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"sha1"}}],[11,"default","","",53,{"o":{"n":"sha1"}}],[11,"walk_ast","","",53,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",53,null],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"content"}}],[11,"default","","",54,{"o":{"n":"content"}}],[11,"walk_ast","","",54,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",54,null],[6,"SqlType","fatcat::database_schema::abstracts","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",55,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",55,null],[11,"default_selection","","",55,null],[11,"as_query","","",55,null],[11,"primary_key","","",55,null],[11,"all_columns","","",55,null],[11,"table","","",55,null],[11,"into_update_target","","",55,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",55,null],[11,"join_target","","",55,null],[11,"join_target","","",55,null],[11,"join_target","","",55,null],[11,"values","","",55,null],[0,"changelog","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::changelog","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::changelog::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"editgroup_id","","",null,null],[3,"timestamp","","",null,null],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",56,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",57,{"o":{"n":"id"}}],[11,"walk_ast","","",57,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",57,null],[11,"add","","",57,null],[11,"sub","","",57,null],[11,"div","","",57,null],[11,"mul","","",57,null],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"editgroup_id"}}],[11,"default","","",58,{"o":{"n":"editgroup_id"}}],[11,"walk_ast","","",58,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",58,null],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"timestamp"}}],[11,"default","","",59,{"o":{"n":"timestamp"}}],[11,"walk_ast","","",59,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",59,null],[11,"add","","",59,null],[11,"sub","","",59,null],[6,"SqlType","fatcat::database_schema::changelog","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",60,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",60,null],[11,"default_selection","","",60,null],[11,"as_query","","",60,null],[11,"primary_key","","",60,null],[11,"all_columns","","",60,null],[11,"table","","",60,null],[11,"into_update_target","","",60,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",60,null],[11,"join_target","","",60,null],[11,"join_target","","",60,null],[11,"join_target","","",60,null],[11,"values","","",60,null],[0,"container_edit","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::container_edit","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::container_edit::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"editgroup_id","","",null,null],[3,"updated","","",null,null],[3,"ident_id","","",null,null],[3,"rev_id","","",null,null],[3,"redirect_id","","",null,null],[3,"prev_rev","","",null,null],[3,"extra_json","","",null,null],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",61,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",62,{"o":{"n":"id"}}],[11,"walk_ast","","",62,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",62,null],[11,"add","","",62,null],[11,"sub","","",62,null],[11,"div","","",62,null],[11,"mul","","",62,null],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"editgroup_id"}}],[11,"default","","",63,{"o":{"n":"editgroup_id"}}],[11,"walk_ast","","",63,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",63,null],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"updated"}}],[11,"default","","",64,{"o":{"n":"updated"}}],[11,"walk_ast","","",64,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",64,null],[11,"add","","",64,null],[11,"sub","","",64,null],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"ident_id"}}],[11,"default","","",65,{"o":{"n":"ident_id"}}],[11,"walk_ast","","",65,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",65,null],[11,"fmt","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"rev_id"}}],[11,"default","","",66,{"o":{"n":"rev_id"}}],[11,"walk_ast","","",66,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",66,null],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"redirect_id"}}],[11,"default","","",67,{"o":{"n":"redirect_id"}}],[11,"walk_ast","","",67,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",67,null],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"prev_rev"}}],[11,"default","","",68,{"o":{"n":"prev_rev"}}],[11,"walk_ast","","",68,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",68,null],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",69,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",69,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",69,null],[6,"SqlType","fatcat::database_schema::container_edit","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",70,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",70,null],[11,"default_selection","","",70,null],[11,"as_query","","",70,null],[11,"primary_key","","",70,null],[11,"all_columns","","",70,null],[11,"table","","",70,null],[11,"into_update_target","","",70,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",70,null],[11,"join_target","","",70,null],[11,"join_target","","",70,null],[11,"join_target","","",70,null],[11,"values","","",70,null],[0,"container_ident","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::container_ident","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::container_ident::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"is_live","","",null,null],[3,"rev_id","","",null,null],[3,"redirect_id","","",null,null],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",71,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",72,{"o":{"n":"id"}}],[11,"walk_ast","","",72,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",72,null],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"is_live"}}],[11,"default","","",73,{"o":{"n":"is_live"}}],[11,"walk_ast","","",73,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",73,null],[11,"fmt","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",74,{"i":[{"n":"self"}],"o":{"n":"rev_id"}}],[11,"default","","",74,{"o":{"n":"rev_id"}}],[11,"walk_ast","","",74,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",74,null],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",75,{"i":[{"n":"self"}],"o":{"n":"redirect_id"}}],[11,"default","","",75,{"o":{"n":"redirect_id"}}],[11,"walk_ast","","",75,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",75,null],[6,"SqlType","fatcat::database_schema::container_ident","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",76,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",76,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",76,null],[11,"default_selection","","",76,null],[11,"as_query","","",76,null],[11,"primary_key","","",76,null],[11,"all_columns","","",76,null],[11,"table","","",76,null],[11,"into_update_target","","",76,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",76,null],[11,"join_target","","",76,null],[11,"join_target","","",76,null],[11,"join_target","","",76,null],[11,"values","","",76,null],[0,"container_rev","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::container_rev","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::container_rev::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"extra_json","","",null,null],[3,"name","","",null,null],[3,"publisher","","",null,null],[3,"issnl","","",null,null],[3,"wikidata_qid","","",null,null],[3,"abbrev","","",null,null],[3,"coden","","",null,null],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",77,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",77,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",78,{"o":{"n":"id"}}],[11,"walk_ast","","",78,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",78,null],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",79,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",79,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",79,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",79,null],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",80,{"i":[{"n":"self"}],"o":{"n":"name"}}],[11,"default","","",80,{"o":{"n":"name"}}],[11,"walk_ast","","",80,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",80,null],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"publisher"}}],[11,"default","","",81,{"o":{"n":"publisher"}}],[11,"walk_ast","","",81,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",81,null],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"issnl"}}],[11,"default","","",82,{"o":{"n":"issnl"}}],[11,"walk_ast","","",82,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",82,null],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"wikidata_qid"}}],[11,"default","","",83,{"o":{"n":"wikidata_qid"}}],[11,"walk_ast","","",83,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",83,null],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"abbrev"}}],[11,"default","","",84,{"o":{"n":"abbrev"}}],[11,"walk_ast","","",84,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",84,null],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"coden"}}],[11,"default","","",85,{"o":{"n":"coden"}}],[11,"walk_ast","","",85,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",85,null],[6,"SqlType","fatcat::database_schema::container_rev","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",86,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",86,null],[11,"default_selection","","",86,null],[11,"as_query","","",86,null],[11,"primary_key","","",86,null],[11,"all_columns","","",86,null],[11,"table","","",86,null],[11,"into_update_target","","",86,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",86,null],[11,"join_target","","",86,null],[11,"join_target","","",86,null],[11,"join_target","","",86,null],[11,"values","","",86,null],[0,"creator_edit","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::creator_edit","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::creator_edit::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"editgroup_id","","",null,null],[3,"updated","","",null,null],[3,"ident_id","","",null,null],[3,"rev_id","","",null,null],[3,"redirect_id","","",null,null],[3,"prev_rev","","",null,null],[3,"extra_json","","",null,null],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",87,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",88,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",88,{"o":{"n":"id"}}],[11,"walk_ast","","",88,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",88,null],[11,"add","","",88,null],[11,"sub","","",88,null],[11,"div","","",88,null],[11,"mul","","",88,null],[11,"fmt","","",89,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"editgroup_id"}}],[11,"default","","",89,{"o":{"n":"editgroup_id"}}],[11,"walk_ast","","",89,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",89,null],[11,"fmt","","",90,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",90,{"i":[{"n":"self"}],"o":{"n":"updated"}}],[11,"default","","",90,{"o":{"n":"updated"}}],[11,"walk_ast","","",90,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",90,null],[11,"add","","",90,null],[11,"sub","","",90,null],[11,"fmt","","",91,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",91,{"i":[{"n":"self"}],"o":{"n":"ident_id"}}],[11,"default","","",91,{"o":{"n":"ident_id"}}],[11,"walk_ast","","",91,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",91,null],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",92,{"i":[{"n":"self"}],"o":{"n":"rev_id"}}],[11,"default","","",92,{"o":{"n":"rev_id"}}],[11,"walk_ast","","",92,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",92,null],[11,"fmt","","",93,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",93,{"i":[{"n":"self"}],"o":{"n":"redirect_id"}}],[11,"default","","",93,{"o":{"n":"redirect_id"}}],[11,"walk_ast","","",93,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",93,null],[11,"fmt","","",94,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",94,{"i":[{"n":"self"}],"o":{"n":"prev_rev"}}],[11,"default","","",94,{"o":{"n":"prev_rev"}}],[11,"walk_ast","","",94,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",94,null],[11,"fmt","","",95,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",95,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",95,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",95,null],[6,"SqlType","fatcat::database_schema::creator_edit","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",96,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",96,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",96,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",96,null],[11,"default_selection","","",96,null],[11,"as_query","","",96,null],[11,"primary_key","","",96,null],[11,"all_columns","","",96,null],[11,"table","","",96,null],[11,"into_update_target","","",96,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",96,null],[11,"join_target","","",96,null],[11,"join_target","","",96,null],[11,"join_target","","",96,null],[11,"values","","",96,null],[0,"creator_ident","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::creator_ident","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::creator_ident::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"is_live","","",null,null],[3,"rev_id","","",null,null],[3,"redirect_id","","",null,null],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",97,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",97,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",98,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",98,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",98,{"o":{"n":"id"}}],[11,"walk_ast","","",98,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",98,null],[11,"fmt","","",99,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",99,{"i":[{"n":"self"}],"o":{"n":"is_live"}}],[11,"default","","",99,{"o":{"n":"is_live"}}],[11,"walk_ast","","",99,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",99,null],[11,"fmt","","",100,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",100,{"i":[{"n":"self"}],"o":{"n":"rev_id"}}],[11,"default","","",100,{"o":{"n":"rev_id"}}],[11,"walk_ast","","",100,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",100,null],[11,"fmt","","",101,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",101,{"i":[{"n":"self"}],"o":{"n":"redirect_id"}}],[11,"default","","",101,{"o":{"n":"redirect_id"}}],[11,"walk_ast","","",101,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",101,null],[6,"SqlType","fatcat::database_schema::creator_ident","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",102,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",102,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",102,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",102,null],[11,"default_selection","","",102,null],[11,"as_query","","",102,null],[11,"primary_key","","",102,null],[11,"all_columns","","",102,null],[11,"table","","",102,null],[11,"into_update_target","","",102,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",102,null],[11,"join_target","","",102,null],[11,"join_target","","",102,null],[11,"join_target","","",102,null],[11,"values","","",102,null],[0,"creator_rev","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::creator_rev","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::creator_rev::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"extra_json","","",null,null],[3,"display_name","","",null,null],[3,"given_name","","",null,null],[3,"surname","","",null,null],[3,"orcid","","",null,null],[3,"wikidata_qid","","",null,null],[11,"fmt","","",103,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",103,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",103,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",104,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",104,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",104,{"o":{"n":"id"}}],[11,"walk_ast","","",104,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",104,null],[11,"fmt","","",105,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",105,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",105,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",105,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",105,null],[11,"fmt","","",106,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",106,{"i":[{"n":"self"}],"o":{"n":"display_name"}}],[11,"default","","",106,{"o":{"n":"display_name"}}],[11,"walk_ast","","",106,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",106,null],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"given_name"}}],[11,"default","","",107,{"o":{"n":"given_name"}}],[11,"walk_ast","","",107,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",107,null],[11,"fmt","","",108,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",108,{"i":[{"n":"self"}],"o":{"n":"surname"}}],[11,"default","","",108,{"o":{"n":"surname"}}],[11,"walk_ast","","",108,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",108,null],[11,"fmt","","",109,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",109,{"i":[{"n":"self"}],"o":{"n":"orcid"}}],[11,"default","","",109,{"o":{"n":"orcid"}}],[11,"walk_ast","","",109,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",109,null],[11,"fmt","","",110,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"wikidata_qid"}}],[11,"default","","",110,{"o":{"n":"wikidata_qid"}}],[11,"walk_ast","","",110,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",110,null],[6,"SqlType","fatcat::database_schema::creator_rev","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",111,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",111,null],[11,"default_selection","","",111,null],[11,"as_query","","",111,null],[11,"primary_key","","",111,null],[11,"all_columns","","",111,null],[11,"table","","",111,null],[11,"into_update_target","","",111,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",111,null],[11,"join_target","","",111,null],[11,"join_target","","",111,null],[11,"join_target","","",111,null],[11,"values","","",111,null],[0,"editgroup","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::editgroup","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::editgroup::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"editor_id","","",null,null],[3,"created","","",null,null],[3,"extra_json","","",null,null],[3,"description","","",null,null],[11,"fmt","","",112,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",112,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",112,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",113,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",113,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",113,{"o":{"n":"id"}}],[11,"walk_ast","","",113,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",113,null],[11,"fmt","","",114,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",114,{"i":[{"n":"self"}],"o":{"n":"editor_id"}}],[11,"default","","",114,{"o":{"n":"editor_id"}}],[11,"walk_ast","","",114,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",114,null],[11,"fmt","","",115,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",115,{"i":[{"n":"self"}],"o":{"n":"created"}}],[11,"default","","",115,{"o":{"n":"created"}}],[11,"walk_ast","","",115,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",115,null],[11,"add","","",115,null],[11,"sub","","",115,null],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",116,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",116,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",116,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",116,null],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",117,{"i":[{"n":"self"}],"o":{"n":"description"}}],[11,"default","","",117,{"o":{"n":"description"}}],[11,"walk_ast","","",117,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",117,null],[6,"SqlType","fatcat::database_schema::editgroup","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",118,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",118,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",118,null],[11,"default_selection","","",118,null],[11,"as_query","","",118,null],[11,"primary_key","","",118,null],[11,"all_columns","","",118,null],[11,"table","","",118,null],[11,"into_update_target","","",118,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",118,null],[11,"join_target","","",118,null],[11,"join_target","","",118,null],[11,"join_target","","",118,null],[11,"values","","",118,null],[0,"editor","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::editor","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::editor::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"username","","",null,null],[3,"is_admin","","",null,null],[3,"registered","","",null,null],[3,"active_editgroup_id","","",null,null],[11,"fmt","","",119,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",119,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",119,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",120,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",120,{"o":{"n":"id"}}],[11,"walk_ast","","",120,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",120,null],[11,"fmt","","",121,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",121,{"i":[{"n":"self"}],"o":{"n":"username"}}],[11,"default","","",121,{"o":{"n":"username"}}],[11,"walk_ast","","",121,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",121,null],[11,"fmt","","",122,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",122,{"i":[{"n":"self"}],"o":{"n":"is_admin"}}],[11,"default","","",122,{"o":{"n":"is_admin"}}],[11,"walk_ast","","",122,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",122,null],[11,"fmt","","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",123,{"i":[{"n":"self"}],"o":{"n":"registered"}}],[11,"default","","",123,{"o":{"n":"registered"}}],[11,"walk_ast","","",123,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",123,null],[11,"add","","",123,null],[11,"sub","","",123,null],[11,"fmt","","",124,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",124,{"i":[{"n":"self"}],"o":{"n":"active_editgroup_id"}}],[11,"default","","",124,{"o":{"n":"active_editgroup_id"}}],[11,"walk_ast","","",124,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",124,null],[6,"SqlType","fatcat::database_schema::editor","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",125,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",125,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",125,null],[11,"default_selection","","",125,null],[11,"as_query","","",125,null],[11,"primary_key","","",125,null],[11,"all_columns","","",125,null],[11,"table","","",125,null],[11,"into_update_target","","",125,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",125,null],[11,"join_target","","",125,null],[11,"join_target","","",125,null],[11,"join_target","","",125,null],[11,"values","","",125,null],[0,"file_edit","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::file_edit","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::file_edit::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"editgroup_id","","",null,null],[3,"updated","","",null,null],[3,"ident_id","","",null,null],[3,"rev_id","","",null,null],[3,"redirect_id","","",null,null],[3,"prev_rev","","",null,null],[3,"extra_json","","",null,null],[11,"fmt","","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",126,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",126,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",127,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",127,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",127,{"o":{"n":"id"}}],[11,"walk_ast","","",127,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",127,null],[11,"add","","",127,null],[11,"sub","","",127,null],[11,"div","","",127,null],[11,"mul","","",127,null],[11,"fmt","","",128,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",128,{"i":[{"n":"self"}],"o":{"n":"editgroup_id"}}],[11,"default","","",128,{"o":{"n":"editgroup_id"}}],[11,"walk_ast","","",128,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",128,null],[11,"fmt","","",129,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",129,{"i":[{"n":"self"}],"o":{"n":"updated"}}],[11,"default","","",129,{"o":{"n":"updated"}}],[11,"walk_ast","","",129,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",129,null],[11,"add","","",129,null],[11,"sub","","",129,null],[11,"fmt","","",130,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",130,{"i":[{"n":"self"}],"o":{"n":"ident_id"}}],[11,"default","","",130,{"o":{"n":"ident_id"}}],[11,"walk_ast","","",130,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",130,null],[11,"fmt","","",131,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",131,{"i":[{"n":"self"}],"o":{"n":"rev_id"}}],[11,"default","","",131,{"o":{"n":"rev_id"}}],[11,"walk_ast","","",131,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",131,null],[11,"fmt","","",132,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",132,{"i":[{"n":"self"}],"o":{"n":"redirect_id"}}],[11,"default","","",132,{"o":{"n":"redirect_id"}}],[11,"walk_ast","","",132,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",132,null],[11,"fmt","","",133,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",133,{"i":[{"n":"self"}],"o":{"n":"prev_rev"}}],[11,"default","","",133,{"o":{"n":"prev_rev"}}],[11,"walk_ast","","",133,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",133,null],[11,"fmt","","",134,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",134,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",134,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",134,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",134,null],[6,"SqlType","fatcat::database_schema::file_edit","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",135,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",135,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",135,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",135,null],[11,"default_selection","","",135,null],[11,"as_query","","",135,null],[11,"primary_key","","",135,null],[11,"all_columns","","",135,null],[11,"table","","",135,null],[11,"into_update_target","","",135,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",135,null],[11,"join_target","","",135,null],[11,"join_target","","",135,null],[11,"join_target","","",135,null],[11,"values","","",135,null],[0,"file_ident","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::file_ident","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::file_ident::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"is_live","","",null,null],[3,"rev_id","","",null,null],[3,"redirect_id","","",null,null],[11,"fmt","","",136,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",136,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",136,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",137,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",137,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",137,{"o":{"n":"id"}}],[11,"walk_ast","","",137,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",137,null],[11,"fmt","","",138,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",138,{"i":[{"n":"self"}],"o":{"n":"is_live"}}],[11,"default","","",138,{"o":{"n":"is_live"}}],[11,"walk_ast","","",138,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",138,null],[11,"fmt","","",139,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",139,{"i":[{"n":"self"}],"o":{"n":"rev_id"}}],[11,"default","","",139,{"o":{"n":"rev_id"}}],[11,"walk_ast","","",139,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",139,null],[11,"fmt","","",140,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",140,{"i":[{"n":"self"}],"o":{"n":"redirect_id"}}],[11,"default","","",140,{"o":{"n":"redirect_id"}}],[11,"walk_ast","","",140,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",140,null],[6,"SqlType","fatcat::database_schema::file_ident","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",141,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",141,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",141,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",141,null],[11,"default_selection","","",141,null],[11,"as_query","","",141,null],[11,"primary_key","","",141,null],[11,"all_columns","","",141,null],[11,"table","","",141,null],[11,"into_update_target","","",141,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",141,null],[11,"join_target","","",141,null],[11,"join_target","","",141,null],[11,"join_target","","",141,null],[11,"values","","",141,null],[0,"file_release","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::file_release","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::file_release::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"file_rev","","",null,null],[3,"target_release_ident_id","","",null,null],[11,"fmt","","",142,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",142,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",142,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",143,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",143,{"i":[{"n":"self"}],"o":{"n":"file_rev"}}],[11,"default","","",143,{"o":{"n":"file_rev"}}],[11,"walk_ast","","",143,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",143,null],[11,"fmt","","",144,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",144,{"i":[{"n":"self"}],"o":{"n":"target_release_ident_id"}}],[11,"default","","",144,{"o":{"n":"target_release_ident_id"}}],[11,"walk_ast","","",144,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",144,null],[6,"SqlType","fatcat::database_schema::file_release","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",145,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",145,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",145,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",145,null],[11,"default_selection","","",145,null],[11,"as_query","","",145,null],[11,"primary_key","","",145,null],[11,"all_columns","","",145,null],[11,"table","","",145,null],[11,"into_update_target","","",145,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",145,null],[11,"join_target","","",145,null],[11,"join_target","","",145,null],[11,"join_target","","",145,null],[11,"values","","",145,null],[0,"file_rev","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::file_rev","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::file_rev::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"extra_json","","",null,null],[3,"size","","",null,null],[3,"sha1","","",null,null],[3,"sha256","","",null,null],[3,"md5","","",null,null],[3,"mimetype","","",null,null],[11,"fmt","","",146,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",146,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",146,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",147,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",147,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",147,{"o":{"n":"id"}}],[11,"walk_ast","","",147,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",147,null],[11,"fmt","","",148,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",148,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",148,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",148,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",148,null],[11,"fmt","","",149,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",149,{"i":[{"n":"self"}],"o":{"n":"size"}}],[11,"default","","",149,{"o":{"n":"size"}}],[11,"walk_ast","","",149,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",149,null],[11,"add","","",149,null],[11,"sub","","",149,null],[11,"div","","",149,null],[11,"mul","","",149,null],[11,"fmt","","",150,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",150,{"i":[{"n":"self"}],"o":{"n":"sha1"}}],[11,"default","","",150,{"o":{"n":"sha1"}}],[11,"walk_ast","","",150,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",150,null],[11,"fmt","","",151,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",151,{"i":[{"n":"self"}],"o":{"n":"sha256"}}],[11,"default","","",151,{"o":{"n":"sha256"}}],[11,"walk_ast","","",151,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",151,null],[11,"fmt","","",152,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",152,{"i":[{"n":"self"}],"o":{"n":"md5"}}],[11,"default","","",152,{"o":{"n":"md5"}}],[11,"walk_ast","","",152,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",152,null],[11,"fmt","","",153,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",153,{"i":[{"n":"self"}],"o":{"n":"mimetype"}}],[11,"default","","",153,{"o":{"n":"mimetype"}}],[11,"walk_ast","","",153,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",153,null],[6,"SqlType","fatcat::database_schema::file_rev","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",154,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",154,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",154,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",154,null],[11,"default_selection","","",154,null],[11,"as_query","","",154,null],[11,"primary_key","","",154,null],[11,"all_columns","","",154,null],[11,"table","","",154,null],[11,"into_update_target","","",154,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",154,null],[11,"join_target","","",154,null],[11,"join_target","","",154,null],[11,"join_target","","",154,null],[11,"values","","",154,null],[0,"file_rev_url","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::file_rev_url","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::file_rev_url::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"file_rev","","",null,null],[3,"rel","","",null,null],[3,"url","","",null,null],[11,"fmt","","",155,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",155,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",155,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",156,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",156,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",156,{"o":{"n":"id"}}],[11,"walk_ast","","",156,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",156,null],[11,"add","","",156,null],[11,"sub","","",156,null],[11,"div","","",156,null],[11,"mul","","",156,null],[11,"fmt","","",157,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",157,{"i":[{"n":"self"}],"o":{"n":"file_rev"}}],[11,"default","","",157,{"o":{"n":"file_rev"}}],[11,"walk_ast","","",157,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",157,null],[11,"fmt","","",158,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",158,{"i":[{"n":"self"}],"o":{"n":"rel"}}],[11,"default","","",158,{"o":{"n":"rel"}}],[11,"walk_ast","","",158,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",158,null],[11,"fmt","","",159,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",159,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"default","","",159,{"o":{"n":"url"}}],[11,"walk_ast","","",159,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",159,null],[6,"SqlType","fatcat::database_schema::file_rev_url","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",160,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",160,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",160,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",160,null],[11,"default_selection","","",160,null],[11,"as_query","","",160,null],[11,"primary_key","","",160,null],[11,"all_columns","","",160,null],[11,"table","","",160,null],[11,"into_update_target","","",160,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",160,null],[11,"join_target","","",160,null],[11,"join_target","","",160,null],[11,"join_target","","",160,null],[11,"values","","",160,null],[0,"release_contrib","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::release_contrib","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::release_contrib::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"release_rev","","",null,null],[3,"creator_ident_id","","",null,null],[3,"raw_name","","",null,null],[3,"role","","",null,null],[3,"index_val","","",null,null],[3,"extra_json","","",null,null],[11,"fmt","","",161,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",161,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",161,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",162,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",162,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",162,{"o":{"n":"id"}}],[11,"walk_ast","","",162,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",162,null],[11,"add","","",162,null],[11,"sub","","",162,null],[11,"div","","",162,null],[11,"mul","","",162,null],[11,"fmt","","",163,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",163,{"i":[{"n":"self"}],"o":{"n":"release_rev"}}],[11,"default","","",163,{"o":{"n":"release_rev"}}],[11,"walk_ast","","",163,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",163,null],[11,"fmt","","",164,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",164,{"i":[{"n":"self"}],"o":{"n":"creator_ident_id"}}],[11,"default","","",164,{"o":{"n":"creator_ident_id"}}],[11,"walk_ast","","",164,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",164,null],[11,"fmt","","",165,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",165,{"i":[{"n":"self"}],"o":{"n":"raw_name"}}],[11,"default","","",165,{"o":{"n":"raw_name"}}],[11,"walk_ast","","",165,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",165,null],[11,"fmt","","",166,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",166,{"i":[{"n":"self"}],"o":{"n":"role"}}],[11,"default","","",166,{"o":{"n":"role"}}],[11,"walk_ast","","",166,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",166,null],[11,"fmt","","",167,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",167,{"i":[{"n":"self"}],"o":{"n":"index_val"}}],[11,"default","","",167,{"o":{"n":"index_val"}}],[11,"walk_ast","","",167,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",167,null],[11,"add","","",167,null],[11,"sub","","",167,null],[11,"div","","",167,null],[11,"mul","","",167,null],[11,"fmt","","",168,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",168,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",168,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",168,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",168,null],[6,"SqlType","fatcat::database_schema::release_contrib","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",169,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",169,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",169,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",169,null],[11,"default_selection","","",169,null],[11,"as_query","","",169,null],[11,"primary_key","","",169,null],[11,"all_columns","","",169,null],[11,"table","","",169,null],[11,"into_update_target","","",169,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",169,null],[11,"join_target","","",169,null],[11,"join_target","","",169,null],[11,"join_target","","",169,null],[11,"values","","",169,null],[0,"release_edit","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::release_edit","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::release_edit::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"editgroup_id","","",null,null],[3,"updated","","",null,null],[3,"ident_id","","",null,null],[3,"rev_id","","",null,null],[3,"redirect_id","","",null,null],[3,"prev_rev","","",null,null],[3,"extra_json","","",null,null],[11,"fmt","","",170,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",170,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",170,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",171,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",171,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",171,{"o":{"n":"id"}}],[11,"walk_ast","","",171,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",171,null],[11,"add","","",171,null],[11,"sub","","",171,null],[11,"div","","",171,null],[11,"mul","","",171,null],[11,"fmt","","",172,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",172,{"i":[{"n":"self"}],"o":{"n":"editgroup_id"}}],[11,"default","","",172,{"o":{"n":"editgroup_id"}}],[11,"walk_ast","","",172,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",172,null],[11,"fmt","","",173,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",173,{"i":[{"n":"self"}],"o":{"n":"updated"}}],[11,"default","","",173,{"o":{"n":"updated"}}],[11,"walk_ast","","",173,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",173,null],[11,"add","","",173,null],[11,"sub","","",173,null],[11,"fmt","","",174,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",174,{"i":[{"n":"self"}],"o":{"n":"ident_id"}}],[11,"default","","",174,{"o":{"n":"ident_id"}}],[11,"walk_ast","","",174,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",174,null],[11,"fmt","","",175,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",175,{"i":[{"n":"self"}],"o":{"n":"rev_id"}}],[11,"default","","",175,{"o":{"n":"rev_id"}}],[11,"walk_ast","","",175,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",175,null],[11,"fmt","","",176,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",176,{"i":[{"n":"self"}],"o":{"n":"redirect_id"}}],[11,"default","","",176,{"o":{"n":"redirect_id"}}],[11,"walk_ast","","",176,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",176,null],[11,"fmt","","",177,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",177,{"i":[{"n":"self"}],"o":{"n":"prev_rev"}}],[11,"default","","",177,{"o":{"n":"prev_rev"}}],[11,"walk_ast","","",177,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",177,null],[11,"fmt","","",178,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",178,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",178,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",178,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",178,null],[6,"SqlType","fatcat::database_schema::release_edit","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",179,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",179,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",179,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",179,null],[11,"default_selection","","",179,null],[11,"as_query","","",179,null],[11,"primary_key","","",179,null],[11,"all_columns","","",179,null],[11,"table","","",179,null],[11,"into_update_target","","",179,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",179,null],[11,"join_target","","",179,null],[11,"join_target","","",179,null],[11,"join_target","","",179,null],[11,"values","","",179,null],[0,"release_ident","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::release_ident","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::release_ident::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"is_live","","",null,null],[3,"rev_id","","",null,null],[3,"redirect_id","","",null,null],[11,"fmt","","",180,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",180,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",180,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",181,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",181,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",181,{"o":{"n":"id"}}],[11,"walk_ast","","",181,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",181,null],[11,"fmt","","",182,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",182,{"i":[{"n":"self"}],"o":{"n":"is_live"}}],[11,"default","","",182,{"o":{"n":"is_live"}}],[11,"walk_ast","","",182,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",182,null],[11,"fmt","","",183,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",183,{"i":[{"n":"self"}],"o":{"n":"rev_id"}}],[11,"default","","",183,{"o":{"n":"rev_id"}}],[11,"walk_ast","","",183,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",183,null],[11,"fmt","","",184,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",184,{"i":[{"n":"self"}],"o":{"n":"redirect_id"}}],[11,"default","","",184,{"o":{"n":"redirect_id"}}],[11,"walk_ast","","",184,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",184,null],[6,"SqlType","fatcat::database_schema::release_ident","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",185,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",185,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",185,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",185,null],[11,"default_selection","","",185,null],[11,"as_query","","",185,null],[11,"primary_key","","",185,null],[11,"all_columns","","",185,null],[11,"table","","",185,null],[11,"into_update_target","","",185,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",185,null],[11,"join_target","","",185,null],[11,"join_target","","",185,null],[11,"join_target","","",185,null],[11,"values","","",185,null],[0,"release_ref","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::release_ref","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::release_ref::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"release_rev","","",null,null],[3,"target_release_ident_id","","",null,null],[3,"index_val","","",null,null],[3,"key","","",null,null],[3,"extra_json","","",null,null],[3,"container_title","","",null,null],[3,"year","","",null,null],[3,"title","","",null,null],[3,"locator","","",null,null],[11,"fmt","","",186,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",186,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",186,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",187,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",187,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",187,{"o":{"n":"id"}}],[11,"walk_ast","","",187,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",187,null],[11,"add","","",187,null],[11,"sub","","",187,null],[11,"div","","",187,null],[11,"mul","","",187,null],[11,"fmt","","",188,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",188,{"i":[{"n":"self"}],"o":{"n":"release_rev"}}],[11,"default","","",188,{"o":{"n":"release_rev"}}],[11,"walk_ast","","",188,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",188,null],[11,"fmt","","",189,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",189,{"i":[{"n":"self"}],"o":{"n":"target_release_ident_id"}}],[11,"default","","",189,{"o":{"n":"target_release_ident_id"}}],[11,"walk_ast","","",189,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",189,null],[11,"fmt","","",190,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",190,{"i":[{"n":"self"}],"o":{"n":"index_val"}}],[11,"default","","",190,{"o":{"n":"index_val"}}],[11,"walk_ast","","",190,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",190,null],[11,"add","","",190,null],[11,"sub","","",190,null],[11,"div","","",190,null],[11,"mul","","",190,null],[11,"fmt","","",191,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",191,{"i":[{"n":"self"}],"o":{"n":"key"}}],[11,"default","","",191,{"o":{"n":"key"}}],[11,"walk_ast","","",191,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",191,null],[11,"fmt","","",192,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",192,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",192,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",192,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",192,null],[11,"fmt","","",193,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",193,{"i":[{"n":"self"}],"o":{"n":"container_title"}}],[11,"default","","",193,{"o":{"n":"container_title"}}],[11,"walk_ast","","",193,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",193,null],[11,"fmt","","",194,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",194,{"i":[{"n":"self"}],"o":{"n":"year"}}],[11,"default","","",194,{"o":{"n":"year"}}],[11,"walk_ast","","",194,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",194,null],[11,"add","","",194,null],[11,"sub","","",194,null],[11,"div","","",194,null],[11,"mul","","",194,null],[11,"fmt","","",195,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",195,{"i":[{"n":"self"}],"o":{"n":"title"}}],[11,"default","","",195,{"o":{"n":"title"}}],[11,"walk_ast","","",195,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",195,null],[11,"fmt","","",196,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",196,{"i":[{"n":"self"}],"o":{"n":"locator"}}],[11,"default","","",196,{"o":{"n":"locator"}}],[11,"walk_ast","","",196,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",196,null],[6,"SqlType","fatcat::database_schema::release_ref","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",197,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",197,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",197,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",197,null],[11,"default_selection","","",197,null],[11,"as_query","","",197,null],[11,"primary_key","","",197,null],[11,"all_columns","","",197,null],[11,"table","","",197,null],[11,"into_update_target","","",197,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",197,null],[11,"join_target","","",197,null],[11,"join_target","","",197,null],[11,"join_target","","",197,null],[11,"values","","",197,null],[0,"release_rev","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::release_rev","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::release_rev::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"extra_json","","",null,null],[3,"work_ident_id","","",null,null],[3,"container_ident_id","","",null,null],[3,"title","","",null,null],[3,"release_type","","",null,null],[3,"release_status","","",null,null],[3,"release_date","","",null,null],[3,"doi","","",null,null],[3,"pmid","","",null,null],[3,"pmcid","","",null,null],[3,"wikidata_qid","","",null,null],[3,"isbn13","","",null,null],[3,"core_id","","",null,null],[3,"volume","","",null,null],[3,"issue","","",null,null],[3,"pages","","",null,null],[3,"publisher","","",null,null],[3,"language","","",null,null],[11,"fmt","","",198,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",198,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",198,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",199,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",199,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",199,{"o":{"n":"id"}}],[11,"walk_ast","","",199,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",199,null],[11,"fmt","","",200,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",200,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",200,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",200,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",200,null],[11,"fmt","","",201,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",201,{"i":[{"n":"self"}],"o":{"n":"work_ident_id"}}],[11,"default","","",201,{"o":{"n":"work_ident_id"}}],[11,"walk_ast","","",201,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",201,null],[11,"fmt","","",202,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",202,{"i":[{"n":"self"}],"o":{"n":"container_ident_id"}}],[11,"default","","",202,{"o":{"n":"container_ident_id"}}],[11,"walk_ast","","",202,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",202,null],[11,"fmt","","",203,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",203,{"i":[{"n":"self"}],"o":{"n":"title"}}],[11,"default","","",203,{"o":{"n":"title"}}],[11,"walk_ast","","",203,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",203,null],[11,"fmt","","",204,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",204,{"i":[{"n":"self"}],"o":{"n":"release_type"}}],[11,"default","","",204,{"o":{"n":"release_type"}}],[11,"walk_ast","","",204,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",204,null],[11,"fmt","","",205,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",205,{"i":[{"n":"self"}],"o":{"n":"release_status"}}],[11,"default","","",205,{"o":{"n":"release_status"}}],[11,"walk_ast","","",205,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",205,null],[11,"fmt","","",206,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",206,{"i":[{"n":"self"}],"o":{"n":"release_date"}}],[11,"default","","",206,{"o":{"n":"release_date"}}],[11,"walk_ast","","",206,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",206,null],[11,"add","","",206,null],[11,"sub","","",206,null],[11,"fmt","","",207,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",207,{"i":[{"n":"self"}],"o":{"n":"doi"}}],[11,"default","","",207,{"o":{"n":"doi"}}],[11,"walk_ast","","",207,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",207,null],[11,"fmt","","",208,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",208,{"i":[{"n":"self"}],"o":{"n":"pmid"}}],[11,"default","","",208,{"o":{"n":"pmid"}}],[11,"walk_ast","","",208,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",208,null],[11,"fmt","","",209,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",209,{"i":[{"n":"self"}],"o":{"n":"pmcid"}}],[11,"default","","",209,{"o":{"n":"pmcid"}}],[11,"walk_ast","","",209,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",209,null],[11,"fmt","","",210,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",210,{"i":[{"n":"self"}],"o":{"n":"wikidata_qid"}}],[11,"default","","",210,{"o":{"n":"wikidata_qid"}}],[11,"walk_ast","","",210,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",210,null],[11,"fmt","","",211,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",211,{"i":[{"n":"self"}],"o":{"n":"isbn13"}}],[11,"default","","",211,{"o":{"n":"isbn13"}}],[11,"walk_ast","","",211,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",211,null],[11,"fmt","","",212,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",212,{"i":[{"n":"self"}],"o":{"n":"core_id"}}],[11,"default","","",212,{"o":{"n":"core_id"}}],[11,"walk_ast","","",212,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",212,null],[11,"fmt","","",213,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",213,{"i":[{"n":"self"}],"o":{"n":"volume"}}],[11,"default","","",213,{"o":{"n":"volume"}}],[11,"walk_ast","","",213,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",213,null],[11,"fmt","","",214,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",214,{"i":[{"n":"self"}],"o":{"n":"issue"}}],[11,"default","","",214,{"o":{"n":"issue"}}],[11,"walk_ast","","",214,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",214,null],[11,"fmt","","",215,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",215,{"i":[{"n":"self"}],"o":{"n":"pages"}}],[11,"default","","",215,{"o":{"n":"pages"}}],[11,"walk_ast","","",215,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",215,null],[11,"fmt","","",216,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",216,{"i":[{"n":"self"}],"o":{"n":"publisher"}}],[11,"default","","",216,{"o":{"n":"publisher"}}],[11,"walk_ast","","",216,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",216,null],[11,"fmt","","",217,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",217,{"i":[{"n":"self"}],"o":{"n":"language"}}],[11,"default","","",217,{"o":{"n":"language"}}],[11,"walk_ast","","",217,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",217,null],[6,"SqlType","fatcat::database_schema::release_rev","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",218,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",218,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",218,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",218,null],[11,"default_selection","","",218,null],[11,"as_query","","",218,null],[11,"primary_key","","",218,null],[11,"all_columns","","",218,null],[11,"table","","",218,null],[11,"into_update_target","","",218,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",218,null],[11,"join_target","","",218,null],[11,"join_target","","",218,null],[11,"join_target","","",218,null],[11,"values","","",218,null],[0,"release_rev_abstract","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::release_rev_abstract","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::release_rev_abstract::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"release_rev","","",null,null],[3,"abstract_sha1","","",null,null],[3,"mimetype","","",null,null],[3,"lang","","",null,null],[11,"fmt","","",219,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",219,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",219,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",220,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",220,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",220,{"o":{"n":"id"}}],[11,"walk_ast","","",220,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",220,null],[11,"add","","",220,null],[11,"sub","","",220,null],[11,"div","","",220,null],[11,"mul","","",220,null],[11,"fmt","","",221,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",221,{"i":[{"n":"self"}],"o":{"n":"release_rev"}}],[11,"default","","",221,{"o":{"n":"release_rev"}}],[11,"walk_ast","","",221,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",221,null],[11,"fmt","","",222,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",222,{"i":[{"n":"self"}],"o":{"n":"abstract_sha1"}}],[11,"default","","",222,{"o":{"n":"abstract_sha1"}}],[11,"walk_ast","","",222,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",222,null],[11,"fmt","","",223,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",223,{"i":[{"n":"self"}],"o":{"n":"mimetype"}}],[11,"default","","",223,{"o":{"n":"mimetype"}}],[11,"walk_ast","","",223,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",223,null],[11,"fmt","","",224,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",224,{"i":[{"n":"self"}],"o":{"n":"lang"}}],[11,"default","","",224,{"o":{"n":"lang"}}],[11,"walk_ast","","",224,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",224,null],[6,"SqlType","fatcat::database_schema::release_rev_abstract","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",225,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",225,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",225,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",225,null],[11,"default_selection","","",225,null],[11,"as_query","","",225,null],[11,"primary_key","","",225,null],[11,"all_columns","","",225,null],[11,"table","","",225,null],[11,"into_update_target","","",225,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",225,null],[11,"join_target","","",225,null],[11,"join_target","","",225,null],[11,"join_target","","",225,null],[11,"values","","",225,null],[0,"work_edit","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::work_edit","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::work_edit::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"editgroup_id","","",null,null],[3,"updated","","",null,null],[3,"ident_id","","",null,null],[3,"rev_id","","",null,null],[3,"redirect_id","","",null,null],[3,"prev_rev","","",null,null],[3,"extra_json","","",null,null],[11,"fmt","","",226,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",226,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",226,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",227,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",227,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",227,{"o":{"n":"id"}}],[11,"walk_ast","","",227,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",227,null],[11,"add","","",227,null],[11,"sub","","",227,null],[11,"div","","",227,null],[11,"mul","","",227,null],[11,"fmt","","",228,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",228,{"i":[{"n":"self"}],"o":{"n":"editgroup_id"}}],[11,"default","","",228,{"o":{"n":"editgroup_id"}}],[11,"walk_ast","","",228,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",228,null],[11,"fmt","","",229,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",229,{"i":[{"n":"self"}],"o":{"n":"updated"}}],[11,"default","","",229,{"o":{"n":"updated"}}],[11,"walk_ast","","",229,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",229,null],[11,"add","","",229,null],[11,"sub","","",229,null],[11,"fmt","","",230,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",230,{"i":[{"n":"self"}],"o":{"n":"ident_id"}}],[11,"default","","",230,{"o":{"n":"ident_id"}}],[11,"walk_ast","","",230,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",230,null],[11,"fmt","","",231,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",231,{"i":[{"n":"self"}],"o":{"n":"rev_id"}}],[11,"default","","",231,{"o":{"n":"rev_id"}}],[11,"walk_ast","","",231,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",231,null],[11,"fmt","","",232,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",232,{"i":[{"n":"self"}],"o":{"n":"redirect_id"}}],[11,"default","","",232,{"o":{"n":"redirect_id"}}],[11,"walk_ast","","",232,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",232,null],[11,"fmt","","",233,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",233,{"i":[{"n":"self"}],"o":{"n":"prev_rev"}}],[11,"default","","",233,{"o":{"n":"prev_rev"}}],[11,"walk_ast","","",233,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",233,null],[11,"fmt","","",234,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",234,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",234,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",234,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",234,null],[6,"SqlType","fatcat::database_schema::work_edit","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",235,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",235,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",235,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",235,null],[11,"default_selection","","",235,null],[11,"as_query","","",235,null],[11,"primary_key","","",235,null],[11,"all_columns","","",235,null],[11,"table","","",235,null],[11,"into_update_target","","",235,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",235,null],[11,"join_target","","",235,null],[11,"join_target","","",235,null],[11,"join_target","","",235,null],[11,"values","","",235,null],[0,"work_ident","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::work_ident","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::work_ident::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"is_live","","",null,null],[3,"rev_id","","",null,null],[3,"redirect_id","","",null,null],[11,"fmt","","",236,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",236,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",236,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",237,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",237,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",237,{"o":{"n":"id"}}],[11,"walk_ast","","",237,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",237,null],[11,"fmt","","",238,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",238,{"i":[{"n":"self"}],"o":{"n":"is_live"}}],[11,"default","","",238,{"o":{"n":"is_live"}}],[11,"walk_ast","","",238,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",238,null],[11,"fmt","","",239,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",239,{"i":[{"n":"self"}],"o":{"n":"rev_id"}}],[11,"default","","",239,{"o":{"n":"rev_id"}}],[11,"walk_ast","","",239,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",239,null],[11,"fmt","","",240,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",240,{"i":[{"n":"self"}],"o":{"n":"redirect_id"}}],[11,"default","","",240,{"o":{"n":"redirect_id"}}],[11,"walk_ast","","",240,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",240,null],[6,"SqlType","fatcat::database_schema::work_ident","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",241,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",241,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",241,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",241,null],[11,"default_selection","","",241,null],[11,"as_query","","",241,null],[11,"primary_key","","",241,null],[11,"all_columns","","",241,null],[11,"table","","",241,null],[11,"into_update_target","","",241,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",241,null],[11,"join_target","","",241,null],[11,"join_target","","",241,null],[11,"join_target","","",241,null],[11,"values","","",241,null],[0,"work_rev","fatcat::database_schema","",null,null],[3,"table","fatcat::database_schema::work_rev","The actual table struct",null,null],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","fatcat::database_schema::work_rev::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",null,null],[3,"id","","",null,null],[3,"extra_json","","",null,null],[11,"fmt","","",242,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",242,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"walk_ast","","",242,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"fmt","","",243,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",243,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default","","",243,{"o":{"n":"id"}}],[11,"walk_ast","","",243,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",243,null],[11,"fmt","","",244,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",244,{"i":[{"n":"self"}],"o":{"n":"extra_json"}}],[11,"default","","",244,{"o":{"n":"extra_json"}}],[11,"walk_ast","","",244,{"i":[{"n":"self"},{"n":"astpass"}],"o":{"n":"queryresult"}}],[11,"eq_all","","",244,null],[6,"SqlType","fatcat::database_schema::work_rev","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"fmt","","",245,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",245,{"i":[{"n":"self"}],"o":{"n":"table"}}],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",245,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"from_clause","","",245,null],[11,"default_selection","","",245,null],[11,"as_query","","",245,null],[11,"primary_key","","",245,null],[11,"all_columns","","",245,null],[11,"table","","",245,null],[11,"into_update_target","","",245,{"i":[{"n":"self"}],"o":{"n":"updatetarget"}}],[11,"join_target","","",245,null],[11,"join_target","","",245,null],[11,"join_target","","",245,null],[11,"join_target","","",245,null],[11,"values","","",245,null],[11,"join_target","fatcat::database_schema::changelog","",60,null],[11,"join_target","fatcat::database_schema::editgroup","",118,null],[11,"join_target","fatcat::database_schema::container_edit","",70,null],[11,"join_target","fatcat::database_schema::editgroup","",118,null],[11,"join_target","fatcat::database_schema::container_ident","",76,null],[11,"join_target","fatcat::database_schema::container_rev","",86,null],[11,"join_target","fatcat::database_schema::creator_edit","",96,null],[11,"join_target","fatcat::database_schema::editgroup","",118,null],[11,"join_target","fatcat::database_schema::creator_ident","",102,null],[11,"join_target","fatcat::database_schema::creator_rev","",111,null],[11,"join_target","fatcat::database_schema::file_edit","",135,null],[11,"join_target","fatcat::database_schema::editgroup","",118,null],[11,"join_target","fatcat::database_schema::file_ident","",141,null],[11,"join_target","fatcat::database_schema::file_rev","",154,null],[11,"join_target","fatcat::database_schema::file_release","",145,null],[11,"join_target","fatcat::database_schema::file_rev","",154,null],[11,"join_target","fatcat::database_schema::file_release","",145,null],[11,"join_target","fatcat::database_schema::release_ident","",185,null],[11,"join_target","fatcat::database_schema::file_rev_url","",160,null],[11,"join_target","fatcat::database_schema::file_rev","",154,null],[11,"join_target","fatcat::database_schema::release_contrib","",169,null],[11,"join_target","fatcat::database_schema::creator_ident","",102,null],[11,"join_target","fatcat::database_schema::release_contrib","",169,null],[11,"join_target","fatcat::database_schema::release_rev","",218,null],[11,"join_target","fatcat::database_schema::release_edit","",179,null],[11,"join_target","fatcat::database_schema::editgroup","",118,null],[11,"join_target","fatcat::database_schema::release_ident","",185,null],[11,"join_target","fatcat::database_schema::release_rev","",218,null],[11,"join_target","fatcat::database_schema::release_ref","",197,null],[11,"join_target","fatcat::database_schema::release_ident","",185,null],[11,"join_target","fatcat::database_schema::release_ref","",197,null],[11,"join_target","fatcat::database_schema::release_rev","",218,null],[11,"join_target","","",218,null],[11,"join_target","fatcat::database_schema::container_ident","",76,null],[11,"join_target","fatcat::database_schema::release_rev","",218,null],[11,"join_target","fatcat::database_schema::work_ident","",241,null],[11,"join_target","fatcat::database_schema::release_rev_abstract","",225,null],[11,"join_target","fatcat::database_schema::abstracts","",55,null],[11,"join_target","fatcat::database_schema::release_rev_abstract","",225,null],[11,"join_target","fatcat::database_schema::release_rev","",218,null],[11,"join_target","fatcat::database_schema::work_edit","",235,null],[11,"join_target","fatcat::database_schema::editgroup","",118,null],[11,"join_target","fatcat::database_schema::work_ident","",241,null],[11,"join_target","fatcat::database_schema::work_rev","",245,null],[0,"errors","fatcat","",null,null],[3,"Error","fatcat::errors","The Error type.",null,null],[12,"0","","The kind of the error.",246,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",247,null],[13,"Fmt","","",247,null],[13,"Diesel","","",247,null],[13,"R2d2","","",247,null],[13,"Uuid","","",247,null],[13,"Io","","",247,null],[13,"Serde","","",247,null],[13,"InvalidFatcatId","","",247,null],[13,"MalformedExternalId","","",247,null],[13,"EditgroupAlreadyAccepted","","",247,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",248,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",246,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",246,{"i":[{"n":"errorkind"},{"n":"state"}],"o":{"n":"error"}}],[11,"from_kind","","",246,null],[11,"with_chain","","",246,{"i":[{"n":"e"},{"n":"k"}],"o":{"n":"self"}}],[11,"kind","","",246,null],[11,"iter","","",246,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"chain_err","","",246,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"backtrace","","",246,{"i":[{"n":"self"}],"o":{"g":["backtrace"],"n":"option"}}],[11,"extract_backtrace","","",246,{"i":[{"n":"error"}],"o":{"g":["internalbacktrace"],"n":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",246,{"i":[{"n":"errorkind"}],"o":{"n":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",246,{"i":[{"n":"e"},{"n":"k"}],"o":{"n":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",246,{"i":[{"g":["error"],"n":"box"},{"n":"k"}],"o":{"n":"error"}}],[11,"kind","","Returns the kind of the error.",246,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"iter","","Iterates over the error chain.",246,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",246,{"i":[{"n":"self"}],"o":{"g":["backtrace"],"n":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",246,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"error"}}],[11,"description","","A short description of the error. This method is identical to `Error::description()`",246,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","","",246,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",246,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"fmt","","",246,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",246,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",246,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",246,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",246,{"i":[{"n":"parseerror"}],"o":{"n":"self"}}],[11,"from","","",246,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",246,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",246,{"i":[{"n":"errorkind"}],"o":{"n":"self"}}],[11,"from","","",246,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",246,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"fmt","","",247,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",247,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","A string describing the error kind.",247,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from","","",247,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",247,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"from","","",247,{"i":[{"n":"error"}],"o":{"n":"self"}}],[6,"ConnectionPool","fatcat","",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"xclacksoverhead"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"xclacksoverhead"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"xclacksoverhead"}],"o":{"n":"bool"}}],[11,"deref","","",0,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"header_name","","",0,{"o":{"n":"str"}}],[11,"parse_header","","",0,null],[11,"fmt_header","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"after","","",249,{"i":[{"n":"self"},{"n":"request"},{"n":"response"}],"o":{"g":["response"],"n":"ironresult"}}]],"paths":[[3,"XClacksOverhead"],[8,"EntityCrud"],[3,"EditContext"],[3,"ExpandFlags"],[3,"FatCatId"],[3,"Server"],[3,"ContainerRevRow"],[3,"ContainerRevNewRow"],[3,"ContainerEditRow"],[3,"ContainerEditNewRow"],[3,"ContainerIdentRow"],[3,"ContainerIdentNewRow"],[3,"CreatorRevRow"],[3,"CreatorRevNewRow"],[3,"CreatorEditRow"],[3,"CreatorEditNewRow"],[3,"CreatorIdentRow"],[3,"CreatorIdentNewRow"],[3,"FileRevUrlRow"],[3,"FileRevUrlNewRow"],[3,"FileRevRow"],[3,"FileRevNewRow"],[3,"FileEditRow"],[3,"FileEditNewRow"],[3,"FileIdentRow"],[3,"FileIdentNewRow"],[3,"ReleaseRevRow"],[3,"ReleaseRevNewRow"],[3,"ReleaseEditRow"],[3,"ReleaseEditNewRow"],[3,"ReleaseIdentRow"],[3,"ReleaseIdentNewRow"],[3,"WorkRevRow"],[3,"WorkRevNewRow"],[3,"WorkEditRow"],[3,"WorkEditNewRow"],[3,"WorkIdentRow"],[3,"WorkIdentNewRow"],[3,"ReleaseRevAbstractRow"],[3,"ReleaseRevAbstractNewRow"],[3,"ReleaseContribRow"],[3,"ReleaseContribNewRow"],[3,"ReleaseRefRow"],[3,"ReleaseRefNewRow"],[3,"FileReleaseRow"],[3,"AbstractsRow"],[3,"EditgroupRow"],[3,"EditorRow"],[3,"ChangelogRow"],[4,"EntityState"],[8,"EntityIdentRow"],[8,"EntityEditRow"],[3,"star"],[3,"sha1"],[3,"content"],[3,"table"],[3,"star"],[3,"id"],[3,"editgroup_id"],[3,"timestamp"],[3,"table"],[3,"star"],[3,"id"],[3,"editgroup_id"],[3,"updated"],[3,"ident_id"],[3,"rev_id"],[3,"redirect_id"],[3,"prev_rev"],[3,"extra_json"],[3,"table"],[3,"star"],[3,"id"],[3,"is_live"],[3,"rev_id"],[3,"redirect_id"],[3,"table"],[3,"star"],[3,"id"],[3,"extra_json"],[3,"name"],[3,"publisher"],[3,"issnl"],[3,"wikidata_qid"],[3,"abbrev"],[3,"coden"],[3,"table"],[3,"star"],[3,"id"],[3,"editgroup_id"],[3,"updated"],[3,"ident_id"],[3,"rev_id"],[3,"redirect_id"],[3,"prev_rev"],[3,"extra_json"],[3,"table"],[3,"star"],[3,"id"],[3,"is_live"],[3,"rev_id"],[3,"redirect_id"],[3,"table"],[3,"star"],[3,"id"],[3,"extra_json"],[3,"display_name"],[3,"given_name"],[3,"surname"],[3,"orcid"],[3,"wikidata_qid"],[3,"table"],[3,"star"],[3,"id"],[3,"editor_id"],[3,"created"],[3,"extra_json"],[3,"description"],[3,"table"],[3,"star"],[3,"id"],[3,"username"],[3,"is_admin"],[3,"registered"],[3,"active_editgroup_id"],[3,"table"],[3,"star"],[3,"id"],[3,"editgroup_id"],[3,"updated"],[3,"ident_id"],[3,"rev_id"],[3,"redirect_id"],[3,"prev_rev"],[3,"extra_json"],[3,"table"],[3,"star"],[3,"id"],[3,"is_live"],[3,"rev_id"],[3,"redirect_id"],[3,"table"],[3,"star"],[3,"file_rev"],[3,"target_release_ident_id"],[3,"table"],[3,"star"],[3,"id"],[3,"extra_json"],[3,"size"],[3,"sha1"],[3,"sha256"],[3,"md5"],[3,"mimetype"],[3,"table"],[3,"star"],[3,"id"],[3,"file_rev"],[3,"rel"],[3,"url"],[3,"table"],[3,"star"],[3,"id"],[3,"release_rev"],[3,"creator_ident_id"],[3,"raw_name"],[3,"role"],[3,"index_val"],[3,"extra_json"],[3,"table"],[3,"star"],[3,"id"],[3,"editgroup_id"],[3,"updated"],[3,"ident_id"],[3,"rev_id"],[3,"redirect_id"],[3,"prev_rev"],[3,"extra_json"],[3,"table"],[3,"star"],[3,"id"],[3,"is_live"],[3,"rev_id"],[3,"redirect_id"],[3,"table"],[3,"star"],[3,"id"],[3,"release_rev"],[3,"target_release_ident_id"],[3,"index_val"],[3,"key"],[3,"extra_json"],[3,"container_title"],[3,"year"],[3,"title"],[3,"locator"],[3,"table"],[3,"star"],[3,"id"],[3,"extra_json"],[3,"work_ident_id"],[3,"container_ident_id"],[3,"title"],[3,"release_type"],[3,"release_status"],[3,"release_date"],[3,"doi"],[3,"pmid"],[3,"pmcid"],[3,"wikidata_qid"],[3,"isbn13"],[3,"core_id"],[3,"volume"],[3,"issue"],[3,"pages"],[3,"publisher"],[3,"language"],[3,"table"],[3,"star"],[3,"id"],[3,"release_rev"],[3,"abstract_sha1"],[3,"mimetype"],[3,"lang"],[3,"table"],[3,"star"],[3,"id"],[3,"editgroup_id"],[3,"updated"],[3,"ident_id"],[3,"rev_id"],[3,"redirect_id"],[3,"prev_rev"],[3,"extra_json"],[3,"table"],[3,"star"],[3,"id"],[3,"is_live"],[3,"rev_id"],[3,"redirect_id"],[3,"table"],[3,"star"],[3,"id"],[3,"extra_json"],[3,"table"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[3,"XClacksOverheadMiddleware"]]};
searchIndex["fatcat_api"] = {"doc":"","items":[[8,"Future","fatcat_api","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",0,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",0,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",0,{"inputs":[{"name":"self"}],"output":{"generics":["async"],"name":"result"}}],[11,"wait","","Block the current thread until this future is resolved.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",0,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",0,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",0,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",0,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"join"}}],[11,"join3","","Same as `join`, but with more futures.",0,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"}],"output":{"name":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",0,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"}],"output":{"name":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",0,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"}],"output":{"name":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",0,{"inputs":[{"name":"self"}],"output":{"name":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",0,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",0,{"inputs":[{"name":"self"}],"output":{"name":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",0,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",0,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",0,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[3,"ApiError","","Very simple error type - just holds a description of the error. This is useful for human diagnosis and troubleshooting, but not for applications to parse. The justification for this is to deny applications visibility into the communication layer, forcing the application code to act solely on the logical responses that the API provides, promoting abstraction in the application code.",null,null],[12,"0","","",1,null],[3,"Context","","Request context, both as received in a server handler or as sent in a client request. When REST microservices are chained, the Context passes data from the server API to any further HTTP requests.",null,null],[12,"x_span_id","","Tracking ID when passing a request to another microservice.",2,null],[12,"authorization","","Authorization data, filled in from middlewares.",2,null],[12,"auth_data","","Raw authentication data, for use in making HTTP requests as a client.",2,null],[3,"ContextWrapper","","Context wrapper, to bind an API with a context.",null,null],[5,"url_for","fatcat_api::router","Generate a URL based off of the currently requested URL.",null,{"inputs":[{"name":"request"},{"name":"str"},{"generics":["string","string","randomstate"],"name":"hashmap"}],"output":{"name":"url"}}],[3,"Params","","",null,null],[3,"Router","","`Router` provides an interface for creating complex routes as middleware for the Iron framework.",null,null],[3,"TrailingSlash","","The error thrown by router if a request was redirected by adding or removing a trailing slash.",null,null],[3,"NoRoute","","The error thrown by router if there is no matching route, it is always accompanied by a NotFound response.",null,null],[4,"AcceptEditgroupResponse","fatcat_api","",null,null],[13,"MergedSuccessfully","","Merged Successfully",3,null],[13,"BadRequest","","Bad Request",3,null],[13,"NotFound","","Not Found",3,null],[13,"EditConflict","","Edit Conflict",3,null],[13,"GenericError","","Generic Error",3,null],[4,"CreateContainerResponse","","",null,null],[13,"CreatedEntity","","Created Entity",4,null],[13,"BadRequest","","Bad Request",4,null],[13,"NotFound","","Not Found",4,null],[13,"GenericError","","Generic Error",4,null],[4,"CreateContainerBatchResponse","","",null,null],[13,"CreatedEntities","","Created Entities",5,null],[13,"BadRequest","","Bad Request",5,null],[13,"NotFound","","Not Found",5,null],[13,"GenericError","","Generic Error",5,null],[4,"CreateCreatorResponse","","",null,null],[13,"CreatedEntity","","Created Entity",6,null],[13,"BadRequest","","Bad Request",6,null],[13,"NotFound","","Not Found",6,null],[13,"GenericError","","Generic Error",6,null],[4,"CreateCreatorBatchResponse","","",null,null],[13,"CreatedEntities","","Created Entities",7,null],[13,"BadRequest","","Bad Request",7,null],[13,"NotFound","","Not Found",7,null],[13,"GenericError","","Generic Error",7,null],[4,"CreateEditgroupResponse","","",null,null],[13,"SuccessfullyCreated","","Successfully Created",8,null],[13,"BadRequest","","Bad Request",8,null],[13,"GenericError","","Generic Error",8,null],[4,"CreateFileResponse","","",null,null],[13,"CreatedEntity","","Created Entity",9,null],[13,"BadRequest","","Bad Request",9,null],[13,"NotFound","","Not Found",9,null],[13,"GenericError","","Generic Error",9,null],[4,"CreateFileBatchResponse","","",null,null],[13,"CreatedEntities","","Created Entities",10,null],[13,"BadRequest","","Bad Request",10,null],[13,"NotFound","","Not Found",10,null],[13,"GenericError","","Generic Error",10,null],[4,"CreateReleaseResponse","","",null,null],[13,"CreatedEntity","","Created Entity",11,null],[13,"BadRequest","","Bad Request",11,null],[13,"NotFound","","Not Found",11,null],[13,"GenericError","","Generic Error",11,null],[4,"CreateReleaseBatchResponse","","",null,null],[13,"CreatedEntities","","Created Entities",12,null],[13,"BadRequest","","Bad Request",12,null],[13,"NotFound","","Not Found",12,null],[13,"GenericError","","Generic Error",12,null],[4,"CreateWorkResponse","","",null,null],[13,"CreatedEntity","","Created Entity",13,null],[13,"BadRequest","","Bad Request",13,null],[13,"NotFound","","Not Found",13,null],[13,"GenericError","","Generic Error",13,null],[4,"CreateWorkBatchResponse","","",null,null],[13,"CreatedEntities","","Created Entities",14,null],[13,"BadRequest","","Bad Request",14,null],[13,"NotFound","","Not Found",14,null],[13,"GenericError","","Generic Error",14,null],[4,"DeleteContainerResponse","","",null,null],[13,"DeletedEntity","","Deleted Entity",15,null],[13,"BadRequest","","Bad Request",15,null],[13,"NotFound","","Not Found",15,null],[13,"GenericError","","Generic Error",15,null],[4,"DeleteCreatorResponse","","",null,null],[13,"DeletedEntity","","Deleted Entity",16,null],[13,"BadRequest","","Bad Request",16,null],[13,"NotFound","","Not Found",16,null],[13,"GenericError","","Generic Error",16,null],[4,"DeleteFileResponse","","",null,null],[13,"DeletedEntity","","Deleted Entity",17,null],[13,"BadRequest","","Bad Request",17,null],[13,"NotFound","","Not Found",17,null],[13,"GenericError","","Generic Error",17,null],[4,"DeleteReleaseResponse","","",null,null],[13,"DeletedEntity","","Deleted Entity",18,null],[13,"BadRequest","","Bad Request",18,null],[13,"NotFound","","Not Found",18,null],[13,"GenericError","","Generic Error",18,null],[4,"DeleteWorkResponse","","",null,null],[13,"DeletedEntity","","Deleted Entity",19,null],[13,"BadRequest","","Bad Request",19,null],[13,"NotFound","","Not Found",19,null],[13,"GenericError","","Generic Error",19,null],[4,"GetChangelogResponse","","",null,null],[13,"Success","","Success",20,null],[13,"GenericError","","Generic Error",20,null],[4,"GetChangelogEntryResponse","","",null,null],[13,"FoundChangelogEntry","","Found Changelog Entry",21,null],[13,"NotFound","","Not Found",21,null],[13,"GenericError","","Generic Error",21,null],[4,"GetContainerResponse","","",null,null],[13,"FoundEntity","","Found Entity",22,null],[13,"BadRequest","","Bad Request",22,null],[13,"NotFound","","Not Found",22,null],[13,"GenericError","","Generic Error",22,null],[4,"GetContainerHistoryResponse","","",null,null],[13,"FoundEntityHistory","","Found Entity History",23,null],[13,"BadRequest","","Bad Request",23,null],[13,"NotFound","","Not Found",23,null],[13,"GenericError","","Generic Error",23,null],[4,"GetCreatorResponse","","",null,null],[13,"FoundEntity","","Found Entity",24,null],[13,"BadRequest","","Bad Request",24,null],[13,"NotFound","","Not Found",24,null],[13,"GenericError","","Generic Error",24,null],[4,"GetCreatorHistoryResponse","","",null,null],[13,"FoundEntityHistory","","Found Entity History",25,null],[13,"BadRequest","","Bad Request",25,null],[13,"NotFound","","Not Found",25,null],[13,"GenericError","","Generic Error",25,null],[4,"GetCreatorReleasesResponse","","",null,null],[13,"FoundEntity","","Found Entity",26,null],[13,"BadRequest","","Bad Request",26,null],[13,"NotFound","","Not Found",26,null],[13,"GenericError","","Generic Error",26,null],[4,"GetEditgroupResponse","","",null,null],[13,"FoundEntity","","Found Entity",27,null],[13,"BadRequest","","Bad Request",27,null],[13,"NotFound","","Not Found",27,null],[13,"GenericError","","Generic Error",27,null],[4,"GetEditorResponse","","",null,null],[13,"FoundEditor","","Found Editor",28,null],[13,"NotFound","","Not Found",28,null],[13,"GenericError","","Generic Error",28,null],[4,"GetEditorChangelogResponse","","",null,null],[13,"FoundMergedChanges","","Found Merged Changes",29,null],[13,"NotFound","","Not Found",29,null],[13,"GenericError","","Generic Error",29,null],[4,"GetFileResponse","","",null,null],[13,"FoundEntity","","Found Entity",30,null],[13,"BadRequest","","Bad Request",30,null],[13,"NotFound","","Not Found",30,null],[13,"GenericError","","Generic Error",30,null],[4,"GetFileHistoryResponse","","",null,null],[13,"FoundEntityHistory","","Found Entity History",31,null],[13,"BadRequest","","Bad Request",31,null],[13,"NotFound","","Not Found",31,null],[13,"GenericError","","Generic Error",31,null],[4,"GetReleaseResponse","","",null,null],[13,"FoundEntity","","Found Entity",32,null],[13,"BadRequest","","Bad Request",32,null],[13,"NotFound","","Not Found",32,null],[13,"GenericError","","Generic Error",32,null],[4,"GetReleaseFilesResponse","","",null,null],[13,"FoundEntity","","Found Entity",33,null],[13,"BadRequest","","Bad Request",33,null],[13,"NotFound","","Not Found",33,null],[13,"GenericError","","Generic Error",33,null],[4,"GetReleaseHistoryResponse","","",null,null],[13,"FoundEntityHistory","","Found Entity History",34,null],[13,"BadRequest","","Bad Request",34,null],[13,"NotFound","","Not Found",34,null],[13,"GenericError","","Generic Error",34,null],[4,"GetStatsResponse","","",null,null],[13,"Success","","Success",35,null],[13,"GenericError","","Generic Error",35,null],[4,"GetWorkResponse","","",null,null],[13,"FoundEntity","","Found Entity",36,null],[13,"BadRequest","","Bad Request",36,null],[13,"NotFound","","Not Found",36,null],[13,"GenericError","","Generic Error",36,null],[4,"GetWorkHistoryResponse","","",null,null],[13,"FoundEntityHistory","","Found Entity History",37,null],[13,"BadRequest","","Bad Request",37,null],[13,"NotFound","","Not Found",37,null],[13,"GenericError","","Generic Error",37,null],[4,"GetWorkReleasesResponse","","",null,null],[13,"FoundEntity","","Found Entity",38,null],[13,"BadRequest","","Bad Request",38,null],[13,"NotFound","","Not Found",38,null],[13,"GenericError","","Generic Error",38,null],[4,"LookupContainerResponse","","",null,null],[13,"FoundEntity","","Found Entity",39,null],[13,"BadRequest","","Bad Request",39,null],[13,"NotFound","","Not Found",39,null],[13,"GenericError","","Generic Error",39,null],[4,"LookupCreatorResponse","","",null,null],[13,"FoundEntity","","Found Entity",40,null],[13,"BadRequest","","Bad Request",40,null],[13,"NotFound","","Not Found",40,null],[13,"GenericError","","Generic Error",40,null],[4,"LookupFileResponse","","",null,null],[13,"FoundEntity","","Found Entity",41,null],[13,"BadRequest","","Bad Request",41,null],[13,"NotFound","","Not Found",41,null],[13,"GenericError","","Generic Error",41,null],[4,"LookupReleaseResponse","","",null,null],[13,"FoundEntity","","Found Entity",42,null],[13,"BadRequest","","Bad Request",42,null],[13,"NotFound","","Not Found",42,null],[13,"GenericError","","Generic Error",42,null],[4,"UpdateContainerResponse","","",null,null],[13,"UpdatedEntity","","Updated Entity",43,null],[13,"BadRequest","","Bad Request",43,null],[13,"NotFound","","Not Found",43,null],[13,"GenericError","","Generic Error",43,null],[4,"UpdateCreatorResponse","","",null,null],[13,"UpdatedEntity","","Updated Entity",44,null],[13,"BadRequest","","Bad Request",44,null],[13,"NotFound","","Not Found",44,null],[13,"GenericError","","Generic Error",44,null],[4,"UpdateFileResponse","","",null,null],[13,"UpdatedEntity","","Updated Entity",45,null],[13,"BadRequest","","Bad Request",45,null],[13,"NotFound","","Not Found",45,null],[13,"GenericError","","Generic Error",45,null],[4,"UpdateReleaseResponse","","",null,null],[13,"UpdatedEntity","","Updated Entity",46,null],[13,"BadRequest","","Bad Request",46,null],[13,"NotFound","","Not Found",46,null],[13,"GenericError","","Generic Error",46,null],[4,"UpdateWorkResponse","","",null,null],[13,"UpdatedEntity","","Updated Entity",47,null],[13,"BadRequest","","Bad Request",47,null],[13,"NotFound","","Not Found",47,null],[13,"GenericError","","Generic Error",47,null],[0,"client","","",null,null],[3,"Client","fatcat_api::client","A client that implements the API by making HTTP calls out to a server.",null,null],[4,"ClientInitError","","",null,null],[13,"InvalidScheme","","",48,null],[13,"InvalidUrl","","",48,null],[13,"MissingHost","","",48,null],[13,"SslError","","",48,null],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"client"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"try_new_http","","",49,{"inputs":[{"name":"t"}],"output":{"generics":["client","clientiniterror"],"name":"result"}}],[11,"try_new_https","","",49,{"inputs":[{"name":"t"},{"name":"ca"}],"output":{"generics":["client","clientiniterror"],"name":"result"}}],[11,"try_new_https_mutual","","",49,{"inputs":[{"name":"t"},{"name":"ca"},{"name":"k"},{"name":"c"}],"output":{"generics":["client","clientiniterror"],"name":"result"}}],[11,"try_new_with_hyper_client","","Constructor for creating a `Client` by passing in a pre-made `hyper` client.",49,{"inputs":[{"name":"t"},{"generics":["fn"],"name":"arc"}],"output":{"generics":["client","clientiniterror"],"name":"result"}}],[11,"accept_editgroup","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_container","","",49,{"inputs":[{"name":"self"},{"name":"containerentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_container_batch","","",49,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_creator","","",49,{"inputs":[{"name":"self"},{"name":"creatorentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_creator_batch","","",49,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_editgroup","","",49,{"inputs":[{"name":"self"},{"name":"editgroup"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_file","","",49,{"inputs":[{"name":"self"},{"name":"fileentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_file_batch","","",49,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_release","","",49,{"inputs":[{"name":"self"},{"name":"releaseentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_release_batch","","",49,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_work","","",49,{"inputs":[{"name":"self"},{"name":"workentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_work_batch","","",49,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"delete_container","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"delete_creator","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"delete_file","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"delete_release","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"delete_work","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_changelog","","",49,{"inputs":[{"name":"self"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_changelog_entry","","",49,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_container","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_container_history","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_creator","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_creator_history","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_creator_releases","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_editgroup","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_editor","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_editor_changelog","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_file","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_file_history","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_release","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_release_files","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_release_history","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_stats","","",49,{"inputs":[{"name":"self"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_work","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_work_history","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_work_releases","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"lookup_container","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"lookup_creator","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"lookup_file","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"lookup_release","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"update_container","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"containerentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"update_creator","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"creatorentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"update_file","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"fileentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"update_release","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"releaseentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"update_work","","",49,{"inputs":[{"name":"self"},{"name":"string"},{"name":"workentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",48,{"inputs":[{"name":"parseerror"}],"output":{"name":"clientiniterror"}}],[11,"from","","",48,{"inputs":[{"name":"errorstack"}],"output":{"name":"clientiniterror"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",48,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"server","fatcat_api","",null,null],[3,"Authorization","fatcat_api::server","Storage of authorization parameters for an incoming request, used for REST API authorization.",null,null],[12,"subject","","Subject for which authorization is granted (i.e., what may be accessed.)",50,null],[12,"scopes","","Scopes for which authorization is granted (i.e., what types of access are permitted).",50,null],[12,"issuer","","Identity of the party to whom authorization was granted, if available (i.e., who is responsible for the access).",50,null],[3,"Warning","","",null,null],[12,"0","","",51,null],[3,"ExtractAuthData","","Middleware to extract authentication data from request",null,null],[5,"router","","Create a new router for `Api`",null,{"inputs":[{"name":"t"}],"output":{"name":"router"}}],[5,"route","","Add routes for `Api` to a provided router.",null,{"inputs":[{"name":"router"},{"name":"t"}],"output":null}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"warning"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"warning"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"warning"}],"output":{"name":"bool"}}],[11,"deref","","",51,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"deref_mut","","",51,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"header_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",51,null],[11,"fmt_header","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"before","","",52,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"ironresult"}}],[0,"models","fatcat_api","",null,null],[3,"ChangelogEntry","fatcat_api::models","",null,null],[12,"index","","",53,null],[12,"editgroup_id","","",53,null],[12,"timestamp","","",53,null],[12,"editgroup","","",53,null],[3,"ContainerEntity","","",null,null],[12,"coden","","",54,null],[12,"abbrev","","",54,null],[12,"wikidata_qid","","",54,null],[12,"issnl","","",54,null],[12,"publisher","","",54,null],[12,"name","","",54,null],[12,"extra","","",54,null],[12,"editgroup_id","","base32-encoded unique identifier",54,null],[12,"redirect","","base32-encoded unique identifier",54,null],[12,"revision","","UUID (lower-case, dash-separated, hex-encoded 128-bit)",54,null],[12,"ident","","base32-encoded unique identifier",54,null],[12,"state","","",54,null],[3,"CreatorEntity","","",null,null],[12,"wikidata_qid","","",55,null],[12,"orcid","","",55,null],[12,"surname","","",55,null],[12,"given_name","","",55,null],[12,"display_name","","",55,null],[12,"state","","",55,null],[12,"ident","","base32-encoded unique identifier",55,null],[12,"revision","","UUID (lower-case, dash-separated, hex-encoded 128-bit)",55,null],[12,"redirect","","base32-encoded unique identifier",55,null],[12,"editgroup_id","","base32-encoded unique identifier",55,null],[12,"extra","","",55,null],[3,"Editgroup","","",null,null],[12,"id","","base32-encoded unique identifier",56,null],[12,"editor_id","","base32-encoded unique identifier",56,null],[12,"description","","",56,null],[12,"extra","","",56,null],[12,"edits","","",56,null],[3,"EditgroupEdits","","",null,null],[12,"containers","","",57,null],[12,"creators","","",57,null],[12,"files","","",57,null],[12,"releases","","",57,null],[12,"works","","",57,null],[3,"Editor","","",null,null],[12,"id","","",58,null],[12,"username","","",58,null],[3,"EntityEdit","","",null,null],[12,"edit_id","","",59,null],[12,"ident","","",59,null],[12,"revision","","",59,null],[12,"prev_revision","","",59,null],[12,"redirect_ident","","",59,null],[12,"editgroup_id","","",59,null],[12,"extra","","",59,null],[3,"EntityHistoryEntry","","",null,null],[12,"edit","","",60,null],[12,"editgroup","","",60,null],[12,"changelog_entry","","",60,null],[3,"ErrorResponse","","",null,null],[12,"message","","",61,null],[3,"FileEntity","","",null,null],[12,"releases","","",62,null],[12,"mimetype","","",62,null],[12,"urls","","",62,null],[12,"sha256","","",62,null],[12,"md5","","",62,null],[12,"sha1","","",62,null],[12,"size","","",62,null],[12,"extra","","",62,null],[12,"editgroup_id","","base32-encoded unique identifier",62,null],[12,"redirect","","base32-encoded unique identifier",62,null],[12,"revision","","UUID (lower-case, dash-separated, hex-encoded 128-bit)",62,null],[12,"ident","","base32-encoded unique identifier",62,null],[12,"state","","",62,null],[3,"FileEntityUrls","","",null,null],[12,"url","","",63,null],[12,"rel","","",63,null],[3,"ReleaseContrib","","",null,null],[12,"index","","",64,null],[12,"creator_id","","",64,null],[12,"creator","","Optional; GET-only",64,null],[12,"raw_name","","",64,null],[12,"extra","","",64,null],[12,"role","","",64,null],[3,"ReleaseEntity","","",null,null],[12,"abstracts","","",65,null],[12,"refs","","",65,null],[12,"contribs","","",65,null],[12,"language","","Two-letter RFC1766/ISO639-1 language code, with extensions",65,null],[12,"publisher","","",65,null],[12,"pages","","",65,null],[12,"issue","","",65,null],[12,"volume","","",65,null],[12,"wikidata_qid","","",65,null],[12,"pmcid","","",65,null],[12,"pmid","","",65,null],[12,"core_id","","",65,null],[12,"isbn13","","",65,null],[12,"doi","","",65,null],[12,"release_date","","",65,null],[12,"release_status","","",65,null],[12,"release_type","","",65,null],[12,"container_id","","",65,null],[12,"files","","Optional; GET-only",65,null],[12,"container","","Optional; GET-only",65,null],[12,"work_id","","",65,null],[12,"title","","",65,null],[12,"state","","",65,null],[12,"ident","","base32-encoded unique identifier",65,null],[12,"revision","","UUID (lower-case, dash-separated, hex-encoded 128-bit)",65,null],[12,"redirect","","base32-encoded unique identifier",65,null],[12,"editgroup_id","","base32-encoded unique identifier",65,null],[12,"extra","","",65,null],[3,"ReleaseEntityAbstracts","","",null,null],[12,"sha1","","",66,null],[12,"content","","",66,null],[12,"mimetype","","",66,null],[12,"lang","","",66,null],[3,"ReleaseRef","","",null,null],[12,"index","","",67,null],[12,"target_release_id","","",67,null],[12,"extra","","",67,null],[12,"key","","",67,null],[12,"year","","",67,null],[12,"container_title","","",67,null],[12,"title","","",67,null],[12,"locator","","",67,null],[3,"StatsResponse","","",null,null],[12,"extra","","",68,null],[3,"Success","","",null,null],[12,"message","","",69,null],[3,"WorkEntity","","",null,null],[12,"extra","","",70,null],[12,"editgroup_id","","base32-encoded unique identifier",70,null],[12,"redirect","","base32-encoded unique identifier",70,null],[12,"revision","","UUID (lower-case, dash-separated, hex-encoded 128-bit)",70,null],[12,"ident","","base32-encoded unique identifier",70,null],[12,"state","","",70,null],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"changelogentry"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"changelogentry"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"changelogentry"}],"output":{"name":"bool"}}],[11,"new","","",53,{"inputs":[{"name":"i64"},{"name":"string"},{"generics":["utc"],"name":"datetime"}],"output":{"name":"changelogentry"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"containerentity"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"containerentity"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"containerentity"}],"output":{"name":"bool"}}],[11,"new","","",54,{"inputs":[{"name":"string"}],"output":{"name":"containerentity"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"creatorentity"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"creatorentity"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"creatorentity"}],"output":{"name":"bool"}}],[11,"new","","",55,{"inputs":[{"name":"string"}],"output":{"name":"creatorentity"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"editgroup"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"editgroup"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"editgroup"}],"output":{"name":"bool"}}],[11,"new","","",56,{"inputs":[{"name":"string"}],"output":{"name":"editgroup"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"editgroupedits"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"editgroupedits"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"self"},{"name":"editgroupedits"}],"output":{"name":"bool"}}],[11,"new","","",57,{"inputs":[],"output":{"name":"editgroupedits"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"editor"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"editor"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"editor"}],"output":{"name":"bool"}}],[11,"new","","",58,{"inputs":[{"name":"string"}],"output":{"name":"editor"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"entityedit"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"entityedit"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"entityedit"}],"output":{"name":"bool"}}],[11,"new","","",59,{"inputs":[{"name":"i64"},{"name":"string"},{"name":"string"}],"output":{"name":"entityedit"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"entityhistoryentry"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"entityhistoryentry"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"entityhistoryentry"}],"output":{"name":"bool"}}],[11,"new","","",60,{"inputs":[{"name":"entityedit"},{"name":"editgroup"},{"name":"changelogentry"}],"output":{"name":"entityhistoryentry"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"errorresponse"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"errorresponse"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"errorresponse"}],"output":{"name":"bool"}}],[11,"new","","",61,{"inputs":[{"name":"string"}],"output":{"name":"errorresponse"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"fileentity"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"fileentity"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"fileentity"}],"output":{"name":"bool"}}],[11,"new","","",62,{"inputs":[],"output":{"name":"fileentity"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"fileentityurls"}}],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"fileentityurls"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"self"},{"name":"fileentityurls"}],"output":{"name":"bool"}}],[11,"new","","",63,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"fileentityurls"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"releasecontrib"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"releasecontrib"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"releasecontrib"}],"output":{"name":"bool"}}],[11,"new","","",64,{"inputs":[],"output":{"name":"releasecontrib"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"releaseentity"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"releaseentity"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"releaseentity"}],"output":{"name":"bool"}}],[11,"new","","",65,{"inputs":[{"name":"string"}],"output":{"name":"releaseentity"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"releaseentityabstracts"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"releaseentityabstracts"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"self"},{"name":"releaseentityabstracts"}],"output":{"name":"bool"}}],[11,"new","","",66,{"inputs":[],"output":{"name":"releaseentityabstracts"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"releaseref"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"releaseref"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"releaseref"}],"output":{"name":"bool"}}],[11,"new","","",67,{"inputs":[],"output":{"name":"releaseref"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"statsresponse"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"statsresponse"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"self"},{"name":"statsresponse"}],"output":{"name":"bool"}}],[11,"new","","",68,{"inputs":[],"output":{"name":"statsresponse"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"success"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"success"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"self"},{"name":"success"}],"output":{"name":"bool"}}],[11,"new","","",69,{"inputs":[{"name":"string"}],"output":{"name":"success"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"workentity"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"workentity"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"workentity"}],"output":{"name":"bool"}}],[11,"new","","",70,{"inputs":[],"output":{"name":"workentity"}}],[8,"Api","fatcat_api","API",null,null],[10,"accept_editgroup","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_container","","",71,{"inputs":[{"name":"self"},{"name":"containerentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_container_batch","","",71,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_creator","","",71,{"inputs":[{"name":"self"},{"name":"creatorentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_creator_batch","","",71,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_editgroup","","",71,{"inputs":[{"name":"self"},{"name":"editgroup"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_file","","",71,{"inputs":[{"name":"self"},{"name":"fileentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_file_batch","","",71,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_release","","",71,{"inputs":[{"name":"self"},{"name":"releaseentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_release_batch","","",71,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_work","","",71,{"inputs":[{"name":"self"},{"name":"workentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_work_batch","","",71,{"inputs":[{"name":"self"},{"name":"vec"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"delete_container","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"delete_creator","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"delete_file","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"delete_release","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"delete_work","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_changelog","","",71,{"inputs":[{"name":"self"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_changelog_entry","","",71,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_container","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_container_history","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_creator","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_creator_history","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_creator_releases","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_editgroup","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_editor","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_editor_changelog","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_file","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_file_history","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_release","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_release_files","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_release_history","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_stats","","",71,{"inputs":[{"name":"self"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_work","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_work_history","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_work_releases","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"lookup_container","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"lookup_creator","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"lookup_file","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"lookup_release","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"update_container","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"containerentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"update_creator","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"creatorentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"update_file","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"fileentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"update_release","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"releaseentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[10,"update_work","","",71,{"inputs":[{"name":"self"},{"name":"string"},{"name":"workentity"},{"name":"context"}],"output":{"generics":["future"],"name":"box"}}],[8,"ApiNoContext","","API without a `Context`",null,null],[10,"accept_editgroup","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_container","","",72,{"inputs":[{"name":"self"},{"name":"containerentity"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_container_batch","","",72,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_creator","","",72,{"inputs":[{"name":"self"},{"name":"creatorentity"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_creator_batch","","",72,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_editgroup","","",72,{"inputs":[{"name":"self"},{"name":"editgroup"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_file","","",72,{"inputs":[{"name":"self"},{"name":"fileentity"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_file_batch","","",72,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_release","","",72,{"inputs":[{"name":"self"},{"name":"releaseentity"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_release_batch","","",72,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_work","","",72,{"inputs":[{"name":"self"},{"name":"workentity"}],"output":{"generics":["future"],"name":"box"}}],[10,"create_work_batch","","",72,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["future"],"name":"box"}}],[10,"delete_container","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"delete_creator","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"delete_file","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"delete_release","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"delete_work","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_changelog","","",72,{"inputs":[{"name":"self"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_changelog_entry","","",72,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_container","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_container_history","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_creator","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_creator_history","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_creator_releases","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_editgroup","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_editor","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_editor_changelog","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_file","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_file_history","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_release","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_release_files","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_release_history","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_stats","","",72,{"inputs":[{"name":"self"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_work","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_work_history","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[10,"get_work_releases","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"lookup_container","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"lookup_creator","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"lookup_file","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"lookup_release","","",72,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[10,"update_container","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"name":"containerentity"}],"output":{"generics":["future"],"name":"box"}}],[10,"update_creator","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"name":"creatorentity"}],"output":{"generics":["future"],"name":"box"}}],[10,"update_file","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"name":"fileentity"}],"output":{"generics":["future"],"name":"box"}}],[10,"update_release","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"name":"releaseentity"}],"output":{"generics":["future"],"name":"box"}}],[10,"update_work","","",72,{"inputs":[{"name":"self"},{"name":"string"},{"name":"workentity"}],"output":{"generics":["future"],"name":"box"}}],[8,"ContextWrapperExt","","Trait to extend an API to make it easy to bind it to a context.",null,null],[10,"with_context","","Binds this API to a context.",73,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"contextwrapper"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"accepteditgroupresponse"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"accepteditgroupresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"createcontainerresponse"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"createcontainerresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"createcontainerbatchresponse"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"createcontainerbatchresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"createcreatorresponse"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"createcreatorresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"createcreatorbatchresponse"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"createcreatorbatchresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"createeditgroupresponse"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"createeditgroupresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"createfileresponse"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"createfileresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"createfilebatchresponse"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"createfilebatchresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"createreleaseresponse"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"createreleaseresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"createreleasebatchresponse"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"createreleasebatchresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"createworkresponse"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"createworkresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"createworkbatchresponse"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"createworkbatchresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"deletecontainerresponse"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"deletecontainerresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"deletecreatorresponse"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"deletecreatorresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"deletefileresponse"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"deletefileresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"deletereleaseresponse"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"deletereleaseresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"deleteworkresponse"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"deleteworkresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"getchangelogresponse"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"getchangelogresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"getchangelogentryresponse"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"getchangelogentryresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"getcontainerresponse"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"getcontainerresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"getcontainerhistoryresponse"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"getcontainerhistoryresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"getcreatorresponse"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"getcreatorresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"getcreatorhistoryresponse"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"getcreatorhistoryresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"getcreatorreleasesresponse"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"getcreatorreleasesresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"geteditgroupresponse"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"geteditgroupresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"geteditorresponse"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"geteditorresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"geteditorchangelogresponse"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"geteditorchangelogresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"getfileresponse"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"getfileresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"getfilehistoryresponse"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"getfilehistoryresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"getreleaseresponse"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"getreleaseresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"getreleasefilesresponse"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"getreleasefilesresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"getreleasehistoryresponse"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"getreleasehistoryresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"getstatsresponse"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"getstatsresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"getworkresponse"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"getworkresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"getworkhistoryresponse"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"getworkhistoryresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"getworkreleasesresponse"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"getworkreleasesresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"lookupcontainerresponse"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"lookupcontainerresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"lookupcreatorresponse"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"lookupcreatorresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"lookupfileresponse"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"lookupfileresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"lookupreleaseresponse"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"self"},{"name":"lookupreleaseresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"updatecontainerresponse"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"updatecontainerresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"updatecreatorresponse"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"updatecreatorresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"updatefileresponse"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"updatefileresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"updatereleaseresponse"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"updatereleaseresponse"}],"output":{"name":"bool"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"updateworkresponse"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"updateworkresponse"}],"output":{"name":"bool"}}],[11,"accept_editgroup","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_container","","",74,{"inputs":[{"name":"self"},{"name":"containerentity"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_container_batch","","",74,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_creator","","",74,{"inputs":[{"name":"self"},{"name":"creatorentity"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_creator_batch","","",74,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_editgroup","","",74,{"inputs":[{"name":"self"},{"name":"editgroup"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_file","","",74,{"inputs":[{"name":"self"},{"name":"fileentity"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_file_batch","","",74,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_release","","",74,{"inputs":[{"name":"self"},{"name":"releaseentity"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_release_batch","","",74,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_work","","",74,{"inputs":[{"name":"self"},{"name":"workentity"}],"output":{"generics":["future"],"name":"box"}}],[11,"create_work_batch","","",74,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["future"],"name":"box"}}],[11,"delete_container","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"delete_creator","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"delete_file","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"delete_release","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"delete_work","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_changelog","","",74,{"inputs":[{"name":"self"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_changelog_entry","","",74,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_container","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_container_history","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_creator","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_creator_history","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_creator_releases","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_editgroup","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_editor","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_editor_changelog","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_file","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_file_history","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_release","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_release_files","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_release_history","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_stats","","",74,{"inputs":[{"name":"self"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_work","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["string"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_work_history","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"generics":["i64"],"name":"option"}],"output":{"generics":["future"],"name":"box"}}],[11,"get_work_releases","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"lookup_container","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"lookup_creator","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"lookup_file","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"lookup_release","","",74,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["future"],"name":"box"}}],[11,"update_container","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"name":"containerentity"}],"output":{"generics":["future"],"name":"box"}}],[11,"update_creator","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"name":"creatorentity"}],"output":{"generics":["future"],"name":"box"}}],[11,"update_file","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"name":"fileentity"}],"output":{"generics":["future"],"name":"box"}}],[11,"update_release","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"name":"releaseentity"}],"output":{"generics":["future"],"name":"box"}}],[11,"update_work","","",74,{"inputs":[{"name":"self"},{"name":"string"},{"name":"workentity"}],"output":{"generics":["future"],"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"apierror"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"apierror"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"apierror"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"context"}}],[11,"eq","fatcat_api::server","",50,{"inputs":[{"name":"self"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"self"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"description","fatcat_api","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","fatcat_api::server","",50,{"inputs":[{"name":"self"}],"output":{"name":"authorization"}}],[11,"clone","fatcat_api","",1,{"inputs":[{"name":"self"}],"output":{"name":"apierror"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","fatcat_api::server","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","fatcat_api","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","fatcat_api::router","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"handle","","",77,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"generics":["response","ironerror"],"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"trailingslash"}],"output":{"name":"bool"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"noroute"}],"output":{"name":"bool"}}],[11,"description","","",76,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","","",75,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"params"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"self"},{"name":"params"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"params"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"index","","",78,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"string"}}],[11,"new","fatcat_api","Create a new, empty, `Context`.",2,{"inputs":[],"output":{"name":"context"}}],[11,"new_with_span_id","","Create a `Context` with a given span ID.",2,{"inputs":[{"name":"s"}],"output":{"name":"context"}}],[11,"auth_basic","","Set Basic authentication",2,null],[11,"auth_bearer","","Set Bearer token authentication",2,null],[11,"auth_apikey","","Set ApiKey authentication",2,null],[11,"new","","Create a new ContextWrapper, binding the API and context.",74,{"inputs":[{"name":"t"},{"name":"context"}],"output":{"name":"contextwrapper"}}],[11,"api","","Borrows the API.",74,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"context","","Borrows the context.",74,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"new","fatcat_api::router","",78,{"inputs":[],"output":{"name":"params"}}],[11,"insert","","",78,null],[11,"find","","",78,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["str"],"name":"option"}}],[11,"iter","","",78,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"new","","Construct a new, empty `Router`.",77,{"inputs":[],"output":{"name":"router"}}],[11,"route","","Add a new route to a `Router`, matching both a method and glob pattern.",77,{"inputs":[{"name":"self"},{"name":"method"},{"name":"s"},{"name":"h"},{"name":"i"}],"output":{"name":"router"}}],[11,"get","","Like route, but specialized to the `Get` method.",77,{"inputs":[{"name":"self"},{"name":"s"},{"name":"h"},{"name":"i"}],"output":{"name":"router"}}],[11,"post","","Like route, but specialized to the `Post` method.",77,{"inputs":[{"name":"self"},{"name":"s"},{"name":"h"},{"name":"i"}],"output":{"name":"router"}}],[11,"put","","Like route, but specialized to the `Put` method.",77,{"inputs":[{"name":"self"},{"name":"s"},{"name":"h"},{"name":"i"}],"output":{"name":"router"}}],[11,"delete","","Like route, but specialized to the `Delete` method.",77,{"inputs":[{"name":"self"},{"name":"s"},{"name":"h"},{"name":"i"}],"output":{"name":"router"}}],[11,"head","","Like route, but specialized to the `Head` method.",77,{"inputs":[{"name":"self"},{"name":"s"},{"name":"h"},{"name":"i"}],"output":{"name":"router"}}],[11,"patch","","Like route, but specialized to the `Patch` method.",77,{"inputs":[{"name":"self"},{"name":"s"},{"name":"h"},{"name":"i"}],"output":{"name":"router"}}],[11,"options","","Like route, but specialized to the `Options` method.",77,{"inputs":[{"name":"self"},{"name":"s"},{"name":"h"},{"name":"i"}],"output":{"name":"router"}}],[11,"any","","Route will match any method, including gibberish. In case of ambiguity, handlers specific to methods will be preferred.",77,{"inputs":[{"name":"self"},{"name":"s"},{"name":"h"},{"name":"i"}],"output":{"name":"router"}}]],"paths":[[8,"Future"],[3,"ApiError"],[3,"Context"],[4,"AcceptEditgroupResponse"],[4,"CreateContainerResponse"],[4,"CreateContainerBatchResponse"],[4,"CreateCreatorResponse"],[4,"CreateCreatorBatchResponse"],[4,"CreateEditgroupResponse"],[4,"CreateFileResponse"],[4,"CreateFileBatchResponse"],[4,"CreateReleaseResponse"],[4,"CreateReleaseBatchResponse"],[4,"CreateWorkResponse"],[4,"CreateWorkBatchResponse"],[4,"DeleteContainerResponse"],[4,"DeleteCreatorResponse"],[4,"DeleteFileResponse"],[4,"DeleteReleaseResponse"],[4,"DeleteWorkResponse"],[4,"GetChangelogResponse"],[4,"GetChangelogEntryResponse"],[4,"GetContainerResponse"],[4,"GetContainerHistoryResponse"],[4,"GetCreatorResponse"],[4,"GetCreatorHistoryResponse"],[4,"GetCreatorReleasesResponse"],[4,"GetEditgroupResponse"],[4,"GetEditorResponse"],[4,"GetEditorChangelogResponse"],[4,"GetFileResponse"],[4,"GetFileHistoryResponse"],[4,"GetReleaseResponse"],[4,"GetReleaseFilesResponse"],[4,"GetReleaseHistoryResponse"],[4,"GetStatsResponse"],[4,"GetWorkResponse"],[4,"GetWorkHistoryResponse"],[4,"GetWorkReleasesResponse"],[4,"LookupContainerResponse"],[4,"LookupCreatorResponse"],[4,"LookupFileResponse"],[4,"LookupReleaseResponse"],[4,"UpdateContainerResponse"],[4,"UpdateCreatorResponse"],[4,"UpdateFileResponse"],[4,"UpdateReleaseResponse"],[4,"UpdateWorkResponse"],[4,"ClientInitError"],[3,"Client"],[3,"Authorization"],[3,"Warning"],[3,"ExtractAuthData"],[3,"ChangelogEntry"],[3,"ContainerEntity"],[3,"CreatorEntity"],[3,"Editgroup"],[3,"EditgroupEdits"],[3,"Editor"],[3,"EntityEdit"],[3,"EntityHistoryEntry"],[3,"ErrorResponse"],[3,"FileEntity"],[3,"FileEntityUrls"],[3,"ReleaseContrib"],[3,"ReleaseEntity"],[3,"ReleaseEntityAbstracts"],[3,"ReleaseRef"],[3,"StatsResponse"],[3,"Success"],[3,"WorkEntity"],[8,"Api"],[8,"ApiNoContext"],[8,"ContextWrapperExt"],[3,"ContextWrapper"],[3,"NoRoute"],[3,"TrailingSlash"],[3,"Router"],[3,"Params"]]};
searchIndex["fatcat_api_spec"] = {"doc":"","items":[[8,"Future","fatcat_api_spec","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",0,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",0,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",0,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"wait","","Block the current thread until this future is resolved.",0,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",0,{"i":[{"n":"self"}],"o":{"n":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",0,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",0,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",0,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"join"}}],[11,"join3","","Same as `join`, but with more futures.",0,{"i":[{"n":"self"},{"n":"b"},{"n":"c"}],"o":{"n":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",0,{"i":[{"n":"self"},{"n":"b"},{"n":"c"},{"n":"d"}],"o":{"n":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",0,{"i":[{"n":"self"},{"n":"b"},{"n":"c"},{"n":"d"},{"n":"e"}],"o":{"n":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",0,{"i":[{"n":"self"}],"o":{"n":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",0,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",0,{"i":[{"n":"self"}],"o":{"n":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",0,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",0,{"i":[{"n":"self"}],"o":{"n":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",0,{"i":[{"n":"self"}],"o":{"n":"shared"}}],[3,"ApiError","","Very simple error type - just holds a description of the error. This is useful for human diagnosis and troubleshooting, but not for applications to parse. The justification for this is to deny applications visibility into the communication layer, forcing the application code to act solely on the logical responses that the API provides, promoting abstraction in the application code.",null,null],[12,"0","","",1,null],[3,"Context","","Request context, both as received in a server handler or as sent in a client request. When REST microservices are chained, the Context passes data from the server API to any further HTTP requests.",null,null],[12,"x_span_id","","Tracking ID when passing a request to another microservice.",2,null],[12,"authorization","","Authorization data, filled in from middlewares.",2,null],[12,"auth_data","","Raw authentication data, for use in making HTTP requests as a client.",2,null],[3,"ContextWrapper","","Context wrapper, to bind an API with a context.",null,null],[3,"NoRoute","fatcat_api_spec::router","The error thrown by router if there is no matching route, it is always accompanied by a NotFound response.",null,null],[3,"Params","","",null,null],[3,"Router","","`Router` provides an interface for creating complex routes as middleware for the Iron framework.",null,null],[5,"url_for","","Generate a URL based off of the currently requested URL.",null,{"i":[{"n":"request"},{"n":"str"},{"g":["string","string","randomstate"],"n":"hashmap"}],"o":{"n":"url"}}],[3,"TrailingSlash","","The error thrown by router if a request was redirected by adding or removing a trailing slash.",null,null],[4,"AcceptEditgroupResponse","fatcat_api_spec","",null,null],[13,"MergedSuccessfully","","Merged Successfully",3,null],[13,"BadRequest","","Bad Request",3,null],[13,"NotFound","","Not Found",3,null],[13,"EditConflict","","Edit Conflict",3,null],[13,"GenericError","","Generic Error",3,null],[4,"CreateContainerResponse","","",null,null],[13,"CreatedEntity","","Created Entity",4,null],[13,"BadRequest","","Bad Request",4,null],[13,"NotFound","","Not Found",4,null],[13,"GenericError","","Generic Error",4,null],[4,"CreateContainerBatchResponse","","",null,null],[13,"CreatedEntities","","Created Entities",5,null],[13,"BadRequest","","Bad Request",5,null],[13,"NotFound","","Not Found",5,null],[13,"GenericError","","Generic Error",5,null],[4,"CreateCreatorResponse","","",null,null],[13,"CreatedEntity","","Created Entity",6,null],[13,"BadRequest","","Bad Request",6,null],[13,"NotFound","","Not Found",6,null],[13,"GenericError","","Generic Error",6,null],[4,"CreateCreatorBatchResponse","","",null,null],[13,"CreatedEntities","","Created Entities",7,null],[13,"BadRequest","","Bad Request",7,null],[13,"NotFound","","Not Found",7,null],[13,"GenericError","","Generic Error",7,null],[4,"CreateEditgroupResponse","","",null,null],[13,"SuccessfullyCreated","","Successfully Created",8,null],[13,"BadRequest","","Bad Request",8,null],[13,"GenericError","","Generic Error",8,null],[4,"CreateFileResponse","","",null,null],[13,"CreatedEntity","","Created Entity",9,null],[13,"BadRequest","","Bad Request",9,null],[13,"NotFound","","Not Found",9,null],[13,"GenericError","","Generic Error",9,null],[4,"CreateFileBatchResponse","","",null,null],[13,"CreatedEntities","","Created Entities",10,null],[13,"BadRequest","","Bad Request",10,null],[13,"NotFound","","Not Found",10,null],[13,"GenericError","","Generic Error",10,null],[4,"CreateReleaseResponse","","",null,null],[13,"CreatedEntity","","Created Entity",11,null],[13,"BadRequest","","Bad Request",11,null],[13,"NotFound","","Not Found",11,null],[13,"GenericError","","Generic Error",11,null],[4,"CreateReleaseBatchResponse","","",null,null],[13,"CreatedEntities","","Created Entities",12,null],[13,"BadRequest","","Bad Request",12,null],[13,"NotFound","","Not Found",12,null],[13,"GenericError","","Generic Error",12,null],[4,"CreateWorkResponse","","",null,null],[13,"CreatedEntity","","Created Entity",13,null],[13,"BadRequest","","Bad Request",13,null],[13,"NotFound","","Not Found",13,null],[13,"GenericError","","Generic Error",13,null],[4,"CreateWorkBatchResponse","","",null,null],[13,"CreatedEntities","","Created Entities",14,null],[13,"BadRequest","","Bad Request",14,null],[13,"NotFound","","Not Found",14,null],[13,"GenericError","","Generic Error",14,null],[4,"DeleteContainerResponse","","",null,null],[13,"DeletedEntity","","Deleted Entity",15,null],[13,"BadRequest","","Bad Request",15,null],[13,"NotFound","","Not Found",15,null],[13,"GenericError","","Generic Error",15,null],[4,"DeleteCreatorResponse","","",null,null],[13,"DeletedEntity","","Deleted Entity",16,null],[13,"BadRequest","","Bad Request",16,null],[13,"NotFound","","Not Found",16,null],[13,"GenericError","","Generic Error",16,null],[4,"DeleteFileResponse","","",null,null],[13,"DeletedEntity","","Deleted Entity",17,null],[13,"BadRequest","","Bad Request",17,null],[13,"NotFound","","Not Found",17,null],[13,"GenericError","","Generic Error",17,null],[4,"DeleteReleaseResponse","","",null,null],[13,"DeletedEntity","","Deleted Entity",18,null],[13,"BadRequest","","Bad Request",18,null],[13,"NotFound","","Not Found",18,null],[13,"GenericError","","Generic Error",18,null],[4,"DeleteWorkResponse","","",null,null],[13,"DeletedEntity","","Deleted Entity",19,null],[13,"BadRequest","","Bad Request",19,null],[13,"NotFound","","Not Found",19,null],[13,"GenericError","","Generic Error",19,null],[4,"GetChangelogResponse","","",null,null],[13,"Success","","Success",20,null],[13,"GenericError","","Generic Error",20,null],[4,"GetChangelogEntryResponse","","",null,null],[13,"FoundChangelogEntry","","Found Changelog Entry",21,null],[13,"NotFound","","Not Found",21,null],[13,"GenericError","","Generic Error",21,null],[4,"GetContainerResponse","","",null,null],[13,"FoundEntity","","Found Entity",22,null],[13,"BadRequest","","Bad Request",22,null],[13,"NotFound","","Not Found",22,null],[13,"GenericError","","Generic Error",22,null],[4,"GetContainerHistoryResponse","","",null,null],[13,"FoundEntityHistory","","Found Entity History",23,null],[13,"BadRequest","","Bad Request",23,null],[13,"NotFound","","Not Found",23,null],[13,"GenericError","","Generic Error",23,null],[4,"GetCreatorResponse","","",null,null],[13,"FoundEntity","","Found Entity",24,null],[13,"BadRequest","","Bad Request",24,null],[13,"NotFound","","Not Found",24,null],[13,"GenericError","","Generic Error",24,null],[4,"GetCreatorHistoryResponse","","",null,null],[13,"FoundEntityHistory","","Found Entity History",25,null],[13,"BadRequest","","Bad Request",25,null],[13,"NotFound","","Not Found",25,null],[13,"GenericError","","Generic Error",25,null],[4,"GetCreatorReleasesResponse","","",null,null],[13,"Found","","Found",26,null],[13,"BadRequest","","Bad Request",26,null],[13,"NotFound","","Not Found",26,null],[13,"GenericError","","Generic Error",26,null],[4,"GetEditgroupResponse","","",null,null],[13,"Found","","Found",27,null],[13,"BadRequest","","Bad Request",27,null],[13,"NotFound","","Not Found",27,null],[13,"GenericError","","Generic Error",27,null],[4,"GetEditorResponse","","",null,null],[13,"Found","","Found",28,null],[13,"BadRequest","","Bad Request",28,null],[13,"NotFound","","Not Found",28,null],[13,"GenericError","","Generic Error",28,null],[4,"GetEditorChangelogResponse","","",null,null],[13,"Found","","Found",29,null],[13,"BadRequest","","Bad Request",29,null],[13,"NotFound","","Not Found",29,null],[13,"GenericError","","Generic Error",29,null],[4,"GetFileResponse","","",null,null],[13,"FoundEntity","","Found Entity",30,null],[13,"BadRequest","","Bad Request",30,null],[13,"NotFound","","Not Found",30,null],[13,"GenericError","","Generic Error",30,null],[4,"GetFileHistoryResponse","","",null,null],[13,"FoundEntityHistory","","Found Entity History",31,null],[13,"BadRequest","","Bad Request",31,null],[13,"NotFound","","Not Found",31,null],[13,"GenericError","","Generic Error",31,null],[4,"GetReleaseResponse","","",null,null],[13,"FoundEntity","","Found Entity",32,null],[13,"BadRequest","","Bad Request",32,null],[13,"NotFound","","Not Found",32,null],[13,"GenericError","","Generic Error",32,null],[4,"GetReleaseFilesResponse","","",null,null],[13,"Found","","Found",33,null],[13,"BadRequest","","Bad Request",33,null],[13,"NotFound","","Not Found",33,null],[13,"GenericError","","Generic Error",33,null],[4,"GetReleaseHistoryResponse","","",null,null],[13,"FoundEntityHistory","","Found Entity History",34,null],[13,"BadRequest","","Bad Request",34,null],[13,"NotFound","","Not Found",34,null],[13,"GenericError","","Generic Error",34,null],[4,"GetStatsResponse","","",null,null],[13,"Success","","Success",35,null],[13,"GenericError","","Generic Error",35,null],[4,"GetWorkResponse","","",null,null],[13,"FoundEntity","","Found Entity",36,null],[13,"BadRequest","","Bad Request",36,null],[13,"NotFound","","Not Found",36,null],[13,"GenericError","","Generic Error",36,null],[4,"GetWorkHistoryResponse","","",null,null],[13,"FoundEntityHistory","","Found Entity History",37,null],[13,"BadRequest","","Bad Request",37,null],[13,"NotFound","","Not Found",37,null],[13,"GenericError","","Generic Error",37,null],[4,"GetWorkReleasesResponse","","",null,null],[13,"Found","","Found",38,null],[13,"BadRequest","","Bad Request",38,null],[13,"NotFound","","Not Found",38,null],[13,"GenericError","","Generic Error",38,null],[4,"LookupContainerResponse","","",null,null],[13,"FoundEntity","","Found Entity",39,null],[13,"BadRequest","","Bad Request",39,null],[13,"NotFound","","Not Found",39,null],[13,"GenericError","","Generic Error",39,null],[4,"LookupCreatorResponse","","",null,null],[13,"FoundEntity","","Found Entity",40,null],[13,"BadRequest","","Bad Request",40,null],[13,"NotFound","","Not Found",40,null],[13,"GenericError","","Generic Error",40,null],[4,"LookupFileResponse","","",null,null],[13,"FoundEntity","","Found Entity",41,null],[13,"BadRequest","","Bad Request",41,null],[13,"NotFound","","Not Found",41,null],[13,"GenericError","","Generic Error",41,null],[4,"LookupReleaseResponse","","",null,null],[13,"FoundEntity","","Found Entity",42,null],[13,"BadRequest","","Bad Request",42,null],[13,"NotFound","","Not Found",42,null],[13,"GenericError","","Generic Error",42,null],[4,"UpdateContainerResponse","","",null,null],[13,"UpdatedEntity","","Updated Entity",43,null],[13,"BadRequest","","Bad Request",43,null],[13,"NotFound","","Not Found",43,null],[13,"GenericError","","Generic Error",43,null],[4,"UpdateCreatorResponse","","",null,null],[13,"UpdatedEntity","","Updated Entity",44,null],[13,"BadRequest","","Bad Request",44,null],[13,"NotFound","","Not Found",44,null],[13,"GenericError","","Generic Error",44,null],[4,"UpdateFileResponse","","",null,null],[13,"UpdatedEntity","","Updated Entity",45,null],[13,"BadRequest","","Bad Request",45,null],[13,"NotFound","","Not Found",45,null],[13,"GenericError","","Generic Error",45,null],[4,"UpdateReleaseResponse","","",null,null],[13,"UpdatedEntity","","Updated Entity",46,null],[13,"BadRequest","","Bad Request",46,null],[13,"NotFound","","Not Found",46,null],[13,"GenericError","","Generic Error",46,null],[4,"UpdateWorkResponse","","",null,null],[13,"UpdatedEntity","","Updated Entity",47,null],[13,"BadRequest","","Bad Request",47,null],[13,"NotFound","","Not Found",47,null],[13,"GenericError","","Generic Error",47,null],[0,"client","","",null,null],[3,"Client","fatcat_api_spec::client","A client that implements the API by making HTTP calls out to a server.",null,null],[4,"ClientInitError","","",null,null],[13,"InvalidScheme","","",48,null],[13,"InvalidUrl","","",48,null],[13,"MissingHost","","",48,null],[13,"SslError","","",48,null],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"client"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"try_new_http","","",49,{"i":[{"n":"t"}],"o":{"g":["client","clientiniterror"],"n":"result"}}],[11,"try_new_https","","",49,{"i":[{"n":"t"},{"n":"ca"}],"o":{"g":["client","clientiniterror"],"n":"result"}}],[11,"try_new_https_mutual","","",49,{"i":[{"n":"t"},{"n":"ca"},{"n":"k"},{"n":"c"}],"o":{"g":["client","clientiniterror"],"n":"result"}}],[11,"try_new_with_hyper_client","","Constructor for creating a `Client` by passing in a pre-made `hyper` client.",49,{"i":[{"n":"t"},{"g":["fn"],"n":"arc"}],"o":{"g":["client","clientiniterror"],"n":"result"}}],[11,"accept_editgroup","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_container","","",49,{"i":[{"n":"self"},{"n":"containerentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_container_batch","","",49,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_creator","","",49,{"i":[{"n":"self"},{"n":"creatorentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_creator_batch","","",49,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_editgroup","","",49,{"i":[{"n":"self"},{"n":"editgroup"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_file","","",49,{"i":[{"n":"self"},{"n":"fileentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_file_batch","","",49,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_release","","",49,{"i":[{"n":"self"},{"n":"releaseentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_release_batch","","",49,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_work","","",49,{"i":[{"n":"self"},{"n":"workentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"create_work_batch","","",49,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_container","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_creator","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_file","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_release","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_work","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_changelog","","",49,{"i":[{"n":"self"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_changelog_entry","","",49,{"i":[{"n":"self"},{"n":"i64"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_container","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_container_history","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_creator","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_creator_history","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_creator_releases","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_editgroup","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_editor","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_editor_changelog","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_file","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_file_history","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_release","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_release_files","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_release_history","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_stats","","",49,{"i":[{"n":"self"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_work","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_work_history","","",49,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"get_work_releases","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_container","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_creator","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_file","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_release","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"update_container","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"containerentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"update_creator","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"creatorentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"update_file","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"fileentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"update_release","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"releaseentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"update_work","","",49,{"i":[{"n":"self"},{"n":"string"},{"n":"workentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",48,{"i":[{"n":"parseerror"}],"o":{"n":"clientiniterror"}}],[11,"from","","",48,{"i":[{"n":"errorstack"}],"o":{"n":"clientiniterror"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",48,{"i":[{"n":"self"}],"o":{"n":"str"}}],[0,"server","fatcat_api_spec","",null,null],[3,"Authorization","fatcat_api_spec::server","Storage of authorization parameters for an incoming request, used for REST API authorization.",null,null],[12,"subject","","Subject for which authorization is granted (i.e., what may be accessed.)",50,null],[12,"scopes","","Scopes for which authorization is granted (i.e., what types of access are permitted).",50,null],[12,"issuer","","Identity of the party to whom authorization was granted, if available (i.e., who is responsible for the access).",50,null],[3,"Warning","","",null,null],[12,"0","","",51,null],[3,"ExtractAuthData","","Middleware to extract authentication data from request",null,null],[5,"router","","Create a new router for `Api`",null,{"i":[{"n":"t"}],"o":{"n":"router"}}],[5,"route","","Add routes for `Api` to a provided router.",null,{"i":[{"n":"router"},{"n":"t"}]}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"warning"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",51,{"i":[{"n":"self"},{"n":"warning"}],"o":{"n":"bool"}}],[11,"ne","","",51,{"i":[{"n":"self"},{"n":"warning"}],"o":{"n":"bool"}}],[11,"deref","","",51,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",51,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"header_name","","",51,{"o":{"n":"str"}}],[11,"parse_header","","",51,null],[11,"fmt_header","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"before","","",52,{"i":[{"n":"self"},{"n":"request"}],"o":{"n":"ironresult"}}],[0,"models","fatcat_api_spec","",null,null],[3,"ChangelogEntry","fatcat_api_spec::models","",null,null],[12,"index","","",53,null],[12,"editgroup_id","","",53,null],[12,"timestamp","","",53,null],[12,"editgroup","","",53,null],[3,"ContainerEntity","","",null,null],[12,"coden","","",54,null],[12,"abbrev","","",54,null],[12,"wikidata_qid","","",54,null],[12,"issnl","","",54,null],[12,"publisher","","",54,null],[12,"name","","",54,null],[12,"edit_extra","","",54,null],[12,"extra","","",54,null],[12,"redirect","","base32-encoded unique identifier",54,null],[12,"revision","","UUID (lower-case, dash-separated, hex-encoded 128-bit)",54,null],[12,"ident","","base32-encoded unique identifier",54,null],[12,"state","","",54,null],[3,"CreatorEntity","","",null,null],[12,"wikidata_qid","","",55,null],[12,"orcid","","",55,null],[12,"surname","","",55,null],[12,"given_name","","",55,null],[12,"display_name","","",55,null],[12,"state","","",55,null],[12,"ident","","base32-encoded unique identifier",55,null],[12,"revision","","UUID (lower-case, dash-separated, hex-encoded 128-bit)",55,null],[12,"redirect","","base32-encoded unique identifier",55,null],[12,"extra","","",55,null],[12,"edit_extra","","",55,null],[3,"Editgroup","","",null,null],[12,"id","","base32-encoded unique identifier",56,null],[12,"editor_id","","base32-encoded unique identifier",56,null],[12,"description","","",56,null],[12,"extra","","",56,null],[12,"edits","","",56,null],[3,"EditgroupEdits","","",null,null],[12,"containers","","",57,null],[12,"creators","","",57,null],[12,"files","","",57,null],[12,"releases","","",57,null],[12,"works","","",57,null],[3,"Editor","","",null,null],[12,"id","","",58,null],[12,"username","","",58,null],[3,"EntityEdit","","",null,null],[12,"edit_id","","",59,null],[12,"ident","","",59,null],[12,"revision","","",59,null],[12,"prev_revision","","",59,null],[12,"redirect_ident","","",59,null],[12,"editgroup_id","","",59,null],[12,"extra","","",59,null],[3,"EntityHistoryEntry","","",null,null],[12,"edit","","",60,null],[12,"editgroup","","",60,null],[12,"changelog_entry","","",60,null],[3,"ErrorResponse","","",null,null],[12,"message","","",61,null],[3,"FileEntity","","",null,null],[12,"releases","","",62,null],[12,"mimetype","","",62,null],[12,"urls","","",62,null],[12,"sha256","","",62,null],[12,"md5","","",62,null],[12,"sha1","","",62,null],[12,"size","","",62,null],[12,"edit_extra","","",62,null],[12,"extra","","",62,null],[12,"redirect","","base32-encoded unique identifier",62,null],[12,"revision","","UUID (lower-case, dash-separated, hex-encoded 128-bit)",62,null],[12,"ident","","base32-encoded unique identifier",62,null],[12,"state","","",62,null],[3,"FileEntityUrls","","",null,null],[12,"url","","",63,null],[12,"rel","","",63,null],[3,"ReleaseContrib","","",null,null],[12,"index","","",64,null],[12,"creator_id","","",64,null],[12,"creator","","Optional; GET-only",64,null],[12,"raw_name","","",64,null],[12,"extra","","",64,null],[12,"role","","",64,null],[3,"ReleaseEntity","","",null,null],[12,"abstracts","","",65,null],[12,"refs","","",65,null],[12,"contribs","","",65,null],[12,"language","","Two-letter RFC1766/ISO639-1 language code, with extensions",65,null],[12,"publisher","","",65,null],[12,"pages","","",65,null],[12,"issue","","",65,null],[12,"volume","","",65,null],[12,"wikidata_qid","","",65,null],[12,"pmcid","","",65,null],[12,"pmid","","",65,null],[12,"core_id","","",65,null],[12,"isbn13","","",65,null],[12,"doi","","",65,null],[12,"release_date","","",65,null],[12,"release_status","","",65,null],[12,"release_type","","",65,null],[12,"container_id","","",65,null],[12,"files","","Optional; GET-only",65,null],[12,"container","","Optional; GET-only",65,null],[12,"work_id","","",65,null],[12,"title","","",65,null],[12,"state","","",65,null],[12,"ident","","base32-encoded unique identifier",65,null],[12,"revision","","UUID (lower-case, dash-separated, hex-encoded 128-bit)",65,null],[12,"redirect","","base32-encoded unique identifier",65,null],[12,"extra","","",65,null],[12,"edit_extra","","",65,null],[3,"ReleaseEntityAbstracts","","",null,null],[12,"sha1","","",66,null],[12,"content","","",66,null],[12,"mimetype","","",66,null],[12,"lang","","",66,null],[3,"ReleaseRef","","",null,null],[12,"index","","",67,null],[12,"target_release_id","","",67,null],[12,"extra","","",67,null],[12,"key","","",67,null],[12,"year","","",67,null],[12,"container_title","","",67,null],[12,"title","","",67,null],[12,"locator","","",67,null],[3,"StatsResponse","","",null,null],[12,"extra","","",68,null],[3,"Success","","",null,null],[12,"message","","",69,null],[3,"WorkEntity","","",null,null],[12,"edit_extra","","",70,null],[12,"extra","","",70,null],[12,"redirect","","base32-encoded unique identifier",70,null],[12,"revision","","UUID (lower-case, dash-separated, hex-encoded 128-bit)",70,null],[12,"ident","","base32-encoded unique identifier",70,null],[12,"state","","",70,null],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"changelogentry"}}],[11,"eq","","",53,{"i":[{"n":"self"},{"n":"changelogentry"}],"o":{"n":"bool"}}],[11,"ne","","",53,{"i":[{"n":"self"},{"n":"changelogentry"}],"o":{"n":"bool"}}],[11,"new","","",53,{"i":[{"n":"i64"},{"n":"string"},{"g":["utc"],"n":"datetime"}],"o":{"n":"changelogentry"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"containerentity"}}],[11,"eq","","",54,{"i":[{"n":"self"},{"n":"containerentity"}],"o":{"n":"bool"}}],[11,"ne","","",54,{"i":[{"n":"self"},{"n":"containerentity"}],"o":{"n":"bool"}}],[11,"new","","",54,{"i":[{"n":"string"}],"o":{"n":"containerentity"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"creatorentity"}}],[11,"eq","","",55,{"i":[{"n":"self"},{"n":"creatorentity"}],"o":{"n":"bool"}}],[11,"ne","","",55,{"i":[{"n":"self"},{"n":"creatorentity"}],"o":{"n":"bool"}}],[11,"new","","",55,{"i":[{"n":"string"}],"o":{"n":"creatorentity"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"editgroup"}}],[11,"eq","","",56,{"i":[{"n":"self"},{"n":"editgroup"}],"o":{"n":"bool"}}],[11,"ne","","",56,{"i":[{"n":"self"},{"n":"editgroup"}],"o":{"n":"bool"}}],[11,"new","","",56,{"i":[{"n":"string"}],"o":{"n":"editgroup"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"editgroupedits"}}],[11,"eq","","",57,{"i":[{"n":"self"},{"n":"editgroupedits"}],"o":{"n":"bool"}}],[11,"ne","","",57,{"i":[{"n":"self"},{"n":"editgroupedits"}],"o":{"n":"bool"}}],[11,"new","","",57,{"o":{"n":"editgroupedits"}}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"editor"}}],[11,"eq","","",58,{"i":[{"n":"self"},{"n":"editor"}],"o":{"n":"bool"}}],[11,"ne","","",58,{"i":[{"n":"self"},{"n":"editor"}],"o":{"n":"bool"}}],[11,"new","","",58,{"i":[{"n":"string"}],"o":{"n":"editor"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"entityedit"}}],[11,"eq","","",59,{"i":[{"n":"self"},{"n":"entityedit"}],"o":{"n":"bool"}}],[11,"ne","","",59,{"i":[{"n":"self"},{"n":"entityedit"}],"o":{"n":"bool"}}],[11,"new","","",59,{"i":[{"n":"i64"},{"n":"string"},{"n":"string"}],"o":{"n":"entityedit"}}],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"entityhistoryentry"}}],[11,"eq","","",60,{"i":[{"n":"self"},{"n":"entityhistoryentry"}],"o":{"n":"bool"}}],[11,"ne","","",60,{"i":[{"n":"self"},{"n":"entityhistoryentry"}],"o":{"n":"bool"}}],[11,"new","","",60,{"i":[{"n":"entityedit"},{"n":"editgroup"},{"n":"changelogentry"}],"o":{"n":"entityhistoryentry"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"errorresponse"}}],[11,"eq","","",61,{"i":[{"n":"self"},{"n":"errorresponse"}],"o":{"n":"bool"}}],[11,"ne","","",61,{"i":[{"n":"self"},{"n":"errorresponse"}],"o":{"n":"bool"}}],[11,"new","","",61,{"i":[{"n":"string"}],"o":{"n":"errorresponse"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"fileentity"}}],[11,"eq","","",62,{"i":[{"n":"self"},{"n":"fileentity"}],"o":{"n":"bool"}}],[11,"ne","","",62,{"i":[{"n":"self"},{"n":"fileentity"}],"o":{"n":"bool"}}],[11,"new","","",62,{"o":{"n":"fileentity"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"fileentityurls"}}],[11,"eq","","",63,{"i":[{"n":"self"},{"n":"fileentityurls"}],"o":{"n":"bool"}}],[11,"ne","","",63,{"i":[{"n":"self"},{"n":"fileentityurls"}],"o":{"n":"bool"}}],[11,"new","","",63,{"i":[{"n":"string"},{"n":"string"}],"o":{"n":"fileentityurls"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"releasecontrib"}}],[11,"eq","","",64,{"i":[{"n":"self"},{"n":"releasecontrib"}],"o":{"n":"bool"}}],[11,"ne","","",64,{"i":[{"n":"self"},{"n":"releasecontrib"}],"o":{"n":"bool"}}],[11,"new","","",64,{"o":{"n":"releasecontrib"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"releaseentity"}}],[11,"eq","","",65,{"i":[{"n":"self"},{"n":"releaseentity"}],"o":{"n":"bool"}}],[11,"ne","","",65,{"i":[{"n":"self"},{"n":"releaseentity"}],"o":{"n":"bool"}}],[11,"new","","",65,{"i":[{"n":"string"}],"o":{"n":"releaseentity"}}],[11,"fmt","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"releaseentityabstracts"}}],[11,"eq","","",66,{"i":[{"n":"self"},{"n":"releaseentityabstracts"}],"o":{"n":"bool"}}],[11,"ne","","",66,{"i":[{"n":"self"},{"n":"releaseentityabstracts"}],"o":{"n":"bool"}}],[11,"new","","",66,{"o":{"n":"releaseentityabstracts"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"releaseref"}}],[11,"eq","","",67,{"i":[{"n":"self"},{"n":"releaseref"}],"o":{"n":"bool"}}],[11,"ne","","",67,{"i":[{"n":"self"},{"n":"releaseref"}],"o":{"n":"bool"}}],[11,"new","","",67,{"o":{"n":"releaseref"}}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"statsresponse"}}],[11,"eq","","",68,{"i":[{"n":"self"},{"n":"statsresponse"}],"o":{"n":"bool"}}],[11,"ne","","",68,{"i":[{"n":"self"},{"n":"statsresponse"}],"o":{"n":"bool"}}],[11,"new","","",68,{"o":{"n":"statsresponse"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"success"}}],[11,"eq","","",69,{"i":[{"n":"self"},{"n":"success"}],"o":{"n":"bool"}}],[11,"ne","","",69,{"i":[{"n":"self"},{"n":"success"}],"o":{"n":"bool"}}],[11,"new","","",69,{"i":[{"n":"string"}],"o":{"n":"success"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"workentity"}}],[11,"eq","","",70,{"i":[{"n":"self"},{"n":"workentity"}],"o":{"n":"bool"}}],[11,"ne","","",70,{"i":[{"n":"self"},{"n":"workentity"}],"o":{"n":"bool"}}],[11,"new","","",70,{"o":{"n":"workentity"}}],[8,"Api","fatcat_api_spec","API",null,null],[10,"accept_editgroup","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_container","","",71,{"i":[{"n":"self"},{"n":"containerentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_container_batch","","",71,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_creator","","",71,{"i":[{"n":"self"},{"n":"creatorentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_creator_batch","","",71,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_editgroup","","",71,{"i":[{"n":"self"},{"n":"editgroup"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_file","","",71,{"i":[{"n":"self"},{"n":"fileentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_file_batch","","",71,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_release","","",71,{"i":[{"n":"self"},{"n":"releaseentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_release_batch","","",71,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_work","","",71,{"i":[{"n":"self"},{"n":"workentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"create_work_batch","","",71,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"delete_container","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"delete_creator","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"delete_file","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"delete_release","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"delete_work","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_changelog","","",71,{"i":[{"n":"self"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_changelog_entry","","",71,{"i":[{"n":"self"},{"n":"i64"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_container","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_container_history","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_creator","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_creator_history","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_creator_releases","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_editgroup","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_editor","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_editor_changelog","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_file","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_file_history","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_release","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_release_files","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_release_history","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_stats","","",71,{"i":[{"n":"self"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_work","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_work_history","","",71,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"get_work_releases","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"lookup_container","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"lookup_creator","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"lookup_file","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"lookup_release","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"update_container","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"containerentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"update_creator","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"creatorentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"update_file","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"fileentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"update_release","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"releaseentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[10,"update_work","","",71,{"i":[{"n":"self"},{"n":"string"},{"n":"workentity"},{"g":["string"],"n":"option"},{"n":"context"}],"o":{"g":["future"],"n":"box"}}],[8,"ApiNoContext","","API without a `Context`",null,null],[10,"accept_editgroup","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"create_container","","",72,{"i":[{"n":"self"},{"n":"containerentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"create_container_batch","","",72,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"create_creator","","",72,{"i":[{"n":"self"},{"n":"creatorentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"create_creator_batch","","",72,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"create_editgroup","","",72,{"i":[{"n":"self"},{"n":"editgroup"}],"o":{"g":["future"],"n":"box"}}],[10,"create_file","","",72,{"i":[{"n":"self"},{"n":"fileentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"create_file_batch","","",72,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"create_release","","",72,{"i":[{"n":"self"},{"n":"releaseentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"create_release_batch","","",72,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"create_work","","",72,{"i":[{"n":"self"},{"n":"workentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"create_work_batch","","",72,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"delete_container","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"delete_creator","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"delete_file","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"delete_release","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"delete_work","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_changelog","","",72,{"i":[{"n":"self"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_changelog_entry","","",72,{"i":[{"n":"self"},{"n":"i64"}],"o":{"g":["future"],"n":"box"}}],[10,"get_container","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_container_history","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_creator","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_creator_history","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_creator_releases","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"get_editgroup","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"get_editor","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"get_editor_changelog","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"get_file","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_file_history","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_release","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_release_files","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"get_release_history","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_stats","","",72,{"i":[{"n":"self"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_work","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_work_history","","",72,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"get_work_releases","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"lookup_container","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"lookup_creator","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"lookup_file","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"lookup_release","","",72,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[10,"update_container","","",72,{"i":[{"n":"self"},{"n":"string"},{"n":"containerentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"update_creator","","",72,{"i":[{"n":"self"},{"n":"string"},{"n":"creatorentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"update_file","","",72,{"i":[{"n":"self"},{"n":"string"},{"n":"fileentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"update_release","","",72,{"i":[{"n":"self"},{"n":"string"},{"n":"releaseentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[10,"update_work","","",72,{"i":[{"n":"self"},{"n":"string"},{"n":"workentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[8,"ContextWrapperExt","","Trait to extend an API to make it easy to bind it to a context.",null,null],[10,"with_context","","Binds this API to a context.",73,{"i":[{"n":"self"},{"n":"context"}],"o":{"n":"contextwrapper"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"accepteditgroupresponse"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"accepteditgroupresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"createcontainerresponse"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"createcontainerresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"createcontainerbatchresponse"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"createcontainerbatchresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"createcreatorresponse"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"createcreatorresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"createcreatorbatchresponse"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"createcreatorbatchresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"createeditgroupresponse"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"createeditgroupresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"createfileresponse"}],"o":{"n":"bool"}}],[11,"ne","","",9,{"i":[{"n":"self"},{"n":"createfileresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"createfilebatchresponse"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"createfilebatchresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"createreleaseresponse"}],"o":{"n":"bool"}}],[11,"ne","","",11,{"i":[{"n":"self"},{"n":"createreleaseresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"createreleasebatchresponse"}],"o":{"n":"bool"}}],[11,"ne","","",12,{"i":[{"n":"self"},{"n":"createreleasebatchresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"createworkresponse"}],"o":{"n":"bool"}}],[11,"ne","","",13,{"i":[{"n":"self"},{"n":"createworkresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",14,{"i":[{"n":"self"},{"n":"createworkbatchresponse"}],"o":{"n":"bool"}}],[11,"ne","","",14,{"i":[{"n":"self"},{"n":"createworkbatchresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"deletecontainerresponse"}],"o":{"n":"bool"}}],[11,"ne","","",15,{"i":[{"n":"self"},{"n":"deletecontainerresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"deletecreatorresponse"}],"o":{"n":"bool"}}],[11,"ne","","",16,{"i":[{"n":"self"},{"n":"deletecreatorresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"deletefileresponse"}],"o":{"n":"bool"}}],[11,"ne","","",17,{"i":[{"n":"self"},{"n":"deletefileresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"deletereleaseresponse"}],"o":{"n":"bool"}}],[11,"ne","","",18,{"i":[{"n":"self"},{"n":"deletereleaseresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",19,{"i":[{"n":"self"},{"n":"deleteworkresponse"}],"o":{"n":"bool"}}],[11,"ne","","",19,{"i":[{"n":"self"},{"n":"deleteworkresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"getchangelogresponse"}],"o":{"n":"bool"}}],[11,"ne","","",20,{"i":[{"n":"self"},{"n":"getchangelogresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"getchangelogentryresponse"}],"o":{"n":"bool"}}],[11,"ne","","",21,{"i":[{"n":"self"},{"n":"getchangelogentryresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"getcontainerresponse"}],"o":{"n":"bool"}}],[11,"ne","","",22,{"i":[{"n":"self"},{"n":"getcontainerresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",23,{"i":[{"n":"self"},{"n":"getcontainerhistoryresponse"}],"o":{"n":"bool"}}],[11,"ne","","",23,{"i":[{"n":"self"},{"n":"getcontainerhistoryresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",24,{"i":[{"n":"self"},{"n":"getcreatorresponse"}],"o":{"n":"bool"}}],[11,"ne","","",24,{"i":[{"n":"self"},{"n":"getcreatorresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",25,{"i":[{"n":"self"},{"n":"getcreatorhistoryresponse"}],"o":{"n":"bool"}}],[11,"ne","","",25,{"i":[{"n":"self"},{"n":"getcreatorhistoryresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",26,{"i":[{"n":"self"},{"n":"getcreatorreleasesresponse"}],"o":{"n":"bool"}}],[11,"ne","","",26,{"i":[{"n":"self"},{"n":"getcreatorreleasesresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"geteditgroupresponse"}],"o":{"n":"bool"}}],[11,"ne","","",27,{"i":[{"n":"self"},{"n":"geteditgroupresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"geteditorresponse"}],"o":{"n":"bool"}}],[11,"ne","","",28,{"i":[{"n":"self"},{"n":"geteditorresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",29,{"i":[{"n":"self"},{"n":"geteditorchangelogresponse"}],"o":{"n":"bool"}}],[11,"ne","","",29,{"i":[{"n":"self"},{"n":"geteditorchangelogresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",30,{"i":[{"n":"self"},{"n":"getfileresponse"}],"o":{"n":"bool"}}],[11,"ne","","",30,{"i":[{"n":"self"},{"n":"getfileresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",31,{"i":[{"n":"self"},{"n":"getfilehistoryresponse"}],"o":{"n":"bool"}}],[11,"ne","","",31,{"i":[{"n":"self"},{"n":"getfilehistoryresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",32,{"i":[{"n":"self"},{"n":"getreleaseresponse"}],"o":{"n":"bool"}}],[11,"ne","","",32,{"i":[{"n":"self"},{"n":"getreleaseresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",33,{"i":[{"n":"self"},{"n":"getreleasefilesresponse"}],"o":{"n":"bool"}}],[11,"ne","","",33,{"i":[{"n":"self"},{"n":"getreleasefilesresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",34,{"i":[{"n":"self"},{"n":"getreleasehistoryresponse"}],"o":{"n":"bool"}}],[11,"ne","","",34,{"i":[{"n":"self"},{"n":"getreleasehistoryresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",35,{"i":[{"n":"self"},{"n":"getstatsresponse"}],"o":{"n":"bool"}}],[11,"ne","","",35,{"i":[{"n":"self"},{"n":"getstatsresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",36,{"i":[{"n":"self"},{"n":"getworkresponse"}],"o":{"n":"bool"}}],[11,"ne","","",36,{"i":[{"n":"self"},{"n":"getworkresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",37,{"i":[{"n":"self"},{"n":"getworkhistoryresponse"}],"o":{"n":"bool"}}],[11,"ne","","",37,{"i":[{"n":"self"},{"n":"getworkhistoryresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",38,{"i":[{"n":"self"},{"n":"getworkreleasesresponse"}],"o":{"n":"bool"}}],[11,"ne","","",38,{"i":[{"n":"self"},{"n":"getworkreleasesresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",39,{"i":[{"n":"self"},{"n":"lookupcontainerresponse"}],"o":{"n":"bool"}}],[11,"ne","","",39,{"i":[{"n":"self"},{"n":"lookupcontainerresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",40,{"i":[{"n":"self"},{"n":"lookupcreatorresponse"}],"o":{"n":"bool"}}],[11,"ne","","",40,{"i":[{"n":"self"},{"n":"lookupcreatorresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",41,{"i":[{"n":"self"},{"n":"lookupfileresponse"}],"o":{"n":"bool"}}],[11,"ne","","",41,{"i":[{"n":"self"},{"n":"lookupfileresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",42,{"i":[{"n":"self"},{"n":"lookupreleaseresponse"}],"o":{"n":"bool"}}],[11,"ne","","",42,{"i":[{"n":"self"},{"n":"lookupreleaseresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",43,{"i":[{"n":"self"},{"n":"updatecontainerresponse"}],"o":{"n":"bool"}}],[11,"ne","","",43,{"i":[{"n":"self"},{"n":"updatecontainerresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",44,{"i":[{"n":"self"},{"n":"updatecreatorresponse"}],"o":{"n":"bool"}}],[11,"ne","","",44,{"i":[{"n":"self"},{"n":"updatecreatorresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",45,{"i":[{"n":"self"},{"n":"updatefileresponse"}],"o":{"n":"bool"}}],[11,"ne","","",45,{"i":[{"n":"self"},{"n":"updatefileresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"updatereleaseresponse"}],"o":{"n":"bool"}}],[11,"ne","","",46,{"i":[{"n":"self"},{"n":"updatereleaseresponse"}],"o":{"n":"bool"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",47,{"i":[{"n":"self"},{"n":"updateworkresponse"}],"o":{"n":"bool"}}],[11,"ne","","",47,{"i":[{"n":"self"},{"n":"updateworkresponse"}],"o":{"n":"bool"}}],[11,"accept_editgroup","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"create_container","","",74,{"i":[{"n":"self"},{"n":"containerentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"create_container_batch","","",74,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"create_creator","","",74,{"i":[{"n":"self"},{"n":"creatorentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"create_creator_batch","","",74,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"create_editgroup","","",74,{"i":[{"n":"self"},{"n":"editgroup"}],"o":{"g":["future"],"n":"box"}}],[11,"create_file","","",74,{"i":[{"n":"self"},{"n":"fileentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"create_file_batch","","",74,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"create_release","","",74,{"i":[{"n":"self"},{"n":"releaseentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"create_release_batch","","",74,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"create_work","","",74,{"i":[{"n":"self"},{"n":"workentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"create_work_batch","","",74,{"i":[{"n":"self"},{"n":"vec"},{"g":["bool"],"n":"option"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_container","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_creator","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_file","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_release","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"delete_work","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_changelog","","",74,{"i":[{"n":"self"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_changelog_entry","","",74,{"i":[{"n":"self"},{"n":"i64"}],"o":{"g":["future"],"n":"box"}}],[11,"get_container","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_container_history","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_creator","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_creator_history","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_creator_releases","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"get_editgroup","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"get_editor","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"get_editor_changelog","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"get_file","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_file_history","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_release","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_release_files","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"get_release_history","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_stats","","",74,{"i":[{"n":"self"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_work","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_work_history","","",74,{"i":[{"n":"self"},{"n":"string"},{"g":["i64"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"get_work_releases","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_container","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_creator","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_file","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"lookup_release","","",74,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["future"],"n":"box"}}],[11,"update_container","","",74,{"i":[{"n":"self"},{"n":"string"},{"n":"containerentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"update_creator","","",74,{"i":[{"n":"self"},{"n":"string"},{"n":"creatorentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"update_file","","",74,{"i":[{"n":"self"},{"n":"string"},{"n":"fileentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"update_release","","",74,{"i":[{"n":"self"},{"n":"string"},{"n":"releaseentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"update_work","","",74,{"i":[{"n":"self"},{"n":"string"},{"n":"workentity"},{"g":["string"],"n":"option"}],"o":{"g":["future"],"n":"box"}}],[11,"from","","",1,{"i":[{"n":"str"}],"o":{"n":"apierror"}}],[11,"from","","",1,{"i":[{"n":"error"}],"o":{"n":"apierror"}}],[11,"from","","",1,{"i":[{"n":"string"}],"o":{"n":"apierror"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","fatcat_api_spec::server","",50,{"i":[{"n":"self"},{"n":"authorization"}],"o":{"n":"bool"}}],[11,"ne","","",50,{"i":[{"n":"self"},{"n":"authorization"}],"o":{"n":"bool"}}],[11,"clone","fatcat_api_spec","",1,{"i":[{"n":"self"}],"o":{"n":"apierror"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"context"}}],[11,"clone","fatcat_api_spec::server","",50,{"i":[{"n":"self"}],"o":{"n":"authorization"}}],[11,"description","fatcat_api_spec","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"default","","",2,{"o":{"n":"context"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","fatcat_api_spec::server","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","fatcat_api_spec::router","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",76,{"i":[{"n":"self"},{"n":"trailingslash"}],"o":{"n":"bool"}}],[11,"eq","","",75,{"i":[{"n":"self"},{"n":"noroute"}],"o":{"n":"bool"}}],[11,"handle","","",77,{"i":[{"n":"self"},{"n":"request"}],"o":{"g":["response","ironerror"],"n":"result"}}],[11,"description","","",76,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","","",75,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",78,{"i":[{"n":"self"},{"n":"params"}],"o":{"n":"bool"}}],[11,"ne","","",78,{"i":[{"n":"self"},{"n":"params"}],"o":{"n":"bool"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"params"}}],[11,"index","","",78,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"string"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"new","fatcat_api_spec","Create a new, empty, `Context`.",2,{"o":{"n":"context"}}],[11,"new_with_span_id","","Create a `Context` with a given span ID.",2,{"i":[{"n":"s"}],"o":{"n":"context"}}],[11,"auth_basic","","Set Basic authentication",2,null],[11,"auth_bearer","","Set Bearer token authentication",2,null],[11,"auth_apikey","","Set ApiKey authentication",2,null],[11,"new","","Create a new ContextWrapper, binding the API and context.",74,{"i":[{"n":"t"},{"n":"context"}],"o":{"n":"contextwrapper"}}],[11,"api","","Borrows the API.",74,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"context","","Borrows the context.",74,{"i":[{"n":"self"}],"o":{"n":"context"}}],[11,"new","fatcat_api_spec::router","",78,{"o":{"n":"params"}}],[11,"insert","","",78,null],[11,"find","","",78,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["str"],"n":"option"}}],[11,"iter","","",78,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"new","","Construct a new, empty `Router`.",77,{"o":{"n":"router"}}],[11,"route","","Add a new route to a `Router`, matching both a method and glob pattern.",77,{"i":[{"n":"self"},{"n":"method"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"get","","Like route, but specialized to the `Get` method.",77,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"post","","Like route, but specialized to the `Post` method.",77,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"put","","Like route, but specialized to the `Put` method.",77,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"delete","","Like route, but specialized to the `Delete` method.",77,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"head","","Like route, but specialized to the `Head` method.",77,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"patch","","Like route, but specialized to the `Patch` method.",77,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"options","","Like route, but specialized to the `Options` method.",77,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"any","","Route will match any method, including gibberish. In case of ambiguity, handlers specific to methods will be preferred.",77,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}]],"paths":[[8,"Future"],[3,"ApiError"],[3,"Context"],[4,"AcceptEditgroupResponse"],[4,"CreateContainerResponse"],[4,"CreateContainerBatchResponse"],[4,"CreateCreatorResponse"],[4,"CreateCreatorBatchResponse"],[4,"CreateEditgroupResponse"],[4,"CreateFileResponse"],[4,"CreateFileBatchResponse"],[4,"CreateReleaseResponse"],[4,"CreateReleaseBatchResponse"],[4,"CreateWorkResponse"],[4,"CreateWorkBatchResponse"],[4,"DeleteContainerResponse"],[4,"DeleteCreatorResponse"],[4,"DeleteFileResponse"],[4,"DeleteReleaseResponse"],[4,"DeleteWorkResponse"],[4,"GetChangelogResponse"],[4,"GetChangelogEntryResponse"],[4,"GetContainerResponse"],[4,"GetContainerHistoryResponse"],[4,"GetCreatorResponse"],[4,"GetCreatorHistoryResponse"],[4,"GetCreatorReleasesResponse"],[4,"GetEditgroupResponse"],[4,"GetEditorResponse"],[4,"GetEditorChangelogResponse"],[4,"GetFileResponse"],[4,"GetFileHistoryResponse"],[4,"GetReleaseResponse"],[4,"GetReleaseFilesResponse"],[4,"GetReleaseHistoryResponse"],[4,"GetStatsResponse"],[4,"GetWorkResponse"],[4,"GetWorkHistoryResponse"],[4,"GetWorkReleasesResponse"],[4,"LookupContainerResponse"],[4,"LookupCreatorResponse"],[4,"LookupFileResponse"],[4,"LookupReleaseResponse"],[4,"UpdateContainerResponse"],[4,"UpdateCreatorResponse"],[4,"UpdateFileResponse"],[4,"UpdateReleaseResponse"],[4,"UpdateWorkResponse"],[4,"ClientInitError"],[3,"Client"],[3,"Authorization"],[3,"Warning"],[3,"ExtractAuthData"],[3,"ChangelogEntry"],[3,"ContainerEntity"],[3,"CreatorEntity"],[3,"Editgroup"],[3,"EditgroupEdits"],[3,"Editor"],[3,"EntityEdit"],[3,"EntityHistoryEntry"],[3,"ErrorResponse"],[3,"FileEntity"],[3,"FileEntityUrls"],[3,"ReleaseContrib"],[3,"ReleaseEntity"],[3,"ReleaseEntityAbstracts"],[3,"ReleaseRef"],[3,"StatsResponse"],[3,"Success"],[3,"WorkEntity"],[8,"Api"],[8,"ApiNoContext"],[8,"ContextWrapperExt"],[3,"ContextWrapper"],[3,"NoRoute"],[3,"TrailingSlash"],[3,"Router"],[3,"Params"]]};
searchIndex["fatcat_export"] = {"doc":"JSON Export Helper","items":[[4,"ExportEntityType","fatcat_export","",null,null],[13,"Creator","","",0,null],[13,"Container","","",0,null],[13,"File","","",0,null],[13,"Release","","",0,null],[13,"Work","","",0,null],[5,"database_worker_pool","","Instantiate a new API server with a pooled database connection",null,{"o":{"g":["connectionpool"],"n":"result"}}],[5,"do_export","","",null,{"i":[{"n":"usize"},{"g":["expandflags"],"n":"option"},{"n":"exportentitytype"},{"n":"bool"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"exportentitytype"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"exportentitytype"}}],[11,"from_str","","",0,{"i":[{"n":"str"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"variants","","",0,null]],"paths":[[4,"ExportEntityType"]]};
searchIndex["fatcatd"] = {"doc":"","items":[],"paths":[]};
searchIndex["foreign_types"] = {"doc":"A framework for Rust wrappers over C APIs.","items":[[3,"Opaque","foreign_types","An opaque type used to define `ForeignTypeRef` types.",null,null],[8,"ForeignType","","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",0,null],[16,"Ref","","The type representing a reference to this type.",0,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,null],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,null],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed foreign types.",null,null],[16,"CType","","The raw C type.",1,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,null],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",1,null],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,null],[14,"foreign_type","","A macro to easily define wrappers for foreign types.",null,null]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"]]};
searchIndex["foreign_types_shared"] = {"doc":"Internal crate used by foreign-types","items":[[3,"Opaque","foreign_types_shared","An opaque type used to define `ForeignTypeRef` types.",null,null],[8,"ForeignType","","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",0,null],[16,"Ref","","The type representing a reference to this type.",0,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,null],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,null],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed foreign types.",null,null],[16,"CType","","The raw C type.",1,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,null],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",1,null],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,null]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"]]};
searchIndex["futures"] = {"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready or not.",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so later.",0,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a sink.",null,null],[13,"Ready","","The `start_send` attempt succeeded, so the sending process has started; you must use `Sink::poll_complete` to drive the send to completion.",1,null],[13,"NotReady","","The `start_send` attempt failed due to the sink being full. The value being sent is returned, and the current `Task` will be automatically notified again once the sink has room.",1,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"async"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"async"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"async"}],"o":{"n":"bool"}}],[11,"map","","Change the success value of this `Async` with the closure provided",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"async"}}],[11,"is_ready","","Returns whether this is `Async::Ready`",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from","","",0,{"i":[{"n":"t"}],"o":{"n":"async"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"asyncsink"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"asyncsink"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"asyncsink"}],"o":{"n":"bool"}}],[11,"map","","Change the NotReady value of this `AsyncSink` with the closure provided",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"asyncsink"}}],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[0,"future","","Futures",null,null],[3,"Empty","futures::future","A future which is never resolved.",null,null],[3,"Lazy","","A future which defers creation of the actual future until a callback is scheduled.",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",null,null],[3,"Flatten","","Future for the `flatten` combinator, flattening a future-of-a-future to get just the result of the final future.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying future (whether it is success of error) and emits EOF after that.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"FromErr","","Future for the `from_err` combinator, changing the error type of a future.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two futures to complete.",null,null],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",null,null],[3,"Select2","","Future for the `select2` combinator, waiting for one of two differently-typed futures to complete.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",null,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the completed values.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to successfully complete. Unlike `select_all`, this future ignores all but the last error, if there are any.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",null,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"SharedError","","A wrapped error of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",null,null],[4,"Loop","","The status of a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",2,null],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",2,null],[4,"Either","","Combines two different futures yielding the same item and error types into a single type.",null,null],[13,"A","","First branch of the type",3,null],[13,"B","","Second branch of the type",3,null],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the `Execute::spawn` function.",null,null],[13,"Shutdown","","This executor has shut down and will no longer accept new futures to spawn.",4,null],[13,"NoCapacity","","This executor has no more capacity to run more futures. Other futures need to finish before this executor can accept another.",4,null],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",null,{"o":{"n":"empty"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",null,{"i":[{"n":"f"}],"o":{"n":"lazy"}}],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"i":[{"n":"f"}],"o":{"n":"pollfn"}}],[5,"result","","Creates a new \"leaf future\" which will resolve with the given result.",null,{"i":[{"n":"result"}],"o":{"n":"futureresult"}}],[5,"ok","","Creates a \"leaf future\" from an immediate value of a finished and successful computation.",null,{"i":[{"n":"t"}],"o":{"n":"futureresult"}}],[5,"err","","Creates a \"leaf future\" from an immediate value of a failed computation.",null,{"i":[{"n":"e"}],"o":{"n":"futureresult"}}],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,{"i":[{"n":"s"},{"n":"f"}],"o":{"n":"loopfn"}}],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",null,{"i":[{"n":"i"}],"o":{"n":"joinall"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"i":[{"n":"i"}],"o":{"n":"selectall"}}],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"i":[{"n":"i"}],"o":{"n":"selectok"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",5,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",6,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",7,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"futureresult"}}],[11,"poll","","",8,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"from","","",8,{"i":[{"n":"result"}],"o":{"n":"self"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",9,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",10,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",11,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",12,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"is_done","","Returns whether the underlying future has finished or not.",13,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"poll","","",13,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",14,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",15,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",16,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",17,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",18,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",19,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",20,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",21,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",22,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",23,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",24,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",25,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",26,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,null],[11,"poll","","",3,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",27,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",28,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",29,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",30,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",31,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",32,{"i":[{"n":"self"}],"o":{"g":["result"],"n":"option"}}],[11,"poll","","",32,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"drop","","",32,{"i":[{"n":"self"}]}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"shareditem"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",33,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"sharederror"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",34,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",34,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",34,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[8,"Future","","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",35,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",35,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",35,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"wait","","Block the current thread until this future is resolved.",35,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",35,{"i":[{"n":"self"}],"o":{"n":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",35,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",35,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",35,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"join"}}],[11,"join3","","Same as `join`, but with more futures.",35,{"i":[{"n":"self"},{"n":"b"},{"n":"c"}],"o":{"n":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",35,{"i":[{"n":"self"},{"n":"b"},{"n":"c"},{"n":"d"}],"o":{"n":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",35,{"i":[{"n":"self"},{"n":"b"},{"n":"c"},{"n":"d"},{"n":"e"}],"o":{"n":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",35,{"i":[{"n":"self"}],"o":{"n":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",35,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",35,{"i":[{"n":"self"}],"o":{"n":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",35,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",35,{"i":[{"n":"self"}],"o":{"n":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",35,{"i":[{"n":"self"}],"o":{"n":"shared"}}],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",36,null],[16,"Item","","The item that the future may resolve with.",36,null],[16,"Error","","The error that the future may resolve with.",36,null],[10,"into_future","","Consumes this object and produces a future.",36,null],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",null,null],[16,"Future","","The future for the conversion.",37,null],[16,"Error","","Possible errors during conversion.",37,null],[10,"future_from","","Consume the given value, beginning the conversion.",37,null],[8,"Executor","","A trait for types which can spawn fresh futures.",null,null],[10,"execute","","Spawns a future to run on this `Executor`, typically in the \"background\".",38,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["executeerror"],"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"executeerrorkind"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"executeerrorkind"}],"o":{"n":"bool"}}],[11,"new","","Create a new `ExecuteError`",39,{"i":[{"n":"executeerrorkind"},{"n":"f"}],"o":{"n":"executeerror"}}],[11,"kind","","Returns the associated reason for the error",39,{"i":[{"n":"self"}],"o":{"n":"executeerrorkind"}}],[11,"into_future","","Consumes self and returns the original future that was spawned.",39,{"i":[{"n":"self"}],"o":{"n":"f"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"stream","futures","Asynchronous streams",null,null],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterStream","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterOk","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterResult","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Concat2","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",null,null],[3,"FromErr","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"InspectErr","","Do something with the error of a stream, passing it on.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"PollFn","","A stream which adapts a function returning `Poll`.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",null,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream to a blocking iterator.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves of a `Stream + Split`, and thus could not be `reunite`d.",null,null],[12,"0","","",40,null],[12,"1","","",40,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an item from one or both of the underlying streams.",null,null],[13,"First","","An item from the first stream",41,null],[13,"Second","","An item from the second stream",41,null],[13,"Both","","Items from both streams",41,null],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"i":[{"n":"j"}],"o":{"n":"iter"}}],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",null,{"i":[{"n":"i"}],"o":{"n":"iterok"}}],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"i":[{"n":"j"}],"o":{"n":"iterresult"}}],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,{"i":[{"n":"t"}],"o":{"n":"repeat"}}],[5,"empty","","Creates a stream which contains no elements.",null,{"o":{"n":"empty"}}],[5,"once","","Creates a stream of single element",null,{"i":[{"n":"result"}],"o":{"n":"once"}}],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",null,{"i":[{"n":"f"}],"o":{"n":"pollfn"}}],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"i":[{"n":"t"},{"n":"f"}],"o":{"n":"unfold"}}],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"i":[{"n":"i"}],"o":{"n":"futuresordered"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"i":[{"n":"i"}],"o":{"n":"futuresunordered"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",42,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",43,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",44,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",45,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",46,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",46,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",46,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",46,null],[11,"poll_complete","","",46,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",46,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",46,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",47,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"fmtresult"}}],[11,"poll","","",48,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"fmtresult"}}],[11,"poll","","",49,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",50,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",51,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",51,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",51,null],[11,"poll_complete","","",51,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",51,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",51,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",52,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",52,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",52,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",52,null],[11,"poll_complete","","",52,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",52,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",52,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",53,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",53,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",53,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",53,null],[11,"poll_complete","","",53,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",53,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",53,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",54,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",55,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",56,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",56,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",56,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",56,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send","","",56,null],[11,"poll_complete","","",56,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",56,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"start_send","","",57,null],[11,"poll_complete","","",57,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",57,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",57,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"is_done","","Returns whether the underlying stream has finished or not.",57,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",57,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",57,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",57,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",58,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",58,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",58,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"poll","","",58,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",59,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",59,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",59,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",59,null],[11,"poll_complete","","",59,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",59,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",59,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",60,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",60,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",60,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",60,null],[11,"poll_complete","","",60,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",60,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",60,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",61,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",61,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",61,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",61,null],[11,"poll_complete","","",61,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",61,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",61,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",62,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",62,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",62,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",62,null],[11,"poll_complete","","",62,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",62,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",62,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",63,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",64,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"start_send","","",65,null],[11,"poll_complete","","",65,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",65,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",65,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"start_send","","",66,null],[11,"poll_complete","","",66,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",66,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",66,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"peek","","Peek retrieves a reference to the next item in the stream.",66,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",67,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",68,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",69,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",69,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",69,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",69,null],[11,"poll_complete","","",69,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",69,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",69,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",70,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",70,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",70,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",70,null],[11,"poll_complete","","",70,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",70,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",70,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",71,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",71,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",71,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",71,null],[11,"poll_complete","","",71,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",71,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",71,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",72,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",72,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",72,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",72,null],[11,"poll_complete","","",72,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",72,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",72,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"start_send","","",73,null],[11,"poll_complete","","",73,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",73,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",73,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",74,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",75,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"sink_ref","","Get a shared reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",76,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"sink_mut","","Get a mutable reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",76,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"stream_ref","","Get a shared reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",76,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"stream_mut","","Get a mutable reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",76,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"poll","","",76,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",77,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",77,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",77,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",77,null],[11,"poll_complete","","",77,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",77,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",77,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",78,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",78,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",78,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",78,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send","","",78,null],[11,"poll_complete","","",78,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",78,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",79,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"start_send","","",80,null],[11,"poll_complete","","",80,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",80,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",80,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",80,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",80,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",80,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",81,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"poll"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",82,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",82,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",82,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"next","","",82,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",83,{"i":[{"n":"self"},{"n":"splitsink"}],"o":{"g":["reuniteerror"],"n":"result"}}],[11,"poll","","",83,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",84,{"i":[{"n":"self"},{"n":"splitstream"}],"o":{"g":["reuniteerror"],"n":"result"}}],[11,"start_send","","",84,null],[11,"poll_complete","","",84,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",84,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",40,{"i":[{"n":"self"}],"o":{"n":"str"}}],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[11,"new","","Constructs a new, empty `FuturesUnordered`",85,{"o":{"n":"futuresunordered"}}],[11,"len","","Returns the number of futures contained in the set.",85,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no futures",85,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Push a future into the set.",85,{"i":[{"n":"self"},{"n":"t"}]}],[11,"iter_mut","","Returns an iterator that allows modifying each future in the set.",85,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"poll","","",85,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",85,{"i":[{"n":"self"}]}],[11,"from_iter","","",85,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",86,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",86,null],[11,"new","futures::stream","Constructs a new, empty `FuturesOrdered`",87,{"o":{"n":"futuresordered"}}],[11,"len","","Returns the number of futures contained in the queue.",87,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns `true` if the queue contains no futures",87,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Push a future into the queue.",87,{"i":[{"n":"self"},{"n":"t"}]}],[11,"poll","","",87,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_iter","","",87,{"i":[{"n":"t"}],"o":{"n":"self"}}],[8,"Stream","","A stream of values, not all of which may have been produced yet.",null,null],[16,"Item","","The type of item this stream will yield on success.",88,null],[16,"Error","","The type of error this stream may generate.",88,null],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",88,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",88,{"i":[{"n":"self"}],"o":{"n":"wait"}}],[11,"into_future","","Converts this stream into a `Future`.",88,{"i":[{"n":"self"}],"o":{"n":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",88,{"i":[{"n":"self"}],"o":{"n":"collect"}}],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",88,{"i":[{"n":"self"}],"o":{"n":"concat2"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",88,{"i":[{"n":"self"}],"o":{"n":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",88,{"i":[{"n":"self"},{"n":"t"},{"n":"f"}],"o":{"n":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",88,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",88,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",88,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"foreach"}}],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",88,{"i":[{"n":"self"}],"o":{"n":"fromerr"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",88,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",88,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",88,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",88,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",88,{"i":[{"n":"self"}],"o":{"n":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",88,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",88,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bufferunordered"}}],[11,"merge","","An adapter for merging the output of two streams.",88,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"merge"}}],[11,"zip","","An adapter for zipping two streams together.",88,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"zip"}}],[11,"chain","","Adapter for chaining two stream.",88,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",88,{"i":[{"n":"self"}],"o":{"n":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",88,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",88,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",88,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",88,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspect"}}],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspecterr"}}],[0,"sink","futures","Asynchronous sinks",null,null],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",null,null],[3,"Wait","","A sink combinator which converts an asynchronous sink to a blocking sink.",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",null,null],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator to run prior to pushing a value into the underlying sink",null,null],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the sink until all data has been flushed.",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",null,null],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two sinks at the same time.",null,null],[11,"fmt","","",89,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",89,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"get_ref","","Get a shared reference to the inner sink.",89,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",89,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",89,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",89,null],[11,"poll_complete","","",89,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",89,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",90,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",90,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",90,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",90,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",90,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send","","",90,null],[11,"poll_complete","","",90,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",90,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",91,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",91,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",91,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consume the `Flush` and return the inner sink.",91,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",91,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",92,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",92,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",92,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",92,null],[11,"poll_complete","","",92,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",92,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",92,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",93,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",93,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",93,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",93,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",94,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",94,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",95,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",95,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",95,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",95,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",95,null],[11,"poll_complete","","",95,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",95,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",95,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",96,null],[11,"fmt","","",96,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"fmtresult"}}],[11,"start_send","","",96,null],[11,"poll_complete","","",96,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",96,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",97,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",97,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",97,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",97,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send","","",97,null],[11,"poll_complete","","",97,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",97,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",98,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"send","","Sends a value to this sink, blocking the current thread until it's able to do so.",98,null],[11,"flush","","Flushes any buffered data in this sink, blocking the current thread until it's entirely flushed.",98,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"close","","Close this sink, blocking the current thread until it's entirely closed.",98,{"i":[{"n":"self"}],"o":{"n":"result"}}],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",null,null],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",99,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",99,null],[10,"start_send","","Begin the process of sending a value to the sink.",99,null],[10,"poll_complete","","Flush all output from this sink, if necessary.",99,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","A method to indicate that no more values will ever be pushed into this sink.",99,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"wait","","Creates a new object which will produce a synchronous sink.",99,{"i":[{"n":"self"}],"o":{"n":"wait"}}],[11,"with","","Composes a function in front of the sink.",99,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",99,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",99,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"sinkmaperr"}}],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for this sink's `Error`, returning a new sink.",99,{"i":[{"n":"self"}],"o":{"n":"sinkfromerr"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",99,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"buffer"}}],[11,"fanout","","Fanout items to multiple sinks.",99,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"fanout"}}],[11,"flush","","A future that completes when the sink has finished processing all pending requests.",99,{"i":[{"n":"self"}],"o":{"n":"flush"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",99,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",99,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"sendall"}}],[0,"task","futures","Tasks used to drive a future computation",null,null],[3,"Task","futures::task","A handle to a \"task\", which represents a single lightweight \"thread\" of execution driving a future to completion.",null,null],[3,"AtomicTask","","A synchronization primitive for task notification.",null,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",null,null],[5,"current","","Returns a handle to the current task to call `notify` at a later date.",null,{"o":{"n":"task"}}],[5,"init","","Initialize the `futures` task system.",null,null],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark event\" to be triggered when the task handle is used to unpark the task.",null,{"i":[{"n":"unparkevent"},{"n":"f"}],"o":{"n":"r"}}],[8,"EventSet","","A concurrent set which allows for the insertion of `usize` values.",null,null],[10,"insert","","Insert the given ID into the set",100,{"i":[{"n":"self"},{"n":"usize"}]}],[0,"executor","futures","Executors",null,null],[3,"Run","futures::executor","Units of work submitted to an `Executor`, currently only created internally.",null,null],[3,"Spawn","","Representation of a spawned future/stream.",null,null],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which notifications are routed in the `futures` crate.",null,null],[5,"spawn","","Spawns a future or stream, returning it and the new task responsible for running it to completion.",null,{"i":[{"n":"t"}],"o":{"n":"spawn"}}],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the duration of the provided closure.",null,{"i":[{"n":"t"},{"n":"usize"},{"n":"f"}],"o":{"n":"r"}}],[8,"Unpark","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"unpark","","Indicates that an associated future and/or task are ready to make progress.",101,{"i":[{"n":"self"}]}],[8,"Executor","","A trait representing requests to poll futures.",null,null],[10,"execute","","Requests that `Run` is executed soon on the given executor.",102,{"i":[{"n":"self"},{"n":"run"}]}],[8,"Notify","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"notify","","Indicates that an associated future and/or task are ready to make progress.",103,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",103,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",103,{"i":[{"n":"self"},{"n":"usize"}]}],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory management behind a `Task`.",null,null],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.",104,{"i":[{"n":"self"}],"o":{"n":"notifyhandle"}}],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating resources associated with it.",104,{"i":[{"n":"self"}]}],[0,"sync","futures","Future-aware synchronization",null,null],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which is a mutex between two possible owners.",null,null],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",null,null],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when the lock is acquired.",null,null],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",null,null],[0,"oneshot","","A one-shot, futures-aware channel",null,null],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"Sender","","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>` is dropped.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Execute` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"i":[{"n":"f"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"i":[{"n":"f"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[11,"fmt","","",105,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",106,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"send","","Completes this oneshot with a successful result.",106,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",106,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",106,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"drop","","",106,{"i":[{"n":"self"}]}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"canceled"}}],[11,"eq","","",107,{"i":[{"n":"self"},{"n":"canceled"}],"o":{"n":"bool"}}],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",107,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",105,{"i":[{"n":"self"}]}],[11,"poll","","",105,{"i":[{"n":"self"}],"o":{"g":["canceled"],"n":"poll"}}],[11,"drop","","",105,{"i":[{"n":"self"}]}],[11,"forget","","Drop this future without canceling the underlying future.",108,{"i":[{"n":"self"}]}],[11,"poll","","",108,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",108,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",108,{"i":[{"n":"self"}]}],[11,"poll","","",109,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",109,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",109,{"i":[{"n":"self"}]}],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.",null,null],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send values.",null,null],[3,"UnboundedSender","","The transmission end of a channel which is used to send values.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedReceiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"TrySendError","","Error type returned from `try_send`",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates an in-memory channel implementation of the `Stream` trait with bounded capacity.",null,null],[5,"unbounded","","Creates an in-memory channel implementation of the `Stream` trait with unbounded capacity.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"i":[{"n":"s"},{"n":"e"},{"n":"usize"}],"o":{"n":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"i":[{"n":"s"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[11,"fmt","","",110,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",112,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",113,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",114,{"i":[{"n":"self"}],"o":{"n":"senderror"}}],[11,"eq","","",114,{"i":[{"n":"self"},{"n":"senderror"}],"o":{"n":"bool"}}],[11,"ne","","",114,{"i":[{"n":"self"},{"n":"senderror"}],"o":{"n":"bool"}}],[11,"clone","","",115,{"i":[{"n":"self"}],"o":{"n":"trysenderror"}}],[11,"eq","","",115,{"i":[{"n":"self"},{"n":"trysenderror"}],"o":{"n":"bool"}}],[11,"ne","","",115,{"i":[{"n":"self"},{"n":"trysenderror"}],"o":{"n":"bool"}}],[11,"fmt","","",114,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",114,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",114,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",114,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"fmt","","",115,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",115,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",115,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"is_full","","Returns true if this error is a result of the channel being full",115,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped",115,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",115,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"try_send","","Attempts to send a message on this `Sender<T>` without blocking.",110,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["trysenderror"],"n":"result"}}],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to be capacity to send at least one item without waiting.",110,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"start_send","","",110,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"startsend"}}],[11,"poll_complete","","",110,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"close","","",110,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",111,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"result"}}],[11,"start_send","","",111,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"startsend"}}],[11,"poll_complete","","",111,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"close","","",111,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"unboundedsender"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"drop","","",110,{"i":[{"n":"self"}]}],[11,"close","","Closes the receiving half",112,{"i":[{"n":"self"}]}],[11,"poll","","",112,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"drop","","",112,{"i":[{"n":"self"}]}],[11,"close","","Closes the receiving half",113,{"i":[{"n":"self"}]}],[11,"poll","","",113,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"poll","","",116,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",117,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","futures::sync","",118,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `BiLock` protecting the provided data.",118,null],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it can't be acquired.",118,{"i":[{"n":"self"}],"o":{"g":["bilockguard"],"n":"async"}}],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this lock handle and returning a future to the acquired lock.",118,{"i":[{"n":"self"}],"o":{"n":"bilockacquire"}}],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back together and recover the original value. Succeeds only if the two `BiLock<T>`s originated from the same call to `BiLock::new`.",118,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["reuniteerror"],"n":"result"}}],[11,"fmt","","",119,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",119,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",119,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",119,{"i":[{"n":"self"}]}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",120,{"i":[{"n":"self"}],"o":{"g":["bilockacquired"],"n":"poll"}}],[11,"fmt","","",121,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",121,{"i":[{"n":"self"}],"o":{"n":"bilock"}}],[11,"deref","","",121,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",121,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",121,{"i":[{"n":"self"}]}],[0,"unsync","futures","Future-aware single-threaded synchronization",null,null],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure, for use communicating between tasks on the same thread.",null,null],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",null,null],[5,"unbounded","","Creates an unbounded in-memory channel with buffered storage.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"i":[{"n":"s"},{"n":"e"},{"n":"usize"}],"o":{"n":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"i":[{"n":"s"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[11,"fmt","","",122,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",122,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"start_send","","",122,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"startsend"}}],[11,"poll_complete","","",122,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"close","","",122,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"drop","","",122,{"i":[{"n":"self"}]}],[11,"fmt","","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"close","","Closes the receiving half",123,{"i":[{"n":"self"}]}],[11,"poll","","",123,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"drop","","",123,{"i":[{"n":"self"}]}],[11,"fmt","","",124,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",124,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"start_send","","",124,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"startsend"}}],[11,"poll_complete","","",124,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"close","","",124,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",124,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"result"}}],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"close","","Closes the receiving half",125,{"i":[{"n":"self"}]}],[11,"poll","","",125,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",126,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",126,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"poll","","",127,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",127,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",128,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",128,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",null,null],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Receiver","","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Spawn` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"i":[{"n":"f"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"i":[{"n":"f"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[11,"fmt","","",129,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",130,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"send","","Completes this oneshot with a successful result.",129,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",129,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",129,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"drop","","",129,{"i":[{"n":"self"}]}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",130,{"i":[{"n":"self"}]}],[11,"poll","","",130,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"drop","","",130,{"i":[{"n":"self"}]}],[11,"forget","","Drop this future without canceling the underlying future.",131,{"i":[{"n":"self"}]}],[11,"poll","","",131,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",131,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",132,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",132,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",null,null],[6,"Poll","","Return type of the `Future::poll` method, indicates whether a future's value is ready or not.",null,null],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating the outcome of a send attempt. See `AsyncSink` for more details.",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T, E>`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",133,{"o":{"n":"atomictask"}}],[11,"register","","Registers the current task to be notified on calls to `notify`.",133,{"i":[{"n":"self"}]}],[11,"register_task","","Registers the provided task to be notified on calls to `notify`.",133,{"i":[{"n":"self"},{"n":"task"}]}],[11,"notify","","Notifies the task that last called `register`.",133,{"i":[{"n":"self"}]}],[11,"default","","",133,{"o":{"n":"self"}}],[11,"fmt","","",133,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",134,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"with","","Access this task-local key, running the provided closure with a reference to the value.",134,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"r"}}],[11,"poll_future","futures::executor","Polls the internal future, scheduling notifications to be sent to the `unpark` argument.",135,{"i":[{"n":"self"},{"g":["unpark"],"n":"arc"}],"o":{"n":"poll"}}],[11,"wait_future","","Waits for the internal future to complete, blocking this thread's execution until it does.",135,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"execute","","A specialized function to request running a future to completion on the specified executor.",135,{"i":[{"n":"self"},{"g":["executor"],"n":"arc"}]}],[11,"poll_stream","","Like `poll_future`, except polls the underlying stream.",135,{"i":[{"n":"self"},{"g":["unpark"],"n":"arc"}],"o":{"g":["option"],"n":"poll"}}],[11,"wait_stream","","Like `wait_future`, except only waits for the next element to arrive on the underlying stream.",135,{"i":[{"n":"self"}],"o":{"g":["result"],"n":"option"}}],[11,"start_send","","Invokes the underlying `start_send` method with this task in place.",135,null],[11,"poll_flush","","Invokes the underlying `poll_complete` method with this task in place.",135,{"i":[{"n":"self"},{"n":"arc"}],"o":{"n":"poll"}}],[11,"wait_send","","Blocks the current thread until it's able to send `value` on this sink.",135,null],[11,"wait_flush","","Blocks the current thread until it's able to flush this sink.",135,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"wait_close","","Blocks the current thread until it's able to close this sink.",135,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"run","","Actually run the task (invoking `poll` on its future) on the current thread.",136,{"i":[{"n":"self"}]}],[11,"fmt","","",136,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","futures::task","",137,{"i":[{"n":"self"}],"o":{"n":"unparkevent"}}],[11,"new","","Construct an unpark event that will insert `id` into `set` when triggered.",137,{"i":[{"g":["eventset"],"n":"arc"},{"n":"usize"}],"o":{"n":"unparkevent"}}],[11,"fmt","","",137,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","futures::executor","",138,{"i":[{"n":"arc"}],"o":{"n":"notifyhandle"}}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",103,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",103,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clone","futures::task","",139,{"i":[{"n":"self"}],"o":{"n":"task"}}],[11,"notify","","Indicate that the task should attempt to poll its future in a timely fashion.",139,{"i":[{"n":"self"}]}],[11,"is_current","","Returns `true` when called from within the context of the task.",139,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"will_notify_current","","This function is intended as a performance optimization for structures which store a `Task` internally.",139,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",139,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",135,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",135,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","Consume the Spawn, returning its inner object",135,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be sent to the `notify` argument.",135,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"n":"poll"}}],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying stream.",135,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task in place.",135,null],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this task in place.",135,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"n":"poll"}}],[11,"close_notify","","Invokes the underlying `close` method with this task in place.",135,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"n":"poll"}}],[11,"fmt","","",135,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Constructs a new `NotifyHandle` directly.",138,null],[11,"notify","","Invokes the underlying instance of `Notify` with the provided `id`.",138,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clone","","",138,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",138,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",138,{"i":[{"n":"self"}]}],[11,"from","","",138,{"i":[{"n":"t"}],"o":{"n":"notifyhandle"}}]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"SharedItem"],[3,"SharedError"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[3,"ReuniteError"],[4,"MergedItem"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"AndThen"],[3,"Chain"],[3,"Concat2"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"PollFn"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"IterMut"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SendAll"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Unpark"],[8,"Executor"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[3,"Sender"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Execute"],[3,"AtomicTask"],[3,"LocalKey"],[3,"Spawn"],[3,"Run"],[3,"UnparkEvent"],[3,"NotifyHandle"],[3,"Task"]]};
searchIndex["httparse"] = {"doc":"httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",null,null],[3,"Request","","A parsed Request.",null,null],[12,"method","","The request method, such as `GET`.",0,null],[12,"path","","The request path, such as `/about-us`.",0,null],[12,"version","","The request version, such as `HTTP/1.1`.",0,null],[12,"headers","","The request headers.",0,null],[3,"Response","","A parsed Response.",null,null],[12,"version","","The response version, such as `HTTP/1.1`.",1,null],[12,"code","","The response code, such as `200`.",1,null],[12,"reason","","The response reason-phrase, such as `OK`.",1,null],[12,"headers","","The response headers.",1,null],[3,"Header","","Represents a parsed header.",null,null],[12,"name","","The name portion of a header.",2,null],[12,"value","","The value portion of a header.",2,null],[4,"Error","","An error in parsing.",null,null],[13,"HeaderName","","Invalid byte in header name.",3,null],[13,"HeaderValue","","Invalid byte in header value.",3,null],[13,"NewLine","","Invalid byte in new line.",3,null],[13,"Status","","Invalid byte in Response status.",3,null],[13,"Token","","Invalid byte where token is required.",3,null],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,null],[13,"Version","","Invalid byte in HTTP version.",3,null],[4,"Status","","The result of a successful parse pass.",null,null],[13,"Complete","","The completed result.",4,null],[13,"Partial","","A partial result.",4,null],[5,"parse_headers","","Parse a buffer of bytes as headers.",null,null],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",null,null],[6,"Result","","A Result of any parsing action.",null,null],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array to pass in for parsing.",null,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"invalidchunksize"}],"o":{"n":"bool"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"status"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"status"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"status"}],"o":{"n":"bool"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"is_complete","","Convenience method to check if status is complete.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_partial","","Convenience method to check if status is partial.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if the status is `Partial`.",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"request"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"request"}],"o":{"n":"bool"}}],[11,"new","","Creates a new Request, using a slice of headers you allocate.",0,null],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"response"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"response"}],"o":{"n":"bool"}}],[11,"new","","Creates a new `Response` using a slice of `Header`s you have allocated.",1,null],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"header"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"header"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"header"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["humantime"] = {"doc":"Human-friendly time parser and formatter","items":[[3,"FormattedDuration","humantime","A wrapper type that allows you to Display a Duration",null,null],[3,"Duration","","A wrapper for duration that has `FromStr` implementation",null,null],[3,"Timestamp","","A wrapper for SystemTime that has `FromStr` implementation",null,null],[3,"Rfc3339Timestamp","","A wrapper type that allows you to Display a SystemTime",null,null],[4,"DurationError","","Error parsing human-friendly duration",null,null],[13,"InvalidCharacter","","Invalid character during parsing",0,null],[13,"NumberExpected","","Non-numeric value where number is expected",0,null],[13,"UnknownUnit","","Unit in the number is not one of allowed units",0,null],[13,"NumberOverflow","","The numeric value is too large",0,null],[13,"Empty","","The value was an empty string (or consists only whitespace)",0,null],[4,"TimestampError","","Error parsing datetime (timestamp)",null,null],[13,"OutOfRange","","Numeric component is out of range",1,null],[13,"InvalidDigit","","Bad character where digit is expected",1,null],[13,"InvalidFormat","","Other formatting errors",1,null],[5,"parse_duration","","Parse duration object `1hour 12min 5s`",null,{"i":[{"n":"str"}],"o":{"g":["duration","error"],"n":"result"}}],[5,"format_duration","","Formats duration into a human-readable string",null,{"i":[{"n":"duration"}],"o":{"n":"formattedduration"}}],[5,"parse_rfc3339","","Parse RFC3339 timestamp `2018-02-14T00:28:07Z`",null,{"i":[{"n":"str"}],"o":{"g":["systemtime","error"],"n":"result"}}],[5,"parse_rfc3339_weak","","Parse RFC3339-like timestamp `2018-02-14 00:28:07`",null,{"i":[{"n":"str"}],"o":{"g":["systemtime","error"],"n":"result"}}],[5,"format_rfc3339","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",null,{"i":[{"n":"systemtime"}],"o":{"n":"rfc3339timestamp"}}],[5,"format_rfc3339_seconds","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",null,{"i":[{"n":"systemtime"}],"o":{"n":"rfc3339timestamp"}}],[5,"format_rfc3339_nanos","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000000000Z`",null,{"i":[{"n":"systemtime"}],"o":{"n":"rfc3339timestamp"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",0,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"hash","","",3,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"timestamp"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"timestamp"}],"o":{"n":"bool"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"timestamp"}}],[11,"as_ref","","",3,{"i":[{"n":"self"}],"o":{"n":"stdduration"}}],[11,"deref","","",3,{"i":[{"n":"self"}],"o":{"n":"stdduration"}}],[11,"into","","",3,{"i":[{"n":"self"}],"o":{"n":"stdduration"}}],[11,"from","","",3,{"i":[{"n":"stdduration"}],"o":{"n":"duration"}}],[11,"from_str","","",3,{"i":[{"n":"str"}],"o":{"g":["duration"],"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_ref","","",4,{"i":[{"n":"self"}],"o":{"n":"systemtime"}}],[11,"deref","","",4,{"i":[{"n":"self"}],"o":{"n":"systemtime"}}],[11,"into","","",4,{"i":[{"n":"self"}],"o":{"n":"systemtime"}}],[11,"from","","",4,{"i":[{"n":"systemtime"}],"o":{"n":"timestamp"}}],[11,"from_str","","",4,{"i":[{"n":"str"}],"o":{"g":["timestamp"],"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",1,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[4,"DurationError"],[4,"TimestampError"],[3,"FormattedDuration"],[3,"Duration"],[3,"Timestamp"],[3,"Rfc3339Timestamp"]]};
searchIndex["hyper"] = {"doc":"Hyper","items":[[3,"Url","hyper","A parsed URL record.",null,null],[3,"LanguageTag","","A language tag as described in BCP47.",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all other aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially selected languages that, for various historical and compatibility reasons, are closely identified with or tagged using an existing primary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system variations that distinguish the written forms of a language or its dialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated with or appropriate to a specific country, territory, or region. Typically, a region subtag is used to indicate variations such as regional dialects or usage, or region-specific spelling conventions. It can also be used to indicate that content is expressed in a way that is appropriate for use throughout a region, for instance, Spanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized variations that define a language or its dialects that are not covered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in various applications.  They are intended to identify information that is commonly used in association with languages or language tags but that is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language that are important in a given context by private agreement.",0,null],[0,"client","","HTTP Client",null,null],[3,"Client","hyper::client","A Client to use additional features with Requests.",null,null],[3,"RequestBuilder","","Options for an individual Request.",null,null],[3,"ProxyConfig","","Proxy server configuration with a custom connector and TLS wrapper.",null,null],[4,"Body","","An enum of possible body types for a Request.",null,null],[13,"ChunkedBody","","A Reader does not necessarily know it's size, so it is chunked.",1,null],[13,"SizedBody","","For Readers that can know their size, like a `File`.",1,null],[13,"BufBody","","A String has a size, and uses Content-Length.",1,null],[4,"RedirectPolicy","","Behavior regarding how to handle redirects within a Client.",null,null],[13,"FollowNone","","Don't follow any redirects.",2,null],[13,"FollowAll","","Follow all redirects.",2,null],[13,"FollowIf","","Follow a redirect if the contained function returns true.",2,null],[0,"pool","","Client Connection Pooling",null,null],[3,"Pool","hyper::client::pool","The `NetworkConnector` that behaves as a connection pool used by hyper's `Client`.",null,null],[3,"Config","","Config options for the `Pool`.",null,null],[12,"max_idle","","The maximum idle connections per host.",3,null],[3,"PooledStream","","A Stream that will try to be returned to the Pool when dropped.",null,null],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",3,{"o":{"n":"config"}}],[11,"new","","Creates a `Pool` with a `DefaultConnector`.",4,{"i":[{"n":"config"}],"o":{"g":["defaultconnector"],"n":"pool"}}],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",4,{"i":[{"n":"config"},{"n":"c"}],"o":{"n":"pool"}}],[11,"set_idle_timeout","","Set a duration for how long an idle connection is still valid.",4,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"set_stale_check","","",4,{"i":[{"n":"self"},{"n":"f"}]}],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",4,{"i":[{"n":"self"}]}],[11,"connect","","",4,{"i":[{"n":"self"},{"n":"str"},{"n":"u16"},{"n":"str"}],"o":{"g":["pooledstream"],"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_inner","","Take the wrapped stream out of the pool completely.",5,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Gets a borrowed reference to the underlying stream.",5,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"read","","",5,null],[11,"write","","",5,null],[11,"flush","","",5,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"peer_addr","","",5,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"set_read_timeout","","",5,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"set_write_timeout","","",5,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"close","","",5,{"i":[{"n":"self"},{"n":"shutdown"}],"o":{"n":"result"}}],[11,"set_previous_response_expected_no_content","","",5,{"i":[{"n":"self"},{"n":"bool"}]}],[11,"previous_response_expected_no_content","","",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"drop","","",5,{"i":[{"n":"self"}]}],[0,"request","hyper::client","Client Requests",null,null],[3,"Request","hyper::client::request","A client request to a remote server. The W type tracks the state of the request, Fresh vs Streaming.",null,null],[12,"url","","The target URI for this request.",6,null],[12,"version","","The HTTP version of this request.",6,null],[11,"headers","","Read the Request headers.",6,{"i":[{"n":"self"}],"o":{"n":"headers"}}],[11,"method","","Read the Request method.",6,{"i":[{"n":"self"}],"o":{"n":"method"}}],[11,"set_write_timeout","","Set the write timeout.",6,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"set_read_timeout","","Set the read timeout.",6,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"with_message","","Create a new `Request<Fresh>` that will use the given `HttpMessage` for its communication with the server. This implies that the given `HttpMessage` instance has already been properly initialized by the caller (e.g. a TCP connection's already established).",6,{"i":[{"n":"method"},{"n":"url"},{"g":["httpmessage"],"n":"box"}],"o":{"g":["request"],"n":"result"}}],[11,"new","","Create a new client request.",6,{"i":[{"n":"method"},{"n":"url"}],"o":{"g":["request"],"n":"result"}}],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",6,{"i":[{"n":"method"},{"n":"url"},{"n":"c"}],"o":{"g":["request"],"n":"result"}}],[11,"start","","Consume a Fresh Request, writing the headers and method, returning a Streaming Request.",6,{"i":[{"n":"self"}],"o":{"g":["request"],"n":"result"}}],[11,"headers_mut","","Get a mutable reference to the Request headers.",6,{"i":[{"n":"self"}],"o":{"n":"headers"}}],[11,"send","","Completes writing the request, and returns a response to read from.",6,{"i":[{"n":"self"}],"o":{"g":["response"],"n":"result"}}],[11,"write","","",6,null],[11,"flush","","",6,{"i":[{"n":"self"}],"o":{"n":"result"}}],[0,"response","hyper::client","Client Responses",null,null],[3,"Response","hyper::client::response","A response for a client request to a remote server.",null,null],[12,"status","","The status from the server.",7,null],[12,"headers","","The headers from the server.",7,null],[12,"version","","The HTTP version of this response from the server.",7,null],[12,"url","","The final URL of this response.",7,null],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new response from a server.",7,{"i":[{"n":"url"},{"g":["networkstream"],"n":"box"}],"o":{"g":["response"],"n":"result"}}],[11,"with_message","","Creates a new response received from the server on the given `HttpMessage`.",7,{"i":[{"n":"url"},{"g":["httpmessage"],"n":"box"}],"o":{"g":["response"],"n":"result"}}],[11,"status_raw","","Get the raw status code and reason.",7,{"i":[{"n":"self"}],"o":{"n":"rawstatus"}}],[11,"get_ref","","Gets a borrowed reference to the underlying `HttpMessage`.",7,{"i":[{"n":"self"}],"o":{"n":"httpmessage"}}],[11,"read","","",7,null],[11,"drop","","",7,{"i":[{"n":"self"}]}],[8,"IntoUrl","hyper::client","A helper trait to convert common objects into a Url.",null,null],[10,"into_url","","Consumes the object, trying to return a Url.",8,{"i":[{"n":"self"}],"o":{"g":["url","urlerror"],"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new Client.",9,{"o":{"n":"client"}}],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",9,{"i":[{"n":"config"}],"o":{"n":"client"}}],[11,"with_http_proxy","","Create a Client with an HTTP proxy to a (host, port).",9,{"i":[{"n":"h"},{"n":"u16"}],"o":{"n":"client"}}],[11,"with_proxy_config","","Create a Client using a proxy with a custom connector and SSL client.",9,{"i":[{"n":"proxyconfig"}],"o":{"n":"client"}}],[11,"with_connector","","Create a new client with a specific connector.",9,{"i":[{"n":"c"}],"o":{"n":"client"}}],[11,"with_protocol","","Create a new client with a specific `Protocol`.",9,{"i":[{"n":"p"}],"o":{"n":"client"}}],[11,"set_redirect_policy","","Set the RedirectPolicy.",9,{"i":[{"n":"self"},{"n":"redirectpolicy"}]}],[11,"set_read_timeout","","Set the read timeout value for all requests.",9,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"set_write_timeout","","Set the write timeout value for all requests.",9,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"get","","Build a Get request.",9,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"requestbuilder"}}],[11,"head","","Build a Head request.",9,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"requestbuilder"}}],[11,"patch","","Build a Patch request.",9,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"requestbuilder"}}],[11,"post","","Build a Post request.",9,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"requestbuilder"}}],[11,"put","","Build a Put request.",9,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"requestbuilder"}}],[11,"delete","","Build a Delete request.",9,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"requestbuilder"}}],[11,"request","","Build a new request using this Client.",9,{"i":[{"n":"self"},{"n":"method"},{"n":"u"}],"o":{"n":"requestbuilder"}}],[11,"default","","",9,{"o":{"n":"client"}}],[11,"body","","Set a request body to be sent.",10,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"requestbuilder"}}],[11,"headers","","Add additional headers to the request.",10,{"i":[{"n":"self"},{"n":"headers"}],"o":{"n":"requestbuilder"}}],[11,"header","","Add an individual new header to the request.",10,{"i":[{"n":"self"},{"n":"h"}],"o":{"n":"requestbuilder"}}],[11,"send","","Execute this request and receive a Response back.",10,{"i":[{"n":"self"}],"o":{"g":["response"],"n":"result"}}],[11,"read","","",1,null],[11,"from","","",1,{"i":[{"n":"r"}],"o":{"n":"body"}}],[11,"into_url","hyper","",11,{"i":[{"n":"self"}],"o":{"g":["url","urlerror"],"n":"result"}}],[11,"new","hyper::client","Create a new `ProxyConfig`.",12,{"i":[{"n":"str"},{"n":"h"},{"n":"u16"},{"n":"c"},{"n":"s"}],"o":{"n":"proxyconfig"}}],[11,"set_pool_config","","Change the `pool::Config` for the proxy.",12,{"i":[{"n":"self"},{"g":["config"],"n":"option"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"redirectpolicy"}}],[11,"default","","",2,{"o":{"n":"redirectpolicy"}}],[0,"error","hyper","Error and Result module.",null,null],[4,"ParseError","hyper::error","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",13,null],[13,"IdnaError","","",13,null],[13,"InvalidPort","","",13,null],[13,"InvalidIpv4Address","","",13,null],[13,"InvalidIpv6Address","","",13,null],[13,"InvalidDomainCharacter","","",13,null],[13,"RelativeUrlWithoutBase","","",13,null],[13,"RelativeUrlWithCannotBeABaseBase","","",13,null],[13,"SetHostOnCannotBeABaseUrl","","",13,null],[13,"Overflow","","",13,null],[4,"Error","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",14,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",14,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",14,null],[13,"Header","","An invalid `Header`.",14,null],[13,"TooLarge","","A message head is too large to be reasonable.",14,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",14,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",14,null],[13,"Ssl","","An error from a SSL library.",14,null],[13,"Utf8","","Parsing a field as string failed",14,null],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",null,null],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",14,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",14,{"i":[{"n":"self"}],"o":{"g":["stderror"],"n":"option"}}],[11,"from","","",14,{"i":[{"n":"ioerror"}],"o":{"n":"error"}}],[11,"from","","",14,{"i":[{"n":"parseerror"}],"o":{"n":"error"}}],[11,"from","","",14,{"i":[{"n":"utf8error"}],"o":{"n":"error"}}],[11,"from","","",14,{"i":[{"n":"fromutf8error"}],"o":{"n":"error"}}],[11,"from","","",14,{"i":[{"n":"error"}],"o":{"n":"error"}}],[0,"method","hyper","The HTTP request method",null,null],[4,"Method","hyper::method","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",15,null],[13,"Get","","GET",15,null],[13,"Post","","POST",15,null],[13,"Put","","PUT",15,null],[13,"Delete","","DELETE",15,null],[13,"Head","","HEAD",15,null],[13,"Trace","","TRACE",15,null],[13,"Connect","","CONNECT",15,null],[13,"Patch","","PATCH",15,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(\"FOO\".to_string())`.",15,null],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"method"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"method"}],"o":{"n":"bool"}}],[11,"ne","","",15,{"i":[{"n":"self"},{"n":"method"}],"o":{"n":"bool"}}],[11,"hash","","",15,null],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_ref","","",15,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"safe","","Whether a method is considered \"safe\", meaning the request is essentially read-only.",15,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has the same result is executed multiple times.",15,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from_str","","",15,{"i":[{"n":"str"}],"o":{"g":["method","error"],"n":"result"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"header","hyper","Headers container, and common header fields.",null,null],[3,"EntityTag","hyper::header","An entity tag, defined in RFC7232",null,null],[12,"weak","","Weakness indicator for the tag",16,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[12,"0","","",17,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[12,"0","","",18,null],[3,"QualityItem","","Represents an item with a quality value as defined in RFC7231.",null,null],[12,"item","","The actual contents of the field.",19,null],[12,"quality","","The quality (client or server preference) for the value.",19,null],[3,"Accept","","`Accept` header, defined in RFC7231",null,null],[12,"0","","",20,null],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of CORS",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of CORS",null,null],[12,"0","","",21,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of CORS",null,null],[12,"0","","",22,null],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of CORS",null,null],[12,"0","","",23,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of CORS",null,null],[12,"0","","",24,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of CORS",null,null],[12,"0","","",25,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of CORS",null,null],[12,"0","","",26,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in RFC7231",null,null],[12,"0","","",27,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in RFC7231",null,null],[12,"0","","",28,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in RFC7231",null,null],[12,"0","","",29,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in RFC7233",null,null],[12,"0","","",30,null],[3,"Allow","","`Allow` header, defined in RFC7231",null,null],[12,"0","","",31,null],[3,"Authorization","","`Authorization` header, defined in RFC7235",null,null],[12,"0","","",32,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",33,null],[12,"password","","The password. `None` if the `:` delimiter character was not part of the parsed input.",33,null],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",null,null],[12,"token","","Actual bearer token as a string",34,null],[3,"CacheControl","","`Cache-Control` header, defined in RFC7234",null,null],[12,"0","","",35,null],[3,"Connection","","`Connection` header, defined in RFC7230",null,null],[12,"0","","",36,null],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in RFC6266",null,null],[12,"disposition","","The disposition",37,null],[12,"parameters","","Disposition parameters",37,null],[3,"ContentLength","","`Content-Length` header, defined in RFC7230",null,null],[12,"0","","",38,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in RFC7231",null,null],[12,"0","","",39,null],[3,"ContentLanguage","","`Content-Language` header, defined in RFC7231",null,null],[12,"0","","",40,null],[3,"ContentRange","","`Content-Range` header, defined in RFC7233",null,null],[12,"0","","",41,null],[3,"ContentType","","`Content-Type` header, defined in RFC7231",null,null],[12,"0","","",42,null],[3,"Cookie","","`Cookie` header, defined in RFC6265",null,null],[12,"0","","",43,null],[3,"Date","","`Date` header, defined in RFC7231",null,null],[12,"0","","",44,null],[3,"ETag","","`ETag` header, defined in RFC7232",null,null],[12,"0","","",45,null],[3,"Expires","","`Expires` header, defined in RFC7234",null,null],[12,"0","","",46,null],[3,"From","","`From` header, defined in RFC7231",null,null],[12,"0","","",47,null],[3,"Host","","The `Host` header.",null,null],[12,"hostname","","The hostname, such a example.domain.",48,null],[12,"port","","An optional port number.",48,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in RFC7232",null,null],[12,"0","","",49,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in RFC7232",null,null],[12,"0","","",50,null],[3,"LastModified","","`Last-Modified` header, defined in RFC7232",null,null],[12,"0","","",51,null],[3,"Location","","`Location` header, defined in RFC7231",null,null],[12,"0","","",52,null],[3,"Origin","","The `Origin` header.",null,null],[12,"scheme","","The scheme, such as http or https",53,null],[12,"host","","The host, such as Host{hostname: \"hyper.rs\".to_owned(), port: None}",53,null],[3,"Prefer","","`Prefer` header, defined in RFC7240",null,null],[12,"0","","",54,null],[3,"PreferenceApplied","","`Preference-Applied` header, defined in RFC7240",null,null],[12,"0","","",55,null],[3,"Referer","","`Referer` header, defined in RFC7231",null,null],[12,"0","","",56,null],[3,"Server","","`Server` header, defined in RFC7231",null,null],[12,"0","","",57,null],[3,"SetCookie","","`Set-Cookie` header, defined RFC6265",null,null],[12,"0","","",58,null],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in RFC6797",null,null],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as any subdomains of the host's domain name.",59,null],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header field, during which the UA regards the host (from whom the message was received) as a Known HSTS Host.",59,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in RFC7230",null,null],[12,"0","","",60,null],[3,"Upgrade","","`Upgrade` header, defined in RFC7230",null,null],[12,"0","","",61,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",62,null],[12,"version","","The optional version of the protocol, often in the format \"DIGIT.DIGIT\" (e.g.. \"1.2\")",62,null],[3,"UserAgent","","`User-Agent` header, defined in RFC7231",null,null],[12,"0","","",63,null],[3,"Link","","The `Link` header, defined in RFC5988",null,null],[3,"LinkValue","","A single `link-value` of a `Link` header, based on: RFC5988",null,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header.",null,null],[12,"0","","",64,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",65,null],[13,"Iso_8859_1","","ISO-8859-1",65,null],[13,"Iso_8859_2","","ISO-8859-2",65,null],[13,"Iso_8859_3","","ISO-8859-3",65,null],[13,"Iso_8859_4","","ISO-8859-4",65,null],[13,"Iso_8859_5","","ISO-8859-5",65,null],[13,"Iso_8859_6","","ISO-8859-6",65,null],[13,"Iso_8859_7","","ISO-8859-7",65,null],[13,"Iso_8859_8","","ISO-8859-8",65,null],[13,"Iso_8859_9","","ISO-8859-9",65,null],[13,"Iso_8859_10","","ISO-8859-10",65,null],[13,"Shift_Jis","","Shift_JIS",65,null],[13,"Euc_Jp","","EUC-JP",65,null],[13,"Iso_2022_Kr","","ISO-2022-KR",65,null],[13,"Euc_Kr","","EUC-KR",65,null],[13,"Iso_2022_Jp","","ISO-2022-JP",65,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",65,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",65,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",65,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",65,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",65,null],[13,"Gb2312","","GB2312",65,null],[13,"Big5","","Big5",65,null],[13,"Koi8_R","","KOI8-R",65,null],[13,"Ext","","An arbitrary charset specified as a string",65,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding` or `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",66,null],[13,"Gzip","","The `gzip` encoding.",66,null],[13,"Deflate","","The `deflate` encoding.",66,null],[13,"Compress","","The `compress` encoding.",66,null],[13,"Identity","","The `identity` encoding.",66,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",66,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header, part of CORS",null,null],[13,"Any","","Allow all origins",67,null],[13,"Null","","A hidden origin",67,null],[13,"Value","","Allow one particular origin",67,null],[4,"RangeUnit","","Range Units, described in RFC7233",null,null],[13,"Bytes","","Indicating byte-range requests are supported.",68,null],[13,"None","","Reserved as keyword, indicating no ranges are supported.",68,null],[13,"Unregistered","","The given range unit is not registered at IANA.",68,null],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",null,null],[13,"NoCache","","\"no-cache\"",69,null],[13,"NoStore","","\"no-store\"",69,null],[13,"NoTransform","","\"no-transform\"",69,null],[13,"OnlyIfCached","","\"only-if-cached\"",69,null],[13,"MaxAge","","\"max-age=delta\"",69,null],[13,"MaxStale","","\"max-stale=delta\"",69,null],[13,"MinFresh","","\"min-fresh=delta\"",69,null],[13,"MustRevalidate","","\"must-revalidate\"",69,null],[13,"Public","","\"public\"",69,null],[13,"Private","","\"private\"",69,null],[13,"ProxyRevalidate","","\"proxy-revalidate\"",69,null],[13,"SMaxAge","","\"s-maxage=delta\"",69,null],[13,"Extension","","Extension directives. Optionally include an argument.",69,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",70,null],[13,"Close","","The `close` connection value.",70,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",70,null],[4,"DispositionType","","The implied disposition of the content of the HTTP body",null,null],[13,"Inline","","Inline implies default processing",71,null],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally, rather than process it normally (as per its media type).",71,null],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",71,null],[4,"DispositionParam","","A parameter to the disposition type",null,null],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of bytes representing the filename",72,null],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized parameters.",72,null],[4,"ContentRangeSpec","","Content-Range, described in RFC7233",null,null],[13,"Bytes","","Byte range",73,null],[12,"range","hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request could not be satisfied",73,null],[12,"instance_length","","Total length of the instance, can be omitted if unknown",73,null],[13,"Unregistered","hyper::header","Custom range, with unit not registered at IANA",73,null],[12,"unit","hyper::header::ContentRangeSpec","other-range-unit",73,null],[12,"resp","","other-range-resp",73,null],[4,"Expect","hyper::header","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",74,null],[4,"IfMatch","","`If-Match` header, defined in RFC7232",null,null],[13,"Any","","Any value is a match",75,null],[13,"Items","","Only the listed items are a match",75,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in RFC7232",null,null],[13,"Any","","Any value is a match",76,null],[13,"Items","","Only the listed items are a match",76,null],[4,"IfRange","","`If-Range` header, defined in RFC7233",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",77,null],[13,"Date","","The date when the client retrieved the resource",77,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",78,null],[13,"Ext","","Every value other than `no-cache`.",78,null],[4,"Preference","","Prefer contains a list of these preferences.",null,null],[13,"RespondAsync","","\"respond-async\"",79,null],[13,"ReturnRepresentation","","\"return=representation\"",79,null],[13,"ReturnMinimal","","\"return=minimal\"",79,null],[13,"HandlingStrict","","\"handling=strict\"",79,null],[13,"HandlingLeniant","","\"handling=leniant\"",79,null],[13,"Wait","","\"wait=delta\"",79,null],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is just \"\". A preference can also have a list of parameters.",79,null],[4,"Range","","`Range` header, defined in RFC7233",null,null],[13,"Bytes","","Byte range",80,null],[13,"Unregistered","","Custom range, with unit not registered at IANA (`other-range-unit`: String , `other-range-set`: String)",80,null],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more `ByteRangeSpecs`. Each `ByteRangeSpec` defines a range of bytes to fetch",null,null],[13,"FromTo","","Get all bytes between x and y (\"x-y\")",81,null],[13,"AllFrom","","Get all bytes starting from x (\"x-\")",81,null],[13,"Last","","Get last x bytes (\"-x\")",81,null],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of Referrer Policy",null,null],[13,"NoReferrer","","`no-referrer`",82,null],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",82,null],[13,"SameOrigin","","`same-origin`",82,null],[13,"Origin","","`origin`",82,null],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",82,null],[13,"UnsafeUrl","","`unsafe-url`",82,null],[13,"StrictOrigin","","`strict-origin`",82,null],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",82,null],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive except for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",83,null],[13,"Tls","","`TLS` value, Transport Layer Security RFC2817",83,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol RFC6455",83,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",83,null],[13,"Unregistered","","Any other protocol name not known to hyper",83,null],[4,"Vary","","`Vary` header, defined in RFC7231",null,null],[13,"Any","","Any value is a match",84,null],[13,"Items","","Only the listed items are a match",84,null],[4,"RelationType","","A Link Relation Type Enum based on: RFC5988",null,null],[13,"Alternate","","alternate.",85,null],[13,"Appendix","","appendix.",85,null],[13,"Bookmark","","bookmark.",85,null],[13,"Chapter","","chapter.",85,null],[13,"Contents","","contents.",85,null],[13,"Copyright","","copyright.",85,null],[13,"Current","","current.",85,null],[13,"DescribedBy","","describedby.",85,null],[13,"Edit","","edit.",85,null],[13,"EditMedia","","edit-media.",85,null],[13,"Enclosure","","enclosure.",85,null],[13,"First","","first.",85,null],[13,"Glossary","","glossary.",85,null],[13,"Help","","help.",85,null],[13,"Hub","","hub.",85,null],[13,"Index","","index.",85,null],[13,"Last","","last.",85,null],[13,"LatestVersion","","latest-version.",85,null],[13,"License","","license.",85,null],[13,"Next","","next.",85,null],[13,"NextArchive","","next-archive.",85,null],[13,"Payment","","payment.",85,null],[13,"Prev","","prev.",85,null],[13,"PredecessorVersion","","predecessor-version.",85,null],[13,"Previous","","previous.",85,null],[13,"PrevArchive","","prev-archive.",85,null],[13,"Related","","related.",85,null],[13,"Replies","","replies.",85,null],[13,"Section","","section.",85,null],[13,"RelationTypeSelf","","self.",85,null],[13,"Service","","service.",85,null],[13,"Start","","start.",85,null],[13,"Stylesheet","","stylesheet.",85,null],[13,"Subsection","","subsection.",85,null],[13,"SuccessorVersion","","successor-version.",85,null],[13,"Up","","up.",85,null],[13,"VersionHistory","","versionHistory.",85,null],[13,"Via","","via.",85,null],[13,"WorkingCopy","","working-copy.",85,null],[13,"WorkingCopyOf","","working-copy-of.",85,null],[13,"ExtRelType","","ext-rel-type.",85,null],[4,"MediaDesc","","A Media Descriptors Enum based on: https://www.w3.org/TR/html401/types.html#h-6.13",null,null],[13,"Screen","","screen.",86,null],[13,"Tty","","tty.",86,null],[13,"Tv","","tv.",86,null],[13,"Projection","","projection.",86,null],[13,"Handheld","","handheld.",86,null],[13,"Print","","print.",86,null],[13,"Braille","","braille.",86,null],[13,"Aural","","aural.",86,null],[13,"All","","all.",86,null],[13,"Extension","","Unrecognized media descriptor extension.",86,null],[5,"qitem","","Convinience function to wrap a value in a `QualityItem` Sets `q` to the default 1.0",null,{"i":[{"n":"t"}],"o":{"n":"qualityitem"}}],[5,"q","","Convenience function to create a `Quality` from a float.",null,{"i":[{"n":"f32"}],"o":{"n":"quality"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"accept"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"accept"}],"o":{"n":"bool"}}],[11,"ne","","",20,{"i":[{"n":"self"},{"n":"accept"}],"o":{"n":"bool"}}],[11,"deref","","",20,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",20,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",20,{"o":{"n":"str"}}],[11,"parse_header","","",20,null],[11,"fmt_header","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"star","","A constructor to easily create `Accept: */*`.",20,{"o":{"n":"accept"}}],[11,"json","","A constructor to easily create `Accept: application/json`.",20,{"o":{"n":"accept"}}],[11,"text","","A constructor to easily create `Accept: text/*`.",20,{"o":{"n":"accept"}}],[11,"image","","A constructor to easily create `Accept: image/*`.",20,{"o":{"n":"accept"}}],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"accesscontrolallowcredentials"}}],[11,"eq","","",87,{"i":[{"n":"self"},{"n":"accesscontrolallowcredentials"}],"o":{"n":"bool"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"header_name","","",87,{"o":{"n":"str"}}],[11,"parse_header","","",87,null],[11,"fmt_header","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"accesscontrolallowheaders"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"accesscontrolallowheaders"}],"o":{"n":"bool"}}],[11,"ne","","",21,{"i":[{"n":"self"},{"n":"accesscontrolallowheaders"}],"o":{"n":"bool"}}],[11,"deref","","",21,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",21,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",21,{"o":{"n":"str"}}],[11,"parse_header","","",21,null],[11,"fmt_header","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"accesscontrolallowmethods"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"accesscontrolallowmethods"}],"o":{"n":"bool"}}],[11,"ne","","",22,{"i":[{"n":"self"},{"n":"accesscontrolallowmethods"}],"o":{"n":"bool"}}],[11,"deref","","",22,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",22,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",22,{"o":{"n":"str"}}],[11,"parse_header","","",22,null],[11,"fmt_header","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"accesscontrolalloworigin"}}],[11,"eq","","",67,{"i":[{"n":"self"},{"n":"accesscontrolalloworigin"}],"o":{"n":"bool"}}],[11,"ne","","",67,{"i":[{"n":"self"},{"n":"accesscontrolalloworigin"}],"o":{"n":"bool"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"header_name","","",67,{"o":{"n":"str"}}],[11,"parse_header","","",67,null],[11,"fmt_header","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"accesscontrolexposeheaders"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",23,{"i":[{"n":"self"},{"n":"accesscontrolexposeheaders"}],"o":{"n":"bool"}}],[11,"ne","","",23,{"i":[{"n":"self"},{"n":"accesscontrolexposeheaders"}],"o":{"n":"bool"}}],[11,"deref","","",23,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",23,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",23,{"o":{"n":"str"}}],[11,"parse_header","","",23,null],[11,"fmt_header","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"accesscontrolmaxage"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",24,{"i":[{"n":"self"},{"n":"accesscontrolmaxage"}],"o":{"n":"bool"}}],[11,"ne","","",24,{"i":[{"n":"self"},{"n":"accesscontrolmaxage"}],"o":{"n":"bool"}}],[11,"deref","","",24,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"deref_mut","","",24,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"header_name","","",24,{"o":{"n":"str"}}],[11,"parse_header","","",24,null],[11,"fmt_header","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"accesscontrolrequestheaders"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",25,{"i":[{"n":"self"},{"n":"accesscontrolrequestheaders"}],"o":{"n":"bool"}}],[11,"ne","","",25,{"i":[{"n":"self"},{"n":"accesscontrolrequestheaders"}],"o":{"n":"bool"}}],[11,"deref","","",25,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",25,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",25,{"o":{"n":"str"}}],[11,"parse_header","","",25,null],[11,"fmt_header","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"accesscontrolrequestmethod"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",26,{"i":[{"n":"self"},{"n":"accesscontrolrequestmethod"}],"o":{"n":"bool"}}],[11,"ne","","",26,{"i":[{"n":"self"},{"n":"accesscontrolrequestmethod"}],"o":{"n":"bool"}}],[11,"deref","","",26,{"i":[{"n":"self"}],"o":{"n":"method"}}],[11,"deref_mut","","",26,{"i":[{"n":"self"}],"o":{"n":"method"}}],[11,"header_name","","",26,{"o":{"n":"str"}}],[11,"parse_header","","",26,null],[11,"fmt_header","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"acceptcharset"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"acceptcharset"}],"o":{"n":"bool"}}],[11,"ne","","",27,{"i":[{"n":"self"},{"n":"acceptcharset"}],"o":{"n":"bool"}}],[11,"deref","","",27,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",27,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",27,{"o":{"n":"str"}}],[11,"parse_header","","",27,null],[11,"fmt_header","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"acceptencoding"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"acceptencoding"}],"o":{"n":"bool"}}],[11,"ne","","",28,{"i":[{"n":"self"},{"n":"acceptencoding"}],"o":{"n":"bool"}}],[11,"deref","","",28,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",28,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",28,{"o":{"n":"str"}}],[11,"parse_header","","",28,null],[11,"fmt_header","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"acceptlanguage"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",29,{"i":[{"n":"self"},{"n":"acceptlanguage"}],"o":{"n":"bool"}}],[11,"ne","","",29,{"i":[{"n":"self"},{"n":"acceptlanguage"}],"o":{"n":"bool"}}],[11,"deref","","",29,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",29,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",29,{"o":{"n":"str"}}],[11,"parse_header","","",29,null],[11,"fmt_header","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"acceptranges"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",30,{"i":[{"n":"self"},{"n":"acceptranges"}],"o":{"n":"bool"}}],[11,"ne","","",30,{"i":[{"n":"self"},{"n":"acceptranges"}],"o":{"n":"bool"}}],[11,"deref","","",30,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",30,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",30,{"o":{"n":"str"}}],[11,"parse_header","","",30,null],[11,"fmt_header","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"rangeunit"}}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",68,{"i":[{"n":"self"},{"n":"rangeunit"}],"o":{"n":"bool"}}],[11,"ne","","",68,{"i":[{"n":"self"},{"n":"rangeunit"}],"o":{"n":"bool"}}],[11,"from_str","","",68,{"i":[{"n":"str"}],"o":{"n":"result"}}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"allow"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",31,{"i":[{"n":"self"},{"n":"allow"}],"o":{"n":"bool"}}],[11,"ne","","",31,{"i":[{"n":"self"},{"n":"allow"}],"o":{"n":"bool"}}],[11,"deref","","",31,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",31,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",31,{"o":{"n":"str"}}],[11,"parse_header","","",31,null],[11,"fmt_header","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"authorization"}}],[11,"eq","","",32,{"i":[{"n":"self"},{"n":"authorization"}],"o":{"n":"bool"}}],[11,"ne","","",32,{"i":[{"n":"self"},{"n":"authorization"}],"o":{"n":"bool"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",32,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"deref_mut","","",32,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"header_name","","",32,{"o":{"n":"str"}}],[11,"parse_header","","",32,null],[11,"fmt_header","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"basic"}}],[11,"eq","","",33,{"i":[{"n":"self"},{"n":"basic"}],"o":{"n":"bool"}}],[11,"ne","","",33,{"i":[{"n":"self"},{"n":"basic"}],"o":{"n":"bool"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"scheme","","",33,{"o":{"g":["str"],"n":"option"}}],[11,"fmt_scheme","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",33,{"i":[{"n":"str"}],"o":{"g":["basic"],"n":"result"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"bearer"}}],[11,"eq","","",34,{"i":[{"n":"self"},{"n":"bearer"}],"o":{"n":"bool"}}],[11,"ne","","",34,{"i":[{"n":"self"},{"n":"bearer"}],"o":{"n":"bool"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"scheme","","",34,{"o":{"g":["str"],"n":"option"}}],[11,"fmt_scheme","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",34,{"i":[{"n":"str"}],"o":{"g":["bearer"],"n":"result"}}],[11,"eq","","",35,{"i":[{"n":"self"},{"n":"cachecontrol"}],"o":{"n":"bool"}}],[11,"ne","","",35,{"i":[{"n":"self"},{"n":"cachecontrol"}],"o":{"n":"bool"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"cachecontrol"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",35,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",35,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",35,{"o":{"n":"str"}}],[11,"parse_header","","",35,null],[11,"fmt_header","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",69,{"i":[{"n":"self"},{"n":"cachedirective"}],"o":{"n":"bool"}}],[11,"ne","","",69,{"i":[{"n":"self"},{"n":"cachedirective"}],"o":{"n":"bool"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"cachedirective"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",69,{"i":[{"n":"str"}],"o":{"g":["cachedirective","option"],"n":"result"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"cookie"}}],[11,"eq","","",43,{"i":[{"n":"self"},{"n":"cookie"}],"o":{"n":"bool"}}],[11,"ne","","",43,{"i":[{"n":"self"},{"n":"cookie"}],"o":{"n":"bool"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",43,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",43,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",43,{"o":{"n":"str"}}],[11,"parse_header","","",43,null],[11,"fmt_header","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"connectionoption"}}],[11,"eq","","",70,{"i":[{"n":"self"},{"n":"connectionoption"}],"o":{"n":"bool"}}],[11,"ne","","",70,{"i":[{"n":"self"},{"n":"connectionoption"}],"o":{"n":"bool"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",70,{"i":[{"n":"str"}],"o":{"g":["connectionoption"],"n":"result"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"connection"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",36,{"i":[{"n":"self"},{"n":"connection"}],"o":{"n":"bool"}}],[11,"ne","","",36,{"i":[{"n":"self"},{"n":"connection"}],"o":{"n":"bool"}}],[11,"deref","","",36,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",36,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",36,{"o":{"n":"str"}}],[11,"parse_header","","",36,null],[11,"fmt_header","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"close","","A constructor to easily create a `Connection: close` header.",36,{"o":{"n":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",36,{"o":{"n":"connection"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"dispositiontype"}}],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",71,{"i":[{"n":"self"},{"n":"dispositiontype"}],"o":{"n":"bool"}}],[11,"ne","","",71,{"i":[{"n":"self"},{"n":"dispositiontype"}],"o":{"n":"bool"}}],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"dispositionparam"}}],[11,"fmt","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",72,{"i":[{"n":"self"},{"n":"dispositionparam"}],"o":{"n":"bool"}}],[11,"ne","","",72,{"i":[{"n":"self"},{"n":"dispositionparam"}],"o":{"n":"bool"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"contentdisposition"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",37,{"i":[{"n":"self"},{"n":"contentdisposition"}],"o":{"n":"bool"}}],[11,"ne","","",37,{"i":[{"n":"self"},{"n":"contentdisposition"}],"o":{"n":"bool"}}],[11,"header_name","","",37,{"o":{"n":"str"}}],[11,"parse_header","","",37,null],[11,"fmt_header","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"contentencoding"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",39,{"i":[{"n":"self"},{"n":"contentencoding"}],"o":{"n":"bool"}}],[11,"ne","","",39,{"i":[{"n":"self"},{"n":"contentencoding"}],"o":{"n":"bool"}}],[11,"deref","","",39,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",39,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",39,{"o":{"n":"str"}}],[11,"parse_header","","",39,null],[11,"fmt_header","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"contentlanguage"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",40,{"i":[{"n":"self"},{"n":"contentlanguage"}],"o":{"n":"bool"}}],[11,"ne","","",40,{"i":[{"n":"self"},{"n":"contentlanguage"}],"o":{"n":"bool"}}],[11,"deref","","",40,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",40,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",40,{"o":{"n":"str"}}],[11,"parse_header","","",40,null],[11,"fmt_header","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"contentlength"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",38,{"i":[{"n":"self"},{"n":"contentlength"}],"o":{"n":"bool"}}],[11,"ne","","",38,{"i":[{"n":"self"},{"n":"contentlength"}],"o":{"n":"bool"}}],[11,"header_name","","",38,{"o":{"n":"str"}}],[11,"parse_header","","",38,null],[11,"fmt_header","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",38,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"deref_mut","","",38,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"contentrange"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",41,{"i":[{"n":"self"},{"n":"contentrange"}],"o":{"n":"bool"}}],[11,"ne","","",41,{"i":[{"n":"self"},{"n":"contentrange"}],"o":{"n":"bool"}}],[11,"deref","","",41,{"i":[{"n":"self"}],"o":{"n":"contentrangespec"}}],[11,"deref_mut","","",41,{"i":[{"n":"self"}],"o":{"n":"contentrangespec"}}],[11,"header_name","","",41,{"o":{"n":"str"}}],[11,"parse_header","","",41,null],[11,"fmt_header","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",73,{"i":[{"n":"self"},{"n":"contentrangespec"}],"o":{"n":"bool"}}],[11,"ne","","",73,{"i":[{"n":"self"},{"n":"contentrangespec"}],"o":{"n":"bool"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"contentrangespec"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",73,{"i":[{"n":"str"}],"o":{"n":"result"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"contenttype"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",42,{"i":[{"n":"self"},{"n":"contenttype"}],"o":{"n":"bool"}}],[11,"ne","","",42,{"i":[{"n":"self"},{"n":"contenttype"}],"o":{"n":"bool"}}],[11,"deref","","",42,{"i":[{"n":"self"}],"o":{"n":"mime"}}],[11,"deref_mut","","",42,{"i":[{"n":"self"}],"o":{"n":"mime"}}],[11,"header_name","","",42,{"o":{"n":"str"}}],[11,"parse_header","","",42,null],[11,"fmt_header","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",42,{"o":{"n":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",42,{"o":{"n":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",42,{"o":{"n":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",42,{"o":{"n":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",42,{"o":{"n":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",42,{"o":{"n":"contenttype"}}],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",44,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"bool"}}],[11,"ne","","",44,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"bool"}}],[11,"deref","","",44,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref_mut","","",44,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"header_name","","",44,{"o":{"n":"str"}}],[11,"parse_header","","",44,null],[11,"fmt_header","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"etag"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",45,{"i":[{"n":"self"},{"n":"etag"}],"o":{"n":"bool"}}],[11,"ne","","",45,{"i":[{"n":"self"},{"n":"etag"}],"o":{"n":"bool"}}],[11,"deref","","",45,{"i":[{"n":"self"}],"o":{"n":"entitytag"}}],[11,"deref_mut","","",45,{"i":[{"n":"self"}],"o":{"n":"entitytag"}}],[11,"header_name","","",45,{"o":{"n":"str"}}],[11,"parse_header","","",45,null],[11,"fmt_header","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",74,{"i":[{"n":"self"}],"o":{"n":"expect"}}],[11,"eq","","",74,{"i":[{"n":"self"},{"n":"expect"}],"o":{"n":"bool"}}],[11,"fmt","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"header_name","","",74,{"o":{"n":"str"}}],[11,"parse_header","","",74,null],[11,"fmt_header","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"expires"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"expires"}],"o":{"n":"bool"}}],[11,"ne","","",46,{"i":[{"n":"self"},{"n":"expires"}],"o":{"n":"bool"}}],[11,"deref","","",46,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref_mut","","",46,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"header_name","","",46,{"o":{"n":"str"}}],[11,"parse_header","","",46,null],[11,"fmt_header","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"from"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",47,{"i":[{"n":"self"},{"n":"from"}],"o":{"n":"bool"}}],[11,"ne","","",47,{"i":[{"n":"self"},{"n":"from"}],"o":{"n":"bool"}}],[11,"deref","","",47,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",47,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"header_name","","",47,{"o":{"n":"str"}}],[11,"parse_header","","",47,null],[11,"fmt_header","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"host"}}],[11,"eq","","",48,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"ne","","",48,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"header_name","","",48,{"o":{"n":"str"}}],[11,"parse_header","","",48,null],[11,"fmt_header","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",48,{"i":[{"n":"str"}],"o":{"g":["host"],"n":"result"}}],[11,"clone","","",75,{"i":[{"n":"self"}],"o":{"n":"ifmatch"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",75,{"i":[{"n":"self"},{"n":"ifmatch"}],"o":{"n":"bool"}}],[11,"ne","","",75,{"i":[{"n":"self"},{"n":"ifmatch"}],"o":{"n":"bool"}}],[11,"header_name","","",75,{"o":{"n":"str"}}],[11,"parse_header","","",75,null],[11,"fmt_header","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"ifmodifiedsince"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",49,{"i":[{"n":"self"},{"n":"ifmodifiedsince"}],"o":{"n":"bool"}}],[11,"ne","","",49,{"i":[{"n":"self"},{"n":"ifmodifiedsince"}],"o":{"n":"bool"}}],[11,"deref","","",49,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref_mut","","",49,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"header_name","","",49,{"o":{"n":"str"}}],[11,"parse_header","","",49,null],[11,"fmt_header","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",76,{"i":[{"n":"self"}],"o":{"n":"ifnonematch"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",76,{"i":[{"n":"self"},{"n":"ifnonematch"}],"o":{"n":"bool"}}],[11,"ne","","",76,{"i":[{"n":"self"},{"n":"ifnonematch"}],"o":{"n":"bool"}}],[11,"header_name","","",76,{"o":{"n":"str"}}],[11,"parse_header","","",76,null],[11,"fmt_header","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",77,{"i":[{"n":"self"}],"o":{"n":"ifrange"}}],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",77,{"i":[{"n":"self"},{"n":"ifrange"}],"o":{"n":"bool"}}],[11,"ne","","",77,{"i":[{"n":"self"},{"n":"ifrange"}],"o":{"n":"bool"}}],[11,"header_name","","",77,{"o":{"n":"str"}}],[11,"parse_header","","",77,null],[11,"fmt_header","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"ifunmodifiedsince"}}],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",50,{"i":[{"n":"self"},{"n":"ifunmodifiedsince"}],"o":{"n":"bool"}}],[11,"ne","","",50,{"i":[{"n":"self"},{"n":"ifunmodifiedsince"}],"o":{"n":"bool"}}],[11,"deref","","",50,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref_mut","","",50,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"header_name","","",50,{"o":{"n":"str"}}],[11,"parse_header","","",50,null],[11,"fmt_header","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"lastmodified"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",51,{"i":[{"n":"self"},{"n":"lastmodified"}],"o":{"n":"bool"}}],[11,"ne","","",51,{"i":[{"n":"self"},{"n":"lastmodified"}],"o":{"n":"bool"}}],[11,"deref","","",51,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref_mut","","",51,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"header_name","","",51,{"o":{"n":"str"}}],[11,"parse_header","","",51,null],[11,"fmt_header","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"location"}}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",52,{"i":[{"n":"self"},{"n":"location"}],"o":{"n":"bool"}}],[11,"ne","","",52,{"i":[{"n":"self"},{"n":"location"}],"o":{"n":"bool"}}],[11,"deref","","",52,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",52,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"header_name","","",52,{"o":{"n":"str"}}],[11,"parse_header","","",52,null],[11,"fmt_header","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"origin"}}],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `Origin` header.",53,{"i":[{"n":"s"},{"n":"h"},{"g":["u16"],"n":"option"}],"o":{"n":"origin"}}],[11,"header_name","","",53,{"o":{"n":"str"}}],[11,"parse_header","","",53,null],[11,"from_str","","",53,{"i":[{"n":"str"}],"o":{"g":["origin"],"n":"result"}}],[11,"fmt_header","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",53,{"i":[{"n":"self"},{"n":"origin"}],"o":{"n":"bool"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"pragma"}}],[11,"eq","","",78,{"i":[{"n":"self"},{"n":"pragma"}],"o":{"n":"bool"}}],[11,"ne","","",78,{"i":[{"n":"self"},{"n":"pragma"}],"o":{"n":"bool"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"header_name","","",78,{"o":{"n":"str"}}],[11,"parse_header","","",78,null],[11,"fmt_header","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",54,{"i":[{"n":"self"},{"n":"prefer"}],"o":{"n":"bool"}}],[11,"ne","","",54,{"i":[{"n":"self"},{"n":"prefer"}],"o":{"n":"bool"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"prefer"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",54,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",54,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",54,{"o":{"n":"str"}}],[11,"parse_header","","",54,null],[11,"fmt_header","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",79,{"i":[{"n":"self"},{"n":"preference"}],"o":{"n":"bool"}}],[11,"ne","","",79,{"i":[{"n":"self"},{"n":"preference"}],"o":{"n":"bool"}}],[11,"clone","","",79,{"i":[{"n":"self"}],"o":{"n":"preference"}}],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",79,{"i":[{"n":"str"}],"o":{"g":["preference","option"],"n":"result"}}],[11,"eq","","",55,{"i":[{"n":"self"},{"n":"preferenceapplied"}],"o":{"n":"bool"}}],[11,"ne","","",55,{"i":[{"n":"self"},{"n":"preferenceapplied"}],"o":{"n":"bool"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"preferenceapplied"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",55,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",55,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",55,{"o":{"n":"str"}}],[11,"parse_header","","",55,null],[11,"fmt_header","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",80,{"i":[{"n":"self"},{"n":"range"}],"o":{"n":"bool"}}],[11,"ne","","",80,{"i":[{"n":"self"},{"n":"range"}],"o":{"n":"bool"}}],[11,"clone","","",80,{"i":[{"n":"self"}],"o":{"n":"range"}}],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",81,{"i":[{"n":"self"},{"n":"byterangespec"}],"o":{"n":"bool"}}],[11,"ne","","",81,{"i":[{"n":"self"},{"n":"byterangespec"}],"o":{"n":"bool"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"byterangespec"}}],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"bytes","","Get the most common byte range header (\"bytes=from-to\")",80,{"i":[{"n":"u64"},{"n":"u64"}],"o":{"n":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges (\"bytes=from1-to1,from2-to2,fromX-toX\")",80,{"i":[{"n":"vec"}],"o":{"n":"range"}}],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",80,{"i":[{"n":"str"}],"o":{"g":["range"],"n":"result"}}],[11,"from_str","","",81,{"i":[{"n":"str"}],"o":{"g":["byterangespec"],"n":"result"}}],[11,"header_name","","",80,{"o":{"n":"str"}}],[11,"parse_header","","",80,null],[11,"fmt_header","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"referer"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",56,{"i":[{"n":"self"},{"n":"referer"}],"o":{"n":"bool"}}],[11,"ne","","",56,{"i":[{"n":"self"},{"n":"referer"}],"o":{"n":"bool"}}],[11,"deref","","",56,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",56,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"header_name","","",56,{"o":{"n":"str"}}],[11,"parse_header","","",56,null],[11,"fmt_header","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"referrerpolicy"}}],[11,"eq","","",82,{"i":[{"n":"self"},{"n":"referrerpolicy"}],"o":{"n":"bool"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"header_name","","",82,{"o":{"n":"str"}}],[11,"parse_header","","",82,null],[11,"fmt_header","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"server"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",57,{"i":[{"n":"self"},{"n":"server"}],"o":{"n":"bool"}}],[11,"ne","","",57,{"i":[{"n":"self"},{"n":"server"}],"o":{"n":"bool"}}],[11,"deref","","",57,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",57,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"header_name","","",57,{"o":{"n":"str"}}],[11,"parse_header","","",57,null],[11,"fmt_header","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"setcookie"}}],[11,"eq","","",58,{"i":[{"n":"self"},{"n":"setcookie"}],"o":{"n":"bool"}}],[11,"ne","","",58,{"i":[{"n":"self"},{"n":"setcookie"}],"o":{"n":"bool"}}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",58,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",58,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",58,{"o":{"n":"str"}}],[11,"parse_header","","",58,null],[11,"fmt_header","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt_multi_header","","",58,{"i":[{"n":"self"},{"n":"multilineformatter"}],"o":{"n":"result"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"stricttransportsecurity"}}],[11,"eq","","",59,{"i":[{"n":"self"},{"n":"stricttransportsecurity"}],"o":{"n":"bool"}}],[11,"ne","","",59,{"i":[{"n":"self"},{"n":"stricttransportsecurity"}],"o":{"n":"bool"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"including_subdomains","","Create an STS header that includes subdomains",59,{"i":[{"n":"u64"}],"o":{"n":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",59,{"i":[{"n":"u64"}],"o":{"n":"stricttransportsecurity"}}],[11,"from_str","","",59,{"i":[{"n":"str"}],"o":{"g":["stricttransportsecurity"],"n":"result"}}],[11,"header_name","","",59,{"o":{"n":"str"}}],[11,"parse_header","","",59,null],[11,"fmt_header","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"transferencoding"}}],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",60,{"i":[{"n":"self"},{"n":"transferencoding"}],"o":{"n":"bool"}}],[11,"ne","","",60,{"i":[{"n":"self"},{"n":"transferencoding"}],"o":{"n":"bool"}}],[11,"deref","","",60,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",60,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",60,{"o":{"n":"str"}}],[11,"parse_header","","",60,null],[11,"fmt_header","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"upgrade"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",61,{"i":[{"n":"self"},{"n":"upgrade"}],"o":{"n":"bool"}}],[11,"ne","","",61,{"i":[{"n":"self"},{"n":"upgrade"}],"o":{"n":"bool"}}],[11,"deref","","",61,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",61,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"header_name","","",61,{"o":{"n":"str"}}],[11,"parse_header","","",61,null],[11,"fmt_header","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"protocolname"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",83,{"i":[{"n":"self"},{"n":"protocolname"}],"o":{"n":"bool"}}],[11,"ne","","",83,{"i":[{"n":"self"},{"n":"protocolname"}],"o":{"n":"bool"}}],[11,"from_str","","",83,{"i":[{"n":"str"}],"o":{"g":["protocolname"],"n":"result"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"protocol"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",62,{"i":[{"n":"self"},{"n":"protocol"}],"o":{"n":"bool"}}],[11,"ne","","",62,{"i":[{"n":"self"},{"n":"protocol"}],"o":{"n":"bool"}}],[11,"new","","Creates a new Protocol with the given name and version",62,{"i":[{"n":"protocolname"},{"g":["string"],"n":"option"}],"o":{"n":"protocol"}}],[11,"from_str","","",62,{"i":[{"n":"str"}],"o":{"g":["protocol"],"n":"result"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"useragent"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",63,{"i":[{"n":"self"},{"n":"useragent"}],"o":{"n":"bool"}}],[11,"ne","","",63,{"i":[{"n":"self"},{"n":"useragent"}],"o":{"n":"bool"}}],[11,"deref","","",63,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",63,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"header_name","","",63,{"o":{"n":"str"}}],[11,"parse_header","","",63,null],[11,"fmt_header","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"vary"}}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",84,{"i":[{"n":"self"},{"n":"vary"}],"o":{"n":"bool"}}],[11,"ne","","",84,{"i":[{"n":"self"},{"n":"vary"}],"o":{"n":"bool"}}],[11,"header_name","","",84,{"o":{"n":"str"}}],[11,"parse_header","","",84,null],[11,"fmt_header","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",88,{"i":[{"n":"self"}],"o":{"n":"link"}}],[11,"eq","","",88,{"i":[{"n":"self"},{"n":"link"}],"o":{"n":"bool"}}],[11,"ne","","",88,{"i":[{"n":"self"},{"n":"link"}],"o":{"n":"bool"}}],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"linkvalue"}}],[11,"eq","","",89,{"i":[{"n":"self"},{"n":"linkvalue"}],"o":{"n":"bool"}}],[11,"ne","","",89,{"i":[{"n":"self"},{"n":"linkvalue"}],"o":{"n":"bool"}}],[11,"fmt","","",89,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"mediadesc"}}],[11,"eq","","",86,{"i":[{"n":"self"},{"n":"mediadesc"}],"o":{"n":"bool"}}],[11,"ne","","",86,{"i":[{"n":"self"},{"n":"mediadesc"}],"o":{"n":"bool"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"relationtype"}}],[11,"eq","","",85,{"i":[{"n":"self"},{"n":"relationtype"}],"o":{"n":"bool"}}],[11,"ne","","",85,{"i":[{"n":"self"},{"n":"relationtype"}],"o":{"n":"bool"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create `Link` from a `Vec<LinkValue>`.",88,{"i":[{"g":["linkvalue"],"n":"vec"}],"o":{"n":"link"}}],[11,"values","","Get the `Link` header's `LinkValue`s.",88,null],[11,"push_value","","Add a `LinkValue` instance to the `Link` header's values.",88,{"i":[{"n":"self"},{"n":"linkvalue"}]}],[11,"new","","Create `LinkValue` from URI-Reference.",89,{"i":[{"n":"t"}],"o":{"n":"linkvalue"}}],[11,"link","","Get the `LinkValue`'s value.",89,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"rel","","Get the `LinkValue`'s `rel` parameter(s).",89,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"anchor","","Get the `LinkValue`'s `anchor` parameter.",89,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"rev","","Get the `LinkValue`'s `rev` parameter(s).",89,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"href_lang","","Get the `LinkValue`'s `hreflang` parameter(s).",89,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"media_desc","","Get the `LinkValue`'s `media` parameter(s).",89,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"title","","Get the `LinkValue`'s `title` parameter.",89,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"title_star","","Get the `LinkValue`'s `title*` parameter.",89,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"media_type","","Get the `LinkValue`'s `type` parameter.",89,{"i":[{"n":"self"}],"o":{"g":["mime"],"n":"option"}}],[11,"push_rel","","Add a `RelationType` to the `LinkValue`'s `rel` parameter.",89,{"i":[{"n":"self"},{"n":"relationtype"}],"o":{"n":"linkvalue"}}],[11,"set_anchor","","Set `LinkValue`'s `anchor` parameter.",89,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"linkvalue"}}],[11,"push_rev","","Add a `RelationType` to the `LinkValue`'s `rev` parameter.",89,{"i":[{"n":"self"},{"n":"relationtype"}],"o":{"n":"linkvalue"}}],[11,"push_href_lang","","Add a `LanguageTag` to the `LinkValue`'s `hreflang` parameter.",89,{"i":[{"n":"self"},{"n":"languagetag"}],"o":{"n":"linkvalue"}}],[11,"push_media_desc","","Add a `MediaDesc` to the `LinkValue`'s `media_desc` parameter.",89,{"i":[{"n":"self"},{"n":"mediadesc"}],"o":{"n":"linkvalue"}}],[11,"set_title","","Set `LinkValue`'s `title` parameter.",89,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"linkvalue"}}],[11,"set_title_star","","Set `LinkValue`'s `title*` parameter.",89,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"linkvalue"}}],[11,"set_media_type","","Set `LinkValue`'s `type` parameter.",89,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"linkvalue"}}],[11,"header_name","","",88,{"o":{"n":"str"}}],[11,"parse_header","","",88,null],[11,"fmt_header","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",89,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",88,{"i":[{"n":"str"}],"o":{"g":["link"],"n":"result"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",86,{"i":[{"n":"str"}],"o":{"g":["mediadesc"],"n":"result"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",85,{"i":[{"n":"str"}],"o":{"g":["relationtype"],"n":"result"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"charset"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",65,{"i":[{"n":"self"},{"n":"charset"}],"o":{"n":"bool"}}],[11,"ne","","",65,{"i":[{"n":"self"},{"n":"charset"}],"o":{"n":"bool"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",65,{"i":[{"n":"str"}],"o":{"g":["charset"],"n":"result"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"encoding"}}],[11,"eq","","",66,{"i":[{"n":"self"},{"n":"encoding"}],"o":{"n":"bool"}}],[11,"ne","","",66,{"i":[{"n":"self"},{"n":"encoding"}],"o":{"n":"bool"}}],[11,"fmt","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",66,{"i":[{"n":"str"}],"o":{"g":["encoding"],"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"entitytag"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"ne","","",16,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"new","","Constructs a new EntityTag. # Panics If the tag contains invalid characters.",16,{"i":[{"n":"bool"},{"n":"string"}],"o":{"n":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag. # Panics If the tag contains invalid characters.",16,{"i":[{"n":"string"}],"o":{"n":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag. # Panics If the tag contains invalid characters.",16,{"i":[{"n":"string"}],"o":{"n":"entitytag"}}],[11,"tag","","Get the tag.",16,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"set_tag","","Set the tag. # Panics If the tag contains invalid characters.",16,{"i":[{"n":"self"},{"n":"string"}]}],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their opaque-tags match character-by-character.",16,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their opaque-tags match character-by-character, regardless of either or both being tagged as \"weak\".",16,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",16,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",16,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",16,{"i":[{"n":"str"}],"o":{"g":["entitytag"],"n":"result"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"ne","","",17,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",17,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",17,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"le","","",17,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"gt","","",17,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"ge","","",17,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"cmp","","",17,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"ordering"}}],[11,"from_str","","",17,{"i":[{"n":"str"}],"o":{"g":["httpdate"],"n":"result"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"quality"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"cmp","","",18,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"ordering"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"ne","","",18,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",18,{"i":[{"n":"self"},{"n":"quality"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",18,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"le","","",18,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"gt","","",18,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"ge","","",18,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",18,{"o":{"n":"quality"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"qualityitem"}}],[11,"eq","","",19,{"i":[{"n":"self"},{"n":"qualityitem"}],"o":{"n":"bool"}}],[11,"ne","","",19,{"i":[{"n":"self"},{"n":"qualityitem"}],"o":{"n":"bool"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `QualityItem` from an item and a quality. The item can be of any type. The quality should be a value in the range [0, 1].",19,{"i":[{"n":"t"},{"n":"quality"}],"o":{"n":"qualityitem"}}],[11,"partial_cmp","","",19,{"i":[{"n":"self"},{"n":"qualityitem"}],"o":{"g":["ordering"],"n":"option"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",19,{"i":[{"n":"str"}],"o":{"g":["qualityitem"],"n":"result"}}],[0,"parsing","","Utility functions for Header implementations.",null,null],[3,"ExtendedValue","hyper::header::parsing","An extended header parameter value (i.e., tagged with a character set and optionally, a language), as defined in RFC 5987.",null,null],[12,"charset","","The character set that is used to encode the `value` to a string.",90,null],[12,"language_tag","","The human language details of the `value`, if available.",90,null],[12,"value","","The parameter value, as expressed in octets.",90,null],[3,"HTTP_VALUE","","This encode set is used for HTTP header values and is defined at https://tools.ietf.org/html/rfc5987#section-3.2",null,null],[5,"from_one_raw_str","","Reads a single raw string when parsing a header.",null,null],[5,"from_raw_str","","Reads a raw string into a value.",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,null],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in RFC 5987.",null,{"i":[{"n":"str"}],"o":{"g":["extendedvalue"],"n":"result"}}],[11,"clone","","",90,{"i":[{"n":"self"}],"o":{"n":"extendedvalue"}}],[11,"fmt","","",90,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",90,{"i":[{"n":"self"},{"n":"extendedvalue"}],"o":{"n":"bool"}}],[11,"ne","","",90,{"i":[{"n":"self"},{"n":"extendedvalue"}],"o":{"n":"bool"}}],[11,"clone","","",91,{"i":[{"n":"self"}],"o":{"n":"http_value"}}],[11,"contains","","",91,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"fmt","","",90,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",92,{"o":{"g":["str"],"n":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[8,"Header","","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",93,{"o":{"n":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",93,null],[8,"HeaderFormat","","A trait for any object that will represent a header field and value.",null,null],[10,"fmt_header","","Format a header to be output into a TcpStream.",94,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[8,"HeaderClone","","Internal implementation detail.",null,null],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"headers"}}],[11,"new","","Creates a new, empty headers map.",95,{"o":{"n":"headers"}}],[11,"set","","Set a header field to the corresponding value.",95,{"i":[{"n":"self"},{"n":"h"}]}],[11,"get_raw","","Access the raw value of a header.",95,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"option"}}],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",95,{"i":[{"n":"self"},{"n":"k"},{"g":["vec"],"n":"vec"}]}],[11,"append_raw","","Append a value to raw value of this header.",95,{"i":[{"n":"self"},{"n":"k"},{"g":["u8"],"n":"vec"}]}],[11,"remove_raw","","Remove a header set by set_raw",95,{"i":[{"n":"self"},{"n":"str"}]}],[11,"get","","Get a reference to the header field's value, if it exists.",95,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",95,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"has","","Returns a boolean of whether a certain header is in the map.",95,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"remove","","Removes a header from the map, if one existed. Returns true if a header has been removed.",95,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"iter","","Returns an iterator over the header fields.",95,{"i":[{"n":"self"}],"o":{"n":"headersitems"}}],[11,"len","","Returns the number of headers in the map.",95,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"clear","","Remove all headers from the map.",95,{"i":[{"n":"self"}]}],[11,"eq","","",95,{"i":[{"n":"self"},{"n":"headers"}],"o":{"n":"bool"}}],[11,"fmt","","",95,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",95,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",96,{"i":[{"n":"self"}],"o":{"g":["headerview"],"n":"option"}}],[11,"is","","Check if a HeaderView is a certain Header.",97,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"name","","Get the Header name as a slice.",97,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"value","","Cast the value to a certain Header type.",97,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"value_string","","Get just the header value as a String.",97,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"extend","","",95,{"i":[{"n":"self"},{"n":"i"}]}],[11,"from_iter","","",95,{"i":[{"n":"i"}],"o":{"n":"headers"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"http","hyper","Pieces pertaining to the HTTP message protocol.",null,null],[3,"RawStatus","hyper::http","The raw status code and reason-phrase.",null,null],[12,"0","","",98,null],[12,"1","","",98,null],[5,"should_keep_alive","","Checks if a connection should be kept alive.",null,{"i":[{"n":"httpversion"},{"n":"headers"}],"o":{"n":"bool"}}],[0,"h1","","Adapts the HTTP/1.1 implementation into the `HttpMessage` API.",null,null],[3,"Http11Message","hyper::http::h1","An implementation of the `HttpMessage` trait for HTTP/1.1.",null,null],[3,"Http11Protocol","","The `Protocol` implementation provides HTTP/1.1 messages.",null,null],[3,"EndError","","",null,null],[3,"Incoming","","An Incoming Message head. Includes request/status line, and headers.",null,null],[12,"version","","HTTP version of the message.",99,null],[12,"subject","","Subject (request line or status line) of Incoming message.",99,null],[12,"headers","","Headers of the Incoming message.",99,null],[4,"HttpReader","","Readers to handle different Transfer-Encodings.",null,null],[13,"SizedReader","","A Reader used when a Content-Length header is passed with a positive integer.",100,null],[13,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",100,null],[13,"EofReader","","A Reader used for responses that don't indicate a length or chunked.",100,null],[13,"EmptyReader","","A Reader used for messages that should never have a body.",100,null],[4,"HttpWriter","","Writers to handle different Transfer-Encodings.",null,null],[13,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is determined.",101,null],[13,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",101,null],[13,"SizedWriter","","A Writer for when Content-Length is set.",101,null],[13,"EmptyWriter","","A writer that should not write any body.",101,null],[5,"parse_request","","Parses a request into an Incoming message head.",null,{"i":[{"n":"bufreader"}],"o":{"g":["incoming"],"n":"result"}}],[5,"parse_response","","Parses a response into an Incoming message head.",null,{"i":[{"n":"bufreader"}],"o":{"g":["incoming"],"n":"result"}}],[17,"CR","","The `\\r` byte.",null,null],[17,"LF","","The `\\n` byte.",null,null],[17,"LINE_ENDING","","The bytes `\\r\\n`.",null,null],[11,"fmt","","",102,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"write","","",102,null],[11,"flush","","",102,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"read","","",102,null],[11,"set_outgoing","","",102,{"i":[{"n":"self"},{"n":"requesthead"}],"o":{"g":["requesthead"],"n":"result"}}],[11,"get_incoming","","",102,{"i":[{"n":"self"}],"o":{"g":["responsehead"],"n":"result"}}],[11,"has_body","","",102,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_read_timeout","","",102,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"set_write_timeout","","",102,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"close_connection","","",102,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"set_proxied","","",102,{"i":[{"n":"self"},{"n":"bool"}]}],[11,"into_inner","","Consumes the `Http11Message` and returns the underlying `NetworkStream`.",102,{"i":[{"n":"self"}],"o":{"g":["networkstream"],"n":"box"}}],[11,"get_ref","","Gets a borrowed reference to the underlying `NetworkStream`, regardless of the state of the `Http11Message`.",102,{"i":[{"n":"self"}],"o":{"n":"networkstream"}}],[11,"get_mut","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the `Http11Message`.",102,{"i":[{"n":"self"}],"o":{"n":"networkstream"}}],[11,"with_stream","","Creates a new `Http11Message` that will use the given `NetworkStream` for communicating to the peer.",102,{"i":[{"g":["networkstream"],"n":"box"}],"o":{"n":"http11message"}}],[11,"flush_outgoing","","Flushes the current outgoing content and moves the stream into the `stream` property.",102,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"new_message","","",103,{"i":[{"n":"self"},{"n":"str"},{"n":"u16"},{"n":"str"}],"o":{"g":["box"],"n":"result"}}],[11,"with_connector","","Creates a new `Http11Protocol` instance that will use the given `NetworkConnector` for establishing HTTP connections.",103,{"i":[{"n":"c"}],"o":{"n":"http11protocol"}}],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",100,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_ref","","Gets a borrowed reference to the underlying Reader.",100,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying Reader.",100,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"fmt","","",100,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"read","","",100,null],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",101,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_ref","","Access the inner Writer.",101,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_mut","","Access the inner Writer mutably.",101,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",101,{"i":[{"n":"self"}],"o":{"g":["enderror"],"n":"result"}}],[11,"fmt","","",104,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"write","","",101,null],[11,"flush","","",101,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","","",101,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",99,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"message","hyper::http","Defines the `HttpMessage` trait that serves to encapsulate the operations of a single request-response cycle on any HTTP connection.",null,null],[3,"RequestHead","hyper::http::message","Describes a request.",null,null],[12,"headers","","The headers of the request",105,null],[12,"method","","The method of the request",105,null],[12,"url","","The URL of the request",105,null],[3,"ResponseHead","","Describes a response.",null,null],[12,"headers","","The headers of the reponse",106,null],[12,"raw_status","","The raw status line of the response",106,null],[12,"version","","The HTTP/2 version which generated the response",106,null],[8,"Protocol","","The trait provides an API for creating new `HttpMessage`s depending on the underlying HTTP protocol.",null,null],[10,"new_message","","Creates a fresh `HttpMessage` bound to the given host, based on the given protocol scheme.",107,{"i":[{"n":"self"},{"n":"str"},{"n":"u16"},{"n":"str"}],"o":{"g":["box"],"n":"result"}}],[8,"HttpMessage","","The trait provides an API for sending an receiving HTTP messages.",null,null],[10,"set_outgoing","","Initiates a new outgoing request.",108,{"i":[{"n":"self"},{"n":"requesthead"}],"o":{"g":["requesthead"],"n":"result"}}],[10,"get_incoming","","Obtains the incoming response and returns its head (i.e. the `ResponseHead` struct)",108,{"i":[{"n":"self"}],"o":{"g":["responsehead"],"n":"result"}}],[10,"set_read_timeout","","Set the read timeout duration for this message.",108,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"set_write_timeout","","Set the write timeout duration for this message.",108,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"close_connection","","Closes the underlying HTTP connection.",108,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"has_body","","Returns whether the incoming message has a body.",108,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_proxied","","Called when the Client wishes to use a Proxy.",108,{"i":[{"n":"self"},{"n":"bool"}]}],[11,"clone","","",105,{"i":[{"n":"self"}],"o":{"n":"requesthead"}}],[11,"fmt","","",105,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",106,{"i":[{"n":"self"}],"o":{"n":"responsehead"}}],[11,"fmt","","",106,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"is","","Is the underlying type in this trait object a T?",108,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",108,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained data.",108,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast","","If the underlying type is T, extract it.",108,{"i":[{"g":["httpmessage"],"n":"box"}],"o":{"g":["box","box"],"n":"result"}}],[11,"clone","hyper::http","",98,{"i":[{"n":"self"}],"o":{"n":"rawstatus"}}],[11,"eq","","",98,{"i":[{"n":"self"},{"n":"rawstatus"}],"o":{"n":"bool"}}],[11,"ne","","",98,{"i":[{"n":"self"},{"n":"rawstatus"}],"o":{"n":"bool"}}],[11,"fmt","","",98,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"net","hyper","A collection of traits abstracting over Listeners and Streams.",null,null],[3,"NetworkConnections","hyper::net","An iterator wrapper over a `NetworkAcceptor`.",null,null],[3,"HttpListener","","A `NetworkListener` for `HttpStream`s.",null,null],[3,"HttpStream","","A wrapper around a `TcpStream`.",null,null],[12,"0","","",109,null],[3,"HttpConnector","","A connector that will produce HttpStreams.",null,null],[3,"HttpsListener","","A Http Listener over SSL.",null,null],[3,"HttpsConnector","","A connector that can protect HTTP streams using SSL.",null,null],[4,"Fresh","","The write-status indicating headers have not been written.",null,null],[4,"Streaming","","The write-status indicating headers have been written.",null,null],[4,"HttpsStream","","A stream over the HTTP protocol, possibly protected by SSL.",null,null],[13,"Http","","A plain text stream.",110,null],[13,"Https","","A stream protected by SSL.",110,null],[8,"NetworkListener","","An abstraction to listen for connections on a certain port.",null,null],[16,"Stream","","The stream produced for each connection.",111,null],[10,"accept","","Returns an iterator of streams.",111,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"local_addr","","Get the address this Listener ended up listening on.",111,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"incoming","","Returns an iterator over incoming connections.",111,{"i":[{"n":"self"}],"o":{"n":"networkconnections"}}],[11,"set_read_timeout","","Sets the read timeout for all streams that are accepted",111,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"set_write_timeout","","Sets the write timeout for all streams that are accepted",111,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[8,"NetworkStream","","An abstraction over streams that a `Server` can utilize.",null,null],[10,"peer_addr","","Get the remote address of the underlying connection.",112,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[10,"set_read_timeout","","Set the maximum time to wait for a read to complete.",112,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"set_write_timeout","","Set the maximum time to wait for a write to complete.",112,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"close","","This will be called when Stream should no longer be kept alive.",112,{"i":[{"n":"self"},{"n":"shutdown"}],"o":{"n":"result"}}],[8,"NetworkConnector","","A connector creates a NetworkStream.",null,null],[16,"Stream","","Type of `Stream` to create",113,null],[10,"connect","","Connect to a remote address.",113,{"i":[{"n":"self"},{"n":"str"},{"n":"u16"},{"n":"str"}],"o":{"n":"result"}}],[8,"SslClient","","An abstraction to allow any SSL implementation to be used with client-side HttpsStreams.",null,null],[16,"Stream","","The protected stream.",114,null],[10,"wrap_client","","Wrap a client stream with SSL.",114,{"i":[{"n":"self"},{"n":"t"},{"n":"str"}],"o":{"n":"result"}}],[8,"SslServer","","An abstraction to allow any SSL implementation to be used with server-side HttpsStreams.",null,null],[16,"Stream","","The protected stream.",115,null],[10,"wrap_server","","Wrap a server stream with SSL.",115,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"next","","",116,{"i":[{"n":"self"}],"o":{"g":["result"],"n":"option"}}],[11,"is","","Is the underlying type in this trait object a `T`?",112,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the contained data.",112,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to the contained data.",112,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast","","If the underlying type is `T`, extract it.",112,{"i":[{"g":["networkstream"],"n":"box"}],"o":{"g":["box","box"],"n":"result"}}],[11,"is","","Is the underlying type in this trait object a `T`?",112,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the contained data.",112,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to the contained data.",112,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast","","If the underlying type is `T`, extract it.",112,{"i":[{"g":["networkstream"],"n":"box"}],"o":{"g":["box","box"],"n":"result"}}],[11,"clone","","",117,{"i":[{"n":"self"}],"o":{"n":"httplistener"}}],[11,"from","","",117,{"i":[{"n":"tcplistener"}],"o":{"n":"httplistener"}}],[11,"new","","Start listening to an address over HTTP.",117,{"i":[{"n":"to"}],"o":{"g":["httplistener"],"n":"result"}}],[11,"accept","","",117,{"i":[{"n":"self"}],"o":{"g":["httpstream"],"n":"result"}}],[11,"local_addr","","",117,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"set_read_timeout","","",117,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"set_write_timeout","","",117,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"as_raw_fd","","",117,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"from_raw_fd","","",117,{"i":[{"n":"rawfd"}],"o":{"n":"httplistener"}}],[11,"clone","","",109,{"i":[{"n":"self"}],"o":{"n":"httpstream"}}],[11,"fmt","","",109,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"read","","",109,null],[11,"write","","",109,null],[11,"flush","","",109,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"as_raw_fd","","",109,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"from_raw_fd","","",109,{"i":[{"n":"rawfd"}],"o":{"n":"httpstream"}}],[11,"peer_addr","","",109,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"set_read_timeout","","",109,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"set_write_timeout","","",109,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"close","","",109,{"i":[{"n":"self"},{"n":"shutdown"}],"o":{"n":"result"}}],[11,"fmt","","",118,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"httpconnector"}}],[11,"default","","",118,{"o":{"n":"httpconnector"}}],[11,"connect","","",118,{"i":[{"n":"self"},{"n":"str"},{"n":"u16"},{"n":"str"}],"o":{"g":["httpstream"],"n":"result"}}],[11,"fmt","","",110,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"httpsstream"}}],[11,"read","","",110,null],[11,"write","","",110,null],[11,"flush","","",110,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"peer_addr","","",110,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"set_read_timeout","","",110,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"set_write_timeout","","",110,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"close","","",110,{"i":[{"n":"self"},{"n":"shutdown"}],"o":{"n":"result"}}],[11,"clone","","",119,{"i":[{"n":"self"}],"o":{"n":"httpslistener"}}],[11,"new","","Start listening to an address over HTTPS.",119,{"i":[{"n":"to"},{"n":"s"}],"o":{"g":["httpslistener"],"n":"result"}}],[11,"with_listener","","Construct an HttpsListener from a bound `TcpListener`.",119,{"i":[{"n":"httplistener"},{"n":"s"}],"o":{"n":"httpslistener"}}],[11,"accept","","",119,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"local_addr","","",119,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"set_read_timeout","","",119,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"set_write_timeout","","",119,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",120,{"o":{"n":"httpsconnector"}}],[11,"new","","Create a new connector using the provided SSL implementation.",120,{"i":[{"n":"s"}],"o":{"g":["httpconnector"],"n":"httpsconnector"}}],[11,"with_connector","","Create a new connector using the provided SSL implementation.",120,{"i":[{"n":"s"},{"n":"c"}],"o":{"n":"httpsconnector"}}],[11,"connect","","",120,{"i":[{"n":"self"},{"n":"str"},{"n":"u16"},{"n":"str"}],"o":{"n":"result"}}],[0,"server","hyper","HTTP Server",null,null],[3,"Server","hyper::server","A server can listen on a TCP socket.",null,null],[3,"Listening","","A listening server, which can later be closed.",null,null],[12,"socket","","The socket addresses that the server is bound to.",121,null],[0,"request","","Server Requests",null,null],[3,"Request","hyper::server::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[12,"remote_addr","","The IP address of the remote connection.",122,null],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",122,null],[12,"headers","","The headers of the incoming request.",122,null],[12,"uri","","The target request-uri for this request.",122,null],[12,"version","","The version of HTTP for this request.",122,null],[11,"new","","Create a new Request, reading the StartLine and Headers so they are immediately useful.",122,{"i":[{"n":"bufreader"},{"n":"socketaddr"}],"o":{"g":["request"],"n":"result"}}],[11,"set_read_timeout","","Set the read timeout of the underlying NetworkStream.",122,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"downcast_ref","","Get a reference to the underlying `NetworkStream`.",122,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"ssl","","Get a reference to the underlying Ssl stream, if connected over HTTPS.",122,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",122,null],[11,"read","","",122,null],[0,"response","hyper::server","Server Responses",null,null],[3,"Response","hyper::server::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`.",null,null],[12,"version","","The HTTP version of this response.",123,null],[11,"fmt","","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"status","","The status of this response.",123,{"i":[{"n":"self"}],"o":{"n":"statuscode"}}],[11,"headers","","The headers of this response.",123,{"i":[{"n":"self"}],"o":{"n":"headers"}}],[11,"construct","","Construct a Response from its constituent parts.",123,{"i":[{"n":"httpversion"},{"g":["write"],"n":"httpwriter"},{"n":"statuscode"},{"n":"headers"}],"o":{"g":["fresh"],"n":"response"}}],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",123,null],[11,"new","","Creates a new Response that can be used to write to a network stream.",123,{"i":[{"n":"write"},{"n":"headers"}],"o":{"g":["fresh"],"n":"response"}}],[11,"send","","Writes the body and ends the response.",123,null],[11,"start","","Consume this Response, writing the Headers and Status and creating a Response",123,{"i":[{"n":"self"}],"o":{"g":["response"],"n":"result"}}],[11,"status_mut","","Get a mutable reference to the status.",123,{"i":[{"n":"self"}],"o":{"n":"statuscode"}}],[11,"headers_mut","","Get a mutable reference to the Headers.",123,{"i":[{"n":"self"}],"o":{"n":"headers"}}],[11,"end","","Flushes all writing of a response to the client.",123,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"write","","",123,null],[11,"flush","","",123,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"drop","","",123,{"i":[{"n":"self"}]}],[8,"Handler","hyper::server","A handler that can handle incoming requests for a server.",null,null],[10,"handle","","Receives a `Request`/`Response` pair, and should perform some action on them.",124,{"i":[{"n":"self"},{"n":"request"},{"g":["fresh"],"n":"response"}]}],[11,"check_continue","","Called when a Request includes a `Expect: 100-continue` header.",124,null],[11,"on_connection_start","","This is run after a connection is received, on a per-connection basis (not a per-request basis, as a connection with keep-alive may handle multiple requests)",124,{"i":[{"n":"self"}]}],[11,"on_connection_end","","This is run before a connection is closed, on a per-connection basis (not a per-request basis, as a connection with keep-alive may handle multiple requests)",124,{"i":[{"n":"self"}]}],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new server with the provided handler.",125,{"i":[{"n":"l"}],"o":{"n":"server"}}],[11,"keep_alive","","Controls keep-alive for this server.",125,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"set_read_timeout","","Sets the read timeout for all Request reads.",125,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"set_write_timeout","","Sets the write timeout for all Response writes.",125,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}]}],[11,"local_addr","","Get the address that the server is listening on.",125,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"http","","Creates a new server that will handle `HttpStream`s.",125,{"i":[{"n":"to"}],"o":{"g":["server"],"n":"result"}}],[11,"https","","Creates a new server that will handle `HttpStream`s over SSL.",125,{"i":[{"n":"a"},{"n":"s"}],"o":{"g":["server"],"n":"result"}}],[11,"handle","","Binds to a socket and starts handling connections.",125,{"i":[{"n":"self"},{"n":"h"}],"o":{"g":["listening"],"n":"result"}}],[11,"handle_threads","","Binds to a socket and starts handling connections with the provided number of threads.",125,{"i":[{"n":"self"},{"n":"h"},{"n":"usize"}],"o":{"g":["listening"],"n":"result"}}],[11,"fmt","","",121,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",121,{"i":[{"n":"self"}]}],[11,"close","","Warning: This function doesn't work. The server remains listening after you called it. See https://github.com/hyperium/hyper/issues/338 for more details.",121,{"i":[{"n":"self"}],"o":{"n":"result"}}],[0,"status","hyper","HTTP status codes",null,null],[4,"StatusCode","hyper::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue [RFC7231, Section 6.2.1]",126,null],[13,"SwitchingProtocols","","101 Switching Protocols [RFC7231, Section 6.2.2]",126,null],[13,"Processing","","102 Processing [RFC2518]",126,null],[13,"Ok","","200 OK [RFC7231, Section 6.3.1]",126,null],[13,"Created","","201 Created [RFC7231, Section 6.3.2]",126,null],[13,"Accepted","","202 Accepted [RFC7231, Section 6.3.3]",126,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",126,null],[13,"NoContent","","204 No Content [RFC7231, Section 6.3.5]",126,null],[13,"ResetContent","","205 Reset Content [RFC7231, Section 6.3.6]",126,null],[13,"PartialContent","","206 Partial Content [RFC7233, Section 4.1]",126,null],[13,"MultiStatus","","207 Multi-Status [RFC4918]",126,null],[13,"AlreadyReported","","208 Already Reported [RFC5842]",126,null],[13,"ImUsed","","226 IM Used [RFC3229]",126,null],[13,"MultipleChoices","","300 Multiple Choices [RFC7231, Section 6.4.1]",126,null],[13,"MovedPermanently","","301 Moved Permanently [RFC7231, Section 6.4.2]",126,null],[13,"Found","","302 Found [RFC7231, Section 6.4.3]",126,null],[13,"SeeOther","","303 See Other [RFC7231, Section 6.4.4]",126,null],[13,"NotModified","","304 Not Modified [RFC7232, Section 4.1]",126,null],[13,"UseProxy","","305 Use Proxy [RFC7231, Section 6.4.5]",126,null],[13,"TemporaryRedirect","","307 Temporary Redirect [RFC7231, Section 6.4.7]",126,null],[13,"PermanentRedirect","","308 Permanent Redirect [RFC7238]",126,null],[13,"BadRequest","","400 Bad Request [RFC7231, Section 6.5.1]",126,null],[13,"Unauthorized","","401 Unauthorized [RFC7235, Section 3.1]",126,null],[13,"PaymentRequired","","402 Payment Required [RFC7231, Section 6.5.2]",126,null],[13,"Forbidden","","403 Forbidden [RFC7231, Section 6.5.3]",126,null],[13,"NotFound","","404 Not Found [RFC7231, Section 6.5.4]",126,null],[13,"MethodNotAllowed","","405 Method Not Allowed [RFC7231, Section 6.5.5]",126,null],[13,"NotAcceptable","","406 Not Acceptable [RFC7231, Section 6.5.6]",126,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required [RFC7235, Section 3.2]",126,null],[13,"RequestTimeout","","408 Request Timeout [RFC7231, Section 6.5.7]",126,null],[13,"Conflict","","409 Conflict [RFC7231, Section 6.5.8]",126,null],[13,"Gone","","410 Gone [RFC7231, Section 6.5.9]",126,null],[13,"LengthRequired","","411 Length Required [RFC7231, Section 6.5.10]",126,null],[13,"PreconditionFailed","","412 Precondition Failed [RFC7232, Section 4.2]",126,null],[13,"PayloadTooLarge","","413 Payload Too Large [RFC7231, Section 6.5.11]",126,null],[13,"UriTooLong","","414 URI Too Long [RFC7231, Section 6.5.12]",126,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",126,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable [RFC7233, Section 4.4]",126,null],[13,"ExpectationFailed","","417 Expectation Failed [RFC7231, Section 6.5.14]",126,null],[13,"ImATeapot","","418 I'm a teapot [curiously, not registered by IANA, but RFC2324]",126,null],[13,"MisdirectedRequest","","421 Misdirected Request RFC7540, Section 9.1.2",126,null],[13,"UnprocessableEntity","","422 Unprocessable Entity [RFC4918]",126,null],[13,"Locked","","423 Locked [RFC4918]",126,null],[13,"FailedDependency","","424 Failed Dependency [RFC4918]",126,null],[13,"UpgradeRequired","","426 Upgrade Required [RFC7231, Section 6.5.15]",126,null],[13,"PreconditionRequired","","428 Precondition Required [RFC6585]",126,null],[13,"TooManyRequests","","429 Too Many Requests [RFC6585]",126,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large [RFC6585]",126,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons [RFC7725]",126,null],[13,"InternalServerError","","500 Internal Server Error [RFC7231, Section 6.6.1]",126,null],[13,"NotImplemented","","501 Not Implemented [RFC7231, Section 6.6.2]",126,null],[13,"BadGateway","","502 Bad Gateway [RFC7231, Section 6.6.3]",126,null],[13,"ServiceUnavailable","","503 Service Unavailable [RFC7231, Section 6.6.4]",126,null],[13,"GatewayTimeout","","504 Gateway Timeout [RFC7231, Section 6.6.5]",126,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",126,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates [RFC2295]",126,null],[13,"InsufficientStorage","","507 Insufficient Storage [RFC4918]",126,null],[13,"LoopDetected","","508 Loop Detected [RFC5842]",126,null],[13,"NotExtended","","510 Not Extended [RFC2774]",126,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required [RFC6585]",126,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",126,null],[4,"StatusClass","","The class of an HTTP `status-code`.",null,null],[13,"Informational","","1xx (Informational): The request was received, continuing process",127,null],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",127,null],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",127,null],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",127,null],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",127,null],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",127,null],[11,"fmt","","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",126,null],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",126,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"class","","Determine the class of a status code, based on its first digit.",126,{"i":[{"n":"self"}],"o":{"n":"statusclass"}}],[11,"is_informational","","Check if class is Informational.",126,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_success","","Check if class is Success.",126,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_redirection","","Check if class is Redirection.",126,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_client_error","","Check if class is ClientError.",126,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_server_error","","Check if class is ServerError.",126,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_strange_status","","Check if class is NoClass",126,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",126,{"i":[{"n":"self"},{"n":"statuscode"}],"o":{"n":"bool"}}],[11,"clone","","",126,{"i":[{"n":"self"}],"o":{"n":"statuscode"}}],[11,"partial_cmp","","",126,{"i":[{"n":"self"},{"n":"statuscode"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",126,{"i":[{"n":"self"},{"n":"statuscode"}],"o":{"n":"ordering"}}],[11,"fmt","","",127,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",127,{"i":[{"n":"self"}],"o":{"n":"statusclass"}}],[11,"eq","","",127,{"i":[{"n":"self"},{"n":"statusclass"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",127,{"i":[{"n":"self"},{"n":"statusclass"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",127,{"i":[{"n":"self"},{"n":"statusclass"}],"o":{"n":"ordering"}}],[11,"default_code","","Get the default status code for the class.",127,{"i":[{"n":"self"}],"o":{"n":"statuscode"}}],[0,"uri","hyper","HTTP RequestUris",null,null],[4,"RequestUri","hyper::uri","The Request-URI of a Request's StartLine.",null,null],[13,"AbsolutePath","","The most common request target, an absolute path and optional query.",128,null],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",128,null],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",128,null],[13,"Star","","The star is used to target the entire server, instead of a specific resource.",128,null],[11,"fmt","","",128,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",128,{"i":[{"n":"self"},{"n":"requesturi"}],"o":{"n":"bool"}}],[11,"ne","","",128,{"i":[{"n":"self"},{"n":"requesturi"}],"o":{"n":"bool"}}],[11,"clone","","",128,{"i":[{"n":"self"}],"o":{"n":"requesturi"}}],[11,"from_str","","",128,{"i":[{"n":"str"}],"o":{"g":["requesturi","error"],"n":"result"}}],[11,"fmt","","",128,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"version","hyper","HTTP Versions enum",null,null],[4,"HttpVersion","hyper::version","Represents a version of the HTTP spec.",null,null],[13,"Http09","","`HTTP/0.9`",129,null],[13,"Http10","","`HTTP/1.0`",129,null],[13,"Http11","","`HTTP/1.1`",129,null],[13,"Http20","","`HTTP/2.0`",129,null],[11,"eq","","",129,{"i":[{"n":"self"},{"n":"httpversion"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",129,{"i":[{"n":"self"},{"n":"httpversion"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",129,{"i":[{"n":"self"}],"o":{"n":"httpversion"}}],[11,"cmp","","",129,{"i":[{"n":"self"},{"n":"httpversion"}],"o":{"n":"ordering"}}],[11,"hash","","",129,null],[11,"fmt","","",129,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",129,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_ref","","",129,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from_str","","",129,{"i":[{"n":"str"}],"o":{"n":"result"}}],[0,"mime","hyper","Re-exporting the mime crate, for convenience.",null,null],[3,"Mime","hyper::mime","Mime, or Media Type. Encapsulates common registers types.",null,null],[12,"0","","",130,null],[12,"1","","",130,null],[12,"2","","",130,null],[4,"TopLevel","","",null,null],[13,"Star","","",131,null],[13,"Text","","",131,null],[13,"Image","","",131,null],[13,"Audio","","",131,null],[13,"Video","","",131,null],[13,"Application","","",131,null],[13,"Multipart","","",131,null],[13,"Message","","",131,null],[13,"Model","","",131,null],[13,"Ext","","",131,null],[4,"SubLevel","","",null,null],[13,"Star","","",132,null],[13,"Plain","","",132,null],[13,"Html","","",132,null],[13,"Xml","","",132,null],[13,"Javascript","","",132,null],[13,"Css","","",132,null],[13,"EventStream","","",132,null],[13,"Json","","",132,null],[13,"WwwFormUrlEncoded","","",132,null],[13,"Msgpack","","",132,null],[13,"OctetStream","","",132,null],[13,"FormData","","",132,null],[13,"Png","","",132,null],[13,"Gif","","",132,null],[13,"Bmp","","",132,null],[13,"Jpeg","","",132,null],[13,"Mpeg","","",132,null],[13,"Mp4","","",132,null],[13,"Ogg","","",132,null],[13,"Ext","","",132,null],[4,"Attr","","",null,null],[13,"Charset","","",133,null],[13,"Boundary","","",133,null],[13,"Q","","",133,null],[13,"Ext","","",133,null],[4,"Value","","",null,null],[13,"Utf8","","",134,null],[13,"Ext","","",134,null],[6,"Param","","",null,null],[14,"mime","","Easily create a Mime without having to import so many enums.",null,null],[14,"header","hyper","",null,null],[11,"parse","","Parse an absolute URL from a string.",11,{"i":[{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its query string.",11,{"i":[{"n":"str"},{"n":"i"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",11,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",11,{"o":{"n":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",11,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into_string","","Return the serialization of this URL.",11,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",11,{"i":[{"n":"self"}],"o":{"n":"origin"}}],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.",11,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"has_authority","","Return whether the URL has an 'authority', which can contain a username, password, host, and port number.",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning that parsing a relative URL string with this URL as the base will return an error.",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"username","","Return the username for this URL (typically the empty string) as a percent-encoded ASCII string.",11,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",11,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"has_host","","Equivalent to `url.host().is_some()`.",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",11,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"host","","Return the parsed representation of the host for this URL. Non-ASCII domain labels are punycode-encoded per IDNA.",11,{"i":[{"n":"self"}],"o":{"g":["host"],"n":"option"}}],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",11,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"port","","Return the port number for this URL, if any.",11,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",11,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",11,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["hostandport","error"],"n":"result"}}],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string. For cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with '/'. For other URLs, this starts with a '/' slash and continues with slash-separated path segments.",11,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of '/' slash-separated path segments, each as a percent-encoded ASCII string.",11,{"i":[{"n":"self"}],"o":{"g":["split"],"n":"option"}}],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",11,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded` and return an iterator of (key, value) pairs.",11,{"i":[{"n":"self"}],"o":{"n":"parse"}}],[11,"fragment","","Return this URL’s fragment identifier, if any.",11,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"set_fragment","","Change this URL’s fragment identifier.",11,null],[11,"set_query","","Change this URL’s query string.",11,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs in `application/x-www-form-urlencoded` syntax.",11,{"i":[{"n":"self"}],"o":{"g":["urlquery"],"n":"serializer"}}],[11,"set_path","","Change this URL’s path.",11,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",11,{"i":[{"n":"self"}],"o":{"g":["pathsegmentsmut"],"n":"result"}}],[11,"set_port","","Change this URL’s port number.",11,{"i":[{"n":"self"},{"g":["u16"],"n":"option"}],"o":{"n":"result"}}],[11,"set_host","","Change this URL’s host.",11,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"set_ip_host","","Change this URL’s host to the given IP address.",11,{"i":[{"n":"self"},{"n":"ipaddr"}],"o":{"n":"result"}}],[11,"set_password","","Change this URL’s password.",11,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"n":"result"}}],[11,"set_username","","Change this URL’s username.",11,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"set_scheme","","Change this URL’s scheme.",11,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",11,{"i":[{"n":"p"}],"o":{"g":["url"],"n":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",11,{"i":[{"n":"p"}],"o":{"g":["url"],"n":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar, convert its path to an absolute `std::path::Path`.",11,{"i":[{"n":"self"}],"o":{"g":["pathbuf"],"n":"result"}}],[11,"as_ref","","",11,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from","hyper::error","",13,{"i":[{"n":"errors"}],"o":{"n":"parseerror"}}],[11,"fmt","hyper","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","hyper::error","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"eq","hyper","",11,{"i":[{"n":"self"},{"n":"url"}],"o":{"n":"bool"}}],[11,"to_socket_addrs","","",11,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","hyper::error","",13,{"i":[{"n":"self"}],"o":{"n":"parseerror"}}],[11,"clone","hyper","",11,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"partial_cmp","","",11,{"i":[{"n":"self"},{"n":"url"}],"o":{"g":["ordering"],"n":"option"}}],[11,"description","hyper::error","",13,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from_str","hyper","",11,{"i":[{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"index","","",11,{"i":[{"n":"self"},{"g":["position"],"n":"rangeto"}],"o":{"n":"str"}}],[11,"index","","",11,{"i":[{"n":"self"},{"n":"rangefull"}],"o":{"n":"str"}}],[11,"index","","",11,{"i":[{"n":"self"},{"g":["position"],"n":"range"}],"o":{"n":"str"}}],[11,"index","","",11,{"i":[{"n":"self"},{"g":["position"],"n":"rangefrom"}],"o":{"n":"str"}}],[11,"cmp","","",11,{"i":[{"n":"self"},{"n":"url"}],"o":{"n":"ordering"}}],[11,"hash","","",11,null],[11,"fmt","hyper::error","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","hyper","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"languagetag"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"languagetag"}}],[11,"from_str","","",0,{"i":[{"n":"str"}],"o":{"g":["languagetag","error"],"n":"result"}}],[11,"default","","",0,{"o":{"n":"languagetag"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","hyper::mime","",131,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",134,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",130,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",132,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",133,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",131,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",132,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",134,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",131,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"eq","","",131,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",132,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",133,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",132,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",133,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"eq","","",133,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",134,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"eq","","",133,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",131,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",134,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",134,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",130,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"eq","","",132,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"clone","","",132,{"i":[{"n":"self"}],"o":{"n":"sublevel"}}],[11,"clone","","",134,{"i":[{"n":"self"}],"o":{"n":"value"}}],[11,"clone","","",130,{"i":[{"n":"self"}],"o":{"n":"mime"}}],[11,"clone","","",131,{"i":[{"n":"self"}],"o":{"n":"toplevel"}}],[11,"clone","","",133,{"i":[{"n":"self"}],"o":{"n":"attr"}}],[11,"partial_cmp","","",133,{"i":[{"n":"self"},{"n":"attr"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",133,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"le","","",133,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"gt","","",133,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"ge","","",133,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",134,{"i":[{"n":"self"},{"n":"value"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",134,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"le","","",134,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"gt","","",134,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"ge","","",134,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",132,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",132,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"le","","",132,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"gt","","",132,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"ge","","",132,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",131,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",131,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"le","","",131,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"gt","","",131,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"ge","","",131,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",130,{"i":[{"n":"self"},{"n":"mime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",130,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"le","","",130,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"gt","","",130,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"ge","","",130,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"from_str","","",132,{"i":[{"n":"str"}],"o":{"g":["sublevel"],"n":"result"}}],[11,"from_str","","",131,{"i":[{"n":"str"}],"o":{"g":["toplevel"],"n":"result"}}],[11,"from_str","","",130,{"i":[{"n":"str"}],"o":{"g":["mime"],"n":"result"}}],[11,"from_str","","",134,{"i":[{"n":"str"}],"o":{"g":["value"],"n":"result"}}],[11,"from_str","","",133,{"i":[{"n":"str"}],"o":{"g":["attr"],"n":"result"}}],[11,"cmp","","",133,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"ordering"}}],[11,"cmp","","",131,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"ordering"}}],[11,"cmp","","",134,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"ordering"}}],[11,"cmp","","",130,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"ordering"}}],[11,"cmp","","",132,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"ordering"}}],[11,"hash","","",131,null],[11,"hash","","",132,null],[11,"hash","","",133,null],[11,"hash","","",130,null],[11,"hash","","",134,null],[11,"deref","","",133,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",134,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",132,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",131,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",133,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",134,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",130,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",131,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",132,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"matches","hyper","Matches language tags. The first language acts as a language range, the second one is used as a normal language tag. None fields in the language range are ignored. If the language tag has more extlangs than the range these extlangs are ignored. Matches are case-insensitive. `*` in language ranges are represented using `None` values. The language range `*` that matches language tags is created by the default language tag: `let wildcard: LanguageTag = Default::default();.`",0,{"i":[{"n":"self"},{"n":"languagetag"}],"o":{"n":"bool"}}],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"canonicalize","","Returns the canonical version of the language tag.",0,{"i":[{"n":"self"}],"o":{"n":"languagetag"}}],[11,"get_param","hyper::mime","",130,{"i":[{"n":"self"},{"n":"a"}],"o":{"g":["value"],"n":"option"}}],[11,"as_str","","",131,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"as_str","","",132,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"as_str","","",133,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"as_str","","",134,{"i":[{"n":"self"}],"o":{"n":"str"}}]],"paths":[[3,"LanguageTag"],[4,"Body"],[4,"RedirectPolicy"],[3,"Config"],[3,"Pool"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[8,"IntoUrl"],[3,"Client"],[3,"RequestBuilder"],[3,"Url"],[3,"ProxyConfig"],[4,"ParseError"],[4,"Error"],[4,"Method"],[3,"EntityTag"],[3,"HttpDate"],[3,"Quality"],[3,"QualityItem"],[3,"Accept"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentLength"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentRange"],[3,"ContentType"],[3,"Cookie"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"Host"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[3,"Origin"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Protocol"],[3,"UserAgent"],[3,"HeaderFormatter"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"RangeUnit"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"DispositionType"],[4,"DispositionParam"],[4,"ContentRangeSpec"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"Preference"],[4,"Range"],[4,"ByteRangeSpec"],[4,"ReferrerPolicy"],[4,"ProtocolName"],[4,"Vary"],[4,"RelationType"],[4,"MediaDesc"],[3,"AccessControlAllowCredentials"],[3,"Link"],[3,"LinkValue"],[3,"ExtendedValue"],[3,"HTTP_VALUE"],[8,"Scheme"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"RawStatus"],[3,"Incoming"],[4,"HttpReader"],[4,"HttpWriter"],[3,"Http11Message"],[3,"Http11Protocol"],[3,"EndError"],[3,"RequestHead"],[3,"ResponseHead"],[8,"Protocol"],[8,"HttpMessage"],[3,"HttpStream"],[4,"HttpsStream"],[8,"NetworkListener"],[8,"NetworkStream"],[8,"NetworkConnector"],[8,"SslClient"],[8,"SslServer"],[3,"NetworkConnections"],[3,"HttpListener"],[3,"HttpConnector"],[3,"HttpsListener"],[3,"HttpsConnector"],[3,"Listening"],[3,"Request"],[3,"Response"],[8,"Handler"],[3,"Server"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"]]};
searchIndex["hyper_openssl"] = {"doc":"Hyper SSL support via OpenSSL.","items":[[3,"OpensslClient","hyper_openssl","An `SslClient` implementation using OpenSSL.",null,null],[3,"OpensslServer","","An `SslServer` implementation using OpenSSL.",null,null],[3,"SslStream","","A Hyper SSL stream.",null,null],[3,"StreamGuard","","A guard around a locked inner SSL stream.",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"opensslclient"}}],[11,"new","","Creates a new `OpenSslClient` with default settings.",0,{"o":{"g":["opensslclient","errorstack"],"n":"result"}}],[11,"danger_disable_hostname_verification","","If set, the `SslConnector::danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication` method will be used to connect.",0,{"i":[{"n":"self"},{"n":"bool"}]}],[11,"ssl_callback","","Registers a callback which can customize the `Ssl` of each connection.",0,{"i":[{"n":"self"},{"n":"f"}]}],[11,"from","","",0,{"i":[{"n":"sslconnector"}],"o":{"n":"opensslclient"}}],[11,"wrap_client","","",0,{"i":[{"n":"self"},{"n":"t"},{"n":"str"}],"o":{"g":["sslstream"],"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"opensslserver"}}],[11,"from_files","","Constructs an `OpensslServer` with a reasonable default configuration.",1,{"i":[{"n":"p"},{"n":"q"}],"o":{"g":["opensslserver","errorstack"],"n":"result"}}],[11,"from","","",1,{"i":[{"n":"sslacceptor"}],"o":{"n":"opensslserver"}}],[11,"wrap_server","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["sslstream"],"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"sslstream"}}],[11,"from","","",2,{"i":[{"n":"sslstream"}],"o":{"n":"sslstream"}}],[11,"lock","","Returns a guard around the locked inner SSL stream.",2,{"i":[{"n":"self"}],"o":{"n":"streamguard"}}],[11,"deref","","",3,{"i":[{"n":"self"}],"o":{"n":"sslstream"}}],[11,"deref_mut","","",3,{"i":[{"n":"self"}],"o":{"n":"sslstream"}}],[11,"read","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"peer_addr","","",2,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"set_read_timeout","","",2,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"set_write_timeout","","",2,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}]],"paths":[[3,"OpensslClient"],[3,"OpensslServer"],[3,"SslStream"],[3,"StreamGuard"]]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","items":[[5,"domain_to_ascii","idna","The domain to ASCII algorithm.",null,{"i":[{"n":"str"}],"o":{"g":["string","errors"],"n":"result"}}],[5,"domain_to_unicode","","The domain to Unicode algorithm.",null,null],[0,"punycode","","Punycode (RFC 3492) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,{"i":[{"n":"str"}],"o":{"g":["string"],"n":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"i":[{"n":"str"}],"o":{"g":["vec"],"n":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"i":[{"n":"str"}],"o":{"g":["string"],"n":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"uts46","idna","Unicode IDNA Compatibility Processing (Unicode Technical Standard #46)",null,null],[3,"Flags","idna::uts46","",null,null],[12,"use_std3_ascii_rules","","",0,null],[12,"transitional_processing","","",0,null],[12,"verify_dns_length","","",0,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,{"i":[{"n":"str"},{"n":"flags"}],"o":{"g":["string","errors"],"n":"result"}}],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,null],[7,"PUNYCODE_PREFIX","","",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"flags"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["iron"] = {"doc":"The main crate for Iron.","items":[[3,"Listening","iron","A listening server, which can later be closed.",null,null],[12,"socket","","The socket addresses that the server is bound to.",0,null],[3,"TypeMap","","A map keyed by types.",null,null],[0,"headers","","Headers container, and common header fields.",null,null],[0,"parsing","iron::headers","Utility functions for Header implementations.",null,null],[5,"from_one_raw_str","iron::headers::parsing","Reads a single raw string when parsing a header.",null,null],[5,"from_raw_str","","Reads a raw string into a value.",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,null],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[3,"ExtendedValue","","An extended header parameter value (i.e., tagged with a character set and optionally, a language), as defined in RFC 5987.",null,null],[12,"charset","","The character set that is used to encode the `value` to a string.",1,null],[12,"language_tag","","The human language details of the `value`, if available.",1,null],[12,"value","","The parameter value, as expressed in octets.",1,null],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in RFC 5987.",null,{"i":[{"n":"str"}],"o":{"g":["extendedvalue","error"],"n":"result"}}],[3,"HTTP_VALUE","","This encode set is used for HTTP header values and is defined at https://tools.ietf.org/html/rfc5987#section-3.2",null,null],[8,"Header","iron::headers","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",2,{"o":{"n":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",2,null],[8,"HeaderFormat","","A trait for any object that will represent a header field and value.",null,null],[10,"fmt_header","","Format a header to be output into a TcpStream.",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[8,"HeaderClone","","Internal implementation detail.",null,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header.",null,null],[12,"0","","",4,null],[3,"Upgrade","","`Upgrade` header, defined in RFC7230",null,null],[12,"0","","",5,null],[4,"ContentRangeSpec","","Content-Range, described in RFC7233",null,null],[13,"Bytes","","Byte range",6,null],[12,"range","iron::headers::ContentRangeSpec","First and last bytes of the range, omitted if request could not be satisfied",6,null],[12,"instance_length","","Total length of the instance, can be omitted if unknown",6,null],[13,"Unregistered","iron::headers","Custom range, with unit not registered at IANA",6,null],[12,"unit","iron::headers::ContentRangeSpec","other-range-unit",6,null],[12,"resp","","other-range-resp",6,null],[3,"Authorization","iron::headers","`Authorization` header, defined in RFC7235",null,null],[12,"0","","",7,null],[4,"Preference","","Prefer contains a list of these preferences.",null,null],[13,"RespondAsync","","\"respond-async\"",8,null],[13,"ReturnRepresentation","","\"return=representation\"",8,null],[13,"ReturnMinimal","","\"return=minimal\"",8,null],[13,"HandlingStrict","","\"handling=strict\"",8,null],[13,"HandlingLeniant","","\"handling=leniant\"",8,null],[13,"Wait","","\"wait=delta\"",8,null],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is just \"\". A preference can also have a list of parameters.",8,null],[3,"Date","","`Date` header, defined in RFC7231",null,null],[12,"0","","",9,null],[3,"ContentType","","`Content-Type` header, defined in RFC7231",null,null],[12,"0","","",10,null],[3,"Location","","`Location` header, defined in RFC7231",null,null],[12,"0","","",11,null],[3,"From","","`From` header, defined in RFC7231",null,null],[12,"0","","",12,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",13,null],[13,"Close","","The `close` connection value.",13,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",13,null],[3,"Origin","","The `Origin` header.",null,null],[12,"scheme","","The scheme, such as http or https",14,null],[12,"host","","The host, such as Host{hostname: \"hyper.rs\".to_owned(), port: None}",14,null],[3,"PreferenceApplied","","`Preference-Applied` header, defined in RFC7240",null,null],[12,"0","","",15,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in RFC7233",null,null],[12,"0","","",16,null],[3,"UserAgent","","`User-Agent` header, defined in RFC7231",null,null],[12,"0","","",17,null],[5,"q","","Convenience function to create a `Quality` from a float.",null,{"i":[{"n":"f32"}],"o":{"n":"quality"}}],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in RFC7230",null,null],[12,"0","","",18,null],[3,"SetCookie","","`Set-Cookie` header, defined RFC6265",null,null],[12,"0","","",19,null],[3,"ContentRange","","`Content-Range` header, defined in RFC7233",null,null],[12,"0","","",20,null],[4,"MediaDesc","","A Media Descriptors Enum based on: https://www.w3.org/TR/html401/types.html#h-6.13",null,null],[13,"Screen","","screen.",21,null],[13,"Tty","","tty.",21,null],[13,"Tv","","tv.",21,null],[13,"Projection","","projection.",21,null],[13,"Handheld","","handheld.",21,null],[13,"Print","","print.",21,null],[13,"Braille","","braille.",21,null],[13,"Aural","","aural.",21,null],[13,"All","","all.",21,null],[13,"Extension","","Unrecognized media descriptor extension.",21,null],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of CORS",null,null],[12,"0","","",22,null],[4,"IfRange","","`If-Range` header, defined in RFC7233",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",23,null],[13,"Date","","The date when the client retrieved the resource",23,null],[4,"DispositionType","","The implied disposition of the content of the HTTP body",null,null],[13,"Inline","","Inline implies default processing",24,null],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally, rather than process it normally (as per its media type).",24,null],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",24,null],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",null,null],[12,"token","","Actual bearer token as a string",25,null],[3,"Allow","","`Allow` header, defined in RFC7231",null,null],[12,"0","","",26,null],[4,"RelationType","","A Link Relation Type Enum based on: RFC5988",null,null],[13,"Alternate","","alternate.",27,null],[13,"Appendix","","appendix.",27,null],[13,"Bookmark","","bookmark.",27,null],[13,"Chapter","","chapter.",27,null],[13,"Contents","","contents.",27,null],[13,"Copyright","","copyright.",27,null],[13,"Current","","current.",27,null],[13,"DescribedBy","","describedby.",27,null],[13,"Edit","","edit.",27,null],[13,"EditMedia","","edit-media.",27,null],[13,"Enclosure","","enclosure.",27,null],[13,"First","","first.",27,null],[13,"Glossary","","glossary.",27,null],[13,"Help","","help.",27,null],[13,"Hub","","hub.",27,null],[13,"Index","","index.",27,null],[13,"Last","","last.",27,null],[13,"LatestVersion","","latest-version.",27,null],[13,"License","","license.",27,null],[13,"Next","","next.",27,null],[13,"NextArchive","","next-archive.",27,null],[13,"Payment","","payment.",27,null],[13,"Prev","","prev.",27,null],[13,"PredecessorVersion","","predecessor-version.",27,null],[13,"Previous","","previous.",27,null],[13,"PrevArchive","","prev-archive.",27,null],[13,"Related","","related.",27,null],[13,"Replies","","replies.",27,null],[13,"Section","","section.",27,null],[13,"RelationTypeSelf","","self.",27,null],[13,"Service","","service.",27,null],[13,"Start","","start.",27,null],[13,"Stylesheet","","stylesheet.",27,null],[13,"Subsection","","subsection.",27,null],[13,"SuccessorVersion","","successor-version.",27,null],[13,"Up","","up.",27,null],[13,"VersionHistory","","versionHistory.",27,null],[13,"Via","","via.",27,null],[13,"WorkingCopy","","working-copy.",27,null],[13,"WorkingCopyOf","","working-copy-of.",27,null],[13,"ExtRelType","","ext-rel-type.",27,null],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more `ByteRangeSpecs`. Each `ByteRangeSpec` defines a range of bytes to fetch",null,null],[13,"FromTo","","Get all bytes between x and y (\"x-y\")",28,null],[13,"AllFrom","","Get all bytes starting from x (\"x-\")",28,null],[13,"Last","","Get last x bytes (\"-x\")",28,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",29,null],[12,"version","","The optional version of the protocol, often in the format \"DIGIT.DIGIT\" (e.g.. \"1.2\")",29,null],[3,"ETag","","`ETag` header, defined in RFC7232",null,null],[12,"0","","",30,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[12,"0","","",31,null],[3,"Cookie","","`Cookie` header, defined in RFC6265",null,null],[12,"0","","",32,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in RFC7232",null,null],[12,"0","","",33,null],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of CORS",null,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",34,null],[13,"Ext","","Every value other than `no-cache`.",34,null],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",null,null],[13,"NoCache","","\"no-cache\"",35,null],[13,"NoStore","","\"no-store\"",35,null],[13,"NoTransform","","\"no-transform\"",35,null],[13,"OnlyIfCached","","\"only-if-cached\"",35,null],[13,"MaxAge","","\"max-age=delta\"",35,null],[13,"MaxStale","","\"max-stale=delta\"",35,null],[13,"MinFresh","","\"min-fresh=delta\"",35,null],[13,"MustRevalidate","","\"must-revalidate\"",35,null],[13,"Public","","\"public\"",35,null],[13,"Private","","\"private\"",35,null],[13,"ProxyRevalidate","","\"proxy-revalidate\"",35,null],[13,"SMaxAge","","\"s-maxage=delta\"",35,null],[13,"Extension","","Extension directives. Optionally include an argument.",35,null],[5,"qitem","","Convinience function to wrap a value in a `QualityItem` Sets `q` to the default 1.0",null,{"i":[{"n":"t"}],"o":{"n":"qualityitem"}}],[3,"Server","","`Server` header, defined in RFC7231",null,null],[12,"0","","",36,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in RFC7232",null,null],[12,"0","","",37,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in RFC7231",null,null],[12,"0","","",38,null],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive except for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",39,null],[13,"Tls","","`TLS` value, Transport Layer Security RFC2817",39,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol RFC6455",39,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",39,null],[13,"Unregistered","","Any other protocol name not known to hyper",39,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",40,null],[12,"password","","The password. `None` if the `:` delimiter character was not part of the parsed input.",40,null],[3,"LinkValue","","A single `link-value` of a `Link` header, based on: RFC5988",null,null],[4,"Range","","`Range` header, defined in RFC7233",null,null],[13,"Bytes","","Byte range",41,null],[13,"Unregistered","","Custom range, with unit not registered at IANA (`other-range-unit`: String , `other-range-set`: String)",41,null],[3,"Expires","","`Expires` header, defined in RFC7234",null,null],[12,"0","","",42,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",43,null],[13,"Iso_8859_1","","ISO-8859-1",43,null],[13,"Iso_8859_2","","ISO-8859-2",43,null],[13,"Iso_8859_3","","ISO-8859-3",43,null],[13,"Iso_8859_4","","ISO-8859-4",43,null],[13,"Iso_8859_5","","ISO-8859-5",43,null],[13,"Iso_8859_6","","ISO-8859-6",43,null],[13,"Iso_8859_7","","ISO-8859-7",43,null],[13,"Iso_8859_8","","ISO-8859-8",43,null],[13,"Iso_8859_9","","ISO-8859-9",43,null],[13,"Iso_8859_10","","ISO-8859-10",43,null],[13,"Shift_Jis","","Shift_JIS",43,null],[13,"Euc_Jp","","EUC-JP",43,null],[13,"Iso_2022_Kr","","ISO-2022-KR",43,null],[13,"Euc_Kr","","EUC-KR",43,null],[13,"Iso_2022_Jp","","ISO-2022-JP",43,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",43,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",43,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",43,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",43,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",43,null],[13,"Gb2312","","GB2312",43,null],[13,"Big5","","Big5",43,null],[13,"Koi8_R","","KOI8-R",43,null],[13,"Ext","","An arbitrary charset specified as a string",43,null],[3,"QualityItem","","Represents an item with a quality value as defined in RFC7231.",null,null],[12,"item","","The actual contents of the field.",44,null],[12,"quality","","The quality (client or server preference) for the value.",44,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of CORS",null,null],[12,"0","","",45,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header, part of CORS",null,null],[13,"Any","","Allow all origins",46,null],[13,"Null","","A hidden origin",46,null],[13,"Value","","Allow one particular origin",46,null],[4,"RangeUnit","","Range Units, described in RFC7233",null,null],[13,"Bytes","","Indicating byte-range requests are supported.",47,null],[13,"None","","Reserved as keyword, indicating no ranges are supported.",47,null],[13,"Unregistered","","The given range unit is not registered at IANA.",47,null],[3,"CacheControl","","`Cache-Control` header, defined in RFC7234",null,null],[12,"0","","",48,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of CORS",null,null],[12,"0","","",49,null],[4,"DispositionParam","","A parameter to the disposition type",null,null],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of bytes representing the filename",50,null],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized parameters.",50,null],[3,"Referer","","`Referer` header, defined in RFC7231",null,null],[12,"0","","",51,null],[3,"Prefer","","`Prefer` header, defined in RFC7240",null,null],[12,"0","","",52,null],[8,"Scheme","","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",53,{"o":{"g":["str"],"n":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[4,"IfNoneMatch","","`If-None-Match` header, defined in RFC7232",null,null],[13,"Any","","Any value is a match",54,null],[13,"Items","","Only the listed items are a match",54,null],[3,"Host","","The `Host` header.",null,null],[12,"hostname","","The hostname, such a example.domain.",55,null],[12,"port","","An optional port number.",55,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in RFC7231",null,null],[12,"0","","",56,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of CORS",null,null],[12,"0","","",57,null],[3,"Link","","The `Link` header, defined in RFC5988",null,null],[4,"Expect","","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",58,null],[3,"Connection","","`Connection` header, defined in RFC7230",null,null],[12,"0","","",59,null],[3,"ContentLength","","`Content-Length` header, defined in RFC7230",null,null],[12,"0","","",60,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[12,"0","","",61,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in RFC7231",null,null],[12,"0","","",62,null],[4,"IfMatch","","`If-Match` header, defined in RFC7232",null,null],[13,"Any","","Any value is a match",63,null],[13,"Items","","Only the listed items are a match",63,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of CORS",null,null],[12,"0","","",64,null],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of Referrer Policy",null,null],[13,"NoReferrer","","`no-referrer`",65,null],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",65,null],[13,"SameOrigin","","`same-origin`",65,null],[13,"Origin","","`origin`",65,null],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",65,null],[13,"UnsafeUrl","","`unsafe-url`",65,null],[13,"StrictOrigin","","`strict-origin`",65,null],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",65,null],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in RFC6266",null,null],[12,"disposition","","The disposition",66,null],[12,"parameters","","Disposition parameters",66,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in RFC7231",null,null],[12,"0","","",67,null],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in RFC6797",null,null],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as any subdomains of the host's domain name.",68,null],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header field, during which the UA regards the host (from whom the message was received) as a Known HSTS Host.",68,null],[3,"Accept","","`Accept` header, defined in RFC7231",null,null],[12,"0","","",69,null],[3,"EntityTag","","An entity tag, defined in RFC7232",null,null],[12,"weak","","Weakness indicator for the tag",70,null],[3,"ContentLanguage","","`Content-Language` header, defined in RFC7231",null,null],[12,"0","","",71,null],[3,"LastModified","","`Last-Modified` header, defined in RFC7232",null,null],[12,"0","","",72,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of CORS",null,null],[12,"0","","",73,null],[4,"Vary","","`Vary` header, defined in RFC7231",null,null],[13,"Any","","Any value is a match",74,null],[13,"Items","","Only the listed items are a match",74,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding` or `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",75,null],[13,"Gzip","","The `gzip` encoding.",75,null],[13,"Deflate","","The `deflate` encoding.",75,null],[13,"Compress","","The `compress` encoding.",75,null],[13,"Identity","","The `identity` encoding.",75,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",75,null],[3,"Headers","iron","A map of header fields on requests and responses.",null,null],[8,"Plugin","","An interface for plugins that cache values between calls.",null,null],[11,"get","","Return a copy of the plugin's produced value.",76,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"get_ref","","Return a reference to the plugin's produced value.",76,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"get_mut","","Return a mutable reference to the plugin's produced value.",76,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"compute","","Create and evaluate a once-off instance of a plugin.",76,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"Set","","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",77,{"i":[{"n":"self"},{"n":"m"}],"o":{"n":"self"}}],[11,"set_mut","","Modify self through a mutable reference with the provided modifier.",77,{"i":[{"n":"self"},{"n":"m"}],"o":{"n":"self"}}],[8,"Error","","`Error` is a trait representing the basic expectations for error values, i.e. values of type `E` in [`Result<T, E>`]. Errors must describe themselves through the [`Display`] and [`Debug`] traits, and may provide cause chain information:",null,null],[11,"description","","This method is soft-deprecated.",78,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","The lower-level cause of this error, if any.",78,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[0,"mime","","Re-exporting the mime crate, for convenience.",null,null],[4,"TopLevel","iron::mime","",null,null],[13,"Star","","",79,null],[13,"Text","","",79,null],[13,"Image","","",79,null],[13,"Audio","","",79,null],[13,"Video","","",79,null],[13,"Application","","",79,null],[13,"Multipart","","",79,null],[13,"Message","","",79,null],[13,"Model","","",79,null],[13,"Ext","","",79,null],[4,"Value","","",null,null],[13,"Utf8","","",80,null],[13,"Ext","","",80,null],[4,"Attr","","",null,null],[13,"Charset","","",81,null],[13,"Boundary","","",81,null],[13,"Q","","",81,null],[13,"Ext","","",81,null],[6,"Param","","",null,null],[4,"SubLevel","","",null,null],[13,"Star","","",82,null],[13,"Plain","","",82,null],[13,"Html","","",82,null],[13,"Xml","","",82,null],[13,"Javascript","","",82,null],[13,"Css","","",82,null],[13,"EventStream","","",82,null],[13,"Json","","",82,null],[13,"WwwFormUrlEncoded","","",82,null],[13,"Msgpack","","",82,null],[13,"OctetStream","","",82,null],[13,"FormData","","",82,null],[13,"Png","","",82,null],[13,"Gif","","",82,null],[13,"Bmp","","",82,null],[13,"Jpeg","","",82,null],[13,"Mpeg","","",82,null],[13,"Mp4","","",82,null],[13,"Ogg","","",82,null],[13,"Ext","","",82,null],[3,"Mime","","Mime, or Media Type. Encapsulates common registers types.",null,null],[12,"0","","",83,null],[12,"1","","",83,null],[12,"2","","",83,null],[3,"Url","iron","HTTP/HTTPS URL type for Iron.",null,null],[3,"Iron","","The primary entrance point to `Iron`, a `struct` to instantiate a new server.",null,null],[12,"handler","","Iron contains a `Handler`, which it uses to create responses for client requests.",84,null],[12,"timeouts","","Server timeouts.",84,null],[12,"threads","","The number of request handling threads.",84,null],[3,"Timeouts","","A settings struct containing a set of timeouts which can be applied to a server.",null,null],[12,"keep_alive","","Controls the timeout for keep alive connections.",85,null],[12,"read","","Controls the timeout for reads on existing connections.",85,null],[12,"write","","Controls the timeout for writes on existing connections.",85,null],[3,"Protocol","","Protocol used to serve content.",null,null],[0,"error","","Iron's error type and associated utilities.",null,null],[8,"Error","iron::error","`Error` is a trait representing the basic expectations for error values, i.e. values of type `E` in [`Result<T, E>`]. Errors must describe themselves through the [`Display`] and [`Debug`] traits, and may provide cause chain information:",null,null],[11,"description","","This method is soft-deprecated.",78,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","The lower-level cause of this error, if any.",78,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[4,"HttpError","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",86,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",86,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",86,null],[13,"Header","","An invalid `Header`.",86,null],[13,"TooLarge","","A message head is too large to be reasonable.",86,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",86,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",86,null],[13,"Ssl","","An error from a SSL library.",86,null],[13,"Utf8","","Parsing a field as string failed",86,null],[6,"HttpResult","","Result type often returned from methods that can have hyper `Error`s.",null,null],[3,"IronError","","The type of Errors inside and when using Iron.",null,null],[12,"error","","The underlying error",87,null],[12,"response","","What to do about this error.",87,null],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `IronError` from an error and a modifier.",87,{"i":[{"n":"e"},{"n":"m"}],"o":{"n":"ironerror"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"description","","",87,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",87,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[0,"prelude","iron","A module meant to be glob imported when using Iron.",null,null],[0,"typemap","","Re-exports from the `TypeMap` crate.",null,null],[3,"TypeMap","iron::typemap","A map keyed by types.",null,null],[8,"Key","","This trait defines the relationship between keys and values in a TypeMap.",null,null],[16,"Value","","The value type associated with this key type.",88,null],[0,"modifier","iron","Re-exports from the Modifier crate.",null,null],[8,"Modifier","iron::modifier","Allows use of the implemented type as an argument to Set::set.",null,null],[10,"modify","","Modify `F` with self.",89,null],[8,"Set","","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",77,{"i":[{"n":"self"},{"n":"m"}],"o":{"n":"self"}}],[11,"set_mut","","Modify self through a mutable reference with the provided modifier.",77,{"i":[{"n":"self"},{"n":"m"}],"o":{"n":"self"}}],[0,"url","iron","Re-exports from the url crate.",null,null],[0,"form_urlencoded","iron::url","Parser and serializer for the `application/x-www-form-urlencoded` syntax, as used by HTML forms.",null,null],[5,"parse","iron::url::form_urlencoded","Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.",null,null],[3,"Parse","","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.",null,null],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",90,{"i":[{"n":"self"}],"o":{"n":"string"}}],[10,"finish","","",90,null],[16,"Finished","","",90,null],[3,"Url","iron::url","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically not used directly.",null,null],[3,"SocketAddrs","","Socket addresses for an URL.",null,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",91,null],[13,"IdnaError","","",91,null],[13,"InvalidPort","","",91,null],[13,"InvalidIpv4Address","","",91,null],[13,"InvalidIpv6Address","","",91,null],[13,"InvalidDomainCharacter","","",91,null],[13,"RelativeUrlWithoutBase","","",91,null],[13,"RelativeUrlWithCannotBeABaseBase","","",91,null],[13,"SetHostOnCannotBeABaseUrl","","",91,null],[13,"Overflow","","",91,null],[8,"EncodeSet","iron::url::percent_encoding","Represents a set of characters / bytes that should be percent-encoded.",null,null],[10,"contains","","Called with UTF-8 bytes rather than code points. Should return true for all non-ASCII bytes.",92,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[3,"SIMPLE_ENCODE_SET","","This encode set is used for the path of cannot-be-a-base URLs.",null,null],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",null,null],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",null,{"i":[{"n":"u8"}],"o":{"n":"str"}}],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",null,null],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"i":[{"n":"str"},{"n":"e"}],"o":{"n":"percentencode"}}],[3,"PercentEncode","","The return type of `percent_encode()` and `utf8_percent_encode()`.",null,null],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[3,"PercentDecode","","The return type of `percent_decode()`.",null,null],[4,"Host","iron::url","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII labels are encoded in punycode per IDNA if this is the host of a special URL, or percent encoded for non-special URLs. Hosts for non-special URLs are also called opaque hosts.",93,null],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization of this address, as four decimal integers separated by `.` dots.",93,null],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization of that address between `[` and `]` brackets, in the format per RFC 5952 A Recommendation for IPv6 Address Text Representation: lowercase hexadecimal with maximal `::` compression.",93,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is not cannot-be-base.",null,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",94,null],[13,"AfterScheme","","",94,null],[13,"BeforeUsername","","",94,null],[13,"AfterUsername","","",94,null],[13,"BeforePassword","","",94,null],[13,"AfterPassword","","",94,null],[13,"BeforeHost","","",94,null],[13,"AfterHost","","",94,null],[13,"BeforePort","","",94,null],[13,"AfterPort","","",94,null],[13,"BeforePath","","",94,null],[13,"AfterPath","","",94,null],[13,"BeforeQuery","","",94,null],[13,"AfterQuery","","",94,null],[13,"BeforeFragment","","",94,null],[13,"AfterFragment","","",94,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",95,null],[13,"Tuple","","Consists of the URL's scheme, host and port",95,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",96,null],[13,"C0SpaceIgnored","","",96,null],[13,"EmbeddedCredentials","","",96,null],[13,"ExpectedDoubleSlash","","",96,null],[13,"ExpectedFileDoubleSlash","","",96,null],[13,"FileWithHostAndWindowsDrive","","",96,null],[13,"NonUrlCodePoint","","",96,null],[13,"NullInFragment","","",96,null],[13,"PercentDecode","","",96,null],[13,"TabOrNewlineIgnored","","",96,null],[13,"UnencodedAtSign","","",96,null],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us to implement `ToSocketAddrs for (Host<S>, u16)`.",null,null],[12,"host","","",97,null],[12,"port","","",97,null],[0,"punycode","iron::url::idna","Punycode (RFC 3492) implementation.",null,null],[5,"decode_to_string","iron::url::idna::punycode","Convert Punycode to an Unicode `String`.",null,{"i":[{"n":"str"}],"o":{"g":["string"],"n":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"i":[{"n":"str"}],"o":{"g":["vec"],"n":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"i":[{"n":"str"}],"o":{"g":["string"],"n":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"uts46","iron::url::idna","Unicode IDNA Compatibility Processing (Unicode Technical Standard #46)",null,null],[7,"PUNYCODE_PREFIX","iron::url::idna::uts46","",null,null],[3,"Flags","","",null,null],[12,"use_std3_ascii_rules","","",98,null],[12,"transitional_processing","","",98,null],[12,"verify_dns_length","","",98,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,{"i":[{"n":"str"},{"n":"flags"}],"o":{"g":["string","errors"],"n":"result"}}],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,null],[5,"domain_to_ascii","iron::url::idna","The domain to ASCII algorithm.",null,{"i":[{"n":"str"}],"o":{"g":["string","errors"],"n":"result"}}],[5,"domain_to_unicode","","The domain to Unicode algorithm.",null,null],[3,"OpaqueOrigin","iron::url","Opaque identifier for URLs that have file or other schemes",null,null],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",null,null],[0,"status","iron","Status Codes",null,null],[4,"Status","iron::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue [RFC7231, Section 6.2.1]",99,null],[13,"SwitchingProtocols","","101 Switching Protocols [RFC7231, Section 6.2.2]",99,null],[13,"Processing","","102 Processing [RFC2518]",99,null],[13,"Ok","","200 OK [RFC7231, Section 6.3.1]",99,null],[13,"Created","","201 Created [RFC7231, Section 6.3.2]",99,null],[13,"Accepted","","202 Accepted [RFC7231, Section 6.3.3]",99,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",99,null],[13,"NoContent","","204 No Content [RFC7231, Section 6.3.5]",99,null],[13,"ResetContent","","205 Reset Content [RFC7231, Section 6.3.6]",99,null],[13,"PartialContent","","206 Partial Content [RFC7233, Section 4.1]",99,null],[13,"MultiStatus","","207 Multi-Status [RFC4918]",99,null],[13,"AlreadyReported","","208 Already Reported [RFC5842]",99,null],[13,"ImUsed","","226 IM Used [RFC3229]",99,null],[13,"MultipleChoices","","300 Multiple Choices [RFC7231, Section 6.4.1]",99,null],[13,"MovedPermanently","","301 Moved Permanently [RFC7231, Section 6.4.2]",99,null],[13,"Found","","302 Found [RFC7231, Section 6.4.3]",99,null],[13,"SeeOther","","303 See Other [RFC7231, Section 6.4.4]",99,null],[13,"NotModified","","304 Not Modified [RFC7232, Section 4.1]",99,null],[13,"UseProxy","","305 Use Proxy [RFC7231, Section 6.4.5]",99,null],[13,"TemporaryRedirect","","307 Temporary Redirect [RFC7231, Section 6.4.7]",99,null],[13,"PermanentRedirect","","308 Permanent Redirect [RFC7238]",99,null],[13,"BadRequest","","400 Bad Request [RFC7231, Section 6.5.1]",99,null],[13,"Unauthorized","","401 Unauthorized [RFC7235, Section 3.1]",99,null],[13,"PaymentRequired","","402 Payment Required [RFC7231, Section 6.5.2]",99,null],[13,"Forbidden","","403 Forbidden [RFC7231, Section 6.5.3]",99,null],[13,"NotFound","","404 Not Found [RFC7231, Section 6.5.4]",99,null],[13,"MethodNotAllowed","","405 Method Not Allowed [RFC7231, Section 6.5.5]",99,null],[13,"NotAcceptable","","406 Not Acceptable [RFC7231, Section 6.5.6]",99,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required [RFC7235, Section 3.2]",99,null],[13,"RequestTimeout","","408 Request Timeout [RFC7231, Section 6.5.7]",99,null],[13,"Conflict","","409 Conflict [RFC7231, Section 6.5.8]",99,null],[13,"Gone","","410 Gone [RFC7231, Section 6.5.9]",99,null],[13,"LengthRequired","","411 Length Required [RFC7231, Section 6.5.10]",99,null],[13,"PreconditionFailed","","412 Precondition Failed [RFC7232, Section 4.2]",99,null],[13,"PayloadTooLarge","","413 Payload Too Large [RFC7231, Section 6.5.11]",99,null],[13,"UriTooLong","","414 URI Too Long [RFC7231, Section 6.5.12]",99,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",99,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable [RFC7233, Section 4.4]",99,null],[13,"ExpectationFailed","","417 Expectation Failed [RFC7231, Section 6.5.14]",99,null],[13,"ImATeapot","","418 I'm a teapot [curiously, not registered by IANA, but RFC2324]",99,null],[13,"MisdirectedRequest","","421 Misdirected Request RFC7540, Section 9.1.2",99,null],[13,"UnprocessableEntity","","422 Unprocessable Entity [RFC4918]",99,null],[13,"Locked","","423 Locked [RFC4918]",99,null],[13,"FailedDependency","","424 Failed Dependency [RFC4918]",99,null],[13,"UpgradeRequired","","426 Upgrade Required [RFC7231, Section 6.5.15]",99,null],[13,"PreconditionRequired","","428 Precondition Required [RFC6585]",99,null],[13,"TooManyRequests","","429 Too Many Requests [RFC6585]",99,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large [RFC6585]",99,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons [RFC7725]",99,null],[13,"InternalServerError","","500 Internal Server Error [RFC7231, Section 6.6.1]",99,null],[13,"NotImplemented","","501 Not Implemented [RFC7231, Section 6.6.2]",99,null],[13,"BadGateway","","502 Bad Gateway [RFC7231, Section 6.6.3]",99,null],[13,"ServiceUnavailable","","503 Service Unavailable [RFC7231, Section 6.6.4]",99,null],[13,"GatewayTimeout","","504 Gateway Timeout [RFC7231, Section 6.6.5]",99,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",99,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates [RFC2295]",99,null],[13,"InsufficientStorage","","507 Insufficient Storage [RFC4918]",99,null],[13,"LoopDetected","","508 Loop Detected [RFC5842]",99,null],[13,"NotExtended","","510 Not Extended [RFC2774]",99,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required [RFC6585]",99,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",99,null],[4,"StatusClass","","The class of an HTTP `status-code`.",null,null],[13,"Informational","","1xx (Informational): The request was received, continuing process",100,null],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",100,null],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",100,null],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",100,null],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",100,null],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",100,null],[0,"method","iron","HTTP Methods",null,null],[4,"Method","iron::method","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",101,null],[13,"Get","","GET",101,null],[13,"Post","","POST",101,null],[13,"Put","","PUT",101,null],[13,"Delete","","DELETE",101,null],[13,"Head","","HEAD",101,null],[13,"Trace","","TRACE",101,null],[13,"Connect","","CONNECT",101,null],[13,"Patch","","PATCH",101,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(\"FOO\".to_string())`.",101,null],[0,"middleware","iron","This module contains Iron's middleware and handler system, the fundamental building blocks for handling HTTP requests and generating responses.",null,null],[3,"Chain","iron::middleware","The middleware chain used in Iron.",null,null],[8,"Handler","","`Handler`s are responsible for handling requests by creating Responses from Requests.",null,null],[10,"handle","","Produce a `Response` from a Request, with the possibility of error.",102,{"i":[{"n":"self"},{"n":"request"}],"o":{"g":["response"],"n":"ironresult"}}],[8,"BeforeMiddleware","","`BeforeMiddleware` are fired before a `Handler` is called inside of a Chain.",null,null],[11,"before","","Do whatever work this middleware should do with a `Request` object.",103,{"i":[{"n":"self"},{"n":"request"}],"o":{"n":"ironresult"}}],[11,"catch","","Respond to an error thrown by a previous `BeforeMiddleware`.",103,{"i":[{"n":"self"},{"n":"request"},{"n":"ironerror"}],"o":{"n":"ironresult"}}],[8,"AfterMiddleware","","`AfterMiddleware` are fired after a `Handler` is called inside of a Chain.",null,null],[11,"after","","Do whatever post-processing this middleware should do.",104,{"i":[{"n":"self"},{"n":"request"},{"n":"response"}],"o":{"g":["response"],"n":"ironresult"}}],[11,"catch","","Respond to an error thrown by previous `AfterMiddleware`, the `Handler`, or a `BeforeMiddleware`.",104,{"i":[{"n":"self"},{"n":"request"},{"n":"ironerror"}],"o":{"g":["response"],"n":"ironresult"}}],[8,"AroundMiddleware","","`AroundMiddleware` are used to wrap and replace the `Handler` in a `Chain`.",null,null],[10,"around","","Produce a `Handler` from this `AroundMiddleware` given another `Handler`.",105,{"i":[{"n":"self"},{"g":["handler"],"n":"box"}],"o":{"g":["handler"],"n":"box"}}],[11,"new","","Construct a new ChainBuilder from a `Handler`.",106,{"i":[{"n":"h"}],"o":{"n":"chain"}}],[11,"link","","Link both a before and after middleware to the chain at once.",106,null],[11,"link_before","","Link a `BeforeMiddleware` to the `Chain`, after all previously linked `BeforeMiddleware`.",106,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"chain"}}],[11,"link_after","","Link a `AfterMiddleware` to the `Chain`, after all previously linked `AfterMiddleware`.",106,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"chain"}}],[11,"around","","Apply an `AroundMiddleware` to the `Handler` in this `Chain`.",106,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"chain"}}],[11,"link_around","","Apply an `AroundMiddleware` to the `Handler` in this `Chain`.",106,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"chain"}}],[11,"handle","","",106,{"i":[{"n":"self"},{"n":"request"}],"o":{"g":["response"],"n":"ironresult"}}],[0,"response","iron","Iron's HTTP Response representation and associated methods.",null,null],[3,"HttpResponse","iron::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`.",null,null],[12,"version","","The HTTP version of this response.",107,null],[3,"BodyReader","","Wrapper type to set `Read`ers as response bodies",null,null],[12,"0","","",108,null],[3,"Response","","The response representation given to `Middleware`",null,null],[12,"status","","The response status-code.",109,null],[12,"headers","","The headers of the response.",109,null],[12,"extensions","","A TypeMap to be used as an extensible storage for data associated with this Response.",109,null],[12,"body","","The body of the response.",109,null],[8,"WriteBody","","A trait which writes the body of an HTTP response.",null,null],[10,"write_body","","Writes the body to the provided `Write`.",110,{"i":[{"n":"self"},{"n":"write"}],"o":{"n":"result"}}],[11,"write_body","","",108,{"i":[{"n":"self"},{"n":"write"}],"o":{"n":"result"}}],[11,"new","","Construct a blank Response",109,{"o":{"n":"response"}}],[11,"with","","Construct a Response with the specified modifier pre-applied.",109,{"i":[{"n":"m"}],"o":{"n":"response"}}],[11,"fmt","","",109,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",109,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"extensions","","",109,{"i":[{"n":"self"}],"o":{"n":"typemap"}}],[11,"extensions_mut","","",109,{"i":[{"n":"self"}],"o":{"n":"typemap"}}],[0,"request","iron","Iron's HTTP Request representation and associated methods.",null,null],[3,"HttpRequest","iron::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[12,"remote_addr","","The IP address of the remote connection.",111,null],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",111,null],[12,"headers","","The headers of the incoming request.",111,null],[12,"uri","","The target request-uri for this request.",111,null],[12,"version","","The version of HTTP for this request.",111,null],[3,"Url","","HTTP/HTTPS URL type for Iron.",null,null],[3,"Request","","The `Request` given to all `Middleware`.",null,null],[12,"url","","The requested URL.",112,null],[12,"remote_addr","","The originating address of the request.",112,null],[12,"local_addr","","The local address of the request.",112,null],[12,"headers","","The request headers.",112,null],[12,"body","","The request body as a reader.",112,null],[12,"method","","The request method.",112,null],[12,"extensions","","Extensible storage for data passed between middleware.",112,null],[12,"version","","The version of the HTTP protocol used.",112,null],[3,"Body","","The body of an Iron request,",null,null],[11,"eq","iron","",113,{"i":[{"n":"self"},{"n":"url"}],"o":{"n":"bool"}}],[11,"ne","","",113,{"i":[{"n":"self"},{"n":"url"}],"o":{"n":"bool"}}],[11,"clone","","",113,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"fmt","","",113,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"parse","","Create a URL from a string.",113,{"i":[{"n":"str"}],"o":{"g":["url","string"],"n":"result"}}],[11,"from_generic_url","","Create a `Url` from a `rust-url` `Url`.",113,{"i":[{"n":"url"}],"o":{"g":["url","string"],"n":"result"}}],[11,"into_generic_url","","Create a `rust-url` `Url` from a `Url`.",113,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"scheme","","The lower-cased scheme of the URL, typically \"http\" or \"https\".",113,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"host","","The host field of the URL, probably a domain.",113,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"host"}}],[11,"port","","The connection port.",113,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"path","","The URL path, the resource to be accessed.",113,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"vec"}}],[11,"username","","The URL username field, from the userinfo section of the URL.",113,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"password","","The URL password field, from the userinfo section of the URL.",113,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"query","","The URL query string.",113,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"fragment","","The URL fragment.",113,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"fmt","","",113,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into","","",113,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"as_ref","","",113,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"as_mut","","",113,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"from_str","","",113,{"i":[{"n":"str"}],"o":{"g":["url"],"n":"result"}}],[11,"fmt","iron::request","",112,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_http","","Create a request from an HttpRequest.",112,{"i":[{"n":"httprequest"},{"n":"socketaddr"},{"n":"protocol"}],"o":{"g":["request","string"],"n":"result"}}],[11,"new","","Create a new reader for use in an Iron request from a hyper HttpReader.",114,{"i":[{"g":["bufreader"],"n":"httpreader"}],"o":{"n":"body"}}],[11,"read","","",114,null],[11,"extensions","","",112,{"i":[{"n":"self"}],"o":{"n":"typemap"}}],[11,"extensions_mut","","",112,{"i":[{"n":"self"}],"o":{"n":"typemap"}}],[0,"modifiers","iron","This module defines a series of convenience modifiers for changing Responses.",null,null],[3,"Header","iron::modifiers","A modifier for changing headers on requests and responses.",null,null],[12,"0","","",115,null],[3,"Redirect","","A modifier for creating redirect responses.",null,null],[12,"0","","",116,null],[3,"RedirectRaw","","A modifier for creating redirect responses.",null,null],[12,"0","","",117,null],[11,"modify","iron::mime","",83,{"i":[{"n":"self"},{"n":"response"}]}],[11,"modify","iron::response","",108,{"i":[{"n":"self"},{"n":"response"}]}],[11,"modify","iron::status","",99,{"i":[{"n":"self"},{"n":"response"}]}],[11,"clone","iron::modifiers","",115,{"i":[{"n":"self"}],"o":{"n":"header"}}],[11,"modify","","",115,{"i":[{"n":"self"},{"n":"response"}]}],[11,"modify","","",115,{"i":[{"n":"self"},{"n":"request"}]}],[11,"modify","","",116,{"i":[{"n":"self"},{"n":"response"}]}],[11,"modify","","",117,{"i":[{"n":"self"},{"n":"response"}]}],[11,"fmt","iron","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",85,{"i":[{"n":"self"},{"n":"timeouts"}],"o":{"n":"bool"}}],[11,"ne","","",85,{"i":[{"n":"self"},{"n":"timeouts"}],"o":{"n":"bool"}}],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"timeouts"}}],[11,"default","","",85,{"o":{"n":"self"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"protocol"}}],[11,"http","","Plaintext HTTP/1",118,{"o":{"n":"protocol"}}],[11,"https","","HTTP/1 over SSL/TLS",118,{"o":{"n":"protocol"}}],[11,"name","","Returns the name used for this protocol in a URI's scheme part.",118,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"new","","Instantiate a new instance of `Iron`.",84,{"i":[{"n":"h"}],"o":{"n":"iron"}}],[11,"http","","Kick off the server process using the HTTP protocol.",84,{"i":[{"n":"self"},{"n":"a"}],"o":{"g":["listening"],"n":"httpresult"}}],[11,"https","","Kick off the server process using the HTTPS protocol.",84,{"i":[{"n":"self"},{"n":"a"},{"n":"s"}],"o":{"g":["listening"],"n":"httpresult"}}],[11,"listen","","Kick off a server process on an arbitrary `Listener`.",84,{"i":[{"n":"self"},{"n":"l"},{"n":"protocol"}],"o":{"g":["listening"],"n":"httpresult"}}],[6,"IronResult","","The Result alias used throughout Iron and in clients of Iron.",null,null],[14,"itry","","Like `try!()`, but wraps the error value in `IronError`. To be used in request handlers.",null,null],[14,"iexpect","","Unwrap the given `Option` or return a `Ok(Response::new())` with the given modifier. The default modifier is `status::BadRequest`.",null,null],[11,"close","","Warning: This function doesn't work. The server remains listening after you called it. See https://github.com/hyperium/hyper/issues/338 for more details.",0,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"as_ref","iron::method","",101,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"scheme","iron::headers","",40,{"o":{"g":["str"],"n":"option"}}],[11,"fmt_scheme","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"scheme","","",25,{"o":{"g":["str"],"n":"option"}}],[11,"fmt_scheme","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"from","iron::error","",86,{"i":[{"n":"parseerror"}],"o":{"n":"error"}}],[11,"from","","",86,{"i":[{"n":"error"}],"o":{"n":"error"}}],[11,"from","","",86,{"i":[{"n":"fromutf8error"}],"o":{"n":"error"}}],[11,"from","","",86,{"i":[{"n":"error"}],"o":{"n":"error"}}],[11,"from","","",86,{"i":[{"n":"utf8error"}],"o":{"n":"error"}}],[11,"fmt","iron::headers","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",119,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",121,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron","",122,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::error","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::status","",99,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::method","",101,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers::parsing","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"write","iron::response","",107,null],[11,"flush","","",107,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"into_url","iron::url","",124,{"i":[{"n":"self"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"eq","iron::headers","",9,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"bool"}}],[11,"ne","","",9,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"bool"}}],[11,"eq","","",49,{"i":[{"n":"self"},{"n":"accesscontrolmaxage"}],"o":{"n":"bool"}}],[11,"ne","","",49,{"i":[{"n":"self"},{"n":"accesscontrolmaxage"}],"o":{"n":"bool"}}],[11,"eq","","",67,{"i":[{"n":"self"},{"n":"acceptcharset"}],"o":{"n":"bool"}}],[11,"ne","","",67,{"i":[{"n":"self"},{"n":"acceptcharset"}],"o":{"n":"bool"}}],[11,"eq","","",60,{"i":[{"n":"self"},{"n":"contentlength"}],"o":{"n":"bool"}}],[11,"ne","","",60,{"i":[{"n":"self"},{"n":"contentlength"}],"o":{"n":"bool"}}],[11,"eq","","",63,{"i":[{"n":"self"},{"n":"ifmatch"}],"o":{"n":"bool"}}],[11,"ne","","",63,{"i":[{"n":"self"},{"n":"ifmatch"}],"o":{"n":"bool"}}],[11,"eq","","",48,{"i":[{"n":"self"},{"n":"cachecontrol"}],"o":{"n":"bool"}}],[11,"ne","","",48,{"i":[{"n":"self"},{"n":"cachecontrol"}],"o":{"n":"bool"}}],[11,"eq","","",38,{"i":[{"n":"self"},{"n":"acceptencoding"}],"o":{"n":"bool"}}],[11,"ne","","",38,{"i":[{"n":"self"},{"n":"acceptencoding"}],"o":{"n":"bool"}}],[11,"eq","","",43,{"i":[{"n":"self"},{"n":"charset"}],"o":{"n":"bool"}}],[11,"ne","","",43,{"i":[{"n":"self"},{"n":"charset"}],"o":{"n":"bool"}}],[11,"eq","","",120,{"i":[{"n":"self"},{"n":"link"}],"o":{"n":"bool"}}],[11,"ne","","",120,{"i":[{"n":"self"},{"n":"link"}],"o":{"n":"bool"}}],[11,"eq","","",54,{"i":[{"n":"self"},{"n":"ifnonematch"}],"o":{"n":"bool"}}],[11,"ne","","",54,{"i":[{"n":"self"},{"n":"ifnonematch"}],"o":{"n":"bool"}}],[11,"eq","","",71,{"i":[{"n":"self"},{"n":"contentlanguage"}],"o":{"n":"bool"}}],[11,"ne","","",71,{"i":[{"n":"self"},{"n":"contentlanguage"}],"o":{"n":"bool"}}],[11,"eq","","",39,{"i":[{"n":"self"},{"n":"protocolname"}],"o":{"n":"bool"}}],[11,"ne","","",39,{"i":[{"n":"self"},{"n":"protocolname"}],"o":{"n":"bool"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"authorization"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"authorization"}],"o":{"n":"bool"}}],[11,"eq","","",61,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"ne","","",61,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"eq","iron::status","",99,{"i":[{"n":"self"},{"n":"statuscode"}],"o":{"n":"bool"}}],[11,"eq","iron::headers","",64,{"i":[{"n":"self"},{"n":"accesscontrolrequestheaders"}],"o":{"n":"bool"}}],[11,"ne","","",64,{"i":[{"n":"self"},{"n":"accesscontrolrequestheaders"}],"o":{"n":"bool"}}],[11,"eq","","",57,{"i":[{"n":"self"},{"n":"accesscontrolallowmethods"}],"o":{"n":"bool"}}],[11,"ne","","",57,{"i":[{"n":"self"},{"n":"accesscontrolallowmethods"}],"o":{"n":"bool"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"connectionoption"}],"o":{"n":"bool"}}],[11,"ne","","",13,{"i":[{"n":"self"},{"n":"connectionoption"}],"o":{"n":"bool"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"preferenceapplied"}],"o":{"n":"bool"}}],[11,"ne","","",15,{"i":[{"n":"self"},{"n":"preferenceapplied"}],"o":{"n":"bool"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"from"}],"o":{"n":"bool"}}],[11,"ne","","",12,{"i":[{"n":"self"},{"n":"from"}],"o":{"n":"bool"}}],[11,"eq","","",23,{"i":[{"n":"self"},{"n":"ifrange"}],"o":{"n":"bool"}}],[11,"ne","","",23,{"i":[{"n":"self"},{"n":"ifrange"}],"o":{"n":"bool"}}],[11,"eq","iron::headers::parsing","",1,{"i":[{"n":"self"},{"n":"extendedvalue"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"extendedvalue"}],"o":{"n":"bool"}}],[11,"eq","iron::headers","",18,{"i":[{"n":"self"},{"n":"transferencoding"}],"o":{"n":"bool"}}],[11,"ne","","",18,{"i":[{"n":"self"},{"n":"transferencoding"}],"o":{"n":"bool"}}],[11,"eq","","",68,{"i":[{"n":"self"},{"n":"stricttransportsecurity"}],"o":{"n":"bool"}}],[11,"ne","","",68,{"i":[{"n":"self"},{"n":"stricttransportsecurity"}],"o":{"n":"bool"}}],[11,"eq","","",25,{"i":[{"n":"self"},{"n":"bearer"}],"o":{"n":"bool"}}],[11,"ne","","",25,{"i":[{"n":"self"},{"n":"bearer"}],"o":{"n":"bool"}}],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"byterangespec"}],"o":{"n":"bool"}}],[11,"ne","","",28,{"i":[{"n":"self"},{"n":"byterangespec"}],"o":{"n":"bool"}}],[11,"eq","","",32,{"i":[{"n":"self"},{"n":"cookie"}],"o":{"n":"bool"}}],[11,"ne","","",32,{"i":[{"n":"self"},{"n":"cookie"}],"o":{"n":"bool"}}],[11,"eq","","",40,{"i":[{"n":"self"},{"n":"basic"}],"o":{"n":"bool"}}],[11,"ne","","",40,{"i":[{"n":"self"},{"n":"basic"}],"o":{"n":"bool"}}],[11,"eq","","",34,{"i":[{"n":"self"},{"n":"pragma"}],"o":{"n":"bool"}}],[11,"ne","","",34,{"i":[{"n":"self"},{"n":"pragma"}],"o":{"n":"bool"}}],[11,"eq","","",119,{"i":[{"n":"self"},{"n":"linkvalue"}],"o":{"n":"bool"}}],[11,"ne","","",119,{"i":[{"n":"self"},{"n":"linkvalue"}],"o":{"n":"bool"}}],[11,"eq","","",75,{"i":[{"n":"self"},{"n":"encoding"}],"o":{"n":"bool"}}],[11,"ne","","",75,{"i":[{"n":"self"},{"n":"encoding"}],"o":{"n":"bool"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"useragent"}],"o":{"n":"bool"}}],[11,"ne","","",17,{"i":[{"n":"self"},{"n":"useragent"}],"o":{"n":"bool"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"contenttype"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"contenttype"}],"o":{"n":"bool"}}],[11,"eq","iron","",122,{"i":[{"n":"self"},{"n":"headers"}],"o":{"n":"bool"}}],[11,"eq","iron::headers","",26,{"i":[{"n":"self"},{"n":"allow"}],"o":{"n":"bool"}}],[11,"ne","","",26,{"i":[{"n":"self"},{"n":"allow"}],"o":{"n":"bool"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"upgrade"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"upgrade"}],"o":{"n":"bool"}}],[11,"eq","","",66,{"i":[{"n":"self"},{"n":"contentdisposition"}],"o":{"n":"bool"}}],[11,"ne","","",66,{"i":[{"n":"self"},{"n":"contentdisposition"}],"o":{"n":"bool"}}],[11,"eq","","",73,{"i":[{"n":"self"},{"n":"accesscontrolallowheaders"}],"o":{"n":"bool"}}],[11,"ne","","",73,{"i":[{"n":"self"},{"n":"accesscontrolallowheaders"}],"o":{"n":"bool"}}],[11,"eq","","",47,{"i":[{"n":"self"},{"n":"rangeunit"}],"o":{"n":"bool"}}],[11,"ne","","",47,{"i":[{"n":"self"},{"n":"rangeunit"}],"o":{"n":"bool"}}],[11,"eq","","",55,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"ne","","",55,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"eq","","",59,{"i":[{"n":"self"},{"n":"connection"}],"o":{"n":"bool"}}],[11,"ne","","",59,{"i":[{"n":"self"},{"n":"connection"}],"o":{"n":"bool"}}],[11,"eq","","",30,{"i":[{"n":"self"},{"n":"etag"}],"o":{"n":"bool"}}],[11,"ne","","",30,{"i":[{"n":"self"},{"n":"etag"}],"o":{"n":"bool"}}],[11,"eq","","",33,{"i":[{"n":"self"},{"n":"ifmodifiedsince"}],"o":{"n":"bool"}}],[11,"ne","","",33,{"i":[{"n":"self"},{"n":"ifmodifiedsince"}],"o":{"n":"bool"}}],[11,"eq","","",14,{"i":[{"n":"self"},{"n":"origin"}],"o":{"n":"bool"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"relationtype"}],"o":{"n":"bool"}}],[11,"ne","","",27,{"i":[{"n":"self"},{"n":"relationtype"}],"o":{"n":"bool"}}],[11,"eq","","",29,{"i":[{"n":"self"},{"n":"protocol"}],"o":{"n":"bool"}}],[11,"ne","","",29,{"i":[{"n":"self"},{"n":"protocol"}],"o":{"n":"bool"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"location"}],"o":{"n":"bool"}}],[11,"ne","","",11,{"i":[{"n":"self"},{"n":"location"}],"o":{"n":"bool"}}],[11,"eq","","",35,{"i":[{"n":"self"},{"n":"cachedirective"}],"o":{"n":"bool"}}],[11,"ne","","",35,{"i":[{"n":"self"},{"n":"cachedirective"}],"o":{"n":"bool"}}],[11,"eq","","",37,{"i":[{"n":"self"},{"n":"ifunmodifiedsince"}],"o":{"n":"bool"}}],[11,"ne","","",37,{"i":[{"n":"self"},{"n":"ifunmodifiedsince"}],"o":{"n":"bool"}}],[11,"eq","","",36,{"i":[{"n":"self"},{"n":"server"}],"o":{"n":"bool"}}],[11,"ne","","",36,{"i":[{"n":"self"},{"n":"server"}],"o":{"n":"bool"}}],[11,"eq","","",74,{"i":[{"n":"self"},{"n":"vary"}],"o":{"n":"bool"}}],[11,"ne","","",74,{"i":[{"n":"self"},{"n":"vary"}],"o":{"n":"bool"}}],[11,"eq","","",44,{"i":[{"n":"self"},{"n":"qualityitem"}],"o":{"n":"bool"}}],[11,"ne","","",44,{"i":[{"n":"self"},{"n":"qualityitem"}],"o":{"n":"bool"}}],[11,"eq","","",62,{"i":[{"n":"self"},{"n":"acceptlanguage"}],"o":{"n":"bool"}}],[11,"ne","","",62,{"i":[{"n":"self"},{"n":"acceptlanguage"}],"o":{"n":"bool"}}],[11,"eq","","",51,{"i":[{"n":"self"},{"n":"referer"}],"o":{"n":"bool"}}],[11,"ne","","",51,{"i":[{"n":"self"},{"n":"referer"}],"o":{"n":"bool"}}],[11,"eq","iron::status","",100,{"i":[{"n":"self"},{"n":"statusclass"}],"o":{"n":"bool"}}],[11,"eq","iron::headers","",20,{"i":[{"n":"self"},{"n":"contentrange"}],"o":{"n":"bool"}}],[11,"ne","","",20,{"i":[{"n":"self"},{"n":"contentrange"}],"o":{"n":"bool"}}],[11,"eq","","",123,{"i":[{"n":"self"},{"n":"accesscontrolallowcredentials"}],"o":{"n":"bool"}}],[11,"eq","","",31,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"ne","","",31,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"acceptranges"}],"o":{"n":"bool"}}],[11,"ne","","",16,{"i":[{"n":"self"},{"n":"acceptranges"}],"o":{"n":"bool"}}],[11,"eq","","",56,{"i":[{"n":"self"},{"n":"contentencoding"}],"o":{"n":"bool"}}],[11,"ne","","",56,{"i":[{"n":"self"},{"n":"contentencoding"}],"o":{"n":"bool"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"preference"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"preference"}],"o":{"n":"bool"}}],[11,"eq","iron::method","",101,{"i":[{"n":"self"},{"n":"method"}],"o":{"n":"bool"}}],[11,"ne","","",101,{"i":[{"n":"self"},{"n":"method"}],"o":{"n":"bool"}}],[11,"eq","iron::headers","",45,{"i":[{"n":"self"},{"n":"accesscontrolrequestmethod"}],"o":{"n":"bool"}}],[11,"ne","","",45,{"i":[{"n":"self"},{"n":"accesscontrolrequestmethod"}],"o":{"n":"bool"}}],[11,"eq","","",65,{"i":[{"n":"self"},{"n":"referrerpolicy"}],"o":{"n":"bool"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"mediadesc"}],"o":{"n":"bool"}}],[11,"ne","","",21,{"i":[{"n":"self"},{"n":"mediadesc"}],"o":{"n":"bool"}}],[11,"eq","","",52,{"i":[{"n":"self"},{"n":"prefer"}],"o":{"n":"bool"}}],[11,"ne","","",52,{"i":[{"n":"self"},{"n":"prefer"}],"o":{"n":"bool"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"contentrangespec"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"contentrangespec"}],"o":{"n":"bool"}}],[11,"eq","","",42,{"i":[{"n":"self"},{"n":"expires"}],"o":{"n":"bool"}}],[11,"ne","","",42,{"i":[{"n":"self"},{"n":"expires"}],"o":{"n":"bool"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"accesscontrolalloworigin"}],"o":{"n":"bool"}}],[11,"ne","","",46,{"i":[{"n":"self"},{"n":"accesscontrolalloworigin"}],"o":{"n":"bool"}}],[11,"eq","","",24,{"i":[{"n":"self"},{"n":"dispositiontype"}],"o":{"n":"bool"}}],[11,"ne","","",24,{"i":[{"n":"self"},{"n":"dispositiontype"}],"o":{"n":"bool"}}],[11,"eq","","",19,{"i":[{"n":"self"},{"n":"setcookie"}],"o":{"n":"bool"}}],[11,"ne","","",19,{"i":[{"n":"self"},{"n":"setcookie"}],"o":{"n":"bool"}}],[11,"eq","","",58,{"i":[{"n":"self"},{"n":"expect"}],"o":{"n":"bool"}}],[11,"eq","","",69,{"i":[{"n":"self"},{"n":"accept"}],"o":{"n":"bool"}}],[11,"ne","","",69,{"i":[{"n":"self"},{"n":"accept"}],"o":{"n":"bool"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"accesscontrolexposeheaders"}],"o":{"n":"bool"}}],[11,"ne","","",22,{"i":[{"n":"self"},{"n":"accesscontrolexposeheaders"}],"o":{"n":"bool"}}],[11,"eq","","",70,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"ne","","",70,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"eq","","",72,{"i":[{"n":"self"},{"n":"lastmodified"}],"o":{"n":"bool"}}],[11,"ne","","",72,{"i":[{"n":"self"},{"n":"lastmodified"}],"o":{"n":"bool"}}],[11,"eq","","",50,{"i":[{"n":"self"},{"n":"dispositionparam"}],"o":{"n":"bool"}}],[11,"ne","","",50,{"i":[{"n":"self"},{"n":"dispositionparam"}],"o":{"n":"bool"}}],[11,"eq","","",41,{"i":[{"n":"self"},{"n":"range"}],"o":{"n":"bool"}}],[11,"ne","","",41,{"i":[{"n":"self"},{"n":"range"}],"o":{"n":"bool"}}],[11,"deref_mut","","",20,{"i":[{"n":"self"}],"o":{"n":"contentrangespec"}}],[11,"deref_mut","","",19,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",51,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",11,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",49,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"deref_mut","","",16,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",48,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",22,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",60,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"deref_mut","","",62,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",30,{"i":[{"n":"self"}],"o":{"n":"entitytag"}}],[11,"deref_mut","","",67,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",18,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",73,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",56,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",37,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref_mut","","",12,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",36,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",5,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",17,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",7,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"deref_mut","","",52,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",69,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",72,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref_mut","","",33,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref_mut","","",38,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",71,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",26,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",45,{"i":[{"n":"self"}],"o":{"n":"method"}}],[11,"deref_mut","","",57,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",15,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",9,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref_mut","","",59,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",32,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",10,{"i":[{"n":"self"}],"o":{"n":"mime"}}],[11,"deref_mut","","",64,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",42,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"authorization"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"preferenceapplied"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"protocol"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"stricttransportsecurity"}}],[11,"clone","","",119,{"i":[{"n":"self"}],"o":{"n":"linkvalue"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"accesscontrolalloworigin"}}],[11,"clone","iron::status","",100,{"i":[{"n":"self"}],"o":{"n":"statusclass"}}],[11,"clone","iron::headers","",44,{"i":[{"n":"self"}],"o":{"n":"qualityitem"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"relationtype"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"accesscontrolallowmethods"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"accesscontrolallowheaders"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"contentrange"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"allow"}}],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"entitytag"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"transferencoding"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"server"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"accesscontrolrequestheaders"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"location"}}],[11,"clone","iron::headers::parsing","",125,{"i":[{"n":"self"}],"o":{"n":"http_value"}}],[11,"clone","iron::headers","",48,{"i":[{"n":"self"}],"o":{"n":"cachecontrol"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"rangeunit"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"accesscontrolrequestmethod"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"ifrange"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"acceptranges"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"accesscontrolmaxage"}}],[11,"clone","","",120,{"i":[{"n":"self"}],"o":{"n":"link"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"accesscontrolexposeheaders"}}],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"contentlength"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"ifnonematch"}}],[11,"clone","iron","",122,{"i":[{"n":"self"}],"o":{"n":"headers"}}],[11,"clone","iron::headers","",9,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"acceptcharset"}}],[11,"clone","iron::status","",99,{"i":[{"n":"self"}],"o":{"n":"statuscode"}}],[11,"clone","iron::headers","",58,{"i":[{"n":"self"}],"o":{"n":"expect"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"contentencoding"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"contentdisposition"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"referrerpolicy"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"bearer"}}],[11,"clone","iron::headers::parsing","",1,{"i":[{"n":"self"}],"o":{"n":"extendedvalue"}}],[11,"clone","iron::headers","",63,{"i":[{"n":"self"}],"o":{"n":"ifmatch"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"dispositiontype"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"acceptencoding"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"charset"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"connectionoption"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"protocolname"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"contentrangespec"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"prefer"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"origin"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"dispositionparam"}}],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"etag"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"ifunmodifiedsince"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"cookie"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"contenttype"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"setcookie"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"cachedirective"}}],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"lastmodified"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"host"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"accept"}}],[11,"clone","","",123,{"i":[{"n":"self"}],"o":{"n":"accesscontrolallowcredentials"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"acceptlanguage"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"connection"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"upgrade"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"ifmodifiedsince"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"range"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"contentlanguage"}}],[11,"clone","iron::method","",101,{"i":[{"n":"self"}],"o":{"n":"method"}}],[11,"clone","iron::headers","",74,{"i":[{"n":"self"}],"o":{"n":"vary"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"useragent"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"mediadesc"}}],[11,"clone","","",75,{"i":[{"n":"self"}],"o":{"n":"encoding"}}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"referer"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"quality"}}],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"expires"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"from"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"pragma"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"preference"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"byterangespec"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"basic"}}],[11,"description","iron::error","",86,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",86,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"from_str","iron::headers","",35,{"i":[{"n":"str"}],"o":{"g":["cachedirective","option"],"n":"result"}}],[11,"from_str","","",120,{"i":[{"n":"str"}],"o":{"g":["link","error"],"n":"result"}}],[11,"from_str","","",61,{"i":[{"n":"str"}],"o":{"g":["httpdate","error"],"n":"result"}}],[11,"from_str","iron::method","",101,{"i":[{"n":"str"}],"o":{"g":["method","error"],"n":"result"}}],[11,"from_str","iron::headers","",28,{"i":[{"n":"str"}],"o":{"g":["byterangespec","error"],"n":"result"}}],[11,"from_str","","",29,{"i":[{"n":"str"}],"o":{"g":["protocol"],"n":"result"}}],[11,"from_str","","",25,{"i":[{"n":"str"}],"o":{"g":["bearer","error"],"n":"result"}}],[11,"from_str","","",43,{"i":[{"n":"str"}],"o":{"g":["charset","error"],"n":"result"}}],[11,"from_str","","",21,{"i":[{"n":"str"}],"o":{"g":["mediadesc","error"],"n":"result"}}],[11,"from_str","","",6,{"i":[{"n":"str"}],"o":{"g":["contentrangespec","error"],"n":"result"}}],[11,"from_str","","",39,{"i":[{"n":"str"}],"o":{"g":["protocolname"],"n":"result"}}],[11,"from_str","","",13,{"i":[{"n":"str"}],"o":{"g":["connectionoption"],"n":"result"}}],[11,"from_str","","",68,{"i":[{"n":"str"}],"o":{"g":["stricttransportsecurity","error"],"n":"result"}}],[11,"from_str","","",70,{"i":[{"n":"str"}],"o":{"g":["entitytag","error"],"n":"result"}}],[11,"from_str","","",41,{"i":[{"n":"str"}],"o":{"g":["range","error"],"n":"result"}}],[11,"from_str","","",40,{"i":[{"n":"str"}],"o":{"g":["basic","error"],"n":"result"}}],[11,"from_str","","",55,{"i":[{"n":"str"}],"o":{"g":["host","error"],"n":"result"}}],[11,"from_str","","",75,{"i":[{"n":"str"}],"o":{"g":["encoding","error"],"n":"result"}}],[11,"from_str","","",27,{"i":[{"n":"str"}],"o":{"g":["relationtype","error"],"n":"result"}}],[11,"from_str","","",8,{"i":[{"n":"str"}],"o":{"g":["preference","option"],"n":"result"}}],[11,"from_str","","",44,{"i":[{"n":"str"}],"o":{"g":["qualityitem","error"],"n":"result"}}],[11,"from_str","","",47,{"i":[{"n":"str"}],"o":{"g":["rangeunit","error"],"n":"result"}}],[11,"from_str","","",14,{"i":[{"n":"str"}],"o":{"g":["origin","error"],"n":"result"}}],[11,"cmp","iron::status","",99,{"i":[{"n":"self"},{"n":"statuscode"}],"o":{"n":"ordering"}}],[11,"cmp","iron::headers","",31,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"ordering"}}],[11,"cmp","iron::status","",100,{"i":[{"n":"self"},{"n":"statusclass"}],"o":{"n":"ordering"}}],[11,"cmp","iron::headers","",61,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"ordering"}}],[11,"from_iter","iron","",122,{"i":[{"n":"i"}],"o":{"n":"headers"}}],[11,"default","iron::headers","",31,{"o":{"n":"quality"}}],[11,"next","","",126,{"i":[{"n":"self"}],"o":{"g":["headerview"],"n":"option"}}],[11,"deref","","",59,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",18,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",11,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref","","",38,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",60,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"deref","","",64,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",32,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",5,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",7,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"deref","","",72,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref","","",57,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",36,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref","","",71,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",17,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref","","",37,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"get_param","iron::mime","",83,{"i":[{"n":"self"},{"n":"a"}],"o":{"g":["value"],"n":"option"}}],[11,"deref","iron::headers","",10,{"i":[{"n":"self"}],"o":{"n":"mime"}}],[11,"deref","","",69,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",12,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref","","",56,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",42,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref","","",20,{"i":[{"n":"self"}],"o":{"n":"contentrangespec"}}],[11,"deref","","",15,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",19,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"new","","Constructs a new EntityTag. # Panics If the tag contains invalid characters.",70,{"i":[{"n":"bool"},{"n":"string"}],"o":{"n":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag. # Panics If the tag contains invalid characters.",70,{"i":[{"n":"string"}],"o":{"n":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag. # Panics If the tag contains invalid characters.",70,{"i":[{"n":"string"}],"o":{"n":"entitytag"}}],[11,"tag","","Get the tag.",70,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"set_tag","","Set the tag. # Panics If the tag contains invalid characters.",70,null],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their opaque-tags match character-by-character.",70,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their opaque-tags match character-by-character, regardless of either or both being tagged as \"weak\".",70,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",70,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",70,{"i":[{"n":"self"},{"n":"entitytag"}],"o":{"n":"bool"}}],[11,"deref","","",30,{"i":[{"n":"self"}],"o":{"n":"entitytag"}}],[11,"deref","","",22,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",16,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",73,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",33,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref","","",49,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"deref","","",9,{"i":[{"n":"self"}],"o":{"n":"httpdate"}}],[11,"deref","","",62,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",48,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",67,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",26,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref","","",51,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref","","",52,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"safe","iron::method","Whether a method is considered \"safe\", meaning the request is essentially read-only.",101,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has the same result is executed multiple times.",101,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"deref","iron::headers","",45,{"i":[{"n":"self"}],"o":{"n":"method"}}],[11,"fmt","iron::error","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::status","",100,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::status","",99,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::method","",101,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",119,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers::parsing","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron","",122,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::headers","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",121,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::response","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"drop","iron","",0,null],[11,"drop","iron::response","",107,null],[11,"extend","iron","",122,null],[11,"read","iron::request","",111,null],[11,"fmt_header","iron::headers","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_multi_header","","",19,{"i":[{"n":"self"},{"n":"multilineformatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt_header","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"partial_cmp","iron::status","",100,{"i":[{"n":"self"},{"n":"statusclass"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","iron::headers","",61,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",61,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"le","","",61,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"gt","","",61,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"ge","","",61,{"i":[{"n":"self"},{"n":"httpdate"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",44,{"i":[{"n":"self"},{"n":"qualityitem"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","iron::status","",99,{"i":[{"n":"self"},{"n":"statuscode"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","iron::headers","",31,{"i":[{"n":"self"},{"n":"quality"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",31,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"le","","",31,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"gt","","",31,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"ge","","",31,{"i":[{"n":"self"},{"n":"quality"}],"o":{"n":"bool"}}],[11,"header_name","","",19,{"o":{"n":"str"}}],[11,"parse_header","","",19,null],[11,"header_name","","",67,{"o":{"n":"str"}}],[11,"parse_header","","",67,null],[11,"header_name","","",14,{"o":{"n":"str"}}],[11,"parse_header","","",14,null],[11,"header_name","","",9,{"o":{"n":"str"}}],[11,"parse_header","","",9,null],[11,"header_name","","",7,{"o":{"n":"str"}}],[11,"parse_header","","",7,null],[11,"header_name","","",38,{"o":{"n":"str"}}],[11,"parse_header","","",38,null],[11,"header_name","","",51,{"o":{"n":"str"}}],[11,"parse_header","","",51,null],[11,"header_name","","",12,{"o":{"n":"str"}}],[11,"parse_header","","",12,null],[11,"header_name","","",34,{"o":{"n":"str"}}],[11,"parse_header","","",34,null],[11,"header_name","","",59,{"o":{"n":"str"}}],[11,"parse_header","","",59,null],[11,"header_name","","",64,{"o":{"n":"str"}}],[11,"parse_header","","",64,null],[11,"header_name","","",15,{"o":{"n":"str"}}],[11,"parse_header","","",15,null],[11,"header_name","","",54,{"o":{"n":"str"}}],[11,"parse_header","","",54,null],[11,"header_name","","",26,{"o":{"n":"str"}}],[11,"parse_header","","",26,null],[11,"header_name","","",55,{"o":{"n":"str"}}],[11,"parse_header","","",55,null],[11,"header_name","","",42,{"o":{"n":"str"}}],[11,"parse_header","","",42,null],[11,"header_name","","",36,{"o":{"n":"str"}}],[11,"parse_header","","",36,null],[11,"header_name","","",22,{"o":{"n":"str"}}],[11,"parse_header","","",22,null],[11,"header_name","","",74,{"o":{"n":"str"}}],[11,"parse_header","","",74,null],[11,"header_name","","",46,{"o":{"n":"str"}}],[11,"parse_header","","",46,null],[11,"header_name","","",73,{"o":{"n":"str"}}],[11,"parse_header","","",73,null],[11,"header_name","","",48,{"o":{"n":"str"}}],[11,"parse_header","","",48,null],[11,"header_name","","",5,{"o":{"n":"str"}}],[11,"parse_header","","",5,null],[11,"header_name","","",37,{"o":{"n":"str"}}],[11,"parse_header","","",37,null],[11,"header_name","","",33,{"o":{"n":"str"}}],[11,"parse_header","","",33,null],[11,"header_name","","",20,{"o":{"n":"str"}}],[11,"parse_header","","",20,null],[11,"header_name","","",18,{"o":{"n":"str"}}],[11,"parse_header","","",18,null],[11,"header_name","","",68,{"o":{"n":"str"}}],[11,"parse_header","","",68,null],[11,"header_name","","",66,{"o":{"n":"str"}}],[11,"parse_header","","",66,null],[11,"header_name","","",65,{"o":{"n":"str"}}],[11,"parse_header","","",65,null],[11,"header_name","","",72,{"o":{"n":"str"}}],[11,"parse_header","","",72,null],[11,"header_name","","",56,{"o":{"n":"str"}}],[11,"parse_header","","",56,null],[11,"header_name","","",32,{"o":{"n":"str"}}],[11,"parse_header","","",32,null],[11,"header_name","","",62,{"o":{"n":"str"}}],[11,"parse_header","","",62,null],[11,"header_name","","",69,{"o":{"n":"str"}}],[11,"parse_header","","",69,null],[11,"header_name","","",60,{"o":{"n":"str"}}],[11,"parse_header","","",60,null],[11,"header_name","","",11,{"o":{"n":"str"}}],[11,"parse_header","","",11,null],[11,"header_name","","",63,{"o":{"n":"str"}}],[11,"parse_header","","",63,null],[11,"header_name","","",45,{"o":{"n":"str"}}],[11,"parse_header","","",45,null],[11,"header_name","","",120,{"o":{"n":"str"}}],[11,"parse_header","","",120,null],[11,"header_name","","",23,{"o":{"n":"str"}}],[11,"parse_header","","",23,null],[11,"header_name","","",49,{"o":{"n":"str"}}],[11,"parse_header","","",49,null],[11,"header_name","","",71,{"o":{"n":"str"}}],[11,"parse_header","","",71,null],[11,"header_name","","",52,{"o":{"n":"str"}}],[11,"parse_header","","",52,null],[11,"header_name","","",16,{"o":{"n":"str"}}],[11,"parse_header","","",16,null],[11,"header_name","","",123,{"o":{"n":"str"}}],[11,"parse_header","","",123,null],[11,"header_name","","",17,{"o":{"n":"str"}}],[11,"parse_header","","",17,null],[11,"header_name","","",58,{"o":{"n":"str"}}],[11,"parse_header","","",58,null],[11,"header_name","","",41,{"o":{"n":"str"}}],[11,"parse_header","","",41,null],[11,"header_name","","",57,{"o":{"n":"str"}}],[11,"parse_header","","",57,null],[11,"header_name","","",10,{"o":{"n":"str"}}],[11,"parse_header","","",10,null],[11,"header_name","","",30,{"o":{"n":"str"}}],[11,"parse_header","","",30,null],[11,"contains","iron::headers::parsing","",125,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"hash","iron::method","",101,null],[11,"hash","iron::status","",99,null],[11,"drop","iron::url","",127,null],[11,"drop","","",128,null],[11,"as_ref","","",124,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from","","",91,{"i":[{"n":"errors"}],"o":{"n":"parseerror"}}],[11,"fmt","","",124,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",91,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",96,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",93,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",93,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"ne","","",93,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"eq","","",91,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"eq","","",129,{"i":[{"n":"self"},{"n":"opaqueorigin"}],"o":{"n":"bool"}}],[11,"ne","","",129,{"i":[{"n":"self"},{"n":"opaqueorigin"}],"o":{"n":"bool"}}],[11,"eq","","",96,{"i":[{"n":"self"},{"n":"syntaxviolation"}],"o":{"n":"bool"}}],[11,"eq","","",124,{"i":[{"n":"self"},{"n":"url"}],"o":{"n":"bool"}}],[11,"eq","","",95,{"i":[{"n":"self"},{"n":"origin"}],"o":{"n":"bool"}}],[11,"ne","","",95,{"i":[{"n":"self"},{"n":"origin"}],"o":{"n":"bool"}}],[11,"to_socket_addrs","","",124,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"to_socket_addrs","","",97,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","iron::url::form_urlencoded","",130,{"i":[{"n":"self"}],"o":{"n":"parse"}}],[11,"clone","iron::url","",129,{"i":[{"n":"self"}],"o":{"n":"opaqueorigin"}}],[11,"clone","","",91,{"i":[{"n":"self"}],"o":{"n":"parseerror"}}],[11,"clone","","",131,{"i":[{"n":"self"}],"o":{"n":"parseoptions"}}],[11,"clone","","",97,{"i":[{"n":"self"}],"o":{"n":"hostandport"}}],[11,"clone","","",96,{"i":[{"n":"self"}],"o":{"n":"syntaxviolation"}}],[11,"clone","","",93,{"i":[{"n":"self"}],"o":{"n":"host"}}],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"origin"}}],[11,"clone","","",124,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"clone","","",94,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"partial_cmp","","",93,{"i":[{"n":"self"},{"n":"host"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",93,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"le","","",93,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"gt","","",93,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"ge","","",93,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",124,{"i":[{"n":"self"},{"n":"url"}],"o":{"g":["ordering"],"n":"option"}}],[11,"description","","",91,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from_str","","",124,{"i":[{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"as_mut_string","","",127,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"finish","","",127,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"index","","",124,{"i":[{"n":"self"},{"g":["position"],"n":"rangeto"}],"o":{"n":"str"}}],[11,"index","","",124,{"i":[{"n":"self"},{"n":"rangefull"}],"o":{"n":"str"}}],[11,"index","","",124,{"i":[{"n":"self"},{"g":["position"],"n":"range"}],"o":{"n":"str"}}],[11,"index","","",124,{"i":[{"n":"self"},{"g":["position"],"n":"rangefrom"}],"o":{"n":"str"}}],[11,"cmp","","",124,{"i":[{"n":"self"},{"n":"url"}],"o":{"n":"ordering"}}],[11,"cmp","","",93,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"ordering"}}],[11,"hash","","",124,null],[11,"hash","","",129,null],[11,"hash","","",93,null],[11,"hash","","",95,null],[11,"next","iron::url::form_urlencoded","",130,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","iron::url","",132,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"option"}}],[11,"next","iron::url::form_urlencoded","",133,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"size_hint","","",133,null],[11,"next","","",134,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","iron::url","",128,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",129,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::url::form_urlencoded","",133,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",130,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::url","",93,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::url::form_urlencoded","",135,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::url","",94,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",132,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::url::form_urlencoded","",134,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::url","",91,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",95,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",127,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",131,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",96,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",124,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","iron::url::idna::uts46","",98,{"i":[{"n":"self"}],"o":{"n":"flags"}}],[11,"fmt","","",136,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::url::percent_encoding","",137,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"contains","","",138,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"contains","","",139,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"contains","","",140,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"contains","","",141,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"contains","","",142,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",142,{"i":[{"n":"self"}],"o":{"n":"userinfo_encode_set"}}],[11,"clone","","",143,{"i":[{"n":"self"}],"o":{"n":"percentdecode"}}],[11,"clone","","",139,{"i":[{"n":"self"}],"o":{"n":"default_encode_set"}}],[11,"clone","","",137,{"i":[{"n":"self"}],"o":{"n":"percentencode"}}],[11,"clone","","",138,{"i":[{"n":"self"}],"o":{"n":"simple_encode_set"}}],[11,"clone","","",140,{"i":[{"n":"self"}],"o":{"n":"path_segment_encode_set"}}],[11,"clone","","",141,{"i":[{"n":"self"}],"o":{"n":"query_encode_set"}}],[11,"next","","",143,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"size_hint","","",143,null],[11,"next","","",137,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"size_hint","","",137,null],[11,"fmt","","",141,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",139,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",138,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",142,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",137,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",140,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",143,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","iron::mime","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",79,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",82,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",80,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",79,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"eq","","",79,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",82,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",81,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",82,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",81,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"eq","","",81,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",80,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"eq","","",81,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",79,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",80,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",80,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",83,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"eq","","",82,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"sublevel"}}],[11,"clone","","",80,{"i":[{"n":"self"}],"o":{"n":"value"}}],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"mime"}}],[11,"clone","","",79,{"i":[{"n":"self"}],"o":{"n":"toplevel"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"attr"}}],[11,"partial_cmp","","",81,{"i":[{"n":"self"},{"n":"attr"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",81,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"le","","",81,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"gt","","",81,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"ge","","",81,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",80,{"i":[{"n":"self"},{"n":"value"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",80,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"le","","",80,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"gt","","",80,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"ge","","",80,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",82,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",82,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"le","","",82,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"gt","","",82,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"ge","","",82,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",79,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",79,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"le","","",79,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"gt","","",79,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"ge","","",79,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",83,{"i":[{"n":"self"},{"n":"mime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",83,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"le","","",83,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"gt","","",83,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"ge","","",83,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"from_str","","",82,{"i":[{"n":"str"}],"o":{"g":["sublevel"],"n":"result"}}],[11,"from_str","","",79,{"i":[{"n":"str"}],"o":{"g":["toplevel"],"n":"result"}}],[11,"from_str","","",83,{"i":[{"n":"str"}],"o":{"g":["mime"],"n":"result"}}],[11,"from_str","","",80,{"i":[{"n":"str"}],"o":{"g":["value"],"n":"result"}}],[11,"from_str","","",81,{"i":[{"n":"str"}],"o":{"g":["attr"],"n":"result"}}],[11,"cmp","","",81,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"ordering"}}],[11,"cmp","","",79,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"ordering"}}],[11,"cmp","","",80,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"ordering"}}],[11,"cmp","","",83,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"ordering"}}],[11,"cmp","","",82,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"ordering"}}],[11,"hash","","",79,null],[11,"hash","","",82,null],[11,"hash","","",81,null],[11,"hash","","",83,null],[11,"hash","","",80,null],[11,"deref","","",81,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",80,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",82,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",79,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","iron::typemap","",144,{"i":[{"n":"self"}],"o":{"n":"typemap"}}],[11,"default","","",144,{"o":{"n":"typemap"}}],[11,"fmt","","",144,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"new","","Create a new, empty TypeMap.",144,{"o":{"g":["unsafeany"],"n":"typemap"}}],[11,"custom","","Create a new, empty TypeMap.",144,{"o":{"n":"typemap"}}],[11,"insert","","Insert a value into the map with a specified key type.",144,null],[11,"get","","Find a value in the map and get a reference to it.",144,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_mut","","Find a value in the map and get a mutable reference to it.",144,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"contains","","Check if a key has an associated value stored in the map.",144,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"remove","","Remove a value from the map.",144,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"entry","","Get the given key's corresponding entry in the map for in-place manipulation.",144,{"i":[{"n":"self"}],"o":{"n":"entry"}}],[11,"data","","Read the underlying HashMap",144,{"i":[{"n":"self"}],"o":{"n":"hashmap"}}],[11,"data_mut","","Get a mutable reference to the underlying HashMap",144,{"i":[{"n":"self"}],"o":{"n":"hashmap"}}],[11,"len","","Get the number of values stored in the map.",144,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Return true if the map contains no values.",144,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clear","","Remove all entries from the map.",144,null],[11,"new","iron","Creates a new, empty headers map.",122,{"o":{"n":"headers"}}],[11,"set","","Set a header field to the corresponding value.",122,null],[11,"get_raw","","Access the raw value of a header.",122,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"option"}}],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",122,null],[11,"append_raw","","Append a value to raw value of this header.",122,null],[11,"remove_raw","","Remove a header set by set_raw",122,null],[11,"get","","Get a reference to the header field's value, if it exists.",122,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",122,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"has","","Returns a boolean of whether a certain header is in the map.",122,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"remove","","Removes a header from the map, if one existed. Returns true if a header has been removed.",122,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"iter","","Returns an iterator over the header fields.",122,{"i":[{"n":"self"}],"o":{"n":"headersitems"}}],[11,"len","","Returns the number of headers in the map.",122,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"clear","","Remove all headers from the map.",122,null],[11,"is","iron::headers","Check if a HeaderView is a certain Header.",121,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"name","","Get the Header name as a slice.",121,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"value","","Cast the value to a certain Header type.",121,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"value_string","","Get just the header value as a String.",121,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",10,{"o":{"n":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",10,{"o":{"n":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",10,{"o":{"n":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",10,{"o":{"n":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",10,{"o":{"n":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",10,{"o":{"n":"contenttype"}}],[11,"new","","Creates a new `Origin` header.",14,{"i":[{"n":"s"},{"n":"h"},{"g":["u16"],"n":"option"}],"o":{"n":"origin"}}],[11,"new","","Creates a new Protocol with the given name and version",29,{"i":[{"n":"protocolname"},{"g":["string"],"n":"option"}],"o":{"n":"protocol"}}],[11,"new","","Create `LinkValue` from URI-Reference.",119,{"i":[{"n":"t"}],"o":{"n":"linkvalue"}}],[11,"link","","Get the `LinkValue`'s value.",119,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"rel","","Get the `LinkValue`'s `rel` parameter(s).",119,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"anchor","","Get the `LinkValue`'s `anchor` parameter.",119,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"rev","","Get the `LinkValue`'s `rev` parameter(s).",119,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"href_lang","","Get the `LinkValue`'s `hreflang` parameter(s).",119,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"media_desc","","Get the `LinkValue`'s `media` parameter(s).",119,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"title","","Get the `LinkValue`'s `title` parameter.",119,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"title_star","","Get the `LinkValue`'s `title*` parameter.",119,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"media_type","","Get the `LinkValue`'s `type` parameter.",119,{"i":[{"n":"self"}],"o":{"g":["mime"],"n":"option"}}],[11,"push_rel","","Add a `RelationType` to the `LinkValue`'s `rel` parameter.",119,{"i":[{"n":"self"},{"n":"relationtype"}],"o":{"n":"linkvalue"}}],[11,"set_anchor","","Set `LinkValue`'s `anchor` parameter.",119,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"linkvalue"}}],[11,"push_rev","","Add a `RelationType` to the `LinkValue`'s `rev` parameter.",119,{"i":[{"n":"self"},{"n":"relationtype"}],"o":{"n":"linkvalue"}}],[11,"push_href_lang","","Add a `LanguageTag` to the `LinkValue`'s `hreflang` parameter.",119,{"i":[{"n":"self"},{"n":"languagetag"}],"o":{"n":"linkvalue"}}],[11,"push_media_desc","","Add a `MediaDesc` to the `LinkValue`'s `media_desc` parameter.",119,{"i":[{"n":"self"},{"n":"mediadesc"}],"o":{"n":"linkvalue"}}],[11,"set_title","","Set `LinkValue`'s `title` parameter.",119,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"linkvalue"}}],[11,"set_title_star","","Set `LinkValue`'s `title*` parameter.",119,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"linkvalue"}}],[11,"set_media_type","","Set `LinkValue`'s `type` parameter.",119,{"i":[{"n":"self"},{"g":["vec"],"n":"mime"}],"o":{"n":"linkvalue"}}],[11,"bytes","","Get the most common byte range header (\"bytes=from-to\")",41,{"i":[{"n":"u64"},{"n":"u64"}],"o":{"n":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges (\"bytes=from1-to1,from2-to2,fromX-toX\")",41,{"i":[{"n":"vec"}],"o":{"n":"range"}}],[11,"new","","Creates a new `QualityItem` from an item and a quality. The item can be of any type. The quality should be a value in the range [0, 1].",44,{"i":[{"n":"t"},{"n":"quality"}],"o":{"n":"qualityitem"}}],[11,"new","","Create `Link` from a `Vec<LinkValue>`.",120,{"i":[{"g":["linkvalue"],"n":"vec"}],"o":{"n":"link"}}],[11,"values","","Get the `Link` header's `LinkValue`s.",120,null],[11,"push_value","","Add a `LinkValue` instance to the `Link` header's values.",120,null],[11,"close","","A constructor to easily create a `Connection: close` header.",59,{"o":{"n":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",59,{"o":{"n":"connection"}}],[11,"including_subdomains","","Create an STS header that includes subdomains",68,{"i":[{"n":"u64"}],"o":{"n":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",68,{"i":[{"n":"u64"}],"o":{"n":"stricttransportsecurity"}}],[11,"star","","A constructor to easily create `Accept: */*`.",69,{"o":{"n":"accept"}}],[11,"json","","A constructor to easily create `Accept: application/json`.",69,{"o":{"n":"accept"}}],[11,"text","","A constructor to easily create `Accept: text/*`.",69,{"o":{"n":"accept"}}],[11,"image","","A constructor to easily create `Accept: image/*`.",69,{"o":{"n":"accept"}}],[11,"is","iron::error","Returns true if the boxed type is the same as `T`",78,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or `None` if it isn't.",78,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or `None` if it isn't.",78,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",78,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",78,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",78,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",78,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",78,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",78,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",78,{"i":[{"g":["error"],"n":"box"}],"o":{"g":["box","box"],"n":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",78,{"i":[{"g":["error"],"n":"box"}],"o":{"g":["box","box"],"n":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",78,{"i":[{"g":["error"],"n":"box"}],"o":{"g":["box","box"],"n":"result"}}],[11,"as_str","iron::mime","",79,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"as_str","","",80,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"as_str","","",81,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"as_str","","",82,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into_owned","iron::url::form_urlencoded","Return a new iterator that yields pairs of `String` instead of pairs of `Cow<str>`.",130,{"i":[{"n":"self"}],"o":{"n":"parseintoowned"}}],[11,"new","","Create a new `application/x-www-form-urlencoded` serializer for the given target.",135,{"i":[{"n":"t"}],"o":{"n":"serializer"}}],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded` serializer for a suffix of the given target.",135,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"serializer"}}],[11,"clear","","Remove any existing name/value pair.",135,{"i":[{"n":"self"}],"o":{"n":"serializer"}}],[11,"custom_encoding_override","","Set the character encoding to be used for names and values before percent-encoding.",135,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"serializer"}}],[11,"append_pair","","Serialize and append a name/value pair.",135,{"i":[{"n":"self"},{"n":"str"},{"n":"str"}],"o":{"n":"serializer"}}],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",135,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"serializer"}}],[11,"finish","","If this serializer was constructed with a string, take and return that string.",135,null],[11,"parse","iron::url","Parse an absolute URL from a string.",124,{"i":[{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its query string.",124,{"i":[{"n":"str"},{"n":"i"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",124,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",124,{"o":{"n":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",124,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into_string","","Return the serialization of this URL.",124,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",124,{"i":[{"n":"self"}],"o":{"n":"origin"}}],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.",124,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"has_authority","","Return whether the URL has an 'authority', which can contain a username, password, host, and port number.",124,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning that parsing a relative URL string with this URL as the base will return an error.",124,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"username","","Return the username for this URL (typically the empty string) as a percent-encoded ASCII string.",124,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",124,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"has_host","","Equivalent to `url.host().is_some()`.",124,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",124,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"host","","Return the parsed representation of the host for this URL. Non-ASCII domain labels are punycode-encoded per IDNA.",124,{"i":[{"n":"self"}],"o":{"g":["host"],"n":"option"}}],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",124,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"port","","Return the port number for this URL, if any.",124,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",124,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",124,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["hostandport","error"],"n":"result"}}],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string. For cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with '/'. For other URLs, this starts with a '/' slash and continues with slash-separated path segments.",124,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of '/' slash-separated path segments, each as a percent-encoded ASCII string.",124,{"i":[{"n":"self"}],"o":{"g":["split"],"n":"option"}}],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",124,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded` and return an iterator of (key, value) pairs.",124,{"i":[{"n":"self"}],"o":{"n":"parse"}}],[11,"fragment","","Return this URL’s fragment identifier, if any.",124,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"set_fragment","","Change this URL’s fragment identifier.",124,null],[11,"set_query","","Change this URL’s query string.",124,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs in `application/x-www-form-urlencoded` syntax.",124,{"i":[{"n":"self"}],"o":{"g":["urlquery"],"n":"serializer"}}],[11,"set_path","","Change this URL’s path.",124,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",124,{"i":[{"n":"self"}],"o":{"g":["pathsegmentsmut"],"n":"result"}}],[11,"set_port","","Change this URL’s port number.",124,{"i":[{"n":"self"},{"g":["u16"],"n":"option"}],"o":{"n":"result"}}],[11,"set_host","","Change this URL’s host.",124,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"set_ip_host","","Change this URL’s host to the given IP address.",124,{"i":[{"n":"self"},{"n":"ipaddr"}],"o":{"n":"result"}}],[11,"set_password","","Change this URL’s password.",124,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"n":"result"}}],[11,"set_username","","Change this URL’s username.",124,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"set_scheme","","Change this URL’s scheme.",124,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",124,{"i":[{"n":"p"}],"o":{"g":["url"],"n":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",124,{"i":[{"n":"p"}],"o":{"g":["url"],"n":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar, convert its path to an absolute `std::path::Path`.",124,{"i":[{"n":"self"}],"o":{"g":["pathbuf"],"n":"result"}}],[11,"base_url","","Change the base URL",131,{"i":[{"n":"self"},{"g":["url"],"n":"option"}],"o":{"n":"parseoptions"}}],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse errors, passing a static string description.  This method is deprecated in favor of `syntax_violation_callback` and is implemented as an adaptor for the latter, passing the `SyntaxViolation` description. Only the last value passed to either method will be used by a parser.",131,{"i":[{"n":"self"},{"g":["fn"],"n":"option"}],"o":{"n":"parseoptions"}}],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal `SyntaxViolation` when it occurs during parsing. Note that since the provided function is `Fn`, the caller might need to utilize interior mutability, such as with a `RefCell`, to collect the violations.",131,{"i":[{"n":"self"},{"g":["fn"],"n":"option"}],"o":{"n":"parseoptions"}}],[11,"parse","","Parse an URL string with the configuration so far.",131,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"if_any","iron::url::percent_encoding","If the percent-decoding is different from the input, return it as a new bytes vector.",143,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"option"}}],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",143,{"i":[{"n":"self"}],"o":{"g":["cow","utf8error"],"n":"result"}}],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",143,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"cow"}}],[11,"to_owned","iron::url","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",93,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"host"}}],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",93,{"i":[{"n":"str"}],"o":{"g":["host","parseerror"],"n":"result"}}],[11,"parse_opaque","","",93,{"i":[{"n":"str"}],"o":{"g":["host","parseerror"],"n":"result"}}],[11,"clear","","Remove all segments in the path, leaving the minimal `url.path() == \"/\"`.",128,{"i":[{"n":"self"}],"o":{"n":"pathsegmentsmut"}}],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty, except if these was only one segment to begin with.",128,{"i":[{"n":"self"}],"o":{"n":"pathsegmentsmut"}}],[11,"pop","","Remove the last segment of this URL’s path.",128,{"i":[{"n":"self"}],"o":{"n":"pathsegmentsmut"}}],[11,"push","","Append the given segment at the end of this URL’s path.",128,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"pathsegmentsmut"}}],[11,"extend","","Append each segment from the given iterator at the end of this URL’s path.",128,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"pathsegmentsmut"}}],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",95,{"o":{"n":"origin"}}],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple (as opposed to an opaque origin).",95,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"ascii_serialization","","https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin",95,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"unicode_serialization","","https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin",95,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"description","","",96,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",97,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"hostandport"}}],[11,"canonical_reason","iron::status","Get the standardised `reason-phrase` for this status code.",99,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"class","","Determine the class of a status code, based on its first digit.",99,{"i":[{"n":"self"}],"o":{"n":"statusclass"}}],[11,"is_informational","","Check if class is Informational.",99,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_success","","Check if class is Success.",99,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_redirection","","Check if class is Redirection.",99,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_client_error","","Check if class is ClientError.",99,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_server_error","","Check if class is ServerError.",99,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_strange_status","","Check if class is NoClass",99,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"default_code","","Get the default status code for the class.",100,{"i":[{"n":"self"}],"o":{"n":"statuscode"}}],[11,"status","iron::response","The status of this response.",107,{"i":[{"n":"self"}],"o":{"n":"statuscode"}}],[11,"headers","","The headers of this response.",107,{"i":[{"n":"self"}],"o":{"n":"headers"}}],[11,"construct","","Construct a Response from its constituent parts.",107,{"i":[{"n":"httpversion"},{"g":["write"],"n":"httpwriter"},{"n":"statuscode"},{"n":"headers"}],"o":{"g":["fresh"],"n":"response"}}],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",107,null],[11,"new","","Creates a new Response that can be used to write to a network stream.",107,{"i":[{"n":"write"},{"n":"headers"}],"o":{"g":["fresh"],"n":"response"}}],[11,"send","","Writes the body and ends the response.",107,null],[11,"start","","Consume this Response, writing the Headers and Status and creating a Response",107,{"i":[{"n":"self"}],"o":{"g":["response","error"],"n":"result"}}],[11,"status_mut","","Get a mutable reference to the status.",107,{"i":[{"n":"self"}],"o":{"n":"statuscode"}}],[11,"headers_mut","","Get a mutable reference to the Headers.",107,{"i":[{"n":"self"}],"o":{"n":"headers"}}],[11,"end","","Flushes all writing of a response to the client.",107,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"new","iron::request","Create a new Request, reading the StartLine and Headers so they are immediately useful.",111,{"i":[{"n":"bufreader"},{"n":"socketaddr"}],"o":{"g":["request","error"],"n":"result"}}],[11,"set_read_timeout","","Set the read timeout of the underlying NetworkStream.",111,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"g":["error"],"n":"result"}}],[11,"downcast_ref","","Get a reference to the underlying `NetworkStream`.",111,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"ssl","","Get a reference to the underlying Ssl stream, if connected over HTTPS.",111,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",111,null]],"paths":[[3,"Listening"],[3,"ExtendedValue"],[8,"Header"],[8,"HeaderFormat"],[3,"HeaderFormatter"],[3,"Upgrade"],[4,"ContentRangeSpec"],[3,"Authorization"],[4,"Preference"],[3,"Date"],[3,"ContentType"],[3,"Location"],[3,"From"],[4,"ConnectionOption"],[3,"Origin"],[3,"PreferenceApplied"],[3,"AcceptRanges"],[3,"UserAgent"],[3,"TransferEncoding"],[3,"SetCookie"],[3,"ContentRange"],[4,"MediaDesc"],[3,"AccessControlExposeHeaders"],[4,"IfRange"],[4,"DispositionType"],[3,"Bearer"],[3,"Allow"],[4,"RelationType"],[4,"ByteRangeSpec"],[3,"Protocol"],[3,"ETag"],[3,"Quality"],[3,"Cookie"],[3,"IfModifiedSince"],[4,"Pragma"],[4,"CacheDirective"],[3,"Server"],[3,"IfUnmodifiedSince"],[3,"AcceptEncoding"],[4,"ProtocolName"],[3,"Basic"],[4,"Range"],[3,"Expires"],[4,"Charset"],[3,"QualityItem"],[3,"AccessControlRequestMethod"],[4,"AccessControlAllowOrigin"],[4,"RangeUnit"],[3,"CacheControl"],[3,"AccessControlMaxAge"],[4,"DispositionParam"],[3,"Referer"],[3,"Prefer"],[8,"Scheme"],[4,"IfNoneMatch"],[3,"Host"],[3,"ContentEncoding"],[3,"AccessControlAllowMethods"],[4,"Expect"],[3,"Connection"],[3,"ContentLength"],[3,"HttpDate"],[3,"AcceptLanguage"],[4,"IfMatch"],[3,"AccessControlRequestHeaders"],[4,"ReferrerPolicy"],[3,"ContentDisposition"],[3,"AcceptCharset"],[3,"StrictTransportSecurity"],[3,"Accept"],[3,"EntityTag"],[3,"ContentLanguage"],[3,"LastModified"],[3,"AccessControlAllowHeaders"],[4,"Vary"],[4,"Encoding"],[8,"Plugin"],[8,"Set"],[8,"Error"],[4,"TopLevel"],[4,"Value"],[4,"Attr"],[4,"SubLevel"],[3,"Mime"],[3,"Iron"],[3,"Timeouts"],[4,"HttpError"],[3,"IronError"],[8,"Key"],[8,"Modifier"],[8,"Target"],[4,"ParseError"],[8,"EncodeSet"],[4,"Host"],[4,"Position"],[4,"Origin"],[4,"SyntaxViolation"],[3,"HostAndPort"],[3,"Flags"],[4,"Status"],[4,"StatusClass"],[4,"Method"],[8,"Handler"],[8,"BeforeMiddleware"],[8,"AfterMiddleware"],[8,"AroundMiddleware"],[3,"Chain"],[3,"HttpResponse"],[3,"BodyReader"],[3,"Response"],[8,"WriteBody"],[3,"HttpRequest"],[3,"Request"],[3,"Url"],[3,"Body"],[3,"Header"],[3,"Redirect"],[3,"RedirectRaw"],[3,"Protocol"],[3,"LinkValue"],[3,"Link"],[3,"HeaderView"],[3,"Headers"],[3,"AccessControlAllowCredentials"],[3,"Url"],[3,"HTTP_VALUE"],[3,"HeadersItems"],[3,"UrlQuery"],[3,"PathSegmentsMut"],[3,"OpaqueOrigin"],[3,"Parse"],[3,"ParseOptions"],[3,"SocketAddrs"],[3,"ByteSerialize"],[3,"ParseIntoOwned"],[3,"Serializer"],[3,"Errors"],[3,"PercentEncode"],[3,"SIMPLE_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentDecode"],[3,"TypeMap"]]};
searchIndex["iron_slog"] = {"doc":"Logger middleware for Iron framework, with slog-rs","items":[[3,"LogContext","iron_slog","Information of request/response for logging",null,null],[12,"req","","`Request`",0,null],[12,"res","","`Response`",0,null],[12,"start_time","","start time",0,null],[12,"end_time","","end time",0,null],[3,"DefaultLogFormatter","","Default formatter.",null,null],[3,"LoggerMiddleware","","Middleware for logging information of request and response, to certain logger.",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"response_time","","Calculate response time",0,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"format","","",1,{"i":[{"n":"self"},{"n":"formatter"},{"n":"logcontext"}],"o":{"n":"result"}}],[8,"LogFormatter","","Formatter.",null,null],[10,"format","","Write `context` to `f`.",2,{"i":[{"n":"self"},{"n":"formatter"},{"n":"logcontext"}],"o":{"n":"result"}}],[11,"new","","Create a `LoggerMiddleware` middleware with specified `logger` and `formatter`.",3,{"i":[{"n":"h"},{"n":"logger"},{"n":"f"}],"o":{"n":"self"}}],[11,"handle","","",3,{"i":[{"n":"self"},{"n":"request"}],"o":{"g":["response"],"n":"ironresult"}}]],"paths":[[3,"LogContext"],[3,"DefaultLogFormatter"],[8,"LogFormatter"],[3,"LoggerMiddleware"]]};
searchIndex["iron_test"] = {"doc":"A set of convenience methods and constructors for making requests to Iron Handlers.","items":[[3,"ProjectBuilder","iron_test","An RAII guard that controls a temporary directory of test files.",null,null],[0,"request","","Set of convenience methods for making requests to Iron Handlers.",null,null],[5,"get","iron_test::request","Convenience method for making GET requests to Iron Handlers.",null,{"i":[{"n":"str"},{"n":"headers"},{"n":"h"}],"o":{"g":["response"],"n":"ironresult"}}],[5,"post","","Convenience method for making POST requests with a body to Iron Handlers.",null,{"i":[{"n":"str"},{"n":"headers"},{"n":"str"},{"n":"h"}],"o":{"g":["response"],"n":"ironresult"}}],[5,"patch","","Convenience method for making PATCH requests with a body to Iron Handlers.",null,{"i":[{"n":"str"},{"n":"headers"},{"n":"str"},{"n":"h"}],"o":{"g":["response"],"n":"ironresult"}}],[5,"put","","Convenience method for making PUT requests with a body to Iron Handlers.",null,{"i":[{"n":"str"},{"n":"headers"},{"n":"str"},{"n":"h"}],"o":{"g":["response"],"n":"ironresult"}}],[5,"delete","","Convenience method for making DELETE requests to Iron Handlers.",null,{"i":[{"n":"str"},{"n":"headers"},{"n":"h"}],"o":{"g":["response"],"n":"ironresult"}}],[5,"options","","Convenience method for making OPTIONS requests to Iron Handlers.",null,{"i":[{"n":"str"},{"n":"headers"},{"n":"h"}],"o":{"g":["response"],"n":"ironresult"}}],[5,"head","","Convenience method for making HEAD requests to Iron Handlers.",null,{"i":[{"n":"str"},{"n":"headers"},{"n":"h"}],"o":{"g":["response"],"n":"ironresult"}}],[5,"request","","Constructs an Iron::Request from the given parts and passes it to the `handle` method on the given Handler.",null,{"i":[{"n":"method"},{"n":"str"},{"n":"str"},{"n":"headers"},{"n":"h"}],"o":{"g":["response"],"n":"ironresult"}}],[0,"response","iron_test","Set of helper methods for interacting with Iron Responses.",null,null],[5,"extract_body_to_string","iron_test::response","Extracts a utf8 response body to a String.",null,{"i":[{"n":"response"}],"o":{"n":"string"}}],[5,"extract_body_to_bytes","","Extracts a response body to a Vector of bytes.",null,{"i":[{"n":"response"}],"o":{"g":["u8"],"n":"vec"}}],[0,"mock_stream","iron_test","Tooling for mocking a Stream.",null,null],[3,"MockStream","iron_test::mock_stream","A mock network stream",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"mockstream"}}],[11,"new","","Create a new mock stream that reads from the given data",0,{"i":[{"n":"t"}],"o":{"n":"mockstream"}}],[11,"peer_addr","","",0,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"set_read_timeout","","",0,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"set_write_timeout","","",0,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","iron_test","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"projectbuilder"}}],[11,"new","","Create a ProjectBuilder that will manage a new temporary directory making use of the current name.",1,{"i":[{"n":"str"}],"o":{"n":"projectbuilder"}}],[11,"root","","Get the root path of the temporary directory.",1,{"i":[{"n":"self"}],"o":{"n":"path"}}],[11,"file","","Add a new file to the temporary directory with the given contents.",1,{"i":[{"n":"self"},{"n":"p"},{"n":"b"}],"o":{"n":"projectbuilder"}}],[11,"build","","Creates the project layout, based on current state of the builder",1,{"i":[{"n":"self"}],"o":{"n":"projectbuilder"}}],[11,"build_with_result","","Creates the project layout, based on current state of the builder",1,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"projectbuilder"}],"o":{"n":"bool"}}],[11,"drop","","",1,{"i":[{"n":"self"}]}]],"paths":[[3,"MockStream"],[3,"ProjectBuilder"]]};
searchIndex["isatty"] = {"doc":"This crate provides the following three functions:","items":[[5,"stdin_isatty","isatty","",null,{"o":{"n":"bool"}}],[5,"stdout_isatty","","",null,{"o":{"n":"bool"}}],[5,"stderr_isatty","","",null,{"o":{"n":"bool"}}]],"paths":[]};
searchIndex["itoa"] = {"doc":"","items":[[5,"write","itoa","Write integer to an `io::Write`.",null,{"i":[{"n":"w"},{"n":"v"}],"o":{"g":["usize"],"n":"result"}}],[5,"fmt","","Write integer to an `fmt::Write`.",null,{"i":[{"n":"w"},{"n":"v"}],"o":{"n":"result"}}],[8,"Integer","","An integer that can be formatted by `itoa::write` and `itoa::fmt`.",null,null]],"paths":[]};
searchIndex["language_tags"] = {"doc":"Language tags can be used identify human languages, scripts e.g. Latin script, countries and other regions.","items":[[3,"LanguageTag","language_tags","A language tag as described in BCP47.",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all other aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially selected languages that, for various historical and compatibility reasons, are closely identified with or tagged using an existing primary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system variations that distinguish the written forms of a language or its dialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated with or appropriate to a specific country, territory, or region. Typically, a region subtag is used to indicate variations such as regional dialects or usage, or region-specific spelling conventions. It can also be used to indicate that content is expressed in a way that is appropriate for use throughout a region, for instance, Spanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized variations that define a language or its dialects that are not covered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in various applications.  They are intended to identify information that is commonly used in association with languages or language tags but that is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language that are important in a given context by private agreement.",0,null],[4,"Error","","Defines an Error type for langtags.",null,null],[13,"DuplicateExtension","","The same extension subtag is only allowed once in a tag before the private use part.",1,null],[13,"EmptyExtension","","If an extension subtag is present, it must not be empty.",1,null],[13,"EmptyPrivateUse","","If the `x` subtag is present, it must not be empty.",1,null],[13,"ForbiddenChar","","The langtag contains a char that is not A-Z, a-z, 0-9 or the dash.",1,null],[13,"InvalidSubtag","","A subtag fails to parse, it does not match any other subtags.",1,null],[13,"InvalidLanguage","","The given language subtag is invalid.",1,null],[13,"SubtagTooLong","","A subtag may be eight characters in length at maximum.",1,null],[13,"TooManyExtlangs","","At maximum three extlangs are allowed, but zero to one extlangs are preferred.",1,null],[6,"Result","","Result type used for this library.",null,null],[17,"GRANDFATHERED","","Contains all grandfathered tags.",null,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",0,{"o":{"n":"languagetag"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"languagetag"}}],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used as a normal language tag. None fields in the language range are ignored. If the language tag has more extlangs than the range these extlangs are ignored. Matches are case-insensitive. `*` in language ranges are represented using `None` values. The language range `*` that matches language tags is created by the default language tag: `let wildcard: LanguageTag = Default::default();.`",0,{"i":[{"n":"self"},{"n":"languagetag"}],"o":{"n":"bool"}}],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"canonicalize","","Returns the canonical version of the language tag.",0,{"i":[{"n":"self"}],"o":{"n":"languagetag"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"languagetag"}],"o":{"n":"bool"}}],[11,"from_str","","",0,{"i":[{"n":"str"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[14,"langtag","","Utility for creating simple language tags.",null,null]],"paths":[[3,"LanguageTag"],[4,"Error"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",null,{"i":[{"n":"t"}]}],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",null,null],[14,"__lazy_static_create","","",null,null],[14,"lazy_static","","",null,null]],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"servent","","",null,null],[12,"s_name","","",18,null],[12,"s_aliases","","",18,null],[12,"s_port","","",18,null],[12,"s_proto","","",18,null],[3,"protoent","","",null,null],[12,"p_name","","",19,null],[12,"p_aliases","","",19,null],[12,"p_proto","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",23,null],[12,"sun_path","","",23,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",24,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",25,null],[12,"ai_family","","",25,null],[12,"ai_socktype","","",25,null],[12,"ai_protocol","","",25,null],[12,"ai_addrlen","","",25,null],[12,"ai_addr","","",25,null],[12,"ai_canonname","","",25,null],[12,"ai_next","","",25,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",26,null],[12,"nl_pid","","",26,null],[12,"nl_groups","","",26,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",27,null],[12,"sll_protocol","","",27,null],[12,"sll_ifindex","","",27,null],[12,"sll_hatype","","",27,null],[12,"sll_pkttype","","",27,null],[12,"sll_halen","","",27,null],[12,"sll_addr","","",27,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",28,null],[12,"tm_min","","",28,null],[12,"tm_hour","","",28,null],[12,"tm_mday","","",28,null],[12,"tm_mon","","",28,null],[12,"tm_year","","",28,null],[12,"tm_wday","","",28,null],[12,"tm_yday","","",28,null],[12,"tm_isdst","","",28,null],[12,"tm_gmtoff","","",28,null],[12,"tm_zone","","",28,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",29,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",30,null],[12,"dli_fbase","","",30,null],[12,"dli_sname","","",30,null],[12,"dli_saddr","","",30,null],[3,"epoll_event","","",null,null],[12,"events","","",31,null],[12,"u64","","",31,null],[3,"utsname","","",null,null],[12,"sysname","","",32,null],[12,"nodename","","",32,null],[12,"release","","",32,null],[12,"version","","",32,null],[12,"machine","","",32,null],[12,"domainname","","",32,null],[3,"lconv","","",null,null],[12,"decimal_point","","",33,null],[12,"thousands_sep","","",33,null],[12,"grouping","","",33,null],[12,"int_curr_symbol","","",33,null],[12,"currency_symbol","","",33,null],[12,"mon_decimal_point","","",33,null],[12,"mon_thousands_sep","","",33,null],[12,"mon_grouping","","",33,null],[12,"positive_sign","","",33,null],[12,"negative_sign","","",33,null],[12,"int_frac_digits","","",33,null],[12,"frac_digits","","",33,null],[12,"p_cs_precedes","","",33,null],[12,"p_sep_by_space","","",33,null],[12,"n_cs_precedes","","",33,null],[12,"n_sep_by_space","","",33,null],[12,"p_sign_posn","","",33,null],[12,"n_sign_posn","","",33,null],[12,"int_p_cs_precedes","","",33,null],[12,"int_p_sep_by_space","","",33,null],[12,"int_n_cs_precedes","","",33,null],[12,"int_n_sep_by_space","","",33,null],[12,"int_p_sign_posn","","",33,null],[12,"int_n_sign_posn","","",33,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",34,null],[12,"sigev_signo","","",34,null],[12,"sigev_notify","","",34,null],[12,"sigev_notify_thread_id","","",34,null],[3,"dirent","","",null,null],[12,"d_ino","","",35,null],[12,"d_off","","",35,null],[12,"d_reclen","","",35,null],[12,"d_type","","",35,null],[12,"d_name","","",35,null],[3,"dirent64","","",null,null],[12,"d_ino","","",36,null],[12,"d_off","","",36,null],[12,"d_reclen","","",36,null],[12,"d_type","","",36,null],[12,"d_name","","",36,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",37,null],[12,"rlim_max","","",37,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",38,null],[12,"gl_pathv","","",38,null],[12,"gl_offs","","",38,null],[12,"gl_flags","","",38,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",39,null],[12,"ifa_name","","",39,null],[12,"ifa_flags","","",39,null],[12,"ifa_addr","","",39,null],[12,"ifa_netmask","","",39,null],[12,"ifa_ifu","","",39,null],[12,"ifa_data","","",39,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",40,null],[12,"pw_passwd","","",40,null],[12,"pw_uid","","",40,null],[12,"pw_gid","","",40,null],[12,"pw_gecos","","",40,null],[12,"pw_dir","","",40,null],[12,"pw_shell","","",40,null],[3,"spwd","","",null,null],[12,"sp_namp","","",41,null],[12,"sp_pwdp","","",41,null],[12,"sp_lstchg","","",41,null],[12,"sp_min","","",41,null],[12,"sp_max","","",41,null],[12,"sp_warn","","",41,null],[12,"sp_inact","","",41,null],[12,"sp_expire","","",41,null],[12,"sp_flag","","",41,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",42,null],[12,"f_frsize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_favail","","",42,null],[12,"f_fsid","","",42,null],[12,"f_flag","","",42,null],[12,"f_namemax","","",42,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",43,null],[12,"dqb_bsoftlimit","","",43,null],[12,"dqb_curspace","","",43,null],[12,"dqb_ihardlimit","","",43,null],[12,"dqb_isoftlimit","","",43,null],[12,"dqb_curinodes","","",43,null],[12,"dqb_btime","","",43,null],[12,"dqb_itime","","",43,null],[12,"dqb_valid","","",43,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",44,null],[12,"ssi_errno","","",44,null],[12,"ssi_code","","",44,null],[12,"ssi_pid","","",44,null],[12,"ssi_uid","","",44,null],[12,"ssi_fd","","",44,null],[12,"ssi_tid","","",44,null],[12,"ssi_band","","",44,null],[12,"ssi_overrun","","",44,null],[12,"ssi_trapno","","",44,null],[12,"ssi_status","","",44,null],[12,"ssi_int","","",44,null],[12,"ssi_ptr","","",44,null],[12,"ssi_utime","","",44,null],[12,"ssi_stime","","",44,null],[12,"ssi_addr","","",44,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",45,null],[12,"it_value","","",45,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",46,null],[12,"mq_maxmsg","","",46,null],[12,"mq_msgsize","","",46,null],[12,"mq_curmsgs","","",46,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",47,null],[12,"if_name","","",47,null],[3,"msginfo","","",null,null],[12,"msgpool","","",48,null],[12,"msgmap","","",48,null],[12,"msgmax","","",48,null],[12,"msgmnb","","",48,null],[12,"msgmni","","",48,null],[12,"msgssz","","",48,null],[12,"msgtql","","",48,null],[12,"msgseg","","",48,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",49,null],[12,"msg_len","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",66,null],[12,"p_offset","","",66,null],[12,"p_vaddr","","",66,null],[12,"p_paddr","","",66,null],[12,"p_filesz","","",66,null],[12,"p_memsz","","",66,null],[12,"p_flags","","",66,null],[12,"p_align","","",66,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",67,null],[12,"p_flags","","",67,null],[12,"p_offset","","",67,null],[12,"p_vaddr","","",67,null],[12,"p_paddr","","",67,null],[12,"p_filesz","","",67,null],[12,"p_memsz","","",67,null],[12,"p_align","","",67,null],[3,"ucred","","",null,null],[12,"pid","","",68,null],[12,"uid","","",68,null],[12,"gid","","",68,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",69,null],[12,"mnt_dir","","",69,null],[12,"mnt_type","","",69,null],[12,"mnt_opts","","",69,null],[12,"mnt_freq","","",69,null],[12,"mnt_passno","","",69,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",70,null],[12,"aio_lio_opcode","","",70,null],[12,"aio_reqprio","","",70,null],[12,"aio_buf","","",70,null],[12,"aio_nbytes","","",70,null],[12,"aio_sigevent","","",70,null],[12,"aio_offset","","",70,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",71,null],[12,"e_exit","","",71,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",72,null],[12,"tv_usec","","",72,null],[3,"utmpx","","",null,null],[12,"ut_type","","",73,null],[12,"ut_pid","","",73,null],[12,"ut_line","","",73,null],[12,"ut_id","","",73,null],[12,"ut_user","","",73,null],[12,"ut_host","","",73,null],[12,"ut_exit","","",73,null],[12,"ut_session","","",73,null],[12,"ut_tv","","",73,null],[12,"ut_addr_v6","","",73,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",74,null],[12,"sa_mask","","",74,null],[12,"sa_flags","","",74,null],[12,"sa_restorer","","",74,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",75,null],[12,"ss_flags","","",75,null],[12,"ss_size","","",75,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",76,null],[12,"si_errno","","",76,null],[12,"si_code","","",76,null],[12,"_pad","","",76,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",77,null],[12,"gl_pathv","","",77,null],[12,"gl_offs","","",77,null],[12,"gl_flags","","",77,null],[3,"statfs","","",null,null],[12,"f_type","","",78,null],[12,"f_bsize","","",78,null],[12,"f_blocks","","",78,null],[12,"f_bfree","","",78,null],[12,"f_bavail","","",78,null],[12,"f_files","","",78,null],[12,"f_ffree","","",78,null],[12,"f_fsid","","",78,null],[12,"f_namelen","","",78,null],[12,"f_frsize","","",78,null],[3,"msghdr","","",null,null],[12,"msg_name","","",79,null],[12,"msg_namelen","","",79,null],[12,"msg_iov","","",79,null],[12,"msg_iovlen","","",79,null],[12,"msg_control","","",79,null],[12,"msg_controllen","","",79,null],[12,"msg_flags","","",79,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",80,null],[12,"cmsg_level","","",80,null],[12,"cmsg_type","","",80,null],[3,"termios","","",null,null],[12,"c_iflag","","",81,null],[12,"c_oflag","","",81,null],[12,"c_cflag","","",81,null],[12,"c_lflag","","",81,null],[12,"c_line","","",81,null],[12,"c_cc","","",81,null],[12,"c_ispeed","","",81,null],[12,"c_ospeed","","",81,null],[3,"flock","","",null,null],[12,"l_type","","",82,null],[12,"l_whence","","",82,null],[12,"l_start","","",82,null],[12,"l_len","","",82,null],[12,"l_pid","","",82,null],[3,"sem_t","","",null,null],[3,"mallinfo","","",null,null],[12,"arena","","",83,null],[12,"ordblks","","",83,null],[12,"smblks","","",83,null],[12,"hblks","","",83,null],[12,"hblkhd","","",83,null],[12,"usmblks","","",83,null],[12,"fsmblks","","",83,null],[12,"uordblks","","",83,null],[12,"fordblks","","",83,null],[12,"keepcost","","",83,null],[3,"nlmsghdr","","",null,null],[3,"nlmsgerr","","",null,null],[3,"nl_pktinfo","","",null,null],[3,"nl_mmap_req","","",null,null],[3,"nl_mmap_hdr","","",null,null],[3,"nlattr","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",84,null],[12,"loads","","",84,null],[12,"totalram","","",84,null],[12,"freeram","","",84,null],[12,"sharedram","","",84,null],[12,"bufferram","","",84,null],[12,"totalswap","","",84,null],[12,"freeswap","","",84,null],[12,"procs","","",84,null],[12,"pad","","",84,null],[12,"totalhigh","","",84,null],[12,"freehigh","","",84,null],[12,"mem_unit","","",84,null],[12,"_f","","",84,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",85,null],[12,"msg_stime","","",85,null],[12,"msg_rtime","","",85,null],[12,"msg_ctime","","",85,null],[12,"msg_qnum","","",85,null],[12,"msg_qbytes","","",85,null],[12,"msg_lspid","","",85,null],[12,"msg_lrpid","","",85,null],[3,"stat","","",null,null],[12,"st_dev","","",86,null],[12,"st_ino","","",86,null],[12,"st_nlink","","",86,null],[12,"st_mode","","",86,null],[12,"st_uid","","",86,null],[12,"st_gid","","",86,null],[12,"st_rdev","","",86,null],[12,"st_size","","",86,null],[12,"st_blksize","","",86,null],[12,"st_blocks","","",86,null],[12,"st_atime","","",86,null],[12,"st_atime_nsec","","",86,null],[12,"st_mtime","","",86,null],[12,"st_mtime_nsec","","",86,null],[12,"st_ctime","","",86,null],[12,"st_ctime_nsec","","",86,null],[3,"stat64","","",null,null],[12,"st_dev","","",87,null],[12,"st_ino","","",87,null],[12,"st_nlink","","",87,null],[12,"st_mode","","",87,null],[12,"st_uid","","",87,null],[12,"st_gid","","",87,null],[12,"st_rdev","","",87,null],[12,"st_size","","",87,null],[12,"st_blksize","","",87,null],[12,"st_blocks","","",87,null],[12,"st_atime","","",87,null],[12,"st_atime_nsec","","",87,null],[12,"st_mtime","","",87,null],[12,"st_mtime_nsec","","",87,null],[12,"st_ctime","","",87,null],[12,"st_ctime_nsec","","",87,null],[3,"statfs64","","",null,null],[12,"f_type","","",88,null],[12,"f_bsize","","",88,null],[12,"f_blocks","","",88,null],[12,"f_bfree","","",88,null],[12,"f_bavail","","",88,null],[12,"f_files","","",88,null],[12,"f_ffree","","",88,null],[12,"f_fsid","","",88,null],[12,"f_namelen","","",88,null],[12,"f_frsize","","",88,null],[12,"f_flags","","",88,null],[12,"f_spare","","",88,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",89,null],[12,"f_frsize","","",89,null],[12,"f_blocks","","",89,null],[12,"f_bfree","","",89,null],[12,"f_bavail","","",89,null],[12,"f_files","","",89,null],[12,"f_ffree","","",89,null],[12,"f_favail","","",89,null],[12,"f_fsid","","",89,null],[12,"f_flag","","",89,null],[12,"f_namemax","","",89,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",90,null],[12,"exponent","","",90,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",91,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",92,null],[12,"swd","","",92,null],[12,"ftw","","",92,null],[12,"fop","","",92,null],[12,"rip","","",92,null],[12,"rdp","","",92,null],[12,"mxcsr","","",92,null],[12,"mxcr_mask","","",92,null],[12,"_st","","",92,null],[12,"_xmm","","",92,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",93,null],[12,"swd","","",93,null],[12,"ftw","","",93,null],[12,"fop","","",93,null],[12,"rip","","",93,null],[12,"rdp","","",93,null],[12,"mxcsr","","",93,null],[12,"mxcr_mask","","",93,null],[12,"st_space","","",93,null],[12,"xmm_space","","",93,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",94,null],[12,"r14","","",94,null],[12,"r13","","",94,null],[12,"r12","","",94,null],[12,"rbp","","",94,null],[12,"rbx","","",94,null],[12,"r11","","",94,null],[12,"r10","","",94,null],[12,"r9","","",94,null],[12,"r8","","",94,null],[12,"rax","","",94,null],[12,"rcx","","",94,null],[12,"rdx","","",94,null],[12,"rsi","","",94,null],[12,"rdi","","",94,null],[12,"orig_rax","","",94,null],[12,"rip","","",94,null],[12,"cs","","",94,null],[12,"eflags","","",94,null],[12,"rsp","","",94,null],[12,"ss","","",94,null],[12,"fs_base","","",94,null],[12,"gs_base","","",94,null],[12,"ds","","",94,null],[12,"es","","",94,null],[12,"fs","","",94,null],[12,"gs","","",94,null],[3,"user","","",null,null],[12,"regs","","",95,null],[12,"u_fpvalid","","",95,null],[12,"i387","","",95,null],[12,"u_tsize","","",95,null],[12,"u_dsize","","",95,null],[12,"u_ssize","","",95,null],[12,"start_code","","",95,null],[12,"start_stack","","",95,null],[12,"signal","","",95,null],[12,"u_ar0","","",95,null],[12,"u_fpstate","","",95,null],[12,"magic","","",95,null],[12,"u_comm","","",95,null],[12,"u_debugreg","","",95,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",96,null],[12,"fpregs","","",96,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",97,null],[12,"uc_link","","",97,null],[12,"uc_stack","","",97,null],[12,"uc_mcontext","","",97,null],[12,"uc_sigmask","","",97,null],[3,"ipc_perm","","",null,null],[12,"__key","","",98,null],[12,"uid","","",98,null],[12,"gid","","",98,null],[12,"cuid","","",98,null],[12,"cgid","","",98,null],[12,"mode","","",98,null],[12,"__seq","","",98,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",99,null],[12,"shm_segsz","","",99,null],[12,"shm_atime","","",99,null],[12,"shm_dtime","","",99,null],[12,"shm_ctime","","",99,null],[12,"shm_cpid","","",99,null],[12,"shm_lpid","","",99,null],[12,"shm_nattch","","",99,null],[3,"termios2","","",null,null],[12,"c_iflag","","",100,null],[12,"c_oflag","","",100,null],[12,"c_cflag","","",100,null],[12,"c_lflag","","",100,null],[12,"c_line","","",100,null],[12,"c_cc","","",100,null],[12,"c_ispeed","","",100,null],[12,"c_ospeed","","",100,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WSTOPSIG","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WIFCONTINUED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WIFSIGNALED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WTERMSIG","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WIFEXITED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WEXITSTATUS","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WCOREDUMP","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"QCMD","","",null,{"i":[{"n":"c_int"},{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"i":[{"n":"usize"},{"n":"cpu_set_t"}],"o":{"n":"bool"}}],[5,"CPU_EQUAL","","",null,{"i":[{"n":"cpu_set_t"},{"n":"cpu_set_t"}],"o":{"n":"bool"}}],[5,"major","","",null,{"i":[{"n":"dev_t"}],"o":{"n":"c_uint"}}],[5,"minor","","",null,{"i":[{"n":"dev_t"}],"o":{"n":"c_uint"}}],[5,"makedev","","",null,{"i":[{"n":"c_uint"},{"n":"c_uint"}],"o":{"n":"dev_t"}}],[5,"NLA_ALIGN","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"fdopendir","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getauxval","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"stat"}}],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"stat64"}}],[11,"clone","","",88,{"i":[{"n":"self"}],"o":{"n":"statfs64"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"statvfs64"}}],[11,"clone","","",101,{"i":[{"n":"self"}],"o":{"n":"pthread_attr_t"}}],[11,"clone","","",90,{"i":[{"n":"self"}],"o":{"n":"_libc_fpxreg"}}],[11,"clone","","",91,{"i":[{"n":"self"}],"o":{"n":"_libc_xmmreg"}}],[11,"clone","","",92,{"i":[{"n":"self"}],"o":{"n":"_libc_fpstate"}}],[11,"clone","","",93,{"i":[{"n":"self"}],"o":{"n":"user_fpregs_struct"}}],[11,"clone","","",94,{"i":[{"n":"self"}],"o":{"n":"user_regs_struct"}}],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"user"}}],[11,"clone","","",96,{"i":[{"n":"self"}],"o":{"n":"mcontext_t"}}],[11,"clone","","",97,{"i":[{"n":"self"}],"o":{"n":"ucontext_t"}}],[11,"clone","","",98,{"i":[{"n":"self"}],"o":{"n":"ipc_perm"}}],[11,"clone","","",99,{"i":[{"n":"self"}],"o":{"n":"shmid_ds"}}],[11,"clone","","",100,{"i":[{"n":"self"}],"o":{"n":"termios2"}}],[11,"clone","","",102,{"i":[{"n":"self"}],"o":{"n":"sigset_t"}}],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"sysinfo"}}],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"msqid_ds"}}],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"aiocb"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"__exit_status"}}],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"__timeval"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"utmpx"}}],[11,"clone","","",74,{"i":[{"n":"self"}],"o":{"n":"sigaction"}}],[11,"clone","","",75,{"i":[{"n":"self"}],"o":{"n":"stack_t"}}],[11,"clone","","",76,{"i":[{"n":"self"}],"o":{"n":"siginfo_t"}}],[11,"clone","","",77,{"i":[{"n":"self"}],"o":{"n":"glob64_t"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"statfs"}}],[11,"clone","","",79,{"i":[{"n":"self"}],"o":{"n":"msghdr"}}],[11,"clone","","",80,{"i":[{"n":"self"}],"o":{"n":"cmsghdr"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"termios"}}],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"flock"}}],[11,"clone","","",103,{"i":[{"n":"self"}],"o":{"n":"sem_t"}}],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"mallinfo"}}],[11,"clone","","",104,{"i":[{"n":"self"}],"o":{"n":"nlmsghdr"}}],[11,"clone","","",105,{"i":[{"n":"self"}],"o":{"n":"nlmsgerr"}}],[11,"clone","","",106,{"i":[{"n":"self"}],"o":{"n":"nl_pktinfo"}}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"nl_mmap_req"}}],[11,"clone","","",108,{"i":[{"n":"self"}],"o":{"n":"nl_mmap_hdr"}}],[11,"clone","","",109,{"i":[{"n":"self"}],"o":{"n":"nlattr"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"dirent"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"dirent64"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"rlimit64"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"glob_t"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"ifaddrs"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"pthread_mutex_t"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"pthread_rwlock_t"}}],[11,"clone","","",112,{"i":[{"n":"self"}],"o":{"n":"pthread_mutexattr_t"}}],[11,"clone","","",113,{"i":[{"n":"self"}],"o":{"n":"pthread_rwlockattr_t"}}],[11,"clone","","",114,{"i":[{"n":"self"}],"o":{"n":"pthread_cond_t"}}],[11,"clone","","",115,{"i":[{"n":"self"}],"o":{"n":"pthread_condattr_t"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"passwd"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"spwd"}}],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"statvfs"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"dqblk"}}],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"signalfd_siginfo"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"itimerspec"}}],[11,"clone","","",116,{"i":[{"n":"self"}],"o":{"n":"fsid_t"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"mq_attr"}}],[11,"clone","","",117,{"i":[{"n":"self"}],"o":{"n":"cpu_set_t"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"if_nameindex"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"msginfo"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"mmsghdr"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"sembuf"}}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"input_event"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"input_id"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"input_absinfo"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"input_keymap_entry"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"input_mask"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"ff_replay"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"ff_trigger"}}],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"ff_envelope"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"ff_constant_effect"}}],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"ff_ramp_effect"}}],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"ff_condition_effect"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"ff_periodic_effect"}}],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"ff_rumble_effect"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"ff_effect"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"dl_phdr_info"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"elf32_phdr"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"elf64_phdr"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"ucred"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"mntent"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"posix_spawn_file_actions_t"}}],[11,"clone","","",119,{"i":[{"n":"self"}],"o":{"n":"posix_spawnattr_t"}}],[11,"clone","","",120,{"i":[{"n":"self"}],"o":{"n":"genlmsghdr"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"sockaddr"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"sockaddr_in"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"sockaddr_in6"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"sockaddr_un"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"sockaddr_storage"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"addrinfo"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"sockaddr_nl"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"sockaddr_ll"}}],[11,"clone","","",121,{"i":[{"n":"self"}],"o":{"n":"fd_set"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"tm"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"sched_param"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"dl_info"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"epoll_event"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"utsname"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"lconv"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"sigevent"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"group"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"utimbuf"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"timeval"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"timespec"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"rlimit"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"rusage"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"in_addr"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"in6_addr"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"ip_mreq"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"ipv6_mreq"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"hostent"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"iovec"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"pollfd"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"winsize"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"linger"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"sigval"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"itimerval"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"tms"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"servent"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"protoent"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"__priority_which_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"genlmsghdr"],[3,"fd_set"]]};
searchIndex["lock_api"] = {"doc":"This library provides type-safe and fully-featured `Mutex` and `RwLock` types which wrap a simple raw mutex or rwlock type. This has several benefits: not only does it eliminate a large portion of the work in implementing custom lock types, it also allows users to write code which is generic with regards to different lock implementations.","items":[[3,"GuardSend","lock_api","Marker type which indicates that the Guard type for a lock is `Send`.",null,null],[3,"GuardNoSend","","Marker type which indicates that the Guard type for a lock is not `Send`.",null,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared data",null,null],[3,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.",null,null],[3,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which can point to a subfield of the protected data.",null,null],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",null,null],[3,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.",null,null],[3,"MappedReentrantMutexGuard","","An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a subfield of the protected data.",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a lock when dropped.",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access of a lock when dropped.",null,null],[3,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access of a lock when dropped.",null,null],[3,"MappedRwLockReadGuard","","An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a subfield of the protected data.",null,null],[3,"MappedRwLockWriteGuard","","An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a subfield of the protected data.",null,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",0,{"i":[{"n":"t"}],"o":{"n":"mutex"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",0,{"i":[{"n":"self"}],"o":{"n":"mutexguard"}}],[11,"try_lock","","Attempts to acquire this lock.",0,{"i":[{"n":"self"}],"o":{"g":["mutexguard"],"n":"option"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"force_unlock","","Forcibly unlocks the mutex.",0,{"i":[{"n":"self"}]}],[11,"raw","","Returns the underlying raw mutex object.",0,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",0,{"i":[{"n":"self"}]}],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",0,null],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",0,null],[11,"default","","",0,{"o":{"n":"mutex"}}],[11,"from","","",0,{"i":[{"n":"t"}],"o":{"n":"mutex"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"mutex","","Returns a reference to the original `Mutex` object.",1,{"i":[{"n":"self"}],"o":{"n":"mutex"}}],[11,"map","","Makes a new `MappedMutexGuard` for a component of the locked data.",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"mappedmutexguard"}}],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"u"}}],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",1,{"i":[{"n":"self"}]}],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"u"}}],[11,"bump","","Temporarily yields the mutex to a waiting thread if there is one.",1,{"i":[{"n":"self"}]}],[11,"deref","","",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",1,{"i":[{"n":"self"}]}],[11,"map","","Makes a new `MappedMutexGuard` for a component of the locked data.",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"mappedmutexguard"}}],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",2,{"i":[{"n":"self"}]}],[11,"deref","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",2,{"i":[{"n":"self"}]}],[11,"new","","Creates a new reentrant mutex in an unlocked state ready for use.",3,{"i":[{"n":"t"}],"o":{"n":"reentrantmutex"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"lock","","Acquires a reentrant mutex, blocking the current thread until it is able to do so.",3,{"i":[{"n":"self"}],"o":{"n":"reentrantmutexguard"}}],[11,"try_lock","","Attempts to acquire this lock.",3,{"i":[{"n":"self"}],"o":{"g":["reentrantmutexguard"],"n":"option"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"force_unlock","","Forcibly unlocks the mutex.",3,{"i":[{"n":"self"}]}],[11,"raw","","Returns the underlying raw mutex object.",3,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",3,{"i":[{"n":"self"}]}],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",3,null],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",3,null],[11,"default","","",3,{"o":{"n":"reentrantmutex"}}],[11,"from","","",3,{"i":[{"n":"t"}],"o":{"n":"reentrantmutex"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"remutex","","Returns a reference to the original `ReentrantMutex` object.",4,{"i":[{"n":"self"}],"o":{"n":"reentrantmutex"}}],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of the locked data.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"mappedreentrantmutexguard"}}],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"u"}}],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",4,{"i":[{"n":"self"}]}],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"u"}}],[11,"bump","","Temporarily yields the mutex to a waiting thread if there is one.",4,{"i":[{"n":"self"}]}],[11,"deref","","",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",4,{"i":[{"n":"self"}]}],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of the locked data.",5,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"mappedreentrantmutexguard"}}],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",5,{"i":[{"n":"self"}]}],[11,"deref","","",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",5,{"i":[{"n":"self"}]}],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",6,{"i":[{"n":"t"}],"o":{"n":"rwlock"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"read","","Locks this `RwLock` with shared read access, blocking the current thread until it can be acquired.",6,{"i":[{"n":"self"}],"o":{"n":"rwlockreadguard"}}],[11,"try_read","","Attempts to acquire this `RwLock` with shared read access.",6,{"i":[{"n":"self"}],"o":{"g":["rwlockreadguard"],"n":"option"}}],[11,"write","","Locks this `RwLock` with exclusive write access, blocking the current thread until it can be acquired.",6,{"i":[{"n":"self"}],"o":{"n":"rwlockwriteguard"}}],[11,"try_write","","Attempts to lock this `RwLock` with exclusive write access.",6,{"i":[{"n":"self"}],"o":{"g":["rwlockwriteguard"],"n":"option"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"force_unlock_read","","Forcibly unlocks a read lock.",6,{"i":[{"n":"self"}]}],[11,"force_unlock_write","","Forcibly unlocks a write lock.",6,{"i":[{"n":"self"}]}],[11,"raw","","Returns the underlying raw reader-writer lock object.",6,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"force_unlock_read_fair","","Forcibly unlocks a read lock using a fair unlock procotol.",6,{"i":[{"n":"self"}]}],[11,"force_unlock_write_fair","","Forcibly unlocks a write lock using a fair unlock procotol.",6,{"i":[{"n":"self"}]}],[11,"try_read_for","","Attempts to acquire this `RwLock` with shared read access until a timeout is reached.",6,null],[11,"try_read_until","","Attempts to acquire this `RwLock` with shared read access until a timeout is reached.",6,null],[11,"try_write_for","","Attempts to acquire this `RwLock` with exclusive write access until a timeout is reached.",6,null],[11,"try_write_until","","Attempts to acquire this `RwLock` with exclusive write access until a timeout is reached.",6,null],[11,"read_recursive","","Locks this `RwLock` with shared read access, blocking the current thread until it can be acquired.",6,{"i":[{"n":"self"}],"o":{"n":"rwlockreadguard"}}],[11,"try_read_recursive","","Attempts to acquire this `RwLock` with shared read access.",6,{"i":[{"n":"self"}],"o":{"g":["rwlockreadguard"],"n":"option"}}],[11,"try_read_recursive_for","","Attempts to acquire this `RwLock` with shared read access until a timeout is reached.",6,null],[11,"try_read_recursive_until","","Attempts to acquire this `RwLock` with shared read access until a timeout is reached.",6,null],[11,"upgradable_read","","Locks this `RwLock` with upgradable read access, blocking the current thread until it can be acquired.",6,{"i":[{"n":"self"}],"o":{"n":"rwlockupgradablereadguard"}}],[11,"try_upgradable_read","","Attempts to acquire this `RwLock` with upgradable read access.",6,{"i":[{"n":"self"}],"o":{"g":["rwlockupgradablereadguard"],"n":"option"}}],[11,"try_upgradable_read_for","","Attempts to acquire this `RwLock` with upgradable read access until a timeout is reached.",6,null],[11,"try_upgradable_read_until","","Attempts to acquire this `RwLock` with upgradable read access until a timeout is reached.",6,null],[11,"default","","",6,{"o":{"n":"rwlock"}}],[11,"from","","",6,{"i":[{"n":"t"}],"o":{"n":"rwlock"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"rwlock","","Returns a reference to the original reader-writer lock object.",7,{"i":[{"n":"self"}],"o":{"n":"rwlock"}}],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the locked data.",7,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"mappedrwlockreadguard"}}],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given function.",7,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"u"}}],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",7,{"i":[{"n":"self"}]}],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given function.",7,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"u"}}],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if there is one.",7,{"i":[{"n":"self"}]}],[11,"deref","","",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",7,{"i":[{"n":"self"}]}],[11,"rwlock","","Returns a reference to the original reader-writer lock object.",8,{"i":[{"n":"self"}],"o":{"n":"rwlock"}}],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the locked data.",8,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"mappedrwlockwriteguard"}}],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given function.",8,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"u"}}],[11,"downgrade","","Atomically downgrades a write lock into a read lock without allowing any writers to take exclusive access of the lock in the meantime.",8,{"i":[{"n":"self"}],"o":{"n":"rwlockreadguard"}}],[11,"downgrade_to_upgradable","","Atomically downgrades a write lock into an upgradable read lock without allowing any writers to take exclusive access of the lock in the meantime.",8,{"i":[{"n":"self"}],"o":{"n":"rwlockupgradablereadguard"}}],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",8,{"i":[{"n":"self"}]}],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given function.",8,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"u"}}],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if there is one.",8,{"i":[{"n":"self"}]}],[11,"deref","","",8,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",8,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",8,{"i":[{"n":"self"}]}],[11,"rwlock","","Returns a reference to the original reader-writer lock object.",9,{"i":[{"n":"self"}],"o":{"n":"rwlock"}}],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given function.",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"u"}}],[11,"upgrade","","Atomically upgrades an upgradable read lock lock into a exclusive write lock, blocking the current thread until it can be aquired.",9,{"i":[{"n":"self"}],"o":{"n":"rwlockwriteguard"}}],[11,"try_upgrade","","Tries to atomically upgrade an upgradable read lock into a exclusive write lock.",9,{"i":[{"n":"self"}],"o":{"g":["rwlockwriteguard"],"n":"result"}}],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",9,{"i":[{"n":"self"}]}],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given function.",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"u"}}],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if there is one.",9,{"i":[{"n":"self"}]}],[11,"downgrade","","Atomically downgrades an upgradable read lock lock into a shared read lock without allowing any writers to take exclusive access of the lock in the meantime.",9,{"i":[{"n":"self"}],"o":{"n":"rwlockreadguard"}}],[11,"try_upgrade_for","","Tries to atomically upgrade an upgradable read lock into a exclusive write lock, until a timeout is reached.",9,null],[11,"try_upgrade_until","","Tries to atomically upgrade an upgradable read lock into a exclusive write lock, until a timeout is reached.",9,null],[11,"deref","","",9,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",9,{"i":[{"n":"self"}]}],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the locked data.",10,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"mappedrwlockreadguard"}}],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",10,{"i":[{"n":"self"}]}],[11,"deref","","",10,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",10,{"i":[{"n":"self"}]}],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the locked data.",11,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"mappedrwlockwriteguard"}}],[11,"downgrade","","Atomically downgrades a write lock into a read lock without allowing any writers to take exclusive access of the lock in the meantime.",11,{"i":[{"n":"self"}],"o":{"n":"mappedrwlockreadguard"}}],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",11,{"i":[{"n":"self"}]}],[11,"deref","","",11,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",11,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",11,{"i":[{"n":"self"}]}],[8,"RawMutex","","Basic operations for a mutex.",null,null],[18,"INIT","","Initial value for an unlocked mutex.",12,null],[16,"GuardMarker","","Marker type which determines whether a lock guard should be `Send`. Use one of the `GuardSend` or `GuardNoSend` helper types here.",12,null],[10,"lock","","Acquires this mutex, blocking the current thread until it is able to do so.",12,{"i":[{"n":"self"}]}],[10,"try_lock","","Attempts to acquire this mutex without blocking.",12,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"unlock","","Unlocks this mutex.",12,{"i":[{"n":"self"}]}],[8,"RawMutexFair","","Additional methods for mutexes which support fair unlocking.",null,null],[10,"unlock_fair","","Unlocks this mutex using a fair unlock protocol.",13,{"i":[{"n":"self"}]}],[11,"bump","","Temporarily yields the mutex to a waiting thread if there is one.",13,{"i":[{"n":"self"}]}],[8,"RawMutexTimed","","Additional methods for mutexes which support locking with timeouts.",null,null],[16,"Duration","","Duration type used for `try_lock_for`.",14,null],[16,"Instant","","Instant type used for `try_lock_until`.",14,null],[10,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",14,null],[10,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",14,null],[8,"GetThreadId","","Helper trait which returns a non-zero thread ID.",null,null],[18,"INIT","","Initial value.",15,null],[10,"nonzero_thread_id","","Returns a non-zero thread ID which identifies the current thread of execution.",15,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[8,"RawRwLock","","Basic operations for a reader-writer lock.",null,null],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,null],[16,"GuardMarker","","Marker type which determines whether a lock guard should be `Send`. Use one of the `GuardSend` or `GuardNoSend` helper types here.",16,null],[10,"lock_shared","","Acquires a shared lock, blocking the current thread until it is able to do so.",16,{"i":[{"n":"self"}]}],[10,"try_lock_shared","","Attempts to acquire a shared lock without blocking.",16,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"unlock_shared","","Releases a shared lock.",16,{"i":[{"n":"self"}]}],[10,"lock_exclusive","","Acquires an exclusive lock, blocking the current thread until it is able to do so.",16,{"i":[{"n":"self"}]}],[10,"try_lock_exclusive","","Attempts to acquire an exclusive lock without blocking.",16,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"unlock_exclusive","","Releases an exclusive lock.",16,{"i":[{"n":"self"}]}],[8,"RawRwLockFair","","Additional methods for RwLocks which support fair unlocking.",null,null],[10,"unlock_shared_fair","","Releases a shared lock using a fair unlock protocol.",17,{"i":[{"n":"self"}]}],[10,"unlock_exclusive_fair","","Releases an exclusive lock using a fair unlock protocol.",17,{"i":[{"n":"self"}]}],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if there is one.",17,{"i":[{"n":"self"}]}],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread if there is one.",17,{"i":[{"n":"self"}]}],[8,"RawRwLockDowngrade","","Additional methods for RwLocks which support atomically downgrading an exclusive lock to a shared lock.",null,null],[10,"downgrade","","Atomically downgrades an exclusive lock into a shared lock without allowing any thread to take an exclusive lock in the meantime.",18,{"i":[{"n":"self"}]}],[8,"RawRwLockTimed","","Additional methods for RwLocks which support locking with timeouts.",null,null],[16,"Duration","","Duration type used for `try_lock_for`.",19,null],[16,"Instant","","Instant type used for `try_lock_until`.",19,null],[10,"try_lock_shared_for","","Attempts to acquire a shared lock until a timeout is reached.",19,null],[10,"try_lock_shared_until","","Attempts to acquire a shared lock until a timeout is reached.",19,null],[10,"try_lock_exclusive_for","","Attempts to acquire an exclusive lock until a timeout is reached.",19,null],[10,"try_lock_exclusive_until","","Attempts to acquire an exclusive lock until a timeout is reached.",19,null],[8,"RawRwLockRecursive","","Additional methods for RwLocks which support recursive read locks.",null,null],[10,"lock_shared_recursive","","Acquires a shared lock without deadlocking in case of a recursive lock.",20,{"i":[{"n":"self"}]}],[10,"try_lock_shared_recursive","","Attempts to acquire a shared lock without deadlocking in case of a recursive lock.",20,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"RawRwLockRecursiveTimed","","Additional methods for RwLocks which support recursive read locks and timeouts.",null,null],[10,"try_lock_shared_recursive_for","","Attempts to acquire a shared lock until a timeout is reached, without deadlocking in case of a recursive lock.",21,null],[10,"try_lock_shared_recursive_until","","Attempts to acquire a shared lock until a timeout is reached, without deadlocking in case of a recursive lock.",21,null],[8,"RawRwLockUpgrade","","Additional methods for RwLocks which support atomically upgrading a shared lock to an exclusive lock.",null,null],[10,"lock_upgradable","","Acquires an upgradable lock, blocking the current thread until it is able to do so.",22,{"i":[{"n":"self"}]}],[10,"try_lock_upgradable","","Attempts to acquire an upgradable lock without blocking.",22,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"unlock_upgradable","","Releases an upgradable lock.",22,{"i":[{"n":"self"}]}],[10,"upgrade","","Upgrades an upgradable lock to an exclusive lock.",22,{"i":[{"n":"self"}]}],[10,"try_upgrade","","Attempts to upgrade an upgradable lock to an exclusive lock without blocking.",22,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"RawRwLockUpgradeFair","","Additional methods for RwLocks which support upgradable locks and fair unlocking.",null,null],[10,"unlock_upgradable_fair","","Releases an upgradable lock using a fair unlock protocol.",23,{"i":[{"n":"self"}]}],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread if there is one.",23,{"i":[{"n":"self"}]}],[8,"RawRwLockUpgradeDowngrade","","Additional methods for RwLocks which support upgradable locks and lock downgrading.",null,null],[10,"downgrade_upgradable","","Downgrades an upgradable lock to a shared lock.",24,{"i":[{"n":"self"}]}],[10,"downgrade_to_upgradable","","Downgrades an exclusive lock to an upgradable lock.",24,{"i":[{"n":"self"}]}],[8,"RawRwLockUpgradeTimed","","Additional methods for RwLocks which support upgradable locks and locking with timeouts.",null,null],[10,"try_lock_upgradable_for","","Attempts to acquire an upgradable lock until a timeout is reached.",25,null],[10,"try_lock_upgradable_until","","Attempts to acquire an upgradable lock until a timeout is reached.",25,null],[10,"try_upgrade_for","","Attempts to upgrade an upgradable lock to an exclusive lock until a timeout is reached.",25,null],[10,"try_upgrade_until","","Attempts to upgrade an upgradable lock to an exclusive lock until a timeout is reached.",25,null],[18,"INIT","","Initial value for an unlocked mutex.",12,null],[11,"bump","","Temporarily yields the mutex to a waiting thread if there is one.",13,{"i":[{"n":"self"}]}],[18,"INIT","","Initial value.",15,null],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,null],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if there is one.",17,{"i":[{"n":"self"}]}],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread if there is one.",17,{"i":[{"n":"self"}]}],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread if there is one.",23,{"i":[{"n":"self"}]}]],"paths":[[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level filter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has already been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging framework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"o":{"n":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"i":[{"n":"m"}],"o":{"g":["setloggererror"],"n":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"i":[{"n":"m"}],"o":{"g":["setloggererror"],"n":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"o":{"g":["box","shutdownloggererror"],"n":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"o":{"g":["shutdownloggererror"],"n":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,{"i":[{"n":"self"},{"n":"logmetadata"}],"o":{"n":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"i":[{"n":"self"},{"n":"logrecord"}]}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"loglevel"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"loglevel"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"loglevelfilter"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"loglevel"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"loglevelfilter"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"loglevel"}],"o":{"n":"ordering"}}],[11,"from_str","","",0,{"i":[{"n":"str"}],"o":{"g":["loglevel"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"o":{"n":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"i":[{"n":"self"}],"o":{"n":"loglevelfilter"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"loglevelfilter"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"loglevelfilter"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"loglevel"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"loglevelfilter"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"loglevel"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"loglevelfilter"}],"o":{"n":"ordering"}}],[11,"from_str","","",1,{"i":[{"n":"str"}],"o":{"g":["loglevelfilter"],"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"o":{"n":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"i":[{"n":"self"}],"o":{"g":["loglevel"],"n":"option"}}],[11,"args","","The message body.",3,{"i":[{"n":"self"}],"o":{"n":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"i":[{"n":"self"}],"o":{"n":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"i":[{"n":"self"}],"o":{"n":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"i":[{"n":"self"}],"o":{"n":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"level","","The verbosity level of the message.",4,{"i":[{"n":"self"}],"o":{"n":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"loglocation"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"module_path","","The module path of the message.",5,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"file","","The source file containing the message.",5,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"line","","The line containing the message.",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"i":[{"n":"self"}],"o":{"n":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"i":[{"n":"self"},{"n":"loglevelfilter"}]}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",7,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",8,{"i":[{"n":"self"}],"o":{"n":"str"}}],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["matches"] = {"doc":"","items":[[14,"matches","matches","Check if an expression matches a refutable pattern.",null,null],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",null,null],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern using debug assertions.",null,null]],"paths":[]};
searchIndex["memchr"] = {"doc":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface to the corresponding functions in `libc`.","items":[[3,"Memchr","memchr","An iterator for memchr",null,null],[3,"Memchr2","","An iterator for Memchr2",null,null],[3,"Memchr3","","An iterator for Memchr3",null,null],[5,"memchr","","A safe interface to `memchr`.",null,null],[5,"memrchr","","A safe interface to `memrchr`.",null,null],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,null],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,null],[11,"new","","Creates a new iterator that yields all positions of needle in haystack.",0,null],[11,"next","","",0,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"size_hint","","",0,null],[11,"next_back","","",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"new","","Creates a new iterator that yields all positions of needle in haystack.",1,null],[11,"next","","",1,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"size_hint","","",1,null],[11,"new","","Create a new Memchr2 that's initalized to zero with a haystack",2,null],[11,"next","","",2,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"size_hint","","",2,null]],"paths":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["memoffset"] = {"doc":"A crate used for calculating offsets of struct members and their spans.","items":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the start of the struct. This macro supports arbitrary amount of subscripts and recursive member-accesses.",null,null],[14,"span_of","","Produces a range instance representing the sub-slice containing the specified member.",null,null]],"paths":[]};
searchIndex["migrations_internals"] = {"doc":"Provides functions for maintaining database schema.","items":[[8,"Migration","migrations_internals","Represents a migration that interacts with diesel",null,null],[10,"version","","Get the migration version",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[10,"run","","Apply this migration",0,{"i":[{"n":"self"},{"n":"simpleconnection"}],"o":{"g":["runmigrationserror"],"n":"result"}}],[10,"revert","","Revert this migration",0,{"i":[{"n":"self"},{"n":"simpleconnection"}],"o":{"g":["runmigrationserror"],"n":"result"}}],[11,"file_path","","Get the migration file path",0,{"i":[{"n":"self"}],"o":{"g":["path"],"n":"option"}}],[4,"RunMigrationsError","","Errors that occur while running migrations",null,null],[13,"MigrationError","","A general migration error occured",1,null],[13,"QueryError","","The provided migration included an invalid query",1,null],[13,"EmptyMigration","","The provided migration was empty",1,null],[4,"MigrationError","","Errors that occur while preparing to run migrations",null,null],[13,"MigrationDirectoryNotFound","","The migration directory wasn't found",2,null],[13,"UnknownMigrationFormat","","Provided migration was in an unknown format",2,null],[13,"IoError","","General system IO error",2,null],[13,"UnknownMigrationVersion","","Provided migration had an incompatible version number",2,null],[13,"NoMigrationRun","","No migrations had to be/ could be run",2,null],[3,"MigrationName","","",null,null],[12,"migration","","",3,null],[5,"name","","",null,{"i":[{"n":"migration"}],"o":{"n":"migrationname"}}],[5,"migration_from","","",null,{"i":[{"n":"pathbuf"}],"o":{"g":["box","migrationerror"],"n":"result"}}],[5,"run_pending_migrations","","Runs all migrations that have not yet been run. This function will print all progress to stdout. This function will return an `Err` if some error occurs reading the migrations, or if any migration fails to run. Each migration is run in its own transaction, so some migrations may be committed, even if a later migration fails to run.",null,{"i":[{"n":"conn"}],"o":{"g":["runmigrationserror"],"n":"result"}}],[5,"mark_migrations_in_directory","","Compares migrations found in `migrations_dir` to those that have been applied. Returns a list of pathbufs and whether they have been applied.",null,{"i":[{"n":"conn"},{"n":"path"}],"o":{"g":["vec","runmigrationserror"],"n":"result"}}],[5,"any_pending_migrations","","See the module level documentation for information on how migrations should be structured, and where Diesel will look for them by default.",null,{"i":[{"n":"conn"}],"o":{"g":["bool","runmigrationserror"],"n":"result"}}],[5,"revert_latest_migration","","Reverts the last migration that was run. Returns the version that was reverted. Returns an `Err` if no migrations have ever been run.",null,{"i":[{"n":"conn"}],"o":{"g":["string","runmigrationserror"],"n":"result"}}],[5,"revert_latest_migration_in_directory","","",null,{"i":[{"n":"conn"},{"n":"path"}],"o":{"g":["string","runmigrationserror"],"n":"result"}}],[5,"run_migrations","","Run all pending migrations in the given list. Apps should likely be calling `run_pending_migrations` or `run_pending_migrations_in_directory` instead.",null,{"i":[{"n":"conn"},{"n":"list"},{"n":"write"}],"o":{"g":["runmigrationserror"],"n":"result"}}],[5,"find_migrations_directory","","Returns the directory containing migrations. Will look at for $PWD/migrations. If it is not found, it will search the parents of the current directory, until it reaches the root directory.  Returns `MigrationError::MigrationDirectoryNotFound` if no directory is found.",null,{"o":{"g":["pathbuf","migrationerror"],"n":"result"}}],[5,"search_for_migrations_directory","","Searches for the migrations directory relative to the given path. See `find_migrations_directory` for more details.",null,{"i":[{"n":"path"}],"o":{"g":["pathbuf","migrationerror"],"n":"result"}}],[0,"migration","","",null,null],[3,"MigrationName","migrations_internals::migration","",null,null],[12,"migration","","",3,null],[5,"name","","",null,{"i":[{"n":"migration"}],"o":{"n":"migrationname"}}],[5,"migration_from","","",null,{"i":[{"n":"pathbuf"}],"o":{"g":["box","migrationerror"],"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"migrationname"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"file_path","migrations_internals","Get the migration file path",0,{"i":[{"n":"self"}],"o":{"g":["path"],"n":"option"}}],[11,"file_path","","Get the migration file path",0,{"i":[{"n":"self"}],"o":{"g":["path"],"n":"option"}}],[11,"file_path","","Get the migration file path",0,{"i":[{"n":"self"}],"o":{"g":["path"],"n":"option"}}],[7,"TIMESTAMP_FORMAT","","",null,null],[8,"MigrationConnection","","A connection which can be passed to the migration methods. This exists only to wrap up some constraints which are meant to hold for all connections. This trait will go away at some point in the future. Any Diesel connection should be useable where this trait is required.",null,null],[10,"previously_run_migration_versions","","",4,{"i":[{"n":"self"}],"o":{"g":["hashset"],"n":"queryresult"}}],[10,"latest_run_migration_version","","",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"queryresult"}}],[10,"insert_new_migration","","",4,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"queryresult"}}],[11,"from","","",1,{"i":[{"n":"error"}],"o":{"n":"runmigrationserror"}}],[11,"from","","",1,{"i":[{"n":"migrationerror"}],"o":{"n":"runmigrationserror"}}],[11,"from","","",2,{"i":[{"n":"error"}],"o":{"n":"migrationerror"}}],[11,"from","","",1,{"i":[{"n":"error"}],"o":{"n":"runmigrationserror"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"runmigrationserror"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"runmigrationserror"}],"o":{"n":"bool"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"migrationerror"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"description","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}]],"paths":[[8,"Migration"],[4,"RunMigrationsError"],[4,"MigrationError"],[3,"MigrationName"],[8,"MigrationConnection"]]};
searchIndex["migrations_macros"] = {"doc":"","items":[[5,"derive_embed_migrations","migrations_macros","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}]],"paths":[]};
searchIndex["mime"] = {"doc":"Mime","items":[[3,"Mime","mime","Mime, or Media Type. Encapsulates common registers types.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[4,"TopLevel","","",null,null],[13,"Star","","",1,null],[13,"Text","","",1,null],[13,"Image","","",1,null],[13,"Audio","","",1,null],[13,"Video","","",1,null],[13,"Application","","",1,null],[13,"Multipart","","",1,null],[13,"Message","","",1,null],[13,"Model","","",1,null],[13,"Ext","","",1,null],[4,"SubLevel","","",null,null],[13,"Star","","",2,null],[13,"Plain","","",2,null],[13,"Html","","",2,null],[13,"Xml","","",2,null],[13,"Javascript","","",2,null],[13,"Css","","",2,null],[13,"EventStream","","",2,null],[13,"Json","","",2,null],[13,"WwwFormUrlEncoded","","",2,null],[13,"Msgpack","","",2,null],[13,"OctetStream","","",2,null],[13,"FormData","","",2,null],[13,"Png","","",2,null],[13,"Gif","","",2,null],[13,"Bmp","","",2,null],[13,"Jpeg","","",2,null],[13,"Mpeg","","",2,null],[13,"Mp4","","",2,null],[13,"Ogg","","",2,null],[13,"Ext","","",2,null],[4,"Attr","","",null,null],[13,"Charset","","",3,null],[13,"Boundary","","",3,null],[13,"Q","","",3,null],[13,"Ext","","",3,null],[4,"Value","","",null,null],[13,"Utf8","","",4,null],[13,"Ext","","",4,null],[6,"Param","","",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"mime"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",0,null],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"toplevel"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,null],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"as_str","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"toplevel"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",1,{"i":[{"n":"str"}],"o":{"g":["toplevel"],"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"sublevel"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",2,null],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",2,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"le","","",2,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"gt","","",2,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"ge","","",2,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"as_str","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"sublevel"}],"o":{"n":"bool"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",2,{"i":[{"n":"str"}],"o":{"g":["sublevel"],"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"attr"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"attr"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",3,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"le","","",3,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"gt","","",3,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"ge","","",3,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"as_str","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",3,{"i":[{"n":"str"}],"o":{"g":["attr"],"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"value"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"value"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",4,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"le","","",4,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"gt","","",4,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"ge","","",4,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"as_str","","",4,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",4,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",4,{"i":[{"n":"str"}],"o":{"g":["value"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_param","","",0,{"i":[{"n":"self"},{"n":"a"}],"o":{"g":["value"],"n":"option"}}],[11,"from_str","","",0,{"i":[{"n":"str"}],"o":{"g":["mime"],"n":"result"}}],[14,"mime","","Easily create a Mime without having to import so many enums.",null,null]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"]]};
searchIndex["mime_guess"] = {"doc":"Guessing of MIME types by file extension.","items":[[3,"Mime","mime_guess","Mime, or Media Type. Encapsulates common registers types.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[5,"guess_mime_type","","Guess the MIME type of `path` by its extension (as defined by `Path::extension()`).",null,{"i":[{"n":"p"}],"o":{"n":"mime"}}],[5,"guess_mime_type_opt","","Guess the MIME type of `path` by its extension (as defined by `Path::extension()`).",null,{"i":[{"n":"p"}],"o":{"g":["mime"],"n":"option"}}],[5,"get_mime_type","","Get the MIME type associated with a file extension.",null,{"i":[{"n":"str"}],"o":{"n":"mime"}}],[5,"get_mime_type_opt","","Get the MIME type associated with a file extension.",null,{"i":[{"n":"str"}],"o":{"g":["mime"],"n":"option"}}],[5,"get_mime_type_str","","Get the MIME type string associated with a file extension. Case-insensitive.",null,{"i":[{"n":"str"}],"o":{"g":["str"],"n":"option"}}],[5,"get_mime_extensions","","Get a list of known extensions for a given `Mime`. ",null,{"i":[{"n":"mime"}],"o":{"n":"option"}}],[5,"get_mime_extensions_str","","Get a list of known extensions for a MIME type string. ",null,{"i":[{"n":"str"}],"o":{"n":"option"}}],[5,"get_extensions","","Get the extensions for a given top-level and sub-level of a MIME type (`{toplevel}/{sublevel}`).",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"n":"option"}}],[5,"octet_stream","","Get the MIME type for `application/octet-stream` (generic binary stream)",null,{"o":{"n":"mime"}}],[11,"get_param","","",0,{"i":[{"n":"self"},{"n":"a"}],"o":{"g":["value"],"n":"option"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"mime"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"bool"}}],[11,"from_str","","",0,{"i":[{"n":"str"}],"o":{"g":["mime"],"n":"result"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"mime"}],"o":{"n":"ordering"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}]],"paths":[[3,"Mime"]]};
searchIndex["modifier"] = {"doc":"Overloadable modification through both owned and mutable references to a type with minimal code duplication.","items":[[8,"Modifier","modifier","Allows use of the implemented type as an argument to Set::set.",null,null],[10,"modify","","Modify `F` with self.",0,{"i":[{"n":"self"},{"n":"f"}]}],[8,"Set","","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",1,{"i":[{"n":"self"},{"n":"m"}],"o":{"n":"self"}}],[11,"set_mut","","Modify self through a mutable reference with the provided modifier.",1,{"i":[{"n":"self"},{"n":"m"}],"o":{"n":"self"}}]],"paths":[[8,"Modifier"],[8,"Set"]]};
searchIndex["nodrop"] = {"doc":"The nodrop crate has the following cargo feature flags:","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",null,null],[11,"new","","Create a new NoDrop.",0,{"i":[{"n":"t"}],"o":{"n":"nodrop"}}],[11,"into_inner","","Extract the inner value.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",0,{"i":[{"n":"self"}]}],[11,"deref","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}]],"paths":[[3,"NoDrop"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[8,"Integer","num","",null,null],[10,"div_floor","","Floored integer division.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[8,"Num","","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",1,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",1,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",12,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",12,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",12,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",12,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["i128"],"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["u128"],"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i128"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u128"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["i128"],"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["u128"],"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i128"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u128"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",16,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[0,"pow","num","",null,null],[8,"Pow","num::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",17,null],[10,"pow","","Returns `self` to the power `rhs`.",17,null],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"checked_pow","num","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"integer","","",null,null],[0,"iter","","",null,null],[0,"traits","","",null,null]],"paths":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"Pow"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs available on the current system.","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,{"o":{"n":"usize"}}],[5,"get_physical","","Returns the number of physical cores of the current system.",null,{"o":{"n":"usize"}}]],"paths":[]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",null,null],[5,"div_rem","","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"binomial","","Calculate the binomial coefficient.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"multinomial","","Calculate the multinomial coefficient.",null,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,null],[11,"new","","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",1,{"i":[{"n":"t"}],"o":{"n":"iterbinomial"}}],[11,"next","","",1,{"i":[{"n":"self"}],"o":{"n":"option"}}]],"paths":[[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"next_back","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[11,"next_back","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"rangestep"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"i":[{"n":"t"},{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"o":{"n":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"o":{"n":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"o":{"n":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"o":{"n":"self"}}],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"signum","","Returns the sign of the number.",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",5,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",5,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",6,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",7,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",8,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",9,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't be represented.",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't be represented, like signed `MIN` values that can't be positive, or non-zero unsigned values that can't be negative.",11,{"i":[{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",null,null],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",null,null],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",14,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",15,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",16,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.",null,null],[16,"Output","","The result after applying the operator.",17,null],[10,"inv","","Returns the multiplicative inverse of `self`.",17,null],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","The fused multiply-add operation. Computes (self * a) + b with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",18,null],[10,"mul_add","","Performs the fused multiply-add operation.",18,null],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",19,{"i":[{"n":"self"},{"n":"a"},{"n":"b"}]}],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",20,{"o":{"n":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",20,{"o":{"n":"self"}}],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with `no_std`.",null,null],[10,"infinity","","Returns positive infinity.",21,{"o":{"n":"self"}}],[10,"neg_infinity","","Returns negative infinity.",21,{"o":{"n":"self"}}],[10,"nan","","Returns NaN.",21,{"o":{"n":"self"}}],[10,"neg_zero","","Returns `-0.0`.",21,{"o":{"n":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",21,{"o":{"n":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",21,{"o":{"n":"self"}}],[10,"epsilon","","Returns epsilon, a small positive value.",21,{"o":{"n":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",21,{"o":{"n":"self"}}],[11,"is_nan","","Returns `true` if the number is NaN.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_infinite","","Returns `true` if the number is infinite.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_normal","","Returns `true` if the number is neither zero, infinite, subnormal or NaN.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",21,{"i":[{"n":"self"}],"o":{"n":"fpcategory"}}],[11,"floor","","Returns the largest integer less than or equal to a number.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"ceil","","Returns the smallest integer greater than or equal to a number.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"trunc","","Return the integer part of a number.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fract","","Returns the fractional part of a number.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"abs","","Computes the absolute value of `self`. Returns `FloatCore::nan()` if the number is `FloatCore::nan()`.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"signum","","Returns a number that represents the sign of `self`.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `FloatCore::infinity()`, and since Rust 1.20 also `FloatCore::nan()`.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `FloatCore::neg_infinity()`, and since Rust 1.20 also `-FloatCore::nan()`.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"min","","Returns the minimum of the two numbers.",21,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"max","","Returns the maximum of the two numbers.",21,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the number.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"powi","","Raise a number to an integer power.",21,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"self"}}],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",21,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",22,{"o":{"n":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",22,{"o":{"n":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",22,{"o":{"n":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",22,{"o":{"n":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",22,{"o":{"n":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",22,{"o":{"n":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",22,{"o":{"n":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",22,{"o":{"n":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",22,{"o":{"n":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",22,{"o":{"n":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",22,{"o":{"n":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",22,{"o":{"n":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",22,{"o":{"n":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",22,{"o":{"n":"self"}}],[10,"PI","","Return Archimedes’ constant.",22,{"o":{"n":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",22,{"o":{"n":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"i":[{"n":"t"}],"o":{"n":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",23,{"i":[{"n":"self"}],"o":{"g":["isize"],"n":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",23,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",23,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",23,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",23,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"to_i128","","Converts the value of `self` to an `i128`.",23,{"i":[{"n":"self"}],"o":{"g":["i128"],"n":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",23,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",23,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",23,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",23,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",23,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"option"}}],[11,"to_u128","","Converts the value of `self` to an `u128`.",23,{"i":[{"n":"self"}],"o":{"g":["u128"],"n":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",23,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",23,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"isize"}],"o":{"n":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"i8"}],"o":{"n":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"i16"}],"o":{"n":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"i32"}],"o":{"n":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"i64"}],"o":{"n":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"i128"}],"o":{"n":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"usize"}],"o":{"n":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"u8"}],"o":{"n":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"u16"}],"o":{"n":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"u32"}],"o":{"n":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"u64"}],"o":{"n":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"u128"}],"o":{"n":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"f32"}],"o":{"n":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",24,{"i":[{"n":"f64"}],"o":{"n":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",25,{"i":[{"n":"t"}],"o":{"n":"option"}}],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",26,{"i":[{"n":"self"}],"o":{"n":"t"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",27,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",27,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",27,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",27,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",27,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"option"}}],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",28,null],[10,"pow","","Returns `self` to the power `rhs`.",28,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",29,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",29,{"i":[{"n":"str"},{"n":"u32"}],"o":{"n":"result"}}],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",null,null],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",null,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Bounded"],[8,"FloatCore"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"PrimInt"],[8,"Pow"],[8,"Num"]]};
searchIndex["openssl"] = {"doc":"","items":[[5,"init","openssl","",null,null],[0,"aes","","Low level AES IGE functionality",null,null],[3,"KeyError","openssl::aes","Provides Error handling for parsing keys.",null,null],[3,"AesKey","","The key used to encrypt or decrypt cipher blocks.",null,null],[5,"aes_ige","","Performs AES IGE encryption or decryption",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_encrypt","","Prepares a key for encryption.",1,null],[11,"new_decrypt","","Prepares a key for decryption.",1,null],[0,"asn1","openssl","Defines the format of certificiates",null,null],[3,"Asn1GeneralizedTime","openssl::asn1","Non-UTC representation of time",null,null],[3,"Asn1GeneralizedTimeRef","","Reference to a [`Asn1GeneralizedTime`]",null,null],[3,"Asn1Time","","Time storage and comparison",null,null],[3,"Asn1TimeRef","","Reference to an [`Asn1Time`]",null,null],[3,"Asn1String","","Primary ASN.1 type used by OpenSSL",null,null],[3,"Asn1StringRef","","Reference to [`Asn1String`]",null,null],[3,"Asn1Integer","","Numeric representation",null,null],[3,"Asn1IntegerRef","","Reference to [`Asn1Integer`]",null,null],[3,"Asn1BitString","","Sequence of bytes",null,null],[3,"Asn1BitStringRef","","Reference to [`Asn1BitString`]",null,null],[3,"Asn1Object","","Object Identifier",null,null],[3,"Asn1ObjectRef","","Reference to [`Asn1Object`]",null,null],[11,"from_ptr","","",2,null],[11,"as_ptr","","",2,null],[11,"drop","","",2,{"i":[{"n":"self"}]}],[11,"deref","","",2,{"i":[{"n":"self"}],"o":{"n":"asn1generalizedtimeref"}}],[11,"deref_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"asn1generalizedtimeref"}}],[11,"borrow","","",2,{"i":[{"n":"self"}],"o":{"n":"asn1generalizedtimeref"}}],[11,"as_ref","","",2,{"i":[{"n":"self"}],"o":{"n":"asn1generalizedtimeref"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_ptr","","",4,null],[11,"as_ptr","","",4,null],[11,"drop","","",4,{"i":[{"n":"self"}]}],[11,"deref","","",4,{"i":[{"n":"self"}],"o":{"n":"asn1timeref"}}],[11,"deref_mut","","",4,{"i":[{"n":"self"}],"o":{"n":"asn1timeref"}}],[11,"borrow","","",4,{"i":[{"n":"self"}],"o":{"n":"asn1timeref"}}],[11,"as_ref","","",4,{"i":[{"n":"self"}],"o":{"n":"asn1timeref"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"days_from_now","","Creates a new time on specified interval in days from now",4,{"i":[{"n":"u32"}],"o":{"g":["asn1time","errorstack"],"n":"result"}}],[11,"from_ptr","","",6,null],[11,"as_ptr","","",6,null],[11,"drop","","",6,{"i":[{"n":"self"}]}],[11,"deref","","",6,{"i":[{"n":"self"}],"o":{"n":"asn1stringref"}}],[11,"deref_mut","","",6,{"i":[{"n":"self"}],"o":{"n":"asn1stringref"}}],[11,"borrow","","",6,{"i":[{"n":"self"}],"o":{"n":"asn1stringref"}}],[11,"as_ref","","",6,{"i":[{"n":"self"}],"o":{"n":"asn1stringref"}}],[11,"as_utf8","","Converts the ASN.1 underlying format to UTF8",7,{"i":[{"n":"self"}],"o":{"g":["opensslstring","errorstack"],"n":"result"}}],[11,"as_slice","","Return the string as an array of bytes",7,null],[11,"len","","Return the length of the Asn1String (number of bytes)",7,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"from_ptr","","",8,null],[11,"as_ptr","","",8,null],[11,"drop","","",8,{"i":[{"n":"self"}]}],[11,"deref","","",8,{"i":[{"n":"self"}],"o":{"n":"asn1integerref"}}],[11,"deref_mut","","",8,{"i":[{"n":"self"}],"o":{"n":"asn1integerref"}}],[11,"borrow","","",8,{"i":[{"n":"self"}],"o":{"n":"asn1integerref"}}],[11,"as_ref","","",8,{"i":[{"n":"self"}],"o":{"n":"asn1integerref"}}],[11,"get","","Returns value of ASN.1 integer, or -1 if there is an error, and 0 if the integer is Null.",9,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"set","","Sets the ASN.1 value to the value of a signed 32-bit integer, for larger numbers see [`bn`].",9,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"from_ptr","","",10,null],[11,"as_ptr","","",10,null],[11,"drop","","",10,{"i":[{"n":"self"}]}],[11,"deref","","",10,{"i":[{"n":"self"}],"o":{"n":"asn1bitstringref"}}],[11,"deref_mut","","",10,{"i":[{"n":"self"}],"o":{"n":"asn1bitstringref"}}],[11,"borrow","","",10,{"i":[{"n":"self"}],"o":{"n":"asn1bitstringref"}}],[11,"as_ref","","",10,{"i":[{"n":"self"}],"o":{"n":"asn1bitstringref"}}],[11,"as_slice","","Returns the Asn1BitString as a slice",11,null],[11,"len","","Length of Asn1BitString in number of bytes.",11,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"from_ptr","","",12,null],[11,"as_ptr","","",12,null],[11,"drop","","",12,{"i":[{"n":"self"}]}],[11,"deref","","",12,{"i":[{"n":"self"}],"o":{"n":"asn1objectref"}}],[11,"deref_mut","","",12,{"i":[{"n":"self"}],"o":{"n":"asn1objectref"}}],[11,"borrow","","",12,{"i":[{"n":"self"}],"o":{"n":"asn1objectref"}}],[11,"as_ref","","",12,{"i":[{"n":"self"}],"o":{"n":"asn1objectref"}}],[11,"nid","","Returns the NID associated with this OID.",13,{"i":[{"n":"self"}],"o":{"n":"nid"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"bn","openssl","BigNum implementation",null,null],[3,"MsbOption","openssl::bn","Options for the most significant bits of a randomly generated `BigNum`.",null,null],[3,"BigNumContext","","Temporary storage for BigNums on the secure heap",null,null],[3,"BigNumContextRef","","Reference to [`BigNumContext`]",null,null],[3,"BigNum","","Dynamically sized large number impelementation",null,null],[3,"BigNumRef","","Reference to a [`BigNum`]",null,null],[17,"MSB_MAYBE_ZERO","","The most significant bit of the number may be 0.",null,null],[17,"MSB_ONE","","The most significant bit of the number must be 1.",null,null],[17,"TWO_MSB_ONE","","The most significant two bits of the number must be 1.",null,null],[11,"from_ptr","","",14,null],[11,"as_ptr","","",14,null],[11,"drop","","",14,{"i":[{"n":"self"}]}],[11,"deref","","",14,{"i":[{"n":"self"}],"o":{"n":"bignumcontextref"}}],[11,"deref_mut","","",14,{"i":[{"n":"self"}],"o":{"n":"bignumcontextref"}}],[11,"borrow","","",14,{"i":[{"n":"self"}],"o":{"n":"bignumcontextref"}}],[11,"as_ref","","",14,{"i":[{"n":"self"}],"o":{"n":"bignumcontextref"}}],[11,"new","","Returns a new `BigNumContext`.",14,{"o":{"g":["bignumcontext","errorstack"],"n":"result"}}],[11,"from_ptr","","",15,null],[11,"as_ptr","","",15,null],[11,"drop","","",15,{"i":[{"n":"self"}]}],[11,"deref","","",15,{"i":[{"n":"self"}],"o":{"n":"bignumref"}}],[11,"deref_mut","","",15,{"i":[{"n":"self"}],"o":{"n":"bignumref"}}],[11,"borrow","","",15,{"i":[{"n":"self"}],"o":{"n":"bignumref"}}],[11,"as_ref","","",15,{"i":[{"n":"self"}],"o":{"n":"bignumref"}}],[11,"clear","","Erases the memory used by this `BigNum`, resetting its value to 0.",16,{"i":[{"n":"self"}]}],[11,"add_word","","Adds a `u32` to `self`.",16,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"sub_word","","Subtracts a `u32` from `self`.",16,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"mul_word","","Multiplies a `u32` by `self`.",16,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"div_word","","Divides `self` by a `u32`, returning the remainder.",16,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["u64","errorstack"],"n":"result"}}],[11,"mod_word","","Returns the result of `self` modulo `w`.",16,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["u64","errorstack"],"n":"result"}}],[11,"rand_range","","Places a cryptographically-secure pseudo-random nonnegative number less than `self` in `rnd`.",16,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"pseudo_rand_range","","The cryptographically weak counterpart to `rand_in_range`.",16,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 << n)`.",16,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &= ~(1 << n)`.",16,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1, `false` otherwise.",16,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"bool"}}],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",16,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"lshift1","","Places `a << 1` in `self`.  Equivalent to `self * 2`.",16,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"rshift1","","Places `a >> 1` in `self`. Equivalent to `self / 2`.",16,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"checked_add","","Places `a + b` in `self`.  [`core::ops::Add`] is also implemented for `BigNumRef`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"checked_sub","","Places `a - b` in `self`. [`core::ops::Sub`] is also implemented for `BigNumRef`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"lshift","","Places `a << n` in `self`.  Equivalent to `a * 2 ^ n`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"i32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"rshift","","Places `a >> n` in `self`. Equivalent to `a / 2 ^ n`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"i32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"to_owned","","Creates a new BigNum with the same value.",16,{"i":[{"n":"self"}],"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"set_negative","","Sets the sign of `self`.  Pass true to set `self` to a negative.  False sets `self` positive.",16,{"i":[{"n":"self"},{"n":"bool"}]}],[11,"ucmp","","Compare the absolute values of `self` and `oth`.",16,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"n":"ordering"}}],[11,"is_negative","","Returns `true` if `self` is negative.",16,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"num_bits","","Returns the number of significant bits in `self`.",16,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"num_bytes","","Returns the size of `self` in bytes. Implemented natively.",16,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"rand","","Generates a cryptographically strong pseudo-random `BigNum`, placing it in `self`.",16,{"i":[{"n":"self"},{"n":"i32"},{"n":"msboption"},{"n":"bool"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"pseudo_rand","","The cryptographically weak counterpart to `rand`.  Not suitable for key generation.",16,{"i":[{"n":"self"},{"n":"i32"},{"n":"msboption"},{"n":"bool"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"generate_prime","","Generates a prime number, placing it in `self`.",16,{"i":[{"n":"self"},{"n":"i32"},{"n":"bool"},{"g":["bignumref"],"n":"option"},{"g":["bignumref"],"n":"option"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"checked_mul","","Places the result of `a * b` in `self`. [`core::ops::Mul`] is also implemented for `BigNumRef`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"checked_div","","Places the result of `a / b` in `self`. The remainder is discarded. [`core::ops::Div`] is also implemented for `BigNumRef`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"checked_rem","","Places the result of `a % b` in `self`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"div_rem","","Places the result of `a / b` in `self` and `a % b` in `rem`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"sqr","","Places the result of `a²` in `self`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"nnmod","","Places the result of `a mod m` in `self`.  As opposed to `div_rem` the result is non-negative.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"mod_add","","Places the result of `(a + b) mod m` in `self`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"mod_sub","","Places the result of `(a - b) mod m` in `self`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"mod_mul","","Places the result of `(a * b) mod m` in `self`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"mod_sqr","","Places the result of `a² mod m` in `self`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"exp","","Places the result of `a^p` in `self`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"mod_exp","","Places the result of `a^p mod m` in `self`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"mod_inverse","","Places the inverse of `a` modulo `n` in `self`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"gcd","","Places the greatest common denominator of `a` and `b` in `self`.",16,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"is_prime","","Checks whether `self` is prime.",16,{"i":[{"n":"self"},{"n":"i32"},{"n":"bignumcontextref"}],"o":{"g":["bool","errorstack"],"n":"result"}}],[11,"is_prime_fasttest","","Checks whether `self` is prime with optional trial division.",16,{"i":[{"n":"self"},{"n":"i32"},{"n":"bignumcontextref"},{"n":"bool"}],"o":{"g":["bool","errorstack"],"n":"result"}}],[11,"to_vec","","Returns a big-endian byte vector representation of the absolute value of `self`.",16,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"vec"}}],[11,"to_dec_str","","Returns a decimal string representation of `self`.",16,{"i":[{"n":"self"}],"o":{"g":["opensslstring","errorstack"],"n":"result"}}],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",16,{"i":[{"n":"self"}],"o":{"g":["opensslstring","errorstack"],"n":"result"}}],[11,"to_asn1_integer","","Returns an `Asn1Integer` containing the value of `self`.",16,{"i":[{"n":"self"}],"o":{"g":["asn1integer","errorstack"],"n":"result"}}],[11,"new","","Creates a new `BigNum` with the value 0.",15,{"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"from_u32","","Creates a new `BigNum` with the given value.",15,{"i":[{"n":"u32"}],"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",15,{"i":[{"n":"str"}],"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",15,{"i":[{"n":"str"}],"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"get_rfc2409_prime_768","","Returns a constant used in IKE as defined in [`RFC 2409`].  This prime number is in the order of magnitude of `2 ^ 768`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled Oakley group id 1.",15,{"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"get_rfc2409_prime_1024","","Returns a constant used in IKE as defined in [`RFC 2409`].  This prime number is in the order of magnitude of `2 ^ 1024`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled Oakly group 2.",15,{"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"get_rfc3526_prime_1536","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 1536`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 5.",15,{"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"get_rfc3526_prime_2048","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 2048`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 14.",15,{"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"get_rfc3526_prime_3072","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 3072`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 15.",15,{"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"get_rfc3526_prime_4096","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 4096`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 16.",15,{"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"get_rfc3526_prime_6144","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 6144`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 17.",15,{"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"get_rfc3526_prime_8192","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 8192`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 18.",15,{"o":{"g":["bignum","errorstack"],"n":"result"}}],[11,"from_slice","","Creates a new `BigNum` from an unsigned, big-endian encoded number of arbitrary length.",15,null],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"n":"bool"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"bignum"}],"o":{"n":"bool"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"bignum"}],"o":{"n":"bool"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",16,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","","",16,{"i":[{"n":"self"},{"n":"bignum"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",16,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",15,{"i":[{"n":"self"},{"n":"bignum"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","","",15,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",15,{"i":[{"n":"self"},{"n":"bignum"}],"o":{"n":"ordering"}}],[11,"neg","","",15,{"i":[{"n":"self"}],"o":{"n":"bignum"}}],[0,"cms","openssl","SMIME implementation using CMS",null,null],[3,"CmsContentInfo","openssl::cms","High level CMS wrapper",null,null],[3,"CmsContentInfoRef","","Reference to [`CMSContentInfo`]",null,null],[11,"from_ptr","","",17,null],[11,"as_ptr","","",17,null],[11,"drop","","",17,{"i":[{"n":"self"}]}],[11,"deref","","",17,{"i":[{"n":"self"}],"o":{"n":"cmscontentinforef"}}],[11,"deref_mut","","",17,{"i":[{"n":"self"}],"o":{"n":"cmscontentinforef"}}],[11,"borrow","","",17,{"i":[{"n":"self"}],"o":{"n":"cmscontentinforef"}}],[11,"as_ref","","",17,{"i":[{"n":"self"}],"o":{"n":"cmscontentinforef"}}],[11,"decrypt","","Given the sender's private key, `pkey` and the recipient's certificiate, `cert`, decrypt the data in `self`.",18,{"i":[{"n":"self"},{"n":"pkeyref"},{"n":"x509"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"smime_read_cms","","Parses a smime formatted `vec` of bytes into a `CmsContentInfo`.",17,null],[0,"conf","openssl","Interface for processing OpenSSL configuration files.",null,null],[3,"ConfMethod","openssl::conf","",null,null],[3,"Conf","","",null,null],[3,"ConfRef","","",null,null],[11,"default","","Retrieve handle to the default OpenSSL configuration file processing function.",19,{"o":{"n":"confmethod"}}],[11,"from_ptr","","Construct from raw pointer.",19,null],[11,"as_ptr","","Convert to raw pointer.",19,null],[11,"from_ptr","","",20,null],[11,"as_ptr","","",20,null],[11,"drop","","",20,{"i":[{"n":"self"}]}],[11,"deref","","",20,{"i":[{"n":"self"}],"o":{"n":"confref"}}],[11,"deref_mut","","",20,{"i":[{"n":"self"}],"o":{"n":"confref"}}],[11,"borrow","","",20,{"i":[{"n":"self"}],"o":{"n":"confref"}}],[11,"as_ref","","",20,{"i":[{"n":"self"}],"o":{"n":"confref"}}],[11,"new","","Create a configuration parser.",20,{"i":[{"n":"confmethod"}],"o":{"g":["conf","errorstack"],"n":"result"}}],[0,"dh","openssl","",null,null],[3,"Dh","openssl::dh","",null,null],[3,"DhRef","","",null,null],[11,"from_ptr","","",21,null],[11,"as_ptr","","",21,null],[11,"drop","","",21,{"i":[{"n":"self"}]}],[11,"deref","","",21,{"i":[{"n":"self"}],"o":{"n":"dhref"}}],[11,"deref_mut","","",21,{"i":[{"n":"self"}],"o":{"n":"dhref"}}],[11,"borrow","","",21,{"i":[{"n":"self"}],"o":{"n":"dhref"}}],[11,"as_ref","","",21,{"i":[{"n":"self"}],"o":{"n":"dhref"}}],[11,"to_pem","","Serializes this value to PEM.",22,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"to_der","","Serializes this value to DER.",22,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"from_params","","",21,{"i":[{"n":"bignum"},{"n":"bignum"},{"n":"bignum"}],"o":{"g":["dh","errorstack"],"n":"result"}}],[11,"from_pem","","Deserializes a value from PEM-formatted data.",21,null],[11,"from_der","","Deserializes a value from DER-formatted data.",21,null],[0,"dsa","openssl","Digital Signatures",null,null],[3,"Dsa","openssl::dsa","Object representing DSA keys.",null,null],[3,"DsaRef","","Reference to [`Dsa`].",null,null],[11,"from_ptr","","",23,null],[11,"as_ptr","","",23,null],[11,"drop","","",23,{"i":[{"n":"self"}]}],[11,"deref","","",23,{"i":[{"n":"self"}],"o":{"n":"dsaref"}}],[11,"deref_mut","","",23,{"i":[{"n":"self"}],"o":{"n":"dsaref"}}],[11,"borrow","","",23,{"i":[{"n":"self"}],"o":{"n":"dsaref"}}],[11,"as_ref","","",23,{"i":[{"n":"self"}],"o":{"n":"dsaref"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",24,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",24,null],[11,"public_key_to_pem","","Serializes a public key to PEM.",24,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"private_key_to_der","","Serializes the private key to DER.",24,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"public_key_to_der","","Serializes the public key to DER.",24,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"size","","Returns the maximum size of the signature output by `self` in bytes.  Returns None if the keys are uninitialized.",24,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"p","","Returns the DSA prime parameter of `self`.",24,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"q","","Returns the DSA sub-prime parameter of `self`.",24,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"g","","Returns the DSA base parameter of `self`.",24,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"has_public_key","","Returns whether the DSA includes a public key, used to confirm the authenticity of the message.",24,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"has_private_key","","Returns whether the DSA includes a private key, used to prove the authenticity of a message.",24,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"generate","","Generate a DSA key pair.",23,{"i":[{"n":"u32"}],"o":{"g":["dsa","errorstack"],"n":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",23,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",23,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",23,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",23,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",23,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",23,null],[11,"private_key_from_pem_cb","","",23,null],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"ec","openssl","Elliptic Curve",null,null],[3,"PointConversionForm","openssl::ec","Compressed or Uncompressed conversion",null,null],[3,"Asn1Flag","","Named Curve or Explicit",null,null],[3,"EcGroup","","Describes the curve",null,null],[3,"EcGroupRef","","Reference to [`EcGroup`]",null,null],[3,"EcPoint","","Represents a point on the curve",null,null],[3,"EcPointRef","","Reference to [`EcPoint`]",null,null],[3,"EcKey","","Public and optional Private key on the given curve",null,null],[3,"EcKeyRef","","Reference to [`EcKey`]",null,null],[3,"EcKeyBuilder","","Builder pattern for key generation",null,null],[3,"EcKeyBuilderRef","","Reference to [`EcKeyBuilder`]",null,null],[17,"POINT_CONVERSION_COMPRESSED","","Compressed conversion from point value (Default)",null,null],[17,"POINT_CONVERSION_UNCOMPRESSED","","Uncompressed conversion from point value (Binary curve default)",null,null],[17,"POINT_CONVERSION_HYBRID","","Performs both compressed and uncompressed conversions",null,null],[17,"EXPLICIT_CURVE","","Curve defined using polynomial parameters",null,null],[17,"NAMED_CURVE","","Standard Curves",null,null],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"pointconversionform"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"asn1flag"}}],[11,"from_ptr","","",27,null],[11,"as_ptr","","",27,null],[11,"drop","","",27,{"i":[{"n":"self"}]}],[11,"deref","","",27,{"i":[{"n":"self"}],"o":{"n":"ecgroupref"}}],[11,"deref_mut","","",27,{"i":[{"n":"self"}],"o":{"n":"ecgroupref"}}],[11,"borrow","","",27,{"i":[{"n":"self"}],"o":{"n":"ecgroupref"}}],[11,"as_ref","","",27,{"i":[{"n":"self"}],"o":{"n":"ecgroupref"}}],[11,"from_curve_name","","Returns the group of a standard named curve.",27,{"i":[{"n":"nid"}],"o":{"g":["ecgroup","errorstack"],"n":"result"}}],[11,"components_gfp","","Places the components of a curve over a prime field in the provided `BigNum`s. The components make up the formula `y^2 mod p = x^3 + ax + b mod p`.",28,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"components_gf2m","","Places the components of a curve over a binary field in the provided `BigNum`s. The components make up the formula `y^2 + xy = x^3 + ax^2 + b`.",28,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"degree","","Returns the degree of the curve.",28,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"order","","Places the order of the curve in the provided `BigNum`.",28,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_asn1_flag","","Sets the flag determining if the group corresponds to a named curve or must be explicitly parameterized.",28,{"i":[{"n":"self"},{"n":"asn1flag"}]}],[11,"from_ptr","","",29,null],[11,"as_ptr","","",29,null],[11,"drop","","",29,{"i":[{"n":"self"}]}],[11,"deref","","",29,{"i":[{"n":"self"}],"o":{"n":"ecpointref"}}],[11,"deref_mut","","",29,{"i":[{"n":"self"}],"o":{"n":"ecpointref"}}],[11,"borrow","","",29,{"i":[{"n":"self"}],"o":{"n":"ecpointref"}}],[11,"as_ref","","",29,{"i":[{"n":"self"}],"o":{"n":"ecpointref"}}],[11,"add","","Computes `a + b`, storing the result in `self`.",30,{"i":[{"n":"self"},{"n":"ecgroupref"},{"n":"ecpointref"},{"n":"ecpointref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"mul","","Computes `q * m`, storing the result in `self`.",30,{"i":[{"n":"self"},{"n":"ecgroupref"},{"n":"ecpointref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"mul_generator","","Computes `generator * n`, storing the result ing `self`.",30,{"i":[{"n":"self"},{"n":"ecgroupref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"mul_full","","Computes `generator * n + q * m`, storing the result in `self`.",30,{"i":[{"n":"self"},{"n":"ecgroupref"},{"n":"bignumref"},{"n":"ecpointref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"invert","","Inverts `self`.",30,{"i":[{"n":"self"},{"n":"ecgroupref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"to_bytes","","Serializes the point to a binary representation.",30,{"i":[{"n":"self"},{"n":"ecgroupref"},{"n":"pointconversionform"},{"n":"bignumcontextref"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"eq","","Determines if this point is equal to another.",30,{"i":[{"n":"self"},{"n":"ecgroupref"},{"n":"ecpointref"},{"n":"bignumcontextref"}],"o":{"g":["bool","errorstack"],"n":"result"}}],[11,"affine_coordinates_gfp","","Place affine coordinates of a curve over a prime field in the provided `x` and `y` `BigNum`s",30,{"i":[{"n":"self"},{"n":"ecgroupref"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"affine_coordinates_gf2m","","Place affine coordinates of a curve over a binary field in the provided `x` and `y` `BigNum`s",30,{"i":[{"n":"self"},{"n":"ecgroupref"},{"n":"bignumref"},{"n":"bignumref"},{"n":"bignumcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"new","","Creates a new point on the specified curve.",29,{"i":[{"n":"ecgroupref"}],"o":{"g":["ecpoint","errorstack"],"n":"result"}}],[11,"from_bytes","","Creates point from a binary representation",29,null],[11,"from_ptr","","",31,null],[11,"as_ptr","","",31,null],[11,"drop","","",31,{"i":[{"n":"self"}]}],[11,"deref","","",31,{"i":[{"n":"self"}],"o":{"n":"eckeyref"}}],[11,"deref_mut","","",31,{"i":[{"n":"self"}],"o":{"n":"eckeyref"}}],[11,"borrow","","",31,{"i":[{"n":"self"}],"o":{"n":"eckeyref"}}],[11,"as_ref","","",31,{"i":[{"n":"self"}],"o":{"n":"eckeyref"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",32,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",32,null],[11,"private_key_to_der","","Serializes the private key to DER.",32,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"group","","Return [`EcGroup`] of the `EcKey`",32,{"i":[{"n":"self"}],"o":{"g":["ecgroupref"],"n":"option"}}],[11,"public_key","","Return [`EcPoint`] associated with the public key",32,{"i":[{"n":"self"}],"o":{"g":["ecpointref"],"n":"option"}}],[11,"private_key","","Return [`EcPoint`] associated with the private key",32,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"check_key","","Checks the key for validity.",32,{"i":[{"n":"self"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"to_owned","","Create a copy of the `EcKey` to allow modification",32,{"i":[{"n":"self"}],"o":{"g":["eckey","errorstack"],"n":"result"}}],[11,"from_curve_name","","Constructs an `EcKey` corresponding to a known curve.",31,{"i":[{"n":"nid"}],"o":{"g":["eckey","errorstack"],"n":"result"}}],[11,"from_public_key","","Constructs an `EcKey` from the specified group with the associated `EcPoint`, public_key.",31,{"i":[{"n":"ecgroupref"},{"n":"ecpointref"}],"o":{"g":["eckey","errorstack"],"n":"result"}}],[11,"generate","","Generates a new public/private key pair on the specified curve.",31,{"i":[{"n":"ecgroupref"}],"o":{"g":["eckey","errorstack"],"n":"result"}}],[11,"new_by_curve_name","","",31,{"i":[{"n":"nid"}],"o":{"g":["eckey","errorstack"],"n":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",31,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",31,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",31,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",31,null],[11,"from_ptr","","",33,null],[11,"as_ptr","","",33,null],[11,"drop","","",33,{"i":[{"n":"self"}]}],[11,"deref","","",33,{"i":[{"n":"self"}],"o":{"n":"eckeybuilderref"}}],[11,"deref_mut","","",33,{"i":[{"n":"self"}],"o":{"n":"eckeybuilderref"}}],[11,"borrow","","",33,{"i":[{"n":"self"}],"o":{"n":"eckeybuilderref"}}],[11,"as_ref","","",33,{"i":[{"n":"self"}],"o":{"n":"eckeybuilderref"}}],[11,"new","","Creates an empty `EcKeyBuilder` to be chained with additonal methods",33,{"o":{"g":["eckeybuilder","errorstack"],"n":"result"}}],[11,"build","","Consume the `EcKeyBuilder` and return [`EcKey`]",33,{"i":[{"n":"self"}],"o":{"n":"eckey"}}],[11,"set_group","","Set the [`EcGroup`] explicitly",34,{"i":[{"n":"self"},{"n":"ecgroupref"}],"o":{"g":["eckeybuilderref","errorstack"],"n":"result"}}],[11,"set_public_key","","Set public key to given `EcPoint`",34,{"i":[{"n":"self"},{"n":"ecpointref"}],"o":{"g":["eckeybuilderref","errorstack"],"n":"result"}}],[11,"generate_key","","Generate public and private keys.",34,{"i":[{"n":"self"}],"o":{"g":["eckeybuilderref","errorstack"],"n":"result"}}],[11,"set_public_key_affine_coordinates","","Sets the public key based on affine coordinates.",34,{"i":[{"n":"self"},{"n":"bignumref"},{"n":"bignumref"}],"o":{"g":["eckeybuilderref","errorstack"],"n":"result"}}],[11,"set_private_key","","Sets the private key.",34,{"i":[{"n":"self"},{"n":"bignumref"}],"o":{"g":["eckeybuilderref","errorstack"],"n":"result"}}],[0,"error","openssl","Errors returned by OpenSSL library.",null,null],[3,"ErrorStack","openssl::error","Collection of [`Error`]s from OpenSSL.",null,null],[3,"Error","","An error reported from OpenSSL.",null,null],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"errorstack"}}],[11,"get","","Returns the contents of the OpenSSL error stack.",35,{"o":{"n":"errorstack"}}],[11,"errors","","Returns the errors in the stack.",35,null],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",35,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"get","","Returns the first error on the OpenSSL error stack.",36,{"o":{"g":["error"],"n":"option"}}],[11,"code","","Returns the raw OpenSSL error code for this error.",36,{"i":[{"n":"self"}],"o":{"n":"c_ulong"}}],[11,"library","","Returns the name of the library reporting the error, if available.",36,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"function","","Returns the name of the function reporting the error.",36,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"reason","","Returns the reason for the error.",36,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"file","","Returns the name of the source file which encountered the error.",36,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"line","","Returns the line in the source file which encountered the error.",36,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[11,"data","","Returns additional data describing the error.",36,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",36,{"i":[{"n":"self"}],"o":{"n":"str"}}],[0,"ex_data","openssl","",null,null],[3,"Index","openssl::ex_data","A slot in a type's \"extra data\" structure.",null,null],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"index"}}],[11,"from_raw","","",37,{"i":[{"n":"c_int"}],"o":{"n":"index"}}],[11,"as_raw","","",37,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[0,"hash","openssl","",null,null],[3,"MessageDigest","openssl::hash","",null,null],[3,"Hasher","","Provides message digest (hash) computation.",null,null],[3,"DigestBytes","","The resulting bytes of a digest.",null,null],[5,"hash","","",null,null],[5,"hash2","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"messagedigest"}}],[11,"md5","","",38,{"o":{"n":"messagedigest"}}],[11,"sha1","","",38,{"o":{"n":"messagedigest"}}],[11,"sha224","","",38,{"o":{"n":"messagedigest"}}],[11,"sha256","","",38,{"o":{"n":"messagedigest"}}],[11,"sha384","","",38,{"o":{"n":"messagedigest"}}],[11,"sha512","","",38,{"o":{"n":"messagedigest"}}],[11,"ripemd160","","",38,{"o":{"n":"messagedigest"}}],[11,"as_ptr","","",38,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",39,{"i":[{"n":"messagedigest"}],"o":{"g":["hasher","errorstack"],"n":"result"}}],[11,"update","","Feeds data into the hasher.",39,null],[11,"finish","","",39,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"finish2","","Returns the hash of the data written and resets the hasher.",39,{"i":[{"n":"self"}],"o":{"g":["digestbytes","errorstack"],"n":"result"}}],[11,"write","","",39,null],[11,"flush","","",39,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"hasher"}}],[11,"drop","","",39,{"i":[{"n":"self"}]}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"digestbytes"}}],[11,"deref","","",40,null],[11,"deref_mut","","",40,null],[11,"as_ref","","",40,null],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"memcmp","openssl","Utilities to safely compare cryptographic values.",null,null],[5,"eq","openssl::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"nid","openssl","A collection of numerical identifiers for OpenSSL objects.",null,null],[3,"Nid","openssl::nid","A numerical identifier for an OpenSSL object.",null,null],[17,"UNDEF","","",null,null],[17,"ITU_T","","",null,null],[17,"CCITT","","",null,null],[17,"ISO","","",null,null],[17,"JOINT_ISO_ITU_T","","",null,null],[17,"JOINT_ISO_CCITT","","",null,null],[17,"MEMBER_BODY","","",null,null],[17,"IDENTIFIED_ORGANIZATION","","",null,null],[17,"HMAC_MD5","","",null,null],[17,"HMAC_SHA1","","",null,null],[17,"CERTICOM_ARC","","",null,null],[17,"INTERNATIONAL_ORGANIZATIONS","","",null,null],[17,"WAP","","",null,null],[17,"WAP_WSG","","",null,null],[17,"SELECTED_ATTRIBUTE_TYPES","","",null,null],[17,"CLEARANCE","","",null,null],[17,"ISO_US","","",null,null],[17,"X9_57","","",null,null],[17,"X9CM","","",null,null],[17,"DSA","","",null,null],[17,"DSAWITHSHA1","","",null,null],[17,"ANSI_X9_62","","",null,null],[17,"X9_62_PRIME_FIELD","","",null,null],[17,"X9_62_CHARACTERISTIC_TWO_FIELD","","",null,null],[17,"X9_62_ID_CHARACTERISTIC_TWO_BASIS","","",null,null],[17,"X9_62_ONBASIS","","",null,null],[17,"X9_62_TPBASIS","","",null,null],[17,"X9_62_PPBASIS","","",null,null],[17,"X9_62_ID_ECPUBLICKEY","","",null,null],[17,"X9_62_C2PNB163V1","","",null,null],[17,"X9_62_C2PNB163V2","","",null,null],[17,"X9_62_C2PNB163V3","","",null,null],[17,"X9_62_C2PNB176V1","","",null,null],[17,"X9_62_C2TNB191V1","","",null,null],[17,"X9_62_C2TNB191V2","","",null,null],[17,"X9_62_C2TNB191V3","","",null,null],[17,"X9_62_C2ONB191V4","","",null,null],[17,"X9_62_C2ONB191V5","","",null,null],[17,"X9_62_C2PNB208W1","","",null,null],[17,"X9_62_C2TNB239V1","","",null,null],[17,"X9_62_C2TNB239V2","","",null,null],[17,"X9_62_C2TNB239V3","","",null,null],[17,"X9_62_C2ONB239V4","","",null,null],[17,"X9_62_C2ONB239V5","","",null,null],[17,"X9_62_C2PNB272W1","","",null,null],[17,"X9_62_C2PNB304W1","","",null,null],[17,"X9_62_C2TNB359V1","","",null,null],[17,"X9_62_C2PNB368W1","","",null,null],[17,"X9_62_C2TNB431R1","","",null,null],[17,"X9_62_PRIME192V1","","",null,null],[17,"X9_62_PRIME192V2","","",null,null],[17,"X9_62_PRIME192V3","","",null,null],[17,"X9_62_PRIME239V1","","",null,null],[17,"X9_62_PRIME239V2","","",null,null],[17,"X9_62_PRIME239V3","","",null,null],[17,"X9_62_PRIME256V1","","",null,null],[17,"ECDSA_WITH_SHA1","","",null,null],[17,"ECDSA_WITH_RECOMMENDED","","",null,null],[17,"ECDSA_WITH_SPECIFIED","","",null,null],[17,"ECDSA_WITH_SHA224","","",null,null],[17,"ECDSA_WITH_SHA256","","",null,null],[17,"ECDSA_WITH_SHA384","","",null,null],[17,"ECDSA_WITH_SHA512","","",null,null],[17,"SECP112R1","","",null,null],[17,"SECP112R2","","",null,null],[17,"SECP128R1","","",null,null],[17,"SECP128R2","","",null,null],[17,"SECP160K1","","",null,null],[17,"SECP160R1","","",null,null],[17,"SECP160R2","","",null,null],[17,"SECP192K1","","",null,null],[17,"SECP224K1","","",null,null],[17,"SECP224R1","","",null,null],[17,"SECP256K1","","",null,null],[17,"SECP384R1","","",null,null],[17,"SECP521R1","","",null,null],[17,"SECT113R1","","",null,null],[17,"SECT113R2","","",null,null],[17,"SECT131R1","","",null,null],[17,"SECT131R2","","",null,null],[17,"SECT163K1","","",null,null],[17,"SECT163R1","","",null,null],[17,"SECT163R2","","",null,null],[17,"SECT193R1","","",null,null],[17,"SECT193R2","","",null,null],[17,"SECT233K1","","",null,null],[17,"SECT233R1","","",null,null],[17,"SECT239K1","","",null,null],[17,"SECT283K1","","",null,null],[17,"SECT283R1","","",null,null],[17,"SECT409K1","","",null,null],[17,"SECT409R1","","",null,null],[17,"SECT571K1","","",null,null],[17,"SECT571R1","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS1","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS3","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS4","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS5","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS6","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS7","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS8","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS9","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS10","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS11","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS12","","",null,null],[17,"CAST5_CBC","","",null,null],[17,"CAST5_ECB","","",null,null],[17,"CAST5_CFB64","","",null,null],[17,"CAST5_OFB64","","",null,null],[17,"PBEWITHMD5ANDCAST5_CBC","","",null,null],[17,"ID_PASSWORDBASEDMAC","","",null,null],[17,"ID_DHBASEDMAC","","",null,null],[17,"RSADSI","","",null,null],[17,"PKCS","","",null,null],[17,"PKCS1","","",null,null],[17,"RSAENCRYPTION","","",null,null],[17,"MD2WITHRSAENCRYPTION","","",null,null],[17,"MD4WITHRSAENCRYPTION","","",null,null],[17,"MD5WITHRSAENCRYPTION","","",null,null],[17,"SHA1WITHRSAENCRYPTION","","",null,null],[17,"RSAESOAEP","","",null,null],[17,"MGF1","","",null,null],[17,"RSASSAPSS","","",null,null],[17,"SHA256WITHRSAENCRYPTION","","",null,null],[17,"SHA384WITHRSAENCRYPTION","","",null,null],[17,"SHA512WITHRSAENCRYPTION","","",null,null],[17,"SHA224WITHRSAENCRYPTION","","",null,null],[17,"PKCS3","","",null,null],[17,"DHKEYAGREEMENT","","",null,null],[17,"PKCS5","","",null,null],[17,"PBEWITHMD2ANDDES_CBC","","",null,null],[17,"PBEWITHMD5ANDDES_CBC","","",null,null],[17,"PBEWITHMD2ANDRC2_CBC","","",null,null],[17,"PBEWITHMD5ANDRC2_CBC","","",null,null],[17,"PBEWITHSHA1ANDDES_CBC","","",null,null],[17,"PBEWITHSHA1ANDRC2_CBC","","",null,null],[17,"ID_PBKDF2","","",null,null],[17,"PBES2","","",null,null],[17,"PBMAC1","","",null,null],[17,"PKCS7","","",null,null],[17,"PKCS7_DATA","","",null,null],[17,"PKCS7_SIGNED","","",null,null],[17,"PKCS7_ENVELOPED","","",null,null],[17,"PKCS7_SIGNEDANDENVELOPED","","",null,null],[17,"PKCS7_DIGEST","","",null,null],[17,"PKCS7_ENCRYPTED","","",null,null],[17,"PKCS9","","",null,null],[17,"PKCS9_EMAILADDRESS","","",null,null],[17,"PKCS9_UNSTRUCTUREDNAME","","",null,null],[17,"PKCS9_CONTENTTYPE","","",null,null],[17,"PKCS9_MESSAGEDIGEST","","",null,null],[17,"PKCS9_SIGNINGTIME","","",null,null],[17,"PKCS9_COUNTERSIGNATURE","","",null,null],[17,"PKCS9_CHALLENGEPASSWORD","","",null,null],[17,"PKCS9_UNSTRUCTUREDADDRESS","","",null,null],[17,"PKCS9_EXTCERTATTRIBUTES","","",null,null],[17,"EXT_REQ","","",null,null],[17,"SMIMECAPABILITIES","","",null,null],[17,"SMIME","","",null,null],[17,"ID_SMIME_MOD","","",null,null],[17,"ID_SMIME_CT","","",null,null],[17,"ID_SMIME_AA","","",null,null],[17,"ID_SMIME_ALG","","",null,null],[17,"ID_SMIME_CD","","",null,null],[17,"ID_SMIME_SPQ","","",null,null],[17,"ID_SMIME_CTI","","",null,null],[17,"ID_SMIME_MOD_CMS","","",null,null],[17,"ID_SMIME_MOD_ESS","","",null,null],[17,"ID_SMIME_MOD_OID","","",null,null],[17,"ID_SMIME_MOD_MSG_V3","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGNATURE_88","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGNATURE_97","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGPOLICY_88","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGPOLICY_97","","",null,null],[17,"ID_SMIME_CT_RECEIPT","","",null,null],[17,"ID_SMIME_CT_AUTHDATA","","",null,null],[17,"ID_SMIME_CT_PUBLISHCERT","","",null,null],[17,"ID_SMIME_CT_TSTINFO","","",null,null],[17,"ID_SMIME_CT_TDTINFO","","",null,null],[17,"ID_SMIME_CT_CONTENTINFO","","",null,null],[17,"ID_SMIME_CT_DVCSREQUESTDATA","","",null,null],[17,"ID_SMIME_CT_DVCSRESPONSEDATA","","",null,null],[17,"ID_SMIME_CT_COMPRESSEDDATA","","",null,null],[17,"ID_CT_ASCIITEXTWITHCRLF","","",null,null],[17,"ID_SMIME_AA_RECEIPTREQUEST","","",null,null],[17,"ID_SMIME_AA_SECURITYLABEL","","",null,null],[17,"ID_SMIME_AA_MLEXPANDHISTORY","","",null,null],[17,"ID_SMIME_AA_CONTENTHINT","","",null,null],[17,"ID_SMIME_AA_MSGSIGDIGEST","","",null,null],[17,"ID_SMIME_AA_ENCAPCONTENTTYPE","","",null,null],[17,"ID_SMIME_AA_CONTENTIDENTIFIER","","",null,null],[17,"ID_SMIME_AA_MACVALUE","","",null,null],[17,"ID_SMIME_AA_EQUIVALENTLABELS","","",null,null],[17,"ID_SMIME_AA_CONTENTREFERENCE","","",null,null],[17,"ID_SMIME_AA_ENCRYPKEYPREF","","",null,null],[17,"ID_SMIME_AA_SIGNINGCERTIFICATE","","",null,null],[17,"ID_SMIME_AA_SMIMEENCRYPTCERTS","","",null,null],[17,"ID_SMIME_AA_TIMESTAMPTOKEN","","",null,null],[17,"ID_SMIME_AA_ETS_SIGPOLICYID","","",null,null],[17,"ID_SMIME_AA_ETS_COMMITMENTTYPE","","",null,null],[17,"ID_SMIME_AA_ETS_SIGNERLOCATION","","",null,null],[17,"ID_SMIME_AA_ETS_SIGNERATTR","","",null,null],[17,"ID_SMIME_AA_ETS_OTHERSIGCERT","","",null,null],[17,"ID_SMIME_AA_ETS_CONTENTTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_CERTIFICATEREFS","","",null,null],[17,"ID_SMIME_AA_ETS_REVOCATIONREFS","","",null,null],[17,"ID_SMIME_AA_ETS_CERTVALUES","","",null,null],[17,"ID_SMIME_AA_ETS_REVOCATIONVALUES","","",null,null],[17,"ID_SMIME_AA_ETS_ESCTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_CERTCRLTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_ARCHIVETIMESTAMP","","",null,null],[17,"ID_SMIME_AA_SIGNATURETYPE","","",null,null],[17,"ID_SMIME_AA_DVCS_DVC","","",null,null],[17,"ID_SMIME_ALG_ESDHWITH3DES","","",null,null],[17,"ID_SMIME_ALG_ESDHWITHRC2","","",null,null],[17,"ID_SMIME_ALG_3DESWRAP","","",null,null],[17,"ID_SMIME_ALG_RC2WRAP","","",null,null],[17,"ID_SMIME_ALG_ESDH","","",null,null],[17,"ID_SMIME_ALG_CMS3DESWRAP","","",null,null],[17,"ID_SMIME_ALG_CMSRC2WRAP","","",null,null],[17,"ID_ALG_PWRI_KEK","","",null,null],[17,"ID_SMIME_CD_LDAP","","",null,null],[17,"ID_SMIME_SPQ_ETS_SQT_URI","","",null,null],[17,"ID_SMIME_SPQ_ETS_SQT_UNOTICE","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFORIGIN","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFRECEIPT","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFDELIVERY","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFSENDER","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFAPPROVAL","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFCREATION","","",null,null],[17,"FRIENDLYNAME","","",null,null],[17,"LOCALKEYID","","",null,null],[17,"MS_CSP_NAME","","",null,null],[17,"LOCALKEYSET","","",null,null],[17,"X509CERTIFICATE","","",null,null],[17,"SDSICERTIFICATE","","",null,null],[17,"X509CRL","","",null,null],[17,"PBE_WITHSHA1AND128BITRC4","","",null,null],[17,"PBE_WITHSHA1AND40BITRC4","","",null,null],[17,"PBE_WITHSHA1AND3_KEY_TRIPLEDES_CBC","","",null,null],[17,"PBE_WITHSHA1AND2_KEY_TRIPLEDES_CBC","","",null,null],[17,"PBE_WITHSHA1AND128BITRC2_CBC","","",null,null],[17,"PBE_WITHSHA1AND40BITRC2_CBC","","",null,null],[17,"KEYBAG","","",null,null],[17,"PKCS8SHROUDEDKEYBAG","","",null,null],[17,"CERTBAG","","",null,null],[17,"CRLBAG","","",null,null],[17,"SECRETBAG","","",null,null],[17,"SAFECONTENTSBAG","","",null,null],[17,"MD2","","",null,null],[17,"MD4","","",null,null],[17,"MD5","","",null,null],[17,"MD5_SHA1","","",null,null],[17,"HMACWITHMD5","","",null,null],[17,"HMACWITHSHA1","","",null,null],[17,"HMACWITHSHA224","","",null,null],[17,"HMACWITHSHA256","","",null,null],[17,"HMACWITHSHA384","","",null,null],[17,"HMACWITHSHA512","","",null,null],[17,"RC2_CBC","","",null,null],[17,"RC2_ECB","","",null,null],[17,"RC2_CFB64","","",null,null],[17,"RC2_OFB64","","",null,null],[17,"RC2_40_CBC","","",null,null],[17,"RC2_64_CBC","","",null,null],[17,"RC4","","",null,null],[17,"RC4_40","","",null,null],[17,"DES_EDE3_CBC","","",null,null],[17,"RC5_CBC","","",null,null],[17,"RC5_ECB","","",null,null],[17,"RC5_CFB64","","",null,null],[17,"RC5_OFB64","","",null,null],[17,"MS_EXT_REQ","","",null,null],[17,"MS_CODE_IND","","",null,null],[17,"MS_CODE_COM","","",null,null],[17,"MS_CTL_SIGN","","",null,null],[17,"MS_SGC","","",null,null],[17,"MS_EFS","","",null,null],[17,"MS_SMARTCARD_LOGIN","","",null,null],[17,"MS_UPN","","",null,null],[17,"IDEA_CBC","","",null,null],[17,"IDEA_ECB","","",null,null],[17,"IDEA_CFB64","","",null,null],[17,"IDEA_OFB64","","",null,null],[17,"BF_CBC","","",null,null],[17,"BF_ECB","","",null,null],[17,"BF_CFB64","","",null,null],[17,"BF_OFB64","","",null,null],[17,"ID_PKIX","","",null,null],[17,"ID_PKIX_MOD","","",null,null],[17,"ID_PE","","",null,null],[17,"ID_QT","","",null,null],[17,"ID_KP","","",null,null],[17,"ID_IT","","",null,null],[17,"ID_PKIP","","",null,null],[17,"ID_ALG","","",null,null],[17,"ID_CMC","","",null,null],[17,"ID_ON","","",null,null],[17,"ID_PDA","","",null,null],[17,"ID_ACA","","",null,null],[17,"ID_QCS","","",null,null],[17,"ID_CCT","","",null,null],[17,"ID_PPL","","",null,null],[17,"ID_AD","","",null,null],[17,"ID_PKIX1_EXPLICIT_88","","",null,null],[17,"ID_PKIX1_IMPLICIT_88","","",null,null],[17,"ID_PKIX1_EXPLICIT_93","","",null,null],[17,"ID_PKIX1_IMPLICIT_93","","",null,null],[17,"ID_MOD_CRMF","","",null,null],[17,"ID_MOD_CMC","","",null,null],[17,"ID_MOD_KEA_PROFILE_88","","",null,null],[17,"ID_MOD_KEA_PROFILE_93","","",null,null],[17,"ID_MOD_CMP","","",null,null],[17,"ID_MOD_QUALIFIED_CERT_88","","",null,null],[17,"ID_MOD_QUALIFIED_CERT_93","","",null,null],[17,"ID_MOD_ATTRIBUTE_CERT","","",null,null],[17,"ID_MOD_TIMESTAMP_PROTOCOL","","",null,null],[17,"ID_MOD_OCSP","","",null,null],[17,"ID_MOD_DVCS","","",null,null],[17,"ID_MOD_CMP2000","","",null,null],[17,"INFO_ACCESS","","",null,null],[17,"BIOMETRICINFO","","",null,null],[17,"QCSTATEMENTS","","",null,null],[17,"AC_AUDITENTITY","","",null,null],[17,"AC_TARGETING","","",null,null],[17,"AACONTROLS","","",null,null],[17,"SBGP_IPADDRBLOCK","","",null,null],[17,"SBGP_AUTONOMOUSSYSNUM","","",null,null],[17,"SBGP_ROUTERIDENTIFIER","","",null,null],[17,"AC_PROXYING","","",null,null],[17,"SINFO_ACCESS","","",null,null],[17,"PROXYCERTINFO","","",null,null],[17,"ID_QT_CPS","","",null,null],[17,"ID_QT_UNOTICE","","",null,null],[17,"TEXTNOTICE","","",null,null],[17,"SERVER_AUTH","","",null,null],[17,"CLIENT_AUTH","","",null,null],[17,"CODE_SIGN","","",null,null],[17,"EMAIL_PROTECT","","",null,null],[17,"IPSECENDSYSTEM","","",null,null],[17,"IPSECTUNNEL","","",null,null],[17,"IPSECUSER","","",null,null],[17,"TIME_STAMP","","",null,null],[17,"OCSP_SIGN","","",null,null],[17,"DVCS","","",null,null],[17,"ID_IT_CAPROTENCCERT","","",null,null],[17,"ID_IT_SIGNKEYPAIRTYPES","","",null,null],[17,"ID_IT_ENCKEYPAIRTYPES","","",null,null],[17,"ID_IT_PREFERREDSYMMALG","","",null,null],[17,"ID_IT_CAKEYUPDATEINFO","","",null,null],[17,"ID_IT_CURRENTCRL","","",null,null],[17,"ID_IT_UNSUPPORTEDOIDS","","",null,null],[17,"ID_IT_SUBSCRIPTIONREQUEST","","",null,null],[17,"ID_IT_SUBSCRIPTIONRESPONSE","","",null,null],[17,"ID_IT_KEYPAIRPARAMREQ","","",null,null],[17,"ID_IT_KEYPAIRPARAMREP","","",null,null],[17,"ID_IT_REVPASSPHRASE","","",null,null],[17,"ID_IT_IMPLICITCONFIRM","","",null,null],[17,"ID_IT_CONFIRMWAITTIME","","",null,null],[17,"ID_IT_ORIGPKIMESSAGE","","",null,null],[17,"ID_IT_SUPPLANGTAGS","","",null,null],[17,"ID_REGCTRL","","",null,null],[17,"ID_REGINFO","","",null,null],[17,"ID_REGCTRL_REGTOKEN","","",null,null],[17,"ID_REGCTRL_AUTHENTICATOR","","",null,null],[17,"ID_REGCTRL_PKIPUBLICATIONINFO","","",null,null],[17,"ID_REGCTRL_PKIARCHIVEOPTIONS","","",null,null],[17,"ID_REGCTRL_OLDCERTID","","",null,null],[17,"ID_REGCTRL_PROTOCOLENCRKEY","","",null,null],[17,"ID_REGINFO_UTF8PAIRS","","",null,null],[17,"ID_REGINFO_CERTREQ","","",null,null],[17,"ID_ALG_DES40","","",null,null],[17,"ID_ALG_NOSIGNATURE","","",null,null],[17,"ID_ALG_DH_SIG_HMAC_SHA1","","",null,null],[17,"ID_ALG_DH_POP","","",null,null],[17,"ID_CMC_STATUSINFO","","",null,null],[17,"ID_CMC_IDENTIFICATION","","",null,null],[17,"ID_CMC_IDENTITYPROOF","","",null,null],[17,"ID_CMC_DATARETURN","","",null,null],[17,"ID_CMC_TRANSACTIONID","","",null,null],[17,"ID_CMC_SENDERNONCE","","",null,null],[17,"ID_CMC_RECIPIENTNONCE","","",null,null],[17,"ID_CMC_ADDEXTENSIONS","","",null,null],[17,"ID_CMC_ENCRYPTEDPOP","","",null,null],[17,"ID_CMC_DECRYPTEDPOP","","",null,null],[17,"ID_CMC_LRAPOPWITNESS","","",null,null],[17,"ID_CMC_GETCERT","","",null,null],[17,"ID_CMC_GETCRL","","",null,null],[17,"ID_CMC_REVOKEREQUEST","","",null,null],[17,"ID_CMC_REGINFO","","",null,null],[17,"ID_CMC_RESPONSEINFO","","",null,null],[17,"ID_CMC_QUERYPENDING","","",null,null],[17,"ID_CMC_POPLINKRANDOM","","",null,null],[17,"ID_CMC_POPLINKWITNESS","","",null,null],[17,"ID_CMC_CONFIRMCERTACCEPTANCE","","",null,null],[17,"ID_ON_PERSONALDATA","","",null,null],[17,"ID_ON_PERMANENTIDENTIFIER","","",null,null],[17,"ID_PDA_DATEOFBIRTH","","",null,null],[17,"ID_PDA_PLACEOFBIRTH","","",null,null],[17,"ID_PDA_GENDER","","",null,null],[17,"ID_PDA_COUNTRYOFCITIZENSHIP","","",null,null],[17,"ID_PDA_COUNTRYOFRESIDENCE","","",null,null],[17,"ID_ACA_AUTHENTICATIONINFO","","",null,null],[17,"ID_ACA_ACCESSIDENTITY","","",null,null],[17,"ID_ACA_CHARGINGIDENTITY","","",null,null],[17,"ID_ACA_GROUP","","",null,null],[17,"ID_ACA_ROLE","","",null,null],[17,"ID_ACA_ENCATTRS","","",null,null],[17,"ID_QCS_PKIXQCSYNTAX_V1","","",null,null],[17,"ID_CCT_CRS","","",null,null],[17,"ID_CCT_PKIDATA","","",null,null],[17,"ID_CCT_PKIRESPONSE","","",null,null],[17,"ID_PPL_ANYLANGUAGE","","",null,null],[17,"ID_PPL_INHERITALL","","",null,null],[17,"INDEPENDENT","","",null,null],[17,"AD_OCSP","","",null,null],[17,"AD_CA_ISSUERS","","",null,null],[17,"AD_TIMESTAMPING","","",null,null],[17,"AD_DVCS","","",null,null],[17,"CAREPOSITORY","","",null,null],[17,"ID_PKIX_OCSP_BASIC","","",null,null],[17,"ID_PKIX_OCSP_NONCE","","",null,null],[17,"ID_PKIX_OCSP_CRLID","","",null,null],[17,"ID_PKIX_OCSP_ACCEPTABLERESPONSES","","",null,null],[17,"ID_PKIX_OCSP_NOCHECK","","",null,null],[17,"ID_PKIX_OCSP_ARCHIVECUTOFF","","",null,null],[17,"ID_PKIX_OCSP_SERVICELOCATOR","","",null,null],[17,"ID_PKIX_OCSP_EXTENDEDSTATUS","","",null,null],[17,"ID_PKIX_OCSP_VALID","","",null,null],[17,"ID_PKIX_OCSP_PATH","","",null,null],[17,"ID_PKIX_OCSP_TRUSTROOT","","",null,null],[17,"ALGORITHM","","",null,null],[17,"MD5WITHRSA","","",null,null],[17,"DES_ECB","","",null,null],[17,"DES_CBC","","",null,null],[17,"DES_OFB64","","",null,null],[17,"DES_CFB64","","",null,null],[17,"RSASIGNATURE","","",null,null],[17,"DSA_2","","",null,null],[17,"DSAWITHSHA","","",null,null],[17,"SHAWITHRSAENCRYPTION","","",null,null],[17,"DES_EDE_ECB","","",null,null],[17,"DES_EDE3_ECB","","",null,null],[17,"DES_EDE_CBC","","",null,null],[17,"DES_EDE_CFB64","","",null,null],[17,"DES_EDE3_CFB64","","",null,null],[17,"DES_EDE_OFB64","","",null,null],[17,"DES_EDE3_OFB64","","",null,null],[17,"DESX_CBC","","",null,null],[17,"SHA","","",null,null],[17,"SHA1","","",null,null],[17,"DSAWITHSHA1_2","","",null,null],[17,"SHA1WITHRSA","","",null,null],[17,"RIPEMD160","","",null,null],[17,"RIPEMD160WITHRSA","","",null,null],[17,"SXNET","","",null,null],[17,"X500","","",null,null],[17,"X509","","",null,null],[17,"COMMONNAME","","",null,null],[17,"SURNAME","","",null,null],[17,"SERIALNUMBER","","",null,null],[17,"COUNTRYNAME","","",null,null],[17,"LOCALITYNAME","","",null,null],[17,"STATEORPROVINCENAME","","",null,null],[17,"STREETADDRESS","","",null,null],[17,"ORGANIZATIONNAME","","",null,null],[17,"ORGANIZATIONALUNITNAME","","",null,null],[17,"TITLE","","",null,null],[17,"DESCRIPTION","","",null,null],[17,"SEARCHGUIDE","","",null,null],[17,"BUSINESSCATEGORY","","",null,null],[17,"POSTALADDRESS","","",null,null],[17,"POSTALCODE","","",null,null],[17,"POSTOFFICEBOX","","",null,null],[17,"PHYSICALDELIVERYOFFICENAME","","",null,null],[17,"TELEPHONENUMBER","","",null,null],[17,"TELEXNUMBER","","",null,null],[17,"TELETEXTERMINALIDENTIFIER","","",null,null],[17,"FACSIMILETELEPHONENUMBER","","",null,null],[17,"X121ADDRESS","","",null,null],[17,"INTERNATIONALISDNNUMBER","","",null,null],[17,"REGISTEREDADDRESS","","",null,null],[17,"DESTINATIONINDICATOR","","",null,null],[17,"PREFERREDDELIVERYMETHOD","","",null,null],[17,"PRESENTATIONADDRESS","","",null,null],[17,"SUPPORTEDAPPLICATIONCONTEXT","","",null,null],[17,"MEMBER","","",null,null],[17,"OWNER","","",null,null],[17,"ROLEOCCUPANT","","",null,null],[17,"SEEALSO","","",null,null],[17,"USERPASSWORD","","",null,null],[17,"USERCERTIFICATE","","",null,null],[17,"CACERTIFICATE","","",null,null],[17,"AUTHORITYREVOCATIONLIST","","",null,null],[17,"CERTIFICATEREVOCATIONLIST","","",null,null],[17,"CROSSCERTIFICATEPAIR","","",null,null],[17,"NAME","","",null,null],[17,"GIVENNAME","","",null,null],[17,"INITIALS","","",null,null],[17,"GENERATIONQUALIFIER","","",null,null],[17,"X500UNIQUEIDENTIFIER","","",null,null],[17,"DNQUALIFIER","","",null,null],[17,"ENHANCEDSEARCHGUIDE","","",null,null],[17,"PROTOCOLINFORMATION","","",null,null],[17,"DISTINGUISHEDNAME","","",null,null],[17,"UNIQUEMEMBER","","",null,null],[17,"HOUSEIDENTIFIER","","",null,null],[17,"SUPPORTEDALGORITHMS","","",null,null],[17,"DELTAREVOCATIONLIST","","",null,null],[17,"DMDNAME","","",null,null],[17,"PSEUDONYM","","",null,null],[17,"ROLE","","",null,null],[17,"X500ALGORITHMS","","",null,null],[17,"RSA","","",null,null],[17,"MDC2WITHRSA","","",null,null],[17,"MDC2","","",null,null],[17,"ID_CE","","",null,null],[17,"SUBJECT_DIRECTORY_ATTRIBUTES","","",null,null],[17,"SUBJECT_KEY_IDENTIFIER","","",null,null],[17,"KEY_USAGE","","",null,null],[17,"PRIVATE_KEY_USAGE_PERIOD","","",null,null],[17,"SUBJECT_ALT_NAME","","",null,null],[17,"ISSUER_ALT_NAME","","",null,null],[17,"BASIC_CONSTRAINTS","","",null,null],[17,"CRL_NUMBER","","",null,null],[17,"CRL_REASON","","",null,null],[17,"INVALIDITY_DATE","","",null,null],[17,"DELTA_CRL","","",null,null],[17,"ISSUING_DISTRIBUTION_POINT","","",null,null],[17,"CERTIFICATE_ISSUER","","",null,null],[17,"NAME_CONSTRAINTS","","",null,null],[17,"CRL_DISTRIBUTION_POINTS","","",null,null],[17,"CERTIFICATE_POLICIES","","",null,null],[17,"ANY_POLICY","","",null,null],[17,"POLICY_MAPPINGS","","",null,null],[17,"AUTHORITY_KEY_IDENTIFIER","","",null,null],[17,"POLICY_CONSTRAINTS","","",null,null],[17,"EXT_KEY_USAGE","","",null,null],[17,"FRESHEST_CRL","","",null,null],[17,"INHIBIT_ANY_POLICY","","",null,null],[17,"TARGET_INFORMATION","","",null,null],[17,"NO_REV_AVAIL","","",null,null],[17,"ANYEXTENDEDKEYUSAGE","","",null,null],[17,"NETSCAPE","","",null,null],[17,"NETSCAPE_CERT_EXTENSION","","",null,null],[17,"NETSCAPE_DATA_TYPE","","",null,null],[17,"NETSCAPE_CERT_TYPE","","",null,null],[17,"NETSCAPE_BASE_URL","","",null,null],[17,"NETSCAPE_REVOCATION_URL","","",null,null],[17,"NETSCAPE_CA_REVOCATION_URL","","",null,null],[17,"NETSCAPE_RENEWAL_URL","","",null,null],[17,"NETSCAPE_CA_POLICY_URL","","",null,null],[17,"NETSCAPE_SSL_SERVER_NAME","","",null,null],[17,"NETSCAPE_COMMENT","","",null,null],[17,"NETSCAPE_CERT_SEQUENCE","","",null,null],[17,"NS_SGC","","",null,null],[17,"ORG","","",null,null],[17,"DOD","","",null,null],[17,"IANA","","",null,null],[17,"DIRECTORY","","",null,null],[17,"MANAGEMENT","","",null,null],[17,"EXPERIMENTAL","","",null,null],[17,"PRIVATE","","",null,null],[17,"SECURITY","","",null,null],[17,"SNMPV2","","",null,null],[17,"MAIL","","",null,null],[17,"ENTERPRISES","","",null,null],[17,"DCOBJECT","","",null,null],[17,"MIME_MHS","","",null,null],[17,"MIME_MHS_HEADINGS","","",null,null],[17,"MIME_MHS_BODIES","","",null,null],[17,"ID_HEX_PARTIAL_MESSAGE","","",null,null],[17,"ID_HEX_MULTIPART_MESSAGE","","",null,null],[17,"ZLIB_COMPRESSION","","",null,null],[17,"AES_128_ECB","","",null,null],[17,"AES_128_CBC","","",null,null],[17,"AES_128_OFB128","","",null,null],[17,"AES_128_CFB128","","",null,null],[17,"ID_AES128_WRAP","","",null,null],[17,"AES_128_GCM","","",null,null],[17,"AES_128_CCM","","",null,null],[17,"ID_AES128_WRAP_PAD","","",null,null],[17,"AES_192_ECB","","",null,null],[17,"AES_192_CBC","","",null,null],[17,"AES_192_OFB128","","",null,null],[17,"AES_192_CFB128","","",null,null],[17,"ID_AES192_WRAP","","",null,null],[17,"AES_192_GCM","","",null,null],[17,"AES_192_CCM","","",null,null],[17,"ID_AES192_WRAP_PAD","","",null,null],[17,"AES_256_ECB","","",null,null],[17,"AES_256_CBC","","",null,null],[17,"AES_256_OFB128","","",null,null],[17,"AES_256_CFB128","","",null,null],[17,"ID_AES256_WRAP","","",null,null],[17,"AES_256_GCM","","",null,null],[17,"AES_256_CCM","","",null,null],[17,"ID_AES256_WRAP_PAD","","",null,null],[17,"AES_128_CFB1","","",null,null],[17,"AES_192_CFB1","","",null,null],[17,"AES_256_CFB1","","",null,null],[17,"AES_128_CFB8","","",null,null],[17,"AES_192_CFB8","","",null,null],[17,"AES_256_CFB8","","",null,null],[17,"AES_128_CTR","","",null,null],[17,"AES_192_CTR","","",null,null],[17,"AES_256_CTR","","",null,null],[17,"AES_128_XTS","","",null,null],[17,"AES_256_XTS","","",null,null],[17,"DES_CFB1","","",null,null],[17,"DES_CFB8","","",null,null],[17,"DES_EDE3_CFB1","","",null,null],[17,"DES_EDE3_CFB8","","",null,null],[17,"SHA256","","",null,null],[17,"SHA384","","",null,null],[17,"SHA512","","",null,null],[17,"SHA224","","",null,null],[17,"DSA_WITH_SHA224","","",null,null],[17,"DSA_WITH_SHA256","","",null,null],[17,"HOLD_INSTRUCTION_CODE","","",null,null],[17,"HOLD_INSTRUCTION_NONE","","",null,null],[17,"HOLD_INSTRUCTION_CALL_ISSUER","","",null,null],[17,"HOLD_INSTRUCTION_REJECT","","",null,null],[17,"DATA","","",null,null],[17,"PSS","","",null,null],[17,"UCL","","",null,null],[17,"PILOT","","",null,null],[17,"PILOTATTRIBUTETYPE","","",null,null],[17,"PILOTATTRIBUTESYNTAX","","",null,null],[17,"PILOTOBJECTCLASS","","",null,null],[17,"PILOTGROUPS","","",null,null],[17,"IA5STRINGSYNTAX","","",null,null],[17,"CASEIGNOREIA5STRINGSYNTAX","","",null,null],[17,"PILOTOBJECT","","",null,null],[17,"PILOTPERSON","","",null,null],[17,"ACCOUNT","","",null,null],[17,"DOCUMENT","","",null,null],[17,"ROOM","","",null,null],[17,"DOCUMENTSERIES","","",null,null],[17,"DOMAIN","","",null,null],[17,"RFC822LOCALPART","","",null,null],[17,"DNSDOMAIN","","",null,null],[17,"DOMAINRELATEDOBJECT","","",null,null],[17,"FRIENDLYCOUNTRY","","",null,null],[17,"SIMPLESECURITYOBJECT","","",null,null],[17,"PILOTORGANIZATION","","",null,null],[17,"PILOTDSA","","",null,null],[17,"QUALITYLABELLEDDATA","","",null,null],[17,"USERID","","",null,null],[17,"TEXTENCODEDORADDRESS","","",null,null],[17,"RFC822MAILBOX","","",null,null],[17,"INFO","","",null,null],[17,"FAVOURITEDRINK","","",null,null],[17,"ROOMNUMBER","","",null,null],[17,"PHOTO","","",null,null],[17,"USERCLASS","","",null,null],[17,"HOST","","",null,null],[17,"MANAGER","","",null,null],[17,"DOCUMENTIDENTIFIER","","",null,null],[17,"DOCUMENTTITLE","","",null,null],[17,"DOCUMENTVERSION","","",null,null],[17,"DOCUMENTAUTHOR","","",null,null],[17,"DOCUMENTLOCATION","","",null,null],[17,"HOMETELEPHONENUMBER","","",null,null],[17,"SECRETARY","","",null,null],[17,"OTHERMAILBOX","","",null,null],[17,"LASTMODIFIEDTIME","","",null,null],[17,"LASTMODIFIEDBY","","",null,null],[17,"DOMAINCOMPONENT","","",null,null],[17,"ARECORD","","",null,null],[17,"PILOTATTRIBUTETYPE27","","",null,null],[17,"MXRECORD","","",null,null],[17,"NSRECORD","","",null,null],[17,"SOARECORD","","",null,null],[17,"CNAMERECORD","","",null,null],[17,"ASSOCIATEDDOMAIN","","",null,null],[17,"ASSOCIATEDNAME","","",null,null],[17,"HOMEPOSTALADDRESS","","",null,null],[17,"PERSONALTITLE","","",null,null],[17,"MOBILETELEPHONENUMBER","","",null,null],[17,"PAGERTELEPHONENUMBER","","",null,null],[17,"FRIENDLYCOUNTRYNAME","","",null,null],[17,"ORGANIZATIONALSTATUS","","",null,null],[17,"JANETMAILBOX","","",null,null],[17,"MAILPREFERENCEOPTION","","",null,null],[17,"BUILDINGNAME","","",null,null],[17,"DSAQUALITY","","",null,null],[17,"SINGLELEVELQUALITY","","",null,null],[17,"SUBTREEMINIMUMQUALITY","","",null,null],[17,"SUBTREEMAXIMUMQUALITY","","",null,null],[17,"PERSONALSIGNATURE","","",null,null],[17,"DITREDIRECT","","",null,null],[17,"AUDIO","","",null,null],[17,"DOCUMENTPUBLISHER","","",null,null],[17,"ID_SET","","",null,null],[17,"SET_CTYPE","","",null,null],[17,"SET_MSGEXT","","",null,null],[17,"SET_ATTR","","",null,null],[17,"SET_POLICY","","",null,null],[17,"SET_CERTEXT","","",null,null],[17,"SET_BRAND","","",null,null],[17,"SETCT_PANDATA","","",null,null],[17,"SETCT_PANTOKEN","","",null,null],[17,"SETCT_PANONLY","","",null,null],[17,"SETCT_OIDATA","","",null,null],[17,"SETCT_PI","","",null,null],[17,"SETCT_PIDATA","","",null,null],[17,"SETCT_PIDATAUNSIGNED","","",null,null],[17,"SETCT_HODINPUT","","",null,null],[17,"SETCT_AUTHRESBAGGAGE","","",null,null],[17,"SETCT_AUTHREVREQBAGGAGE","","",null,null],[17,"SETCT_AUTHREVRESBAGGAGE","","",null,null],[17,"SETCT_CAPTOKENSEQ","","",null,null],[17,"SETCT_PINITRESDATA","","",null,null],[17,"SETCT_PI_TBS","","",null,null],[17,"SETCT_PRESDATA","","",null,null],[17,"SETCT_AUTHREQTBS","","",null,null],[17,"SETCT_AUTHRESTBS","","",null,null],[17,"SETCT_AUTHRESTBSX","","",null,null],[17,"SETCT_AUTHTOKENTBS","","",null,null],[17,"SETCT_CAPTOKENDATA","","",null,null],[17,"SETCT_CAPTOKENTBS","","",null,null],[17,"SETCT_ACQCARDCODEMSG","","",null,null],[17,"SETCT_AUTHREVREQTBS","","",null,null],[17,"SETCT_AUTHREVRESDATA","","",null,null],[17,"SETCT_AUTHREVRESTBS","","",null,null],[17,"SETCT_CAPREQTBS","","",null,null],[17,"SETCT_CAPREQTBSX","","",null,null],[17,"SETCT_CAPRESDATA","","",null,null],[17,"SETCT_CAPREVREQTBS","","",null,null],[17,"SETCT_CAPREVREQTBSX","","",null,null],[17,"SETCT_CAPREVRESDATA","","",null,null],[17,"SETCT_CREDREQTBS","","",null,null],[17,"SETCT_CREDREQTBSX","","",null,null],[17,"SETCT_CREDRESDATA","","",null,null],[17,"SETCT_CREDREVREQTBS","","",null,null],[17,"SETCT_CREDREVREQTBSX","","",null,null],[17,"SETCT_CREDREVRESDATA","","",null,null],[17,"SETCT_PCERTREQDATA","","",null,null],[17,"SETCT_PCERTRESTBS","","",null,null],[17,"SETCT_BATCHADMINREQDATA","","",null,null],[17,"SETCT_BATCHADMINRESDATA","","",null,null],[17,"SETCT_CARDCINITRESTBS","","",null,null],[17,"SETCT_MEAQCINITRESTBS","","",null,null],[17,"SETCT_REGFORMRESTBS","","",null,null],[17,"SETCT_CERTREQDATA","","",null,null],[17,"SETCT_CERTREQTBS","","",null,null],[17,"SETCT_CERTRESDATA","","",null,null],[17,"SETCT_CERTINQREQTBS","","",null,null],[17,"SETCT_ERRORTBS","","",null,null],[17,"SETCT_PIDUALSIGNEDTBE","","",null,null],[17,"SETCT_PIUNSIGNEDTBE","","",null,null],[17,"SETCT_AUTHREQTBE","","",null,null],[17,"SETCT_AUTHRESTBE","","",null,null],[17,"SETCT_AUTHRESTBEX","","",null,null],[17,"SETCT_AUTHTOKENTBE","","",null,null],[17,"SETCT_CAPTOKENTBE","","",null,null],[17,"SETCT_CAPTOKENTBEX","","",null,null],[17,"SETCT_ACQCARDCODEMSGTBE","","",null,null],[17,"SETCT_AUTHREVREQTBE","","",null,null],[17,"SETCT_AUTHREVRESTBE","","",null,null],[17,"SETCT_AUTHREVRESTBEB","","",null,null],[17,"SETCT_CAPREQTBE","","",null,null],[17,"SETCT_CAPREQTBEX","","",null,null],[17,"SETCT_CAPRESTBE","","",null,null],[17,"SETCT_CAPREVREQTBE","","",null,null],[17,"SETCT_CAPREVREQTBEX","","",null,null],[17,"SETCT_CAPREVRESTBE","","",null,null],[17,"SETCT_CREDREQTBE","","",null,null],[17,"SETCT_CREDREQTBEX","","",null,null],[17,"SETCT_CREDRESTBE","","",null,null],[17,"SETCT_CREDREVREQTBE","","",null,null],[17,"SETCT_CREDREVREQTBEX","","",null,null],[17,"SETCT_CREDREVRESTBE","","",null,null],[17,"SETCT_BATCHADMINREQTBE","","",null,null],[17,"SETCT_BATCHADMINRESTBE","","",null,null],[17,"SETCT_REGFORMREQTBE","","",null,null],[17,"SETCT_CERTREQTBE","","",null,null],[17,"SETCT_CERTREQTBEX","","",null,null],[17,"SETCT_CERTRESTBE","","",null,null],[17,"SETCT_CRLNOTIFICATIONTBS","","",null,null],[17,"SETCT_CRLNOTIFICATIONRESTBS","","",null,null],[17,"SETCT_BCIDISTRIBUTIONTBS","","",null,null],[17,"SETEXT_GENCRYPT","","",null,null],[17,"SETEXT_MIAUTH","","",null,null],[17,"SETEXT_PINSECURE","","",null,null],[17,"SETEXT_PINANY","","",null,null],[17,"SETEXT_TRACK2","","",null,null],[17,"SETEXT_CV","","",null,null],[17,"SET_POLICY_ROOT","","",null,null],[17,"SETCEXT_HASHEDROOT","","",null,null],[17,"SETCEXT_CERTTYPE","","",null,null],[17,"SETCEXT_MERCHDATA","","",null,null],[17,"SETCEXT_CCERTREQUIRED","","",null,null],[17,"SETCEXT_TUNNELING","","",null,null],[17,"SETCEXT_SETEXT","","",null,null],[17,"SETCEXT_SETQUALF","","",null,null],[17,"SETCEXT_PGWYCAPABILITIES","","",null,null],[17,"SETCEXT_TOKENIDENTIFIER","","",null,null],[17,"SETCEXT_TRACK2DATA","","",null,null],[17,"SETCEXT_TOKENTYPE","","",null,null],[17,"SETCEXT_ISSUERCAPABILITIES","","",null,null],[17,"SETATTR_CERT","","",null,null],[17,"SETATTR_PGWYCAP","","",null,null],[17,"SETATTR_TOKENTYPE","","",null,null],[17,"SETATTR_ISSCAP","","",null,null],[17,"SET_ROOTKEYTHUMB","","",null,null],[17,"SET_ADDPOLICY","","",null,null],[17,"SETATTR_TOKEN_EMV","","",null,null],[17,"SETATTR_TOKEN_B0PRIME","","",null,null],[17,"SETATTR_ISSCAP_CVM","","",null,null],[17,"SETATTR_ISSCAP_T2","","",null,null],[17,"SETATTR_ISSCAP_SIG","","",null,null],[17,"SETATTR_GENCRYPTGRM","","",null,null],[17,"SETATTR_T2ENC","","",null,null],[17,"SETATTR_T2CLEARTXT","","",null,null],[17,"SETATTR_TOKICCSIG","","",null,null],[17,"SETATTR_SECDEVSIG","","",null,null],[17,"SET_BRAND_IATA_ATA","","",null,null],[17,"SET_BRAND_DINERS","","",null,null],[17,"SET_BRAND_AMERICANEXPRESS","","",null,null],[17,"SET_BRAND_JCB","","",null,null],[17,"SET_BRAND_VISA","","",null,null],[17,"SET_BRAND_MASTERCARD","","",null,null],[17,"SET_BRAND_NOVUS","","",null,null],[17,"DES_CDMF","","",null,null],[17,"RSAOAEPENCRYPTIONSET","","",null,null],[17,"IPSEC3","","",null,null],[17,"IPSEC4","","",null,null],[17,"WHIRLPOOL","","",null,null],[17,"CRYPTOPRO","","",null,null],[17,"CRYPTOCOM","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_2001","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_94","","",null,null],[17,"ID_GOSTR3411_94","","",null,null],[17,"ID_HMACGOSTR3411_94","","",null,null],[17,"ID_GOSTR3410_2001","","",null,null],[17,"ID_GOSTR3410_94","","",null,null],[17,"ID_GOST28147_89","","",null,null],[17,"GOST89_CNT","","",null,null],[17,"ID_GOST28147_89_MAC","","",null,null],[17,"ID_GOSTR3411_94_PRF","","",null,null],[17,"ID_GOSTR3410_2001DH","","",null,null],[17,"ID_GOSTR3410_94DH","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_KEYMESHING","","",null,null],[17,"ID_GOST28147_89_NONE_KEYMESHING","","",null,null],[17,"ID_GOSTR3411_94_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3411_94_CRYPTOPROPARAMSET","","",null,null],[17,"ID_GOST28147_89_TESTPARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_D_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_1_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_0_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_RIC_1_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_D_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHA_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHB_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHC_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_XCHA_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_XCHB_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_A","","",null,null],[17,"ID_GOSTR3410_94_ABIS","","",null,null],[17,"ID_GOSTR3410_94_B","","",null,null],[17,"ID_GOSTR3410_94_BBIS","","",null,null],[17,"ID_GOST28147_89_CC","","",null,null],[17,"ID_GOSTR3410_94_CC","","",null,null],[17,"ID_GOSTR3410_2001_CC","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_94_CC","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_2001_CC","","",null,null],[17,"ID_GOSTR3410_2001_PARAMSET_CC","","",null,null],[17,"CAMELLIA_128_CBC","","",null,null],[17,"CAMELLIA_192_CBC","","",null,null],[17,"CAMELLIA_256_CBC","","",null,null],[17,"ID_CAMELLIA128_WRAP","","",null,null],[17,"ID_CAMELLIA192_WRAP","","",null,null],[17,"ID_CAMELLIA256_WRAP","","",null,null],[17,"CAMELLIA_128_ECB","","",null,null],[17,"CAMELLIA_128_OFB128","","",null,null],[17,"CAMELLIA_128_CFB128","","",null,null],[17,"CAMELLIA_192_ECB","","",null,null],[17,"CAMELLIA_192_OFB128","","",null,null],[17,"CAMELLIA_192_CFB128","","",null,null],[17,"CAMELLIA_256_ECB","","",null,null],[17,"CAMELLIA_256_OFB128","","",null,null],[17,"CAMELLIA_256_CFB128","","",null,null],[17,"CAMELLIA_128_CFB1","","",null,null],[17,"CAMELLIA_192_CFB1","","",null,null],[17,"CAMELLIA_256_CFB1","","",null,null],[17,"CAMELLIA_128_CFB8","","",null,null],[17,"CAMELLIA_192_CFB8","","",null,null],[17,"CAMELLIA_256_CFB8","","",null,null],[17,"KISA","","",null,null],[17,"SEED_ECB","","",null,null],[17,"SEED_CBC","","",null,null],[17,"SEED_CFB128","","",null,null],[17,"SEED_OFB128","","",null,null],[17,"HMAC","","",null,null],[17,"CMAC","","",null,null],[17,"RC4_HMAC_MD5","","",null,null],[17,"AES_128_CBC_HMAC_SHA1","","",null,null],[17,"AES_192_CBC_HMAC_SHA1","","",null,null],[17,"AES_256_CBC_HMAC_SHA1","","",null,null],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"nid"}}],[11,"eq","","",41,{"i":[{"n":"self"},{"n":"nid"}],"o":{"n":"bool"}}],[11,"ne","","",41,{"i":[{"n":"self"},{"n":"nid"}],"o":{"n":"bool"}}],[11,"hash","","",41,null],[11,"from_raw","","Create a `Nid` from an integer representation.",41,{"i":[{"n":"c_int"}],"o":{"n":"nid"}}],[11,"as_raw","","Return the integer representation of a `Nid`.",41,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[0,"ocsp","openssl","",null,null],[3,"Flag","openssl::ocsp","",null,null],[3,"OcspResponseStatus","","",null,null],[3,"OcspCertStatus","","",null,null],[3,"OcspRevokedStatus","","",null,null],[3,"Status","","",null,null],[12,"status","","The overall status of the response.",42,null],[12,"reason","","If `status` is `CERT_STATUS_REVOKED`, the reason for the revocation.",42,null],[12,"revocation_time","","If `status` is `CERT_STATUS_REVOKED`, the time at which the certificate was revoked.",42,null],[12,"this_update","","The time that this revocation check was performed.",42,null],[12,"next_update","","The time at which this revocation check expires.",42,null],[3,"OcspBasicResponse","","",null,null],[3,"OcspBasicResponseRef","","",null,null],[3,"OcspCertId","","",null,null],[3,"OcspCertIdRef","","",null,null],[3,"OcspResponse","","",null,null],[3,"OcspResponseRef","","",null,null],[3,"OcspRequest","","",null,null],[3,"OcspRequestRef","","",null,null],[3,"OcspOneReq","","",null,null],[3,"OcspOneReqRef","","",null,null],[17,"FLAG_NO_CERTS","","",null,null],[17,"FLAG_NO_INTERN","","",null,null],[17,"FLAG_NO_CHAIN","","",null,null],[17,"FLAG_NO_VERIFY","","",null,null],[17,"FLAG_NO_EXPLICIT","","",null,null],[17,"FLAG_NO_CA_SIGN","","",null,null],[17,"FLAG_NO_DELEGATED","","",null,null],[17,"FLAG_NO_CHECKS","","",null,null],[17,"FLAG_TRUST_OTHER","","",null,null],[17,"FLAG_RESPID_KEY","","",null,null],[17,"FLAG_NO_TIME","","",null,null],[17,"RESPONSE_STATUS_SUCCESSFUL","","",null,null],[17,"RESPONSE_STATUS_MALFORMED_REQUEST","","",null,null],[17,"RESPONSE_STATUS_INTERNAL_ERROR","","",null,null],[17,"RESPONSE_STATUS_TRY_LATER","","",null,null],[17,"RESPONSE_STATUS_SIG_REQUIRED","","",null,null],[17,"RESPONSE_STATUS_UNAUTHORIZED","","",null,null],[17,"CERT_STATUS_GOOD","","",null,null],[17,"CERT_STATUS_REVOKED","","",null,null],[17,"CERT_STATUS_UNKNOWN","","",null,null],[17,"REVOKED_STATUS_NO_STATUS","","",null,null],[17,"REVOKED_STATUS_UNSPECIFIED","","",null,null],[17,"REVOKED_STATUS_KEY_COMPROMISE","","",null,null],[17,"REVOKED_STATUS_CA_COMPROMISE","","",null,null],[17,"REVOKED_STATUS_AFFILIATION_CHANGED","","",null,null],[17,"REVOKED_STATUS_SUPERSEDED","","",null,null],[17,"REVOKED_STATUS_CESSATION_OF_OPERATION","","",null,null],[17,"REVOKED_STATUS_CERTIFICATE_HOLD","","",null,null],[17,"REVOKED_STATUS_REMOVE_FROM_CRL","","",null,null],[11,"eq","","",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"bool"}}],[11,"ne","","",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"bool"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"flag"}}],[11,"partial_cmp","","",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"bool"}}],[11,"le","","",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"bool"}}],[11,"gt","","",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"bool"}}],[11,"ge","","",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"bool"}}],[11,"cmp","","",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"ordering"}}],[11,"hash","","",43,null],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"empty","","Returns an empty set of flags.",43,{"o":{"n":"flag"}}],[11,"all","","Returns the set containing all flags.",43,{"o":{"n":"flag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",43,{"i":[{"n":"self"}],"o":{"n":"c_ulong"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",43,{"i":[{"n":"c_ulong"}],"o":{"g":["flag"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",43,{"i":[{"n":"c_ulong"}],"o":{"n":"flag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",43,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",43,{"i":[{"n":"self"},{"n":"flag"}]}],[11,"remove","","Removes the specified flags in-place.",43,{"i":[{"n":"self"},{"n":"flag"}]}],[11,"toggle","","Toggles the specified flags in-place.",43,{"i":[{"n":"self"},{"n":"flag"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",43,{"i":[{"n":"self"},{"n":"flag"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"flag"}}],[11,"bitor_assign","","Adds the set of flags.",43,{"i":[{"n":"self"},{"n":"flag"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"flag"}}],[11,"bitxor_assign","","Toggles the set of flags.",43,{"i":[{"n":"self"},{"n":"flag"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"flag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",43,{"i":[{"n":"self"},{"n":"flag"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",43,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"flag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",43,{"i":[{"n":"self"},{"n":"flag"}]}],[11,"not","","Returns the complement of this set of flags.",43,{"i":[{"n":"self"}],"o":{"n":"flag"}}],[11,"extend","","",43,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",43,{"i":[{"n":"t"}],"o":{"n":"flag"}}],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"ocspresponsestatus"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",44,{"i":[{"n":"self"},{"n":"ocspresponsestatus"}],"o":{"n":"bool"}}],[11,"ne","","",44,{"i":[{"n":"self"},{"n":"ocspresponsestatus"}],"o":{"n":"bool"}}],[11,"from_raw","","",44,{"i":[{"n":"c_int"}],"o":{"n":"ocspresponsestatus"}}],[11,"as_raw","","",44,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"ocspcertstatus"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",45,{"i":[{"n":"self"},{"n":"ocspcertstatus"}],"o":{"n":"bool"}}],[11,"ne","","",45,{"i":[{"n":"self"},{"n":"ocspcertstatus"}],"o":{"n":"bool"}}],[11,"from_raw","","",45,{"i":[{"n":"c_int"}],"o":{"n":"ocspcertstatus"}}],[11,"as_raw","","",45,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"ocsprevokedstatus"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"ocsprevokedstatus"}],"o":{"n":"bool"}}],[11,"ne","","",46,{"i":[{"n":"self"},{"n":"ocsprevokedstatus"}],"o":{"n":"bool"}}],[11,"from_raw","","",46,{"i":[{"n":"c_int"}],"o":{"n":"ocsprevokedstatus"}}],[11,"as_raw","","",46,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[11,"check_validity","","Checks validity of the `this_update` and `next_update` fields.",42,{"i":[{"n":"self"},{"n":"u32"},{"g":["u32"],"n":"option"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"from_ptr","","",47,null],[11,"as_ptr","","",47,null],[11,"drop","","",47,{"i":[{"n":"self"}]}],[11,"deref","","",47,{"i":[{"n":"self"}],"o":{"n":"ocspbasicresponseref"}}],[11,"deref_mut","","",47,{"i":[{"n":"self"}],"o":{"n":"ocspbasicresponseref"}}],[11,"borrow","","",47,{"i":[{"n":"self"}],"o":{"n":"ocspbasicresponseref"}}],[11,"as_ref","","",47,{"i":[{"n":"self"}],"o":{"n":"ocspbasicresponseref"}}],[11,"verify","","Verifies the validity of the response.",48,{"i":[{"n":"self"},{"n":"stackref"},{"n":"x509storeref"},{"n":"flag"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"find_status","","Looks up the status for the specified certificate ID.",48,{"i":[{"n":"self"},{"n":"ocspcertidref"}],"o":{"g":["status"],"n":"option"}}],[11,"from_ptr","","",49,null],[11,"as_ptr","","",49,null],[11,"drop","","",49,{"i":[{"n":"self"}]}],[11,"deref","","",49,{"i":[{"n":"self"}],"o":{"n":"ocspcertidref"}}],[11,"deref_mut","","",49,{"i":[{"n":"self"}],"o":{"n":"ocspcertidref"}}],[11,"borrow","","",49,{"i":[{"n":"self"}],"o":{"n":"ocspcertidref"}}],[11,"as_ref","","",49,{"i":[{"n":"self"}],"o":{"n":"ocspcertidref"}}],[11,"from_cert","","Constructs a certificate ID for certificate `subject`.",49,{"i":[{"n":"messagedigest"},{"n":"x509ref"},{"n":"x509ref"}],"o":{"g":["ocspcertid","errorstack"],"n":"result"}}],[11,"from_ptr","","",50,null],[11,"as_ptr","","",50,null],[11,"drop","","",50,{"i":[{"n":"self"}]}],[11,"deref","","",50,{"i":[{"n":"self"}],"o":{"n":"ocspresponseref"}}],[11,"deref_mut","","",50,{"i":[{"n":"self"}],"o":{"n":"ocspresponseref"}}],[11,"borrow","","",50,{"i":[{"n":"self"}],"o":{"n":"ocspresponseref"}}],[11,"as_ref","","",50,{"i":[{"n":"self"}],"o":{"n":"ocspresponseref"}}],[11,"create","","Creates an OCSP response from the status and optional body.",50,{"i":[{"n":"ocspresponsestatus"},{"g":["ocspbasicresponseref"],"n":"option"}],"o":{"g":["ocspresponse","errorstack"],"n":"result"}}],[11,"from_der","","Deserializes a value from DER-formatted data.",50,null],[11,"to_der","","Serializes this value to DER.",51,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"status","","Returns the status of the response.",51,{"i":[{"n":"self"}],"o":{"n":"ocspresponsestatus"}}],[11,"basic","","Returns the basic response.",51,{"i":[{"n":"self"}],"o":{"g":["ocspbasicresponse","errorstack"],"n":"result"}}],[11,"from_ptr","","",52,null],[11,"as_ptr","","",52,null],[11,"drop","","",52,{"i":[{"n":"self"}]}],[11,"deref","","",52,{"i":[{"n":"self"}],"o":{"n":"ocsprequestref"}}],[11,"deref_mut","","",52,{"i":[{"n":"self"}],"o":{"n":"ocsprequestref"}}],[11,"borrow","","",52,{"i":[{"n":"self"}],"o":{"n":"ocsprequestref"}}],[11,"as_ref","","",52,{"i":[{"n":"self"}],"o":{"n":"ocsprequestref"}}],[11,"new","","",52,{"o":{"g":["ocsprequest","errorstack"],"n":"result"}}],[11,"from_der","","Deserializes a value from DER-formatted data.",52,null],[11,"to_der","","Serializes this value to DER.",53,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"add_id","","",53,{"i":[{"n":"self"},{"n":"ocspcertid"}],"o":{"g":["ocsponereqref","errorstack"],"n":"result"}}],[11,"from_ptr","","",54,null],[11,"as_ptr","","",54,null],[11,"drop","","",54,{"i":[{"n":"self"}]}],[11,"deref","","",54,{"i":[{"n":"self"}],"o":{"n":"ocsponereqref"}}],[11,"deref_mut","","",54,{"i":[{"n":"self"}],"o":{"n":"ocsponereqref"}}],[11,"borrow","","",54,{"i":[{"n":"self"}],"o":{"n":"ocsponereqref"}}],[11,"as_ref","","",54,{"i":[{"n":"self"}],"o":{"n":"ocsponereqref"}}],[0,"pkcs12","openssl","PKCS #12 archives.",null,null],[3,"Pkcs12","openssl::pkcs12","",null,null],[3,"Pkcs12Ref","","",null,null],[3,"ParsedPkcs12","","",null,null],[12,"pkey","","",55,null],[12,"cert","","",55,null],[12,"chain","","",55,null],[3,"Pkcs12Builder","","",null,null],[11,"from_ptr","","",56,null],[11,"as_ptr","","",56,null],[11,"drop","","",56,{"i":[{"n":"self"}]}],[11,"deref","","",56,{"i":[{"n":"self"}],"o":{"n":"pkcs12ref"}}],[11,"deref_mut","","",56,{"i":[{"n":"self"}],"o":{"n":"pkcs12ref"}}],[11,"borrow","","",56,{"i":[{"n":"self"}],"o":{"n":"pkcs12ref"}}],[11,"as_ref","","",56,{"i":[{"n":"self"}],"o":{"n":"pkcs12ref"}}],[11,"to_der","","Serializes this value to DER.",57,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"parse","","Extracts the contents of the `Pkcs12`.",57,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["parsedpkcs12","errorstack"],"n":"result"}}],[11,"from_der","","Deserializes a value from DER-formatted data.",56,null],[11,"builder","","Creates a new builder for a protected pkcs12 certificate.",56,{"o":{"n":"pkcs12builder"}}],[11,"key_algorithm","","The encryption algorithm that should be used for the key",58,{"i":[{"n":"self"},{"n":"nid"}],"o":{"n":"self"}}],[11,"cert_algorithm","","The encryption algorithm that should be used for the cert",58,{"i":[{"n":"self"},{"n":"nid"}],"o":{"n":"self"}}],[11,"key_iter","","Key iteration count, default is 2048 as of this writing",58,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[11,"mac_iter","","MAC iteration count, default is the same as key_iter.",58,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[11,"ca","","An additional set of certificates to include in the archive beyond the one provided to `build`.",58,{"i":[{"n":"self"},{"g":["x509"],"n":"stack"}],"o":{"n":"self"}}],[11,"build","","Builds the PKCS #12 object",58,{"i":[{"n":"self"},{"n":"str"},{"n":"str"},{"n":"pkeyref"},{"n":"x509"}],"o":{"g":["pkcs12","errorstack"],"n":"result"}}],[0,"pkcs5","openssl","",null,null],[3,"KeyIvPair","openssl::pkcs5","",null,null],[12,"key","","",59,null],[12,"iv","","",59,null],[5,"bytes_to_key","","Derives a key and an IV from various parameters.",null,null],[5,"pbkdf2_hmac","","Derives a key from a password and salt using the PBKDF2-HMAC algorithm with a digest function.",null,null],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"keyivpair"}}],[11,"eq","","",59,{"i":[{"n":"self"},{"n":"keyivpair"}],"o":{"n":"bool"}}],[11,"ne","","",59,{"i":[{"n":"self"},{"n":"keyivpair"}],"o":{"n":"bool"}}],[11,"hash","","",59,null],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"pkey","openssl","",null,null],[3,"PKey","openssl::pkey","",null,null],[3,"PKeyRef","","",null,null],[3,"PKeyCtx","","",null,null],[3,"PKeyCtxRef","","",null,null],[11,"from_ptr","","",60,null],[11,"as_ptr","","",60,null],[11,"drop","","",60,{"i":[{"n":"self"}]}],[11,"deref","","",60,{"i":[{"n":"self"}],"o":{"n":"pkeyref"}}],[11,"deref_mut","","",60,{"i":[{"n":"self"}],"o":{"n":"pkeyref"}}],[11,"borrow","","",60,{"i":[{"n":"self"}],"o":{"n":"pkeyref"}}],[11,"as_ref","","",60,{"i":[{"n":"self"}],"o":{"n":"pkeyref"}}],[11,"rsa","","Returns a copy of the internal RSA key.",61,{"i":[{"n":"self"}],"o":{"g":["rsa","errorstack"],"n":"result"}}],[11,"dsa","","Returns a copy of the internal DSA key.",61,{"i":[{"n":"self"}],"o":{"g":["dsa","errorstack"],"n":"result"}}],[11,"dh","","Returns a copy of the internal DH key.",61,{"i":[{"n":"self"}],"o":{"g":["dh","errorstack"],"n":"result"}}],[11,"ec_key","","Returns a copy of the internal elliptic curve key.",61,{"i":[{"n":"self"}],"o":{"g":["eckey","errorstack"],"n":"result"}}],[11,"public_key_to_pem","","Serializes a public key to PEM.",61,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",61,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",61,null],[11,"private_key_to_der","","Serializes the private key to DER.",61,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"public_key_to_der","","Serializes the public key to DER.",61,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"bits","","Returns the size of the key.",61,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"public_eq","","Compares the public component of this key with another.",61,{"i":[{"n":"self"},{"n":"pkeyref"}],"o":{"n":"bool"}}],[11,"from_rsa","","Creates a new `PKey` containing an RSA key.",60,{"i":[{"n":"rsa"}],"o":{"g":["pkey","errorstack"],"n":"result"}}],[11,"from_dsa","","Creates a new `PKey` containing a DSA key.",60,{"i":[{"n":"dsa"}],"o":{"g":["pkey","errorstack"],"n":"result"}}],[11,"from_dh","","Creates a new `PKey` containing a Diffie-Hellman key.",60,{"i":[{"n":"dh"}],"o":{"g":["pkey","errorstack"],"n":"result"}}],[11,"from_ec_key","","Creates a new `PKey` containing an elliptic curve key.",60,{"i":[{"n":"eckey"}],"o":{"g":["pkey","errorstack"],"n":"result"}}],[11,"hmac","","Creates a new `PKey` containing an HMAC key.",60,null],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",60,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",60,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",60,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",60,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",60,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",60,null],[11,"private_key_from_pkcs8_callback","","Deserializes a DER-formatted PKCS#8 private key, using a callback to retrieve the password if the key is encrpyted.",60,null],[11,"private_key_from_pkcs8_passphrase","","Deserializes a DER-formatted PKCS#8 private key, using the supplied password if the key is encrypted.",60,null],[11,"private_key_from_pem_cb","","",60,null],[11,"from_ptr","","",62,null],[11,"as_ptr","","",62,null],[11,"drop","","",62,{"i":[{"n":"self"}]}],[11,"deref","","",62,{"i":[{"n":"self"}],"o":{"n":"pkeyctxref"}}],[11,"deref_mut","","",62,{"i":[{"n":"self"}],"o":{"n":"pkeyctxref"}}],[11,"borrow","","",62,{"i":[{"n":"self"}],"o":{"n":"pkeyctxref"}}],[11,"as_ref","","",62,{"i":[{"n":"self"}],"o":{"n":"pkeyctxref"}}],[11,"from_pkey","","",62,{"i":[{"n":"pkeyref"}],"o":{"g":["pkeyctx","errorstack"],"n":"result"}}],[11,"set_rsa_padding","","",63,{"i":[{"n":"self"},{"n":"padding"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"rsa_padding","","",63,{"i":[{"n":"self"}],"o":{"g":["padding","errorstack"],"n":"result"}}],[11,"derive_init","","",63,{"i":[{"n":"self"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"derive_set_peer","","",63,{"i":[{"n":"self"},{"n":"pkeyref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"derive","","",63,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[0,"rand","openssl","Utilities for secure random number generation.",null,null],[5,"rand_bytes","openssl::rand","Fill buffer with cryptographically strong pseudo-random bytes.",null,null],[0,"rsa","openssl","",null,null],[3,"Padding","openssl::rsa","Type of encryption padding to use.",null,null],[3,"Rsa","","",null,null],[3,"RsaRef","","",null,null],[17,"NO_PADDING","","",null,null],[17,"PKCS1_PADDING","","",null,null],[17,"PKCS1_OAEP_PADDING","","",null,null],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"padding"}}],[11,"eq","","",64,{"i":[{"n":"self"},{"n":"padding"}],"o":{"n":"bool"}}],[11,"ne","","",64,{"i":[{"n":"self"},{"n":"padding"}],"o":{"n":"bool"}}],[11,"from_raw","","",64,{"i":[{"n":"c_int"}],"o":{"n":"padding"}}],[11,"as_raw","","",64,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[11,"from_ptr","","",65,null],[11,"as_ptr","","",65,null],[11,"drop","","",65,{"i":[{"n":"self"}]}],[11,"deref","","",65,{"i":[{"n":"self"}],"o":{"n":"rsaref"}}],[11,"deref_mut","","",65,{"i":[{"n":"self"}],"o":{"n":"rsaref"}}],[11,"borrow","","",65,{"i":[{"n":"self"}],"o":{"n":"rsaref"}}],[11,"as_ref","","",65,{"i":[{"n":"self"}],"o":{"n":"rsaref"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",66,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",66,null],[11,"public_key_to_pem","","Serializes a public key to PEM.",66,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"private_key_to_der","","Serializes the private key to DER.",66,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"public_key_to_der","","Serializes the public key to DER.",66,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"public_key_to_der_pkcs1","","Serializes the public key to DER-encoded PKCS#1.",66,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"size","","",66,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"private_decrypt","","Decrypts data using the private key, returning the number of decrypted bytes.",66,null],[11,"private_encrypt","","Encrypts data using the private key, returning the number of encrypted bytes.",66,null],[11,"public_decrypt","","Decrypts data using the public key, returning the number of decrypted bytes.",66,null],[11,"public_encrypt","","Encrypts data using the public key, returning the number of encrypted bytes.",66,null],[11,"n","","",66,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"d","","",66,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"e","","",66,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"p","","",66,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"q","","",66,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"dp","","",66,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"dq","","",66,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"qi","","",66,{"i":[{"n":"self"}],"o":{"g":["bignumref"],"n":"option"}}],[11,"from_public_components","","only useful for associating the key material directly with the key, it's safer to use the supplied load and save methods for DER formatted keys.",65,{"i":[{"n":"bignum"},{"n":"bignum"}],"o":{"g":["rsa","errorstack"],"n":"result"}}],[11,"from_private_components","","",65,{"i":[{"n":"bignum"},{"n":"bignum"},{"n":"bignum"},{"n":"bignum"},{"n":"bignum"},{"n":"bignum"},{"n":"bignum"},{"n":"bignum"}],"o":{"g":["rsa","errorstack"],"n":"result"}}],[11,"generate","","Generates a public/private key pair with the specified size.",65,{"i":[{"n":"u32"}],"o":{"g":["rsa","errorstack"],"n":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",65,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",65,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",65,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",65,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",65,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",65,null],[11,"public_key_from_der_pkcs1","","Deserializes a public key from DER-encoded PKCS#1 data.",65,null],[11,"private_key_from_pem_cb","","",65,null],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"sign","openssl","Message signatures.",null,null],[3,"Signer","openssl::sign","A type which computes cryptographic signatures of data.",null,null],[3,"Verifier","","",null,null],[11,"drop","","",67,{"i":[{"n":"self"}]}],[11,"new","","Creates a new `Signer`.",67,{"i":[{"n":"messagedigest"},{"n":"pkeyref"}],"o":{"g":["signer","errorstack"],"n":"result"}}],[11,"pkey_ctx","","Returns a shared reference to the `PKeyCtx` associated with the `Signer`.",67,{"i":[{"n":"self"}],"o":{"n":"pkeyctxref"}}],[11,"pkey_ctx_mut","","Returns a mutable reference to the `PKeyCtx` associated with the `Signer`.",67,{"i":[{"n":"self"}],"o":{"n":"pkeyctxref"}}],[11,"update","","Feeds more data into the `Signer`.",67,null],[11,"len","","Computes an upper bound on the signature length.",67,{"i":[{"n":"self"}],"o":{"g":["usize","errorstack"],"n":"result"}}],[11,"sign","","Writes the signature into the provided buffer, returning the number of bytes written.",67,null],[11,"sign_to_vec","","Returns the signature.",67,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"finish","","",67,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"write","","",67,null],[11,"flush","","",67,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"drop","","",68,{"i":[{"n":"self"}]}],[11,"new","","Creates a new `Verifier`.",68,{"i":[{"n":"messagedigest"},{"n":"pkeyref"}],"o":{"g":["verifier","errorstack"],"n":"result"}}],[11,"pkey_ctx","","Returns a shared reference to the `PKeyCtx` associated with the `Verifier`.",68,{"i":[{"n":"self"}],"o":{"n":"pkeyctxref"}}],[11,"pkey_ctx_mut","","Returns a mutable reference to the `PKeyCtx` associated with the `Verifier`.",68,{"i":[{"n":"self"}],"o":{"n":"pkeyctxref"}}],[11,"update","","Feeds more data into the `Verifier`.",68,null],[11,"verify","","Determines if the data fed into the `Verifier` matches the provided signature.",68,null],[11,"finish","","",68,null],[11,"write","","",68,null],[11,"flush","","",68,{"i":[{"n":"self"}],"o":{"n":"result"}}],[0,"sha","openssl","The SHA family of hashes.",null,null],[3,"Sha1","openssl::sha","An object which calculates a SHA1 hash of some data.",null,null],[3,"Sha224","","An object which calculates a SHA224 hash of some data.",null,null],[3,"Sha256","","An object which calculates a SHA256 hash of some data.",null,null],[3,"Sha384","","An object which calculates a SHA384 hash of some data.",null,null],[3,"Sha512","","An object which calculates a SHA512 hash of some data.",null,null],[5,"sha1","","Computes the SHA1 hash of some data.",null,null],[5,"sha224","","Computes the SHA224 hash of some data.",null,null],[5,"sha256","","Computes the SHA256 hash of some data.",null,null],[5,"sha384","","Computes the SHA384 hash of some data.",null,null],[5,"sha512","","Computes the SHA512 hash of some data.",null,null],[11,"new","","Creates a new hasher.",69,{"o":{"n":"sha1"}}],[11,"update","","Feeds some data into the hasher.",69,null],[11,"finish","","Returns the hash of the data.",69,null],[11,"new","","Creates a new hasher.",70,{"o":{"n":"sha224"}}],[11,"update","","Feeds some data into the hasher.",70,null],[11,"finish","","Returns the hash of the data.",70,null],[11,"new","","Creates a new hasher.",71,{"o":{"n":"sha256"}}],[11,"update","","Feeds some data into the hasher.",71,null],[11,"finish","","Returns the hash of the data.",71,null],[11,"new","","Creates a new hasher.",72,{"o":{"n":"sha384"}}],[11,"update","","Feeds some data into the hasher.",72,null],[11,"finish","","Returns the hash of the data.",72,null],[11,"new","","Creates a new hasher.",73,{"o":{"n":"sha512"}}],[11,"update","","Feeds some data into the hasher.",73,null],[11,"finish","","Returns the hash of the data.",73,null],[0,"ssl","openssl","SSL/TLS support.",null,null],[3,"ConnectConfiguration","openssl::ssl","A type which allows for configuration of a client-side TLS session before connection.",null,null],[3,"SslAcceptor","","A type which wraps server-side streams in a TLS session.",null,null],[3,"SslAcceptorBuilder","","A builder for `SslAcceptor`s.",null,null],[3,"SslConnector","","A type which wraps client-side streams in a TLS session.",null,null],[3,"SslConnectorBuilder","","A builder for `SslConnector`s.",null,null],[3,"RetryError","","An error indicating that the operation can be immediately retried.",null,null],[3,"SslOption","","Options controlling the behavior of an `SslContext`.",null,null],[3,"SslMode","","Options controlling the behavior of an `SslContext`.",null,null],[3,"SslMethod","","A type specifying the kind of protocol an `SslContext` will speak.",null,null],[3,"SslVerifyMode","","Options controling the behavior of certificate verification.",null,null],[3,"StatusType","","An identifier of a certificate status type.",null,null],[3,"SslContextBuilder","","A builder for `SslContext`s.",null,null],[3,"SslContext","","A context object for TLS streams.",null,null],[3,"SslContextRef","","Reference to [`SslContext`]",null,null],[3,"CipherBits","","Information about the state of a cipher.",null,null],[12,"secret","","The number of secret bits used for the cipher.",74,null],[12,"algorithm","","The number of bits processed by the chosen algorithm.",74,null],[3,"SslCipher","","Information about a cipher.",null,null],[3,"SslCipherRef","","Reference to an [`SslCipher`].",null,null],[3,"SslSession","","An encoded SSL session.",null,null],[3,"SslSessionRef","","Reference to [`SslSession]`.",null,null],[3,"Ssl","","The state of an SSL/TLS session.",null,null],[3,"SslRef","","Reference to an [`Ssl`].",null,null],[3,"MidHandshakeSslStream","","An SSL stream midway through the handshake process.",null,null],[3,"SslStream","","A TLS session over a stream.",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",75,null],[13,"WantRead","","An attempt to read data from the underlying socket returned `WouldBlock`. Wait for read readiness and reattempt the operation.",75,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned `WouldBlock`. Wait for write readiness and reattempt the operation.",75,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",75,null],[13,"Stream","","An error reported by the underlying stream.",75,null],[13,"Ssl","","An error in the OpenSSL library.",75,null],[4,"HandshakeError","","An error or intermediate state after a TLS handshake attempt.",null,null],[13,"SetupFailure","","Setup failed.",76,null],[13,"Failure","","The handshake failed.",76,null],[13,"Interrupted","","The handshake was interrupted midway through.",76,null],[4,"SniError","","An error returned from an SNI callback.",null,null],[13,"Fatal","","",77,null],[13,"Warning","","",77,null],[13,"NoAck","","",77,null],[4,"ShutdownResult","","The result of a shutdown request.",null,null],[13,"Sent","","A close notify message has been sent to the peer.",78,null],[13,"Received","","A close notify response message has been received from the peer.",78,null],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",75,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",75,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"from","","",75,{"i":[{"n":"errorstack"}],"o":{"n":"error"}}],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",79,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",76,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",76,{"i":[{"n":"self"}],"o":{"g":["stderror"],"n":"option"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",76,{"i":[{"n":"errorstack"}],"o":{"n":"handshakeerror"}}],[11,"new","","Creates a new builder for TLS connections.",80,{"i":[{"n":"sslmethod"}],"o":{"g":["sslconnectorbuilder","errorstack"],"n":"result"}}],[11,"builder","","",80,{"i":[{"n":"self"}],"o":{"n":"sslcontextbuilder"}}],[11,"builder_mut","","",80,{"i":[{"n":"self"}],"o":{"n":"sslcontextbuilder"}}],[11,"build","","Consumes the builder, returning an `SslConnector`.",80,{"i":[{"n":"self"}],"o":{"n":"sslconnector"}}],[11,"deref","","",80,{"i":[{"n":"self"}],"o":{"n":"sslcontextbuilder"}}],[11,"deref_mut","","",80,{"i":[{"n":"self"}],"o":{"n":"sslcontextbuilder"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"sslconnector"}}],[11,"connect","","Initiates a client-side TLS session on a stream.",81,{"i":[{"n":"self"},{"n":"str"},{"n":"s"}],"o":{"g":["sslstream","handshakeerror"],"n":"result"}}],[11,"danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication","","Initiates a client-side TLS session on a stream without performing hostname verification.",81,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["sslstream","handshakeerror"],"n":"result"}}],[11,"configure","","Returns a structure allowing for configuration of a single TLS session before connection.",81,{"i":[{"n":"self"}],"o":{"g":["connectconfiguration","errorstack"],"n":"result"}}],[11,"ssl","","",82,{"i":[{"n":"self"}],"o":{"n":"ssl"}}],[11,"ssl_mut","","",82,{"i":[{"n":"self"}],"o":{"n":"ssl"}}],[11,"connect","","Initiates a client-side TLS session on a stream.",82,{"i":[{"n":"self"},{"n":"str"},{"n":"s"}],"o":{"g":["sslstream","handshakeerror"],"n":"result"}}],[11,"danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication","","Initiates a client-side TLS session on a stream without performing hostname verification.",82,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["sslstream","handshakeerror"],"n":"result"}}],[11,"deref","","",82,{"i":[{"n":"self"}],"o":{"n":"sslref"}}],[11,"deref_mut","","",82,{"i":[{"n":"self"}],"o":{"n":"sslref"}}],[11,"mozilla_intermediate","","Creates a new builder configured to connect to non-legacy clients. This should generally be considered a reasonable default choice.",83,{"i":[{"n":"sslmethod"},{"n":"pkeyref"},{"n":"x509ref"},{"n":"i"}],"o":{"g":["sslacceptorbuilder","errorstack"],"n":"result"}}],[11,"mozilla_modern","","Creates a new builder configured to connect to modern clients.",83,{"i":[{"n":"sslmethod"},{"n":"pkeyref"},{"n":"x509ref"},{"n":"i"}],"o":{"g":["sslacceptorbuilder","errorstack"],"n":"result"}}],[11,"mozilla_intermediate_raw","","Like `mozilla_intermediate`, but does not load the certificate chain and private key.",83,{"i":[{"n":"sslmethod"}],"o":{"g":["sslacceptorbuilder","errorstack"],"n":"result"}}],[11,"mozilla_modern_raw","","Like `mozilla_modern`, but does not load the certificate chain and private key.",83,{"i":[{"n":"sslmethod"}],"o":{"g":["sslacceptorbuilder","errorstack"],"n":"result"}}],[11,"builder","","",83,{"i":[{"n":"self"}],"o":{"n":"sslcontextbuilder"}}],[11,"builder_mut","","",83,{"i":[{"n":"self"}],"o":{"n":"sslcontextbuilder"}}],[11,"build","","Consumes the builder, returning a `SslAcceptor`.",83,{"i":[{"n":"self"}],"o":{"n":"sslacceptor"}}],[11,"deref","","",83,{"i":[{"n":"self"}],"o":{"n":"sslcontextbuilder"}}],[11,"deref_mut","","",83,{"i":[{"n":"self"}],"o":{"n":"sslcontextbuilder"}}],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"sslacceptor"}}],[11,"accept","","Initiates a server-side TLS session on a stream.",84,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["sslstream","handshakeerror"],"n":"result"}}],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","Disables a countermeasure against an SSLv3/TLSv1.0 vulnerability affecting CBC ciphers.",null,null],[17,"SSL_OP_ALL","","A \"reasonable default\" set of options which enables compatibility flags.",null,null],[17,"SSL_OP_NO_QUERY_MTU","","Do not query the MTU.",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","Enables Cookie Exchange as described in [RFC 4347 Section 4.2.1].",null,null],[17,"SSL_OP_NO_TICKET","","Disables the use of session tickets for session resumption.",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","Always start a new session when performing a renegotiation on the server side.",null,null],[17,"SSL_OP_NO_COMPRESSION","","Disables the use of TLS compression.",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","Allow legacy insecure renegotiation with servers or clients that do not support secure renegotiation.",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","Creates a new key for each session when using ECDHE.",null,null],[17,"SSL_OP_SINGLE_DH_USE","","Creates a new key for each session when using DHE.",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","Use the server's preferences rather than the client's when selecting a cipher.",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","Disables version rollback attach detection.",null,null],[17,"SSL_OP_NO_SSLV2","","Disables the use of SSLv2.",null,null],[17,"SSL_OP_NO_SSLV3","","Disables the use of SSLv3.",null,null],[17,"SSL_OP_NO_TLSV1","","Disables the use of TLSv1.0.",null,null],[17,"SSL_OP_NO_TLSV1_1","","Disables the use of TLSv1.1.",null,null],[17,"SSL_OP_NO_TLSV1_2","","Disables the use of TLSv1.2.",null,null],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","Enables \"short writes\".",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","Disables a check that the data buffer has not moved between calls when operating in a nonblocking context.",null,null],[17,"SSL_MODE_AUTO_RETRY","","Enables automatic retries after TLS session events such as renegotiations or heartbeats.",null,null],[17,"SSL_MODE_NO_AUTO_CHAIN","","Disables automatic chain building when verifying a peer's certificate.",null,null],[17,"SSL_MODE_RELEASE_BUFFERS","","Release memory buffers when the session does not need them.",null,null],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","Sends the fake `TLS_FALLBACK_SCSV` cipher suite in the ClientHello message of a handshake.",null,null],[17,"SSL_VERIFY_PEER","","Verifies that the peer's certificate is trusted.",null,null],[17,"SSL_VERIFY_NONE","","Disables verification of the peer's certificate.",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","On the server side, abort the handshake if the client did not send a certificate.",null,null],[17,"STATUS_TYPE_OCSP","","An OSCP status.",null,null],[11,"eq","","",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"bool"}}],[11,"ne","","",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"bool"}}],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"ssloption"}}],[11,"partial_cmp","","",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"bool"}}],[11,"le","","",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"bool"}}],[11,"gt","","",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"bool"}}],[11,"ge","","",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"bool"}}],[11,"cmp","","",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"ordering"}}],[11,"hash","","",85,null],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"empty","","Returns an empty set of flags.",85,{"o":{"n":"ssloption"}}],[11,"all","","Returns the set containing all flags.",85,{"o":{"n":"ssloption"}}],[11,"bits","","Returns the raw value of the flags currently stored.",85,{"i":[{"n":"self"}],"o":{"n":"c_ulong"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",85,{"i":[{"n":"c_ulong"}],"o":{"g":["ssloption"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",85,{"i":[{"n":"c_ulong"}],"o":{"n":"ssloption"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",85,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",85,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",85,{"i":[{"n":"self"},{"n":"ssloption"}]}],[11,"remove","","Removes the specified flags in-place.",85,{"i":[{"n":"self"},{"n":"ssloption"}]}],[11,"toggle","","Toggles the specified flags in-place.",85,{"i":[{"n":"self"},{"n":"ssloption"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",85,{"i":[{"n":"self"},{"n":"ssloption"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"ssloption"}}],[11,"bitor_assign","","Adds the set of flags.",85,{"i":[{"n":"self"},{"n":"ssloption"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"ssloption"}}],[11,"bitxor_assign","","Toggles the set of flags.",85,{"i":[{"n":"self"},{"n":"ssloption"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"ssloption"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",85,{"i":[{"n":"self"},{"n":"ssloption"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",85,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"ssloption"}}],[11,"sub_assign","","Disables all flags enabled in the set.",85,{"i":[{"n":"self"},{"n":"ssloption"}]}],[11,"not","","Returns the complement of this set of flags.",85,{"i":[{"n":"self"}],"o":{"n":"ssloption"}}],[11,"extend","","",85,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",85,{"i":[{"n":"t"}],"o":{"n":"ssloption"}}],[11,"eq","","",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"bool"}}],[11,"ne","","",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"bool"}}],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"sslmode"}}],[11,"partial_cmp","","",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"bool"}}],[11,"le","","",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"bool"}}],[11,"gt","","",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"bool"}}],[11,"ge","","",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"bool"}}],[11,"cmp","","",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"ordering"}}],[11,"hash","","",86,null],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"empty","","Returns an empty set of flags.",86,{"o":{"n":"sslmode"}}],[11,"all","","Returns the set containing all flags.",86,{"o":{"n":"sslmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",86,{"i":[{"n":"self"}],"o":{"n":"c_long"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",86,{"i":[{"n":"c_long"}],"o":{"g":["sslmode"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",86,{"i":[{"n":"c_long"}],"o":{"n":"sslmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",86,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",86,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",86,{"i":[{"n":"self"},{"n":"sslmode"}]}],[11,"remove","","Removes the specified flags in-place.",86,{"i":[{"n":"self"},{"n":"sslmode"}]}],[11,"toggle","","Toggles the specified flags in-place.",86,{"i":[{"n":"self"},{"n":"sslmode"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",86,{"i":[{"n":"self"},{"n":"sslmode"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"sslmode"}}],[11,"bitor_assign","","Adds the set of flags.",86,{"i":[{"n":"self"},{"n":"sslmode"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"sslmode"}}],[11,"bitxor_assign","","Toggles the set of flags.",86,{"i":[{"n":"self"},{"n":"sslmode"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"sslmode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",86,{"i":[{"n":"self"},{"n":"sslmode"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",86,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"sslmode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",86,{"i":[{"n":"self"},{"n":"sslmode"}]}],[11,"not","","Returns the complement of this set of flags.",86,{"i":[{"n":"self"}],"o":{"n":"sslmode"}}],[11,"extend","","",86,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",86,{"i":[{"n":"t"}],"o":{"n":"sslmode"}}],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"sslmethod"}}],[11,"tls","","Support all versions of the TLS protocol.",87,{"o":{"n":"sslmethod"}}],[11,"dtls","","Support all versions of the DTLS protocol.",87,{"o":{"n":"sslmethod"}}],[11,"from_ptr","","Constructs an `SslMethod` from a pointer to the underlying OpenSSL value.",87,null],[11,"as_ptr","","Returns a pointer to the underlying OpenSSL value.",87,null],[11,"eq","","",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"bool"}}],[11,"ne","","",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"bool"}}],[11,"clone","","",88,{"i":[{"n":"self"}],"o":{"n":"sslverifymode"}}],[11,"partial_cmp","","",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"bool"}}],[11,"le","","",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"bool"}}],[11,"gt","","",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"bool"}}],[11,"ge","","",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"bool"}}],[11,"cmp","","",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"ordering"}}],[11,"hash","","",88,null],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"empty","","Returns an empty set of flags.",88,{"o":{"n":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",88,{"o":{"n":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",88,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",88,{"i":[{"n":"i32"}],"o":{"g":["sslverifymode"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",88,{"i":[{"n":"i32"}],"o":{"n":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",88,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}]}],[11,"remove","","Removes the specified flags in-place.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}]}],[11,"toggle","","Toggles the specified flags in-place.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",88,{"i":[{"n":"self"},{"n":"sslverifymode"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"sslverifymode"}}],[11,"bitor_assign","","Adds the set of flags.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"sslverifymode"}}],[11,"bitxor_assign","","Toggles the set of flags.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"sslverifymode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}],"o":{"n":"sslverifymode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",88,{"i":[{"n":"self"},{"n":"sslverifymode"}]}],[11,"not","","Returns the complement of this set of flags.",88,{"i":[{"n":"self"}],"o":{"n":"sslverifymode"}}],[11,"extend","","",88,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",88,{"i":[{"n":"t"}],"o":{"n":"sslverifymode"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"statustype"}}],[11,"from_raw","","Constructs a `StatusType` from a raw OpenSSL value.",89,{"i":[{"n":"c_int"}],"o":{"n":"statustype"}}],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",89,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[11,"drop","","",90,{"i":[{"n":"self"}]}],[11,"new","","Creates a new `SslContextBuilder`.",90,{"i":[{"n":"sslmethod"}],"o":{"g":["sslcontextbuilder","errorstack"],"n":"result"}}],[11,"from_ptr","","Creates an `SslContextBuilder` from a pointer to a raw OpenSSL value.",90,null],[11,"as_ptr","","Returns a pointer to the raw OpenSSL value.",90,null],[11,"set_verify","","Configures the certificate verification method for new connections.",90,{"i":[{"n":"self"},{"n":"sslverifymode"}]}],[11,"set_verify_callback","","Configures the certificate verification method for new connections and registers a verification callback.",90,{"i":[{"n":"self"},{"n":"sslverifymode"},{"n":"f"}]}],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for new connections.",90,{"i":[{"n":"self"},{"n":"f"}]}],[11,"set_verify_depth","","Sets the certificate verification depth.",90,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"set_read_ahead","","Controls read ahead behavior.",90,{"i":[{"n":"self"},{"n":"bool"}]}],[11,"set_mode","","Sets the mode used by the context, returning the previous mode.",90,{"i":[{"n":"self"},{"n":"sslmode"}],"o":{"n":"sslmode"}}],[11,"set_tmp_dh","","Sets the parameters to be used during ephemeral Diffie-Hellman key exchange.",90,{"i":[{"n":"self"},{"n":"dhref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_tmp_dh_callback","","Sets the callback which will generate parameters to be used during ephemeral Diffie-Hellman key exchange.",90,{"i":[{"n":"self"},{"n":"f"}]}],[11,"set_tmp_ecdh","","Sets the parameters to be used during ephemeral elliptic curve Diffie-Hellman key exchange.",90,{"i":[{"n":"self"},{"n":"eckeyref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for verification.",90,{"i":[{"n":"self"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_ca_file","","Loads trusted root certificates from a file.",90,{"i":[{"n":"self"},{"n":"p"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_client_ca_list","","Sets the list of CA names sent to the client.",90,{"i":[{"n":"self"},{"g":["x509name"],"n":"stack"}]}],[11,"set_session_id_context","","Set the context identifier for sessions.",90,null],[11,"set_certificate_file","","Loads a leaf certificate from a file.",90,{"i":[{"n":"self"},{"n":"p"},{"n":"x509filetype"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_certificate_chain_file","","Loads a certificate chain from a file.",90,{"i":[{"n":"self"},{"n":"p"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_certificate","","Sets the leaf certificate.",90,{"i":[{"n":"self"},{"n":"x509ref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"add_extra_chain_cert","","Appends a certificate to the certificate chain.",90,{"i":[{"n":"self"},{"n":"x509"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_private_key_file","","Loads the private key from a file.",90,{"i":[{"n":"self"},{"n":"p"},{"n":"x509filetype"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_private_key","","Sets the private key.",90,{"i":[{"n":"self"},{"n":"pkeyref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_cipher_list","","Sets the list of supported ciphers.",90,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_options","","Sets the options used by the context, returning the old set.",90,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"ssloption"}}],[11,"options","","Returns the options used by the context.",90,{"i":[{"n":"self"}],"o":{"n":"ssloption"}}],[11,"clear_options","","Clears the options used by the context, returning the old set.",90,{"i":[{"n":"self"},{"n":"ssloption"}],"o":{"n":"ssloption"}}],[11,"set_npn_protocols","","Set the protocols to be used during Next Protocol Negotiation (the protocols supported by the application).",90,null],[11,"check_private_key","","Checks for consistency between the private key and certificate.",90,{"i":[{"n":"self"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"cert_store","","Returns a shared reference to the context's certificate store.",90,{"i":[{"n":"self"}],"o":{"n":"x509storebuilderref"}}],[11,"cert_store_mut","","Returns a mutable reference to the context's certificate store.",90,{"i":[{"n":"self"}],"o":{"n":"x509storebuilderref"}}],[11,"set_status_callback","","Sets the callback dealing with OCSP stapling.",90,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_psk_callback","","Sets the callback for providing an identity and pre-shared key for a TLS-PSK client.",90,{"i":[{"n":"self"},{"n":"f"}]}],[11,"set_ex_data","","Sets the extra data at the specified index.",90,{"i":[{"n":"self"},{"g":["sslcontext"],"n":"index"},{"n":"t"}]}],[11,"build","","Consumes the builder, returning a new `SslContext`.",90,{"i":[{"n":"self"}],"o":{"n":"sslcontext"}}],[11,"from_ptr","","",91,null],[11,"as_ptr","","",91,null],[11,"drop","","",91,{"i":[{"n":"self"}]}],[11,"deref","","",91,{"i":[{"n":"self"}],"o":{"n":"sslcontextref"}}],[11,"deref_mut","","",91,{"i":[{"n":"self"}],"o":{"n":"sslcontextref"}}],[11,"borrow","","",91,{"i":[{"n":"self"}],"o":{"n":"sslcontextref"}}],[11,"as_ref","","",91,{"i":[{"n":"self"}],"o":{"n":"sslcontextref"}}],[11,"clone","","",91,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",91,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"builder","","Creates a new builder object for an `SslContext`.",91,{"i":[{"n":"sslmethod"}],"o":{"g":["sslcontextbuilder","errorstack"],"n":"result"}}],[11,"new_ex_index","","Returns a new extra data index.",91,{"o":{"g":["index","errorstack"],"n":"result"}}],[11,"cert_store","","Returns a shared reference to the certificate store used for verification.",92,{"i":[{"n":"self"}],"o":{"n":"x509storeref"}}],[11,"extra_chain_certs","","Returns a shared reference to the stack of certificates making up the chain from the leaf.",92,{"i":[{"n":"self"}],"o":{"n":"stackref"}}],[11,"ex_data","","Returns a reference to the extra data at the specified index.",92,{"i":[{"n":"self"},{"g":["sslcontext"],"n":"index"}],"o":{"n":"option"}}],[11,"from_ptr","","",93,null],[11,"as_ptr","","",93,null],[11,"deref","","",93,{"i":[{"n":"self"}],"o":{"n":"sslcipherref"}}],[11,"deref_mut","","",93,{"i":[{"n":"self"}],"o":{"n":"sslcipherref"}}],[11,"name","","Returns the name of the cipher.",94,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"version","","Returns the SSL/TLS protocol version that first defined the cipher.",94,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"bits","","Returns the number of bits used for the cipher.",94,{"i":[{"n":"self"}],"o":{"n":"cipherbits"}}],[11,"description","","Returns a textual description of the cipher.",94,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"from_ptr","","",95,null],[11,"as_ptr","","",95,null],[11,"drop","","",95,{"i":[{"n":"self"}]}],[11,"deref","","",95,{"i":[{"n":"self"}],"o":{"n":"sslsessionref"}}],[11,"deref_mut","","",95,{"i":[{"n":"self"}],"o":{"n":"sslsessionref"}}],[11,"borrow","","",95,{"i":[{"n":"self"}],"o":{"n":"sslsessionref"}}],[11,"as_ref","","",95,{"i":[{"n":"self"}],"o":{"n":"sslsessionref"}}],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"sslsession"}}],[11,"to_owned","","",96,{"i":[{"n":"self"}],"o":{"n":"sslsession"}}],[11,"id","","Returns the SSL session ID.",96,null],[11,"master_key_len","","Returns the length of the master key.",96,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"master_key","","Copies the master key into the provided buffer.",96,null],[11,"from_ptr","","",97,null],[11,"as_ptr","","",97,null],[11,"drop","","",97,{"i":[{"n":"self"}]}],[11,"deref","","",97,{"i":[{"n":"self"}],"o":{"n":"sslref"}}],[11,"deref_mut","","",97,{"i":[{"n":"self"}],"o":{"n":"sslref"}}],[11,"borrow","","",97,{"i":[{"n":"self"}],"o":{"n":"sslref"}}],[11,"as_ref","","",97,{"i":[{"n":"self"}],"o":{"n":"sslref"}}],[11,"new_ex_index","","Returns a new extra data index.",97,{"o":{"g":["index","errorstack"],"n":"result"}}],[11,"fmt","","",98,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"set_verify","","Like [`SslContextBuilder::set_verify`].",98,{"i":[{"n":"self"},{"n":"sslverifymode"}]}],[11,"set_verify_callback","","Like [`SslContextBuilder::set_verify_callback`].",98,{"i":[{"n":"self"},{"n":"sslverifymode"},{"n":"f"}]}],[11,"set_tmp_dh","","Like [`SslContextBuilder::set_tmp_dh`].",98,{"i":[{"n":"self"},{"n":"dhref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_tmp_dh_callback","","Like [`SslContextBuilder::set_tmp_dh_callback`].",98,{"i":[{"n":"self"},{"n":"f"}]}],[11,"set_tmp_ecdh","","Like [`SslContextBuilder::set_tmp_ecdh`].",98,{"i":[{"n":"self"},{"n":"eckeyref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"current_cipher","","Returns the current cipher if the session is active.",98,{"i":[{"n":"self"}],"o":{"g":["sslcipherref"],"n":"option"}}],[11,"state_string","","Returns a short string describing the state of the session.",98,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"state_string_long","","Returns a longer string describing the state of the session.",98,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"set_hostname","","Sets the host name to be sent to the server for Server Name Indication (SNI).",98,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"peer_certificate","","Returns the peer's certificate, if present.",98,{"i":[{"n":"self"}],"o":{"g":["x509"],"n":"option"}}],[11,"peer_cert_chain","","Returns the certificate chain of the peer, if present.",98,{"i":[{"n":"self"}],"o":{"g":["stackref"],"n":"option"}}],[11,"certificate","","Like [`SslContext::certificate`].",98,{"i":[{"n":"self"}],"o":{"g":["x509ref"],"n":"option"}}],[11,"private_key","","Like [`SslContext::private_key`].",98,{"i":[{"n":"self"}],"o":{"g":["pkeyref"],"n":"option"}}],[11,"version","","Returns a string describing the protocol version of the session.",98,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"selected_npn_protocol","","Returns the protocol selected by performing Next Protocol Negotiation, if any.",98,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"pending","","Returns the number of bytes remaining in the currently processed TLS record.",98,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"compression","","Returns the compression method currently in use.",98,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"servername","","Returns the servername sent by the client via Server Name Indication (SNI).",98,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"set_ssl_context","","Changes the context corresponding to the current connection.",98,{"i":[{"n":"self"},{"n":"sslcontextref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"ssl_context","","Returns the context corresponding to the current connection.",98,{"i":[{"n":"self"}],"o":{"n":"sslcontextref"}}],[11,"verify_result","","Returns the certificate verification result.",98,{"i":[{"n":"self"}],"o":{"g":["x509verifyerror"],"n":"option"}}],[11,"session","","Returns a shared reference to the SSL session.",98,{"i":[{"n":"self"}],"o":{"g":["sslsessionref"],"n":"option"}}],[11,"set_session","","Sets the session to be used.",98,{"i":[{"n":"self"},{"n":"sslsessionref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"session_reused","","Determines if the session provided to `set_session` was successfully reused.",98,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_status_type","","Sets the status response a client wishes the server to reply with.",98,{"i":[{"n":"self"},{"n":"statustype"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"ocsp_status","","Returns the server's OCSP response, if present.",98,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"set_ocsp_status","","Sets the OCSP response to be returned to the client.",98,null],[11,"is_server","","Determines if this `Ssl` is configured for server-side or client-side use.",98,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_ex_data","","Sets the extra data at the specified index.",98,{"i":[{"n":"self"},{"g":["ssl"],"n":"index"},{"n":"t"}]}],[11,"ex_data","","Returns a reference to the extra data at the specified index.",98,{"i":[{"n":"self"},{"g":["ssl"],"n":"index"}],"o":{"n":"option"}}],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `Ssl`.",97,{"i":[{"n":"sslcontext"}],"o":{"g":["ssl","errorstack"],"n":"result"}}],[11,"connect","","Initiates a client-side TLS handshake.",97,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["sslstream","handshakeerror"],"n":"result"}}],[11,"accept","","Initiates a server-side TLS handshake.",97,{"i":[{"n":"self"},{"n":"s"}],"o":{"g":["sslstream","handshakeerror"],"n":"result"}}],[11,"fmt","","",99,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Returns a shared reference to the inner stream.",99,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Returns a mutable reference to the inner stream.",99,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"ssl","","Returns a shared reference to the `Ssl` of the stream.",99,{"i":[{"n":"self"}],"o":{"n":"sslref"}}],[11,"error","","Returns the underlying error which interrupted this handshake.",99,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"into_error","","Consumes `self`, returning its error.",99,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"handshake","","Restarts the handshake process.",99,{"i":[{"n":"self"}],"o":{"g":["sslstream","handshakeerror"],"n":"result"}}],[11,"fmt","","",100,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an `io::Error`.",100,null],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an `io::Error`.",100,null],[11,"shutdown","","Shuts down the session.",100,{"i":[{"n":"self"}],"o":{"g":["shutdownresult","error"],"n":"result"}}],[11,"get_ref","","Returns a shared reference to the underlying stream.",100,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Returns a mutable reference to the underlying stream.",100,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"ssl","","Returns a shared reference to the `Ssl` object associated with this stream.",100,{"i":[{"n":"self"}],"o":{"n":"sslref"}}],[11,"read","","",100,null],[11,"write","","",100,null],[11,"flush","","",100,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"shutdownresult"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",78,{"i":[{"n":"self"},{"n":"shutdownresult"}],"o":{"n":"bool"}}],[0,"stack","openssl","",null,null],[3,"Stack","openssl::stack","An owned stack of `T`.",null,null],[3,"IntoIter","","",null,null],[3,"StackRef","","",null,null],[3,"Iter","","An iterator over the stack's contents.",null,null],[3,"IterMut","","A mutable iterator over the stack's contents.",null,null],[8,"Stackable","","Trait implemented by types which can be placed in a stack.",null,null],[16,"StackType","","The C stack type for this element.",101,null],[11,"new","","",102,{"o":{"g":["stack","errorstack"],"n":"result"}}],[11,"drop","","",102,{"i":[{"n":"self"}]}],[11,"into_iter","","",102,{"i":[{"n":"self"}],"o":{"n":"intoiter"}}],[11,"as_ref","","",102,{"i":[{"n":"self"}],"o":{"n":"stackref"}}],[11,"borrow","","",102,{"i":[{"n":"self"}],"o":{"n":"stackref"}}],[11,"from_ptr","","",102,null],[11,"as_ptr","","",102,null],[11,"deref","","",102,{"i":[{"n":"self"}],"o":{"n":"stackref"}}],[11,"deref_mut","","",102,{"i":[{"n":"self"}],"o":{"n":"stackref"}}],[11,"drop","","",103,{"i":[{"n":"self"}]}],[11,"next","","",103,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",103,null],[11,"len","","Returns the number of items in the stack",104,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"iter","","",104,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"iter_mut","","",104,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"get","","Returns a reference to the element at the given index in the stack or `None` if the index is out of bounds",104,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"get_mut","","Returns a mutable reference to the element at the given index in the stack or `None` if the index is out of bounds",104,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"push","","Pushes a value onto the top of the stack.",104,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"pop","","Removes the last element from the stack and returns it.",104,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"index","","",104,null],[11,"index_mut","","",104,null],[11,"next","","",105,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",105,null],[11,"next","","",106,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",106,null],[0,"string","openssl","",null,null],[3,"OpensslString","openssl::string","",null,null],[3,"OpensslStringRef","","",null,null],[11,"from_ptr","","",107,null],[11,"as_ptr","","",107,null],[11,"drop","","",107,{"i":[{"n":"self"}]}],[11,"deref","","",107,{"i":[{"n":"self"}],"o":{"n":"opensslstringref"}}],[11,"deref_mut","","",107,{"i":[{"n":"self"}],"o":{"n":"opensslstringref"}}],[11,"borrow","","",107,{"i":[{"n":"self"}],"o":{"n":"opensslstringref"}}],[11,"as_ref","","",107,{"i":[{"n":"self"}],"o":{"n":"opensslstringref"}}],[11,"from_raw_parts","","",107,null],[11,"from_null_terminated","","",107,null],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",108,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",108,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",108,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"symm","openssl","High level interface to certain symmetric ciphers.",null,null],[3,"Cipher","openssl::symm","Represents a particular cipher algorithm.",null,null],[3,"Crypter","","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",109,null],[13,"Decrypt","","",109,null],[5,"encrypt","","Encrypts data in one go, and returns the encrypted data.",null,null],[5,"decrypt","","Decrypts data in one go, and returns the decrypted data.",null,null],[5,"encrypt_aead","","Like `encrypt`, but for AEAD ciphers such as AES GCM.",null,null],[5,"decrypt_aead","","Like `decrypt`, but for AEAD ciphers such as AES GCM.",null,null],[11,"clone","","",109,{"i":[{"n":"self"}],"o":{"n":"mode"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"cipher"}}],[11,"aes_128_ecb","","",110,{"o":{"n":"cipher"}}],[11,"aes_128_cbc","","",110,{"o":{"n":"cipher"}}],[11,"aes_128_xts","","",110,{"o":{"n":"cipher"}}],[11,"aes_128_ctr","","",110,{"o":{"n":"cipher"}}],[11,"aes_128_cfb1","","",110,{"o":{"n":"cipher"}}],[11,"aes_128_cfb128","","",110,{"o":{"n":"cipher"}}],[11,"aes_128_cfb8","","",110,{"o":{"n":"cipher"}}],[11,"aes_128_gcm","","",110,{"o":{"n":"cipher"}}],[11,"aes_256_ecb","","",110,{"o":{"n":"cipher"}}],[11,"aes_256_cbc","","",110,{"o":{"n":"cipher"}}],[11,"aes_256_xts","","",110,{"o":{"n":"cipher"}}],[11,"aes_256_ctr","","",110,{"o":{"n":"cipher"}}],[11,"aes_256_cfb1","","",110,{"o":{"n":"cipher"}}],[11,"aes_256_cfb128","","",110,{"o":{"n":"cipher"}}],[11,"aes_256_cfb8","","",110,{"o":{"n":"cipher"}}],[11,"aes_256_gcm","","",110,{"o":{"n":"cipher"}}],[11,"bf_cbc","","",110,{"o":{"n":"cipher"}}],[11,"bf_ecb","","",110,{"o":{"n":"cipher"}}],[11,"bf_cfb64","","",110,{"o":{"n":"cipher"}}],[11,"bf_ofb","","",110,{"o":{"n":"cipher"}}],[11,"des_cbc","","",110,{"o":{"n":"cipher"}}],[11,"des_ecb","","",110,{"o":{"n":"cipher"}}],[11,"rc4","","",110,{"o":{"n":"cipher"}}],[11,"from_ptr","","",110,null],[11,"as_ptr","","",110,null],[11,"key_len","","Returns the length of keys used with this cipher.",110,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"iv_len","","Returns the length of the IV used with this cipher, or `None` if the cipher does not use an IV.",110,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"block_size","","Returns the block size of the cipher.",110,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"new","","Creates a new `Crypter`.  The initialisation vector, `iv`, is not necesarry for certain types of `Cipher`.",111,null],[11,"pad","","Enables or disables padding.",111,{"i":[{"n":"self"},{"n":"bool"}]}],[11,"set_tag","","Sets the tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",111,null],[11,"aad_update","","Feeds Additional Authenticated Data (AAD) through the cipher.",111,null],[11,"update","","Feeds data from `input` through the cipher, writing encrypted/decrypted bytes into `output`.",111,null],[11,"finalize","","Finishes the encryption/decryption process, writing any remaining data to `output`.",111,null],[11,"get_tag","","Retrieves the authentication tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",111,null],[11,"drop","","",111,{"i":[{"n":"self"}]}],[0,"types","openssl","",null,null],[8,"OpenSslType","openssl::types","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",112,null],[16,"Ref","","The type representing a reference to this type.",112,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",112,null],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",112,null],[8,"OpenSslTypeRef","","A trait implemented by types which reference borrowed foreign types.",null,null],[16,"CType","","The raw C type.",113,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",113,null],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",113,null],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",113,null],[0,"version","openssl","",null,null],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version identifier:",null,{"o":{"n":"i64"}}],[5,"version","","The text variant of the version number and the release date. For example, \"OpenSSL 0.9.5a 1 Apr 2000\".",null,{"o":{"n":"str"}}],[5,"c_flags","","The compiler flags set for the compilation process in the form \"compiler: ...\" if available or \"compiler: information not available\" otherwise.",null,{"o":{"n":"str"}}],[5,"built_on","","The date of the build process in the form \"built on: ...\" if available or \"built on: date not available\" otherwise.",null,{"o":{"n":"str"}}],[5,"platform","","The \"Configure\" target of the library build in the form \"platform: ...\" if available or \"platform: information not available\" otherwise.",null,{"o":{"n":"str"}}],[5,"dir","","The \"OPENSSLDIR\" setting of the library build in the form \"OPENSSLDIR: \"...\"\" if available or \"OPENSSLDIR: N/A\" otherwise.",null,{"o":{"n":"str"}}],[0,"x509","openssl","",null,null],[3,"X509FileType","openssl::x509","",null,null],[3,"X509StoreContext","","",null,null],[3,"X509StoreContextRef","","",null,null],[3,"X509Generator","","",null,null],[3,"X509Builder","","A builder type which can create `X509` objects.",null,null],[3,"X509","","",null,null],[3,"X509Ref","","",null,null],[3,"X509v3Context","","A context object required to construct certain X509 extension values.",null,null],[3,"X509Extension","","",null,null],[3,"X509ExtensionRef","","",null,null],[3,"X509NameBuilder","","",null,null],[3,"X509Name","","",null,null],[3,"X509NameRef","","",null,null],[3,"X509NameEntries","","",null,null],[3,"X509NameEntry","","",null,null],[3,"X509NameEntryRef","","",null,null],[3,"X509ReqBuilder","","",null,null],[3,"X509Req","","",null,null],[3,"X509ReqRef","","",null,null],[3,"X509VerifyError","","",null,null],[3,"GeneralName","","",null,null],[3,"GeneralNameRef","","",null,null],[3,"X509Algorithm","","",null,null],[3,"X509AlgorithmRef","","",null,null],[0,"extension","","",null,null],[3,"BasicConstraints","openssl::x509::extension","",null,null],[3,"KeyUsage","","",null,null],[3,"ExtendedKeyUsage","","",null,null],[3,"SubjectKeyIdentifier","","",null,null],[3,"AuthorityKeyIdentifier","","",null,null],[3,"SubjectAlternativeName","","",null,null],[4,"ExtensionType","","Type-only version of the `Extension` enum.",null,null],[13,"KeyUsage","","",114,null],[13,"ExtKeyUsage","","",114,null],[13,"SubjectAltName","","",114,null],[13,"IssuerAltName","","",114,null],[13,"OtherNid","","",114,null],[13,"OtherStr","","",114,null],[4,"Extension","","A X.509 v3 certificate extension.",null,null],[13,"KeyUsage","","The purposes of the key contained in the certificate",115,null],[13,"ExtKeyUsage","","The extended purposes of the key contained in the certificate",115,null],[13,"SubjectAltName","","Subject Alternative Names",115,null],[13,"IssuerAltName","","Issuer Alternative Names",115,null],[13,"OtherNid","","Arbitrary extensions by NID. See `man x509v3_config` for value syntax.",115,null],[13,"OtherStr","","Arbitrary extensions by OID string. See `man ASN1_generate_nconf` for value syntax.",115,null],[4,"KeyUsageOption","","",null,null],[13,"DigitalSignature","","",116,null],[13,"NonRepudiation","","",116,null],[13,"KeyEncipherment","","",116,null],[13,"DataEncipherment","","",116,null],[13,"KeyAgreement","","",116,null],[13,"KeyCertSign","","",116,null],[13,"CRLSign","","",116,null],[13,"EncipherOnly","","",116,null],[13,"DecipherOnly","","",116,null],[4,"ExtKeyUsageOption","","",null,null],[13,"ServerAuth","","",117,null],[13,"ClientAuth","","",117,null],[13,"CodeSigning","","",117,null],[13,"EmailProtection","","",117,null],[13,"TimeStamping","","",117,null],[13,"MsCodeInd","","",117,null],[13,"MsCodeCom","","",117,null],[13,"MsCtlSign","","",117,null],[13,"MsSgc","","",117,null],[13,"MsEfs","","",117,null],[13,"NsSgc","","",117,null],[13,"Other","","An arbitrary key usage by OID.",117,null],[4,"AltNameOption","","",null,null],[13,"Other","","The value is specified as OID;content. See `man ASN1_generate_nconf` for more information on the content syntax.",118,null],[13,"Email","","",118,null],[13,"DNS","","",118,null],[13,"Directory","","",118,null],[13,"URI","","",118,null],[13,"IPAddress","","",118,null],[13,"RegisteredID","","",118,null],[11,"clone","","",114,{"i":[{"n":"self"}],"o":{"n":"extensiontype"}}],[11,"hash","","",114,null],[11,"eq","","",114,{"i":[{"n":"self"},{"n":"extensiontype"}],"o":{"n":"bool"}}],[11,"ne","","",114,{"i":[{"n":"self"},{"n":"extensiontype"}],"o":{"n":"bool"}}],[11,"clone","","",115,{"i":[{"n":"self"}],"o":{"n":"extension"}}],[11,"get_type","","",115,{"i":[{"n":"self"}],"o":{"n":"extensiontype"}}],[11,"get_nid","","",114,{"i":[{"n":"self"}],"o":{"g":["nid"],"n":"option"}}],[11,"get_name","","",114,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"to_string","","",115,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"clone","","",116,{"i":[{"n":"self"}],"o":{"n":"keyusageoption"}}],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",117,{"i":[{"n":"self"}],"o":{"n":"extkeyusageoption"}}],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"altnameoption"}}],[11,"fmt","","",118,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"new","","",119,{"o":{"n":"basicconstraints"}}],[11,"critical","","",119,{"i":[{"n":"self"}],"o":{"n":"basicconstraints"}}],[11,"ca","","",119,{"i":[{"n":"self"}],"o":{"n":"basicconstraints"}}],[11,"pathlen","","",119,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"basicconstraints"}}],[11,"build","","",119,{"i":[{"n":"self"}],"o":{"g":["x509extension","errorstack"],"n":"result"}}],[11,"new","","",120,{"o":{"n":"keyusage"}}],[11,"critical","","",120,{"i":[{"n":"self"}],"o":{"n":"keyusage"}}],[11,"digital_signature","","",120,{"i":[{"n":"self"}],"o":{"n":"keyusage"}}],[11,"non_repudiation","","",120,{"i":[{"n":"self"}],"o":{"n":"keyusage"}}],[11,"key_encipherment","","",120,{"i":[{"n":"self"}],"o":{"n":"keyusage"}}],[11,"data_encipherment","","",120,{"i":[{"n":"self"}],"o":{"n":"keyusage"}}],[11,"key_agreement","","",120,{"i":[{"n":"self"}],"o":{"n":"keyusage"}}],[11,"key_cert_sign","","",120,{"i":[{"n":"self"}],"o":{"n":"keyusage"}}],[11,"crl_sign","","",120,{"i":[{"n":"self"}],"o":{"n":"keyusage"}}],[11,"encipher_only","","",120,{"i":[{"n":"self"}],"o":{"n":"keyusage"}}],[11,"decipher_only","","",120,{"i":[{"n":"self"}],"o":{"n":"keyusage"}}],[11,"build","","",120,{"i":[{"n":"self"}],"o":{"g":["x509extension","errorstack"],"n":"result"}}],[11,"new","","",121,{"o":{"n":"extendedkeyusage"}}],[11,"critical","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"server_auth","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"client_auth","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"code_signing","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"time_stamping","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"ms_code_ind","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"ms_code_com","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"ms_ctl_sign","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"ms_sgc","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"ms_efs","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"ns_sgc","","",121,{"i":[{"n":"self"}],"o":{"n":"extendedkeyusage"}}],[11,"other","","",121,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"extendedkeyusage"}}],[11,"build","","",121,{"i":[{"n":"self"}],"o":{"g":["x509extension","errorstack"],"n":"result"}}],[11,"new","","",122,{"o":{"n":"subjectkeyidentifier"}}],[11,"critical","","",122,{"i":[{"n":"self"}],"o":{"n":"subjectkeyidentifier"}}],[11,"build","","",122,{"i":[{"n":"self"},{"n":"x509v3context"}],"o":{"g":["x509extension","errorstack"],"n":"result"}}],[11,"new","","",123,{"o":{"n":"authoritykeyidentifier"}}],[11,"critical","","",123,{"i":[{"n":"self"}],"o":{"n":"authoritykeyidentifier"}}],[11,"keyid","","",123,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"authoritykeyidentifier"}}],[11,"issuer","","",123,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"authoritykeyidentifier"}}],[11,"build","","",123,{"i":[{"n":"self"},{"n":"x509v3context"}],"o":{"g":["x509extension","errorstack"],"n":"result"}}],[11,"new","","",124,{"o":{"n":"subjectalternativename"}}],[11,"critical","","",124,{"i":[{"n":"self"}],"o":{"n":"subjectalternativename"}}],[11,"email","","",124,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"subjectalternativename"}}],[11,"uri","","",124,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"subjectalternativename"}}],[11,"dns","","",124,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"subjectalternativename"}}],[11,"rid","","",124,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"subjectalternativename"}}],[11,"ip","","",124,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"subjectalternativename"}}],[11,"dir_name","","",124,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"subjectalternativename"}}],[11,"other_name","","",124,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"subjectalternativename"}}],[11,"build","","",124,{"i":[{"n":"self"},{"n":"x509v3context"}],"o":{"g":["x509extension","errorstack"],"n":"result"}}],[0,"store","openssl::x509","",null,null],[3,"X509StoreBuilder","openssl::x509::store","",null,null],[3,"X509StoreBuilderRef","","",null,null],[3,"X509Store","","",null,null],[3,"X509StoreRef","","",null,null],[11,"from_ptr","","",125,null],[11,"as_ptr","","",125,null],[11,"drop","","",125,{"i":[{"n":"self"}]}],[11,"deref","","",125,{"i":[{"n":"self"}],"o":{"n":"x509storebuilderref"}}],[11,"deref_mut","","",125,{"i":[{"n":"self"}],"o":{"n":"x509storebuilderref"}}],[11,"borrow","","",125,{"i":[{"n":"self"}],"o":{"n":"x509storebuilderref"}}],[11,"as_ref","","",125,{"i":[{"n":"self"}],"o":{"n":"x509storebuilderref"}}],[11,"new","","Returns a builder for a certificate store.",125,{"o":{"g":["x509storebuilder","errorstack"],"n":"result"}}],[11,"build","","Constructs the `X509Store`.",125,{"i":[{"n":"self"}],"o":{"n":"x509store"}}],[11,"add_cert","","Adds a certificate to the certificate store.",126,{"i":[{"n":"self"},{"n":"x509"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_default_paths","","Load certificates from their default locations.",126,{"i":[{"n":"self"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"from_ptr","","",127,null],[11,"as_ptr","","",127,null],[11,"drop","","",127,{"i":[{"n":"self"}]}],[11,"deref","","",127,{"i":[{"n":"self"}],"o":{"n":"x509storeref"}}],[11,"deref_mut","","",127,{"i":[{"n":"self"}],"o":{"n":"x509storeref"}}],[11,"borrow","","",127,{"i":[{"n":"self"}],"o":{"n":"x509storeref"}}],[11,"as_ref","","",127,{"i":[{"n":"self"}],"o":{"n":"x509storeref"}}],[17,"X509_FILETYPE_PEM","openssl::x509","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[11,"as_raw","","",128,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[11,"from_ptr","","",129,null],[11,"as_ptr","","",129,null],[11,"drop","","",129,{"i":[{"n":"self"}]}],[11,"deref","","",129,{"i":[{"n":"self"}],"o":{"n":"x509storecontextref"}}],[11,"deref_mut","","",129,{"i":[{"n":"self"}],"o":{"n":"x509storecontextref"}}],[11,"borrow","","",129,{"i":[{"n":"self"}],"o":{"n":"x509storecontextref"}}],[11,"as_ref","","",129,{"i":[{"n":"self"}],"o":{"n":"x509storecontextref"}}],[11,"error","","",130,{"i":[{"n":"self"}],"o":{"g":["x509verifyerror"],"n":"option"}}],[11,"current_cert","","",130,{"i":[{"n":"self"}],"o":{"g":["x509ref"],"n":"option"}}],[11,"error_depth","","",130,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"chain","","",130,{"i":[{"n":"self"}],"o":{"g":["stackref"],"n":"option"}}],[11,"ssl","","Returns a reference to the `Ssl` associated with this context.",130,{"i":[{"n":"self"}],"o":{"g":["option","errorstack"],"n":"result"}}],[11,"new","","Creates a new generator with the following defaults:",131,{"o":{"n":"x509generator"}}],[11,"set_valid_period","","Sets certificate validity period in days since today",131,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"x509generator"}}],[11,"add_name","","Add attribute to the name of the certificate",131,{"i":[{"n":"self"},{"n":"string"},{"n":"string"}],"o":{"n":"x509generator"}}],[11,"add_names","","Add multiple attributes to the name of the certificate",131,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"x509generator"}}],[11,"add_extension","","Add an extension to a certificate",131,{"i":[{"n":"self"},{"n":"extension"}],"o":{"n":"x509generator"}}],[11,"add_extensions","","Add multiple extensions to a certificate",131,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"x509generator"}}],[11,"set_sign_hash","","",131,{"i":[{"n":"self"},{"n":"messagedigest"}],"o":{"n":"x509generator"}}],[11,"sign","","Sets the certificate public-key, then self-sign and return it",131,{"i":[{"n":"self"},{"n":"pkeyref"}],"o":{"g":["x509","errorstack"],"n":"result"}}],[11,"request","","Obtain a certificate signing request (CSR)",131,{"i":[{"n":"self"},{"n":"pkeyref"}],"o":{"g":["x509req","errorstack"],"n":"result"}}],[11,"new","","Creates a new builder.",132,{"o":{"g":["x509builder","errorstack"],"n":"result"}}],[11,"set_not_after","","Sets the notAfter constraint on the certificate.",132,{"i":[{"n":"self"},{"n":"asn1timeref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_not_before","","Sets the notBefore constraint on the certificate.",132,{"i":[{"n":"self"},{"n":"asn1timeref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_version","","Sets the version of the certificate.",132,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_serial_number","","Sets the serial number of the certificate.",132,{"i":[{"n":"self"},{"n":"asn1integerref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_issuer_name","","Sets the issuer name of the certificate.",132,{"i":[{"n":"self"},{"n":"x509nameref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_subject_name","","Sets the subject name of the certificate.",132,{"i":[{"n":"self"},{"n":"x509nameref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_pubkey","","Sets the public key associated with the certificate.",132,{"i":[{"n":"self"},{"n":"pkeyref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"x509v3_context","","Returns a context object which is needed to create certain X509 extension values.",132,{"i":[{"n":"self"},{"g":["x509ref"],"n":"option"},{"g":["confref"],"n":"option"}],"o":{"n":"x509v3context"}}],[11,"append_extension","","Adds an X509 extension value to the certificate.",132,{"i":[{"n":"self"},{"n":"x509extension"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"sign","","Signs the certificate with a private key.",132,{"i":[{"n":"self"},{"n":"pkeyref"},{"n":"messagedigest"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"build","","Consumes the builder, returning the certificate.",132,{"i":[{"n":"self"}],"o":{"n":"x509"}}],[11,"from_ptr","","",133,null],[11,"as_ptr","","",133,null],[11,"drop","","",133,{"i":[{"n":"self"}]}],[11,"deref","","",133,{"i":[{"n":"self"}],"o":{"n":"x509ref"}}],[11,"deref_mut","","",133,{"i":[{"n":"self"}],"o":{"n":"x509ref"}}],[11,"borrow","","",133,{"i":[{"n":"self"}],"o":{"n":"x509ref"}}],[11,"as_ref","","",133,{"i":[{"n":"self"}],"o":{"n":"x509ref"}}],[11,"subject_name","","",134,{"i":[{"n":"self"}],"o":{"n":"x509nameref"}}],[11,"subject_alt_names","","Returns this certificate's SAN entries, if they exist.",134,{"i":[{"n":"self"}],"o":{"g":["stack"],"n":"option"}}],[11,"public_key","","",134,{"i":[{"n":"self"}],"o":{"g":["pkey","errorstack"],"n":"result"}}],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",134,{"i":[{"n":"self"},{"n":"messagedigest"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"not_after","","Returns the certificate's Not After validity period.",134,{"i":[{"n":"self"}],"o":{"n":"asn1timeref"}}],[11,"not_before","","Returns the certificate's Not Before validity period.",134,{"i":[{"n":"self"}],"o":{"n":"asn1timeref"}}],[11,"signature","","Returns the certificate's signature",134,{"i":[{"n":"self"}],"o":{"n":"asn1bitstringref"}}],[11,"signature_algorithm","","Returns the certificate's signature algorithm.",134,{"i":[{"n":"self"}],"o":{"n":"x509algorithmref"}}],[11,"ocsp_responders","","Returns the list of OCSP responder URLs specified in the certificate's Authority Information Access field.",134,{"i":[{"n":"self"}],"o":{"g":["stack","errorstack"],"n":"result"}}],[11,"issued","","Checks that this certificate issued `subject`.",134,{"i":[{"n":"self"},{"n":"x509ref"}],"o":{"g":["x509verifyerror"],"n":"result"}}],[11,"to_pem","","Serializes this value to PEM.",134,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"to_der","","Serializes this value to DER.",134,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"to_owned","","",134,{"i":[{"n":"self"}],"o":{"n":"x509"}}],[11,"builder","","Returns a new builder.",133,{"o":{"g":["x509builder","errorstack"],"n":"result"}}],[11,"from_pem","","Deserializes a value from PEM-formatted data.",133,null],[11,"from_der","","Deserializes a value from DER-formatted data.",133,null],[11,"stack_from_pem","","Deserializes a list of PEM-formatted certificates.",133,null],[11,"clone","","",133,{"i":[{"n":"self"}],"o":{"n":"x509"}}],[11,"as_ref","","",134,{"i":[{"n":"self"}],"o":{"n":"x509ref"}}],[11,"as_ptr","","",135,null],[11,"from_ptr","","",136,null],[11,"as_ptr","","",136,null],[11,"drop","","",136,{"i":[{"n":"self"}]}],[11,"deref","","",136,{"i":[{"n":"self"}],"o":{"n":"x509extensionref"}}],[11,"deref_mut","","",136,{"i":[{"n":"self"}],"o":{"n":"x509extensionref"}}],[11,"borrow","","",136,{"i":[{"n":"self"}],"o":{"n":"x509extensionref"}}],[11,"as_ref","","",136,{"i":[{"n":"self"}],"o":{"n":"x509extensionref"}}],[11,"new","","Constructs an X509 extension value. See `man x509v3_config` for information on supported names and their value formats.",136,{"i":[{"g":["confref"],"n":"option"},{"g":["x509v3context"],"n":"option"},{"n":"str"},{"n":"str"}],"o":{"g":["x509extension","errorstack"],"n":"result"}}],[11,"new_nid","","Constructs an X509 extension value. See `man x509v3_config` for information on supported extensions and their value formats.",136,{"i":[{"g":["confref"],"n":"option"},{"g":["x509v3context"],"n":"option"},{"n":"nid"},{"n":"str"}],"o":{"g":["x509extension","errorstack"],"n":"result"}}],[11,"new","","",137,{"o":{"g":["x509namebuilder","errorstack"],"n":"result"}}],[11,"append_entry_by_text","","",137,{"i":[{"n":"self"},{"n":"str"},{"n":"str"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"append_entry_by_nid","","",137,{"i":[{"n":"self"},{"n":"nid"},{"n":"str"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"build","","",137,{"i":[{"n":"self"}],"o":{"n":"x509name"}}],[11,"from_ptr","","",138,null],[11,"as_ptr","","",138,null],[11,"drop","","",138,{"i":[{"n":"self"}]}],[11,"deref","","",138,{"i":[{"n":"self"}],"o":{"n":"x509nameref"}}],[11,"deref_mut","","",138,{"i":[{"n":"self"}],"o":{"n":"x509nameref"}}],[11,"borrow","","",138,{"i":[{"n":"self"}],"o":{"n":"x509nameref"}}],[11,"as_ref","","",138,{"i":[{"n":"self"}],"o":{"n":"x509nameref"}}],[11,"builder","","Returns a new builder.",138,{"o":{"g":["x509namebuilder","errorstack"],"n":"result"}}],[11,"load_client_ca_file","","Loads subject names from a file containing PEM-formatted certificates.",138,{"i":[{"n":"p"}],"o":{"g":["stack","errorstack"],"n":"result"}}],[11,"entries_by_nid","","",139,{"i":[{"n":"self"},{"n":"nid"}],"o":{"n":"x509nameentries"}}],[11,"next","","",140,{"i":[{"n":"self"}],"o":{"g":["x509nameentryref"],"n":"option"}}],[11,"from_ptr","","",141,null],[11,"as_ptr","","",141,null],[11,"drop","","",141,{"i":[{"n":"self"}]}],[11,"deref","","",141,{"i":[{"n":"self"}],"o":{"n":"x509nameentryref"}}],[11,"deref_mut","","",141,{"i":[{"n":"self"}],"o":{"n":"x509nameentryref"}}],[11,"borrow","","",141,{"i":[{"n":"self"}],"o":{"n":"x509nameentryref"}}],[11,"as_ref","","",141,{"i":[{"n":"self"}],"o":{"n":"x509nameentryref"}}],[11,"data","","",142,{"i":[{"n":"self"}],"o":{"n":"asn1stringref"}}],[11,"new","","",143,{"o":{"g":["x509reqbuilder","errorstack"],"n":"result"}}],[11,"set_version","","",143,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_subject_name","","",143,{"i":[{"n":"self"},{"n":"x509nameref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"set_pubkey","","",143,{"i":[{"n":"self"},{"n":"pkeyref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"x509v3_context","","",143,{"i":[{"n":"self"},{"g":["confref"],"n":"option"}],"o":{"n":"x509v3context"}}],[11,"add_extensions","","",143,{"i":[{"n":"self"},{"n":"stackref"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"sign","","",143,{"i":[{"n":"self"},{"n":"pkeyref"},{"n":"messagedigest"}],"o":{"g":["errorstack"],"n":"result"}}],[11,"build","","",143,{"i":[{"n":"self"}],"o":{"n":"x509req"}}],[11,"from_ptr","","",144,null],[11,"as_ptr","","",144,null],[11,"drop","","",144,{"i":[{"n":"self"}]}],[11,"deref","","",144,{"i":[{"n":"self"}],"o":{"n":"x509reqref"}}],[11,"deref_mut","","",144,{"i":[{"n":"self"}],"o":{"n":"x509reqref"}}],[11,"borrow","","",144,{"i":[{"n":"self"}],"o":{"n":"x509reqref"}}],[11,"as_ref","","",144,{"i":[{"n":"self"}],"o":{"n":"x509reqref"}}],[11,"builder","","",144,{"o":{"g":["x509reqbuilder","errorstack"],"n":"result"}}],[11,"from_pem","","Reads CSR from PEM",144,null],[11,"from_der","","Deserializes a value from DER-formatted data.",144,null],[11,"to_pem","","Serializes this value to PEM.",145,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"to_der","","Serializes this value to DER.",145,{"i":[{"n":"self"}],"o":{"g":["vec","errorstack"],"n":"result"}}],[11,"version","","",145,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"subject_name","","",145,{"i":[{"n":"self"}],"o":{"n":"x509nameref"}}],[11,"fmt","","",146,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",146,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",146,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from_raw","","Creates an `X509VerifyError` from a raw error number.",146,{"i":[{"n":"c_long"}],"o":{"g":["x509verifyerror"],"n":"option"}}],[11,"as_raw","","",146,{"i":[{"n":"self"}],"o":{"n":"c_long"}}],[11,"error_string","","",146,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from_ptr","","",147,null],[11,"as_ptr","","",147,null],[11,"drop","","",147,{"i":[{"n":"self"}]}],[11,"deref","","",147,{"i":[{"n":"self"}],"o":{"n":"generalnameref"}}],[11,"deref_mut","","",147,{"i":[{"n":"self"}],"o":{"n":"generalnameref"}}],[11,"borrow","","",147,{"i":[{"n":"self"}],"o":{"n":"generalnameref"}}],[11,"as_ref","","",147,{"i":[{"n":"self"}],"o":{"n":"generalnameref"}}],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a `dNSName`.",148,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an `iPAddress`.",148,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"from_ptr","","",149,null],[11,"as_ptr","","",149,null],[11,"drop","","",149,{"i":[{"n":"self"}]}],[11,"deref","","",149,{"i":[{"n":"self"}],"o":{"n":"x509algorithmref"}}],[11,"deref_mut","","",149,{"i":[{"n":"self"}],"o":{"n":"x509algorithmref"}}],[11,"borrow","","",149,{"i":[{"n":"self"}],"o":{"n":"x509algorithmref"}}],[11,"as_ref","","",149,{"i":[{"n":"self"}],"o":{"n":"x509algorithmref"}}],[11,"object","","Returns the ASN.1 OID of this algorithm.",150,{"i":[{"n":"self"}],"o":{"n":"asn1objectref"}}]],"paths":[[3,"KeyError"],[3,"AesKey"],[3,"Asn1GeneralizedTime"],[3,"Asn1GeneralizedTimeRef"],[3,"Asn1Time"],[3,"Asn1TimeRef"],[3,"Asn1String"],[3,"Asn1StringRef"],[3,"Asn1Integer"],[3,"Asn1IntegerRef"],[3,"Asn1BitString"],[3,"Asn1BitStringRef"],[3,"Asn1Object"],[3,"Asn1ObjectRef"],[3,"BigNumContext"],[3,"BigNum"],[3,"BigNumRef"],[3,"CmsContentInfo"],[3,"CmsContentInfoRef"],[3,"ConfMethod"],[3,"Conf"],[3,"Dh"],[3,"DhRef"],[3,"Dsa"],[3,"DsaRef"],[3,"PointConversionForm"],[3,"Asn1Flag"],[3,"EcGroup"],[3,"EcGroupRef"],[3,"EcPoint"],[3,"EcPointRef"],[3,"EcKey"],[3,"EcKeyRef"],[3,"EcKeyBuilder"],[3,"EcKeyBuilderRef"],[3,"ErrorStack"],[3,"Error"],[3,"Index"],[3,"MessageDigest"],[3,"Hasher"],[3,"DigestBytes"],[3,"Nid"],[3,"Status"],[3,"Flag"],[3,"OcspResponseStatus"],[3,"OcspCertStatus"],[3,"OcspRevokedStatus"],[3,"OcspBasicResponse"],[3,"OcspBasicResponseRef"],[3,"OcspCertId"],[3,"OcspResponse"],[3,"OcspResponseRef"],[3,"OcspRequest"],[3,"OcspRequestRef"],[3,"OcspOneReq"],[3,"ParsedPkcs12"],[3,"Pkcs12"],[3,"Pkcs12Ref"],[3,"Pkcs12Builder"],[3,"KeyIvPair"],[3,"PKey"],[3,"PKeyRef"],[3,"PKeyCtx"],[3,"PKeyCtxRef"],[3,"Padding"],[3,"Rsa"],[3,"RsaRef"],[3,"Signer"],[3,"Verifier"],[3,"Sha1"],[3,"Sha224"],[3,"Sha256"],[3,"Sha384"],[3,"Sha512"],[3,"CipherBits"],[4,"Error"],[4,"HandshakeError"],[4,"SniError"],[4,"ShutdownResult"],[3,"RetryError"],[3,"SslConnectorBuilder"],[3,"SslConnector"],[3,"ConnectConfiguration"],[3,"SslAcceptorBuilder"],[3,"SslAcceptor"],[3,"SslOption"],[3,"SslMode"],[3,"SslMethod"],[3,"SslVerifyMode"],[3,"StatusType"],[3,"SslContextBuilder"],[3,"SslContext"],[3,"SslContextRef"],[3,"SslCipher"],[3,"SslCipherRef"],[3,"SslSession"],[3,"SslSessionRef"],[3,"Ssl"],[3,"SslRef"],[3,"MidHandshakeSslStream"],[3,"SslStream"],[8,"Stackable"],[3,"Stack"],[3,"IntoIter"],[3,"StackRef"],[3,"Iter"],[3,"IterMut"],[3,"OpensslString"],[3,"OpensslStringRef"],[4,"Mode"],[3,"Cipher"],[3,"Crypter"],[8,"OpenSslType"],[8,"OpenSslTypeRef"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyUsageOption"],[4,"ExtKeyUsageOption"],[4,"AltNameOption"],[3,"BasicConstraints"],[3,"KeyUsage"],[3,"ExtendedKeyUsage"],[3,"SubjectKeyIdentifier"],[3,"AuthorityKeyIdentifier"],[3,"SubjectAlternativeName"],[3,"X509StoreBuilder"],[3,"X509StoreBuilderRef"],[3,"X509Store"],[3,"X509FileType"],[3,"X509StoreContext"],[3,"X509StoreContextRef"],[3,"X509Generator"],[3,"X509Builder"],[3,"X509"],[3,"X509Ref"],[3,"X509v3Context"],[3,"X509Extension"],[3,"X509NameBuilder"],[3,"X509Name"],[3,"X509NameRef"],[3,"X509NameEntries"],[3,"X509NameEntry"],[3,"X509NameEntryRef"],[3,"X509ReqBuilder"],[3,"X509Req"],[3,"X509ReqRef"],[3,"X509VerifyError"],[3,"GeneralName"],[3,"GeneralNameRef"],[3,"X509Algorithm"],[3,"X509AlgorithmRef"]]};
searchIndex["openssl_sys"] = {"doc":"","items":[[3,"AES_KEY","openssl_sys","",null,null],[3,"GENERAL_NAME","","",null,null],[12,"type_","","",0,null],[12,"d","","",0,null],[3,"X509V3_CTX","","",null,null],[3,"SHA_CTX","","",null,null],[12,"h0","","",1,null],[12,"h1","","",1,null],[12,"h2","","",1,null],[12,"h3","","",1,null],[12,"h4","","",1,null],[12,"Nl","","",1,null],[12,"Nh","","",1,null],[12,"data","","",1,null],[12,"num","","",1,null],[3,"SHA256_CTX","","",null,null],[12,"h","","",2,null],[12,"Nl","","",2,null],[12,"Nh","","",2,null],[12,"data","","",2,null],[12,"num","","",2,null],[12,"md_len","","",2,null],[3,"SHA512_CTX","","",null,null],[12,"h","","",3,null],[12,"Nl","","",3,null],[12,"Nh","","",3,null],[12,"num","","",3,null],[12,"md_len","","",3,null],[4,"BIGNUM","","",null,null],[4,"BIO","","",null,null],[4,"BIO_METHOD","","",null,null],[4,"CRYPTO_EX_DATA","","",null,null],[4,"DH","","",null,null],[4,"DSA","","",null,null],[4,"ECDSA_SIG","","",null,null],[4,"EVP_CIPHER","","",null,null],[4,"EVP_MD_CTX","","",null,null],[4,"EVP_PKEY","","",null,null],[4,"HMAC_CTX","","",null,null],[4,"OPENSSL_STACK","","",null,null],[4,"PKCS12","","",null,null],[4,"RSA","","",null,null],[4,"SSL","","",null,null],[4,"SSL_CTX","","",null,null],[4,"SSL_SESSION","","",null,null],[4,"stack_st_ASN1_OBJECT","","",null,null],[4,"stack_st_GENERAL_NAME","","",null,null],[4,"stack_st_OPENSSL_STRING","","",null,null],[4,"stack_st_void","","",null,null],[4,"stack_st_X509","","",null,null],[4,"stack_st_X509_NAME","","",null,null],[4,"stack_st_X509_ATTRIBUTE","","",null,null],[4,"stack_st_X509_EXTENSION","","",null,null],[4,"stack_st_SSL_CIPHER","","",null,null],[4,"OPENSSL_INIT_SETTINGS","","",null,null],[4,"X509","","",null,null],[4,"X509_ALGOR","","",null,null],[4,"X509_VERIFY_PARAM","","",null,null],[4,"X509_REQ","","",null,null],[4,"ASN1_INTEGER","","",null,null],[4,"ASN1_GENERALIZEDTIME","","",null,null],[4,"ASN1_STRING","","",null,null],[4,"ASN1_BIT_STRING","","",null,null],[4,"ASN1_TIME","","",null,null],[4,"ASN1_TYPE","","",null,null],[4,"ASN1_OBJECT","","",null,null],[4,"BN_CTX","","",null,null],[4,"BN_GENCB","","",null,null],[4,"CMS_ContentInfo","","",null,null],[4,"CONF","","",null,null],[4,"CONF_METHOD","","",null,null],[4,"COMP_METHOD","","",null,null],[4,"EC_KEY","","",null,null],[4,"EC_GROUP","","",null,null],[4,"EC_METHOD","","",null,null],[4,"EC_POINT","","",null,null],[4,"ENGINE","","",null,null],[4,"EVP_CIPHER_CTX","","",null,null],[4,"EVP_MD","","",null,null],[4,"EVP_PKEY_CTX","","",null,null],[4,"OCSP_BASICRESP","","",null,null],[4,"OCSP_CERTID","","",null,null],[4,"OCSP_RESPONSE","","",null,null],[4,"OCSP_REQUEST","","",null,null],[4,"OCSP_ONEREQ","","",null,null],[4,"SSL_CIPHER","","",null,null],[4,"SSL_METHOD","","",null,null],[4,"X509_CRL","","",null,null],[4,"X509_EXTENSION","","",null,null],[4,"X509_NAME","","",null,null],[4,"X509_NAME_ENTRY","","",null,null],[4,"X509_STORE","","",null,null],[4,"X509_STORE_CTX","","",null,null],[4,"bio_st","","",null,null],[4,"DH_METHOD","","",null,null],[4,"RSA_METHOD","","",null,null],[4,"BN_MONT_CTX","","",null,null],[4,"BN_BLINDING","","",null,null],[4,"DSA_METHOD","","",null,null],[4,"EVP_PKEY_ASN1_METHOD","","",null,null],[4,"point_conversion_form_t","","",null,null],[13,"POINT_CONVERSION_COMPRESSED","","",4,null],[13,"POINT_CONVERSION_UNCOMPRESSED","","",4,null],[13,"POINT_CONVERSION_HYBRID","","",4,null],[5,"init","","",null,{}],[5,"SSL_CTX_set_min_proto_version","","",null,null],[5,"SSL_CTX_set_max_proto_version","","",null,null],[5,"SSL_CTX_get_min_proto_version","","",null,null],[5,"SSL_CTX_get_max_proto_version","","",null,null],[5,"SSL_set_min_proto_version","","",null,null],[5,"SSL_set_max_proto_version","","",null,null],[5,"SSL_get_min_proto_version","","",null,null],[5,"SSL_get_max_proto_version","","",null,null],[5,"BIO_get_mem_data","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"EVP_PKEY_CTX_set_rsa_padding","","",null,null],[5,"EVP_PKEY_CTX_get_rsa_padding","","",null,null],[5,"EVP_PKEY_CTX_set_rsa_pss_saltlen","","",null,null],[5,"EVP_PKEY_CTX_set_rsa_mgf1_md","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"SSL_CTX_set_tmp_ecdh","","",null,null],[5,"SSL_set_tmp_dh","","",null,null],[5,"SSL_set_tmp_ecdh","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set0_verify_cert_store","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"SSL_set_tlsext_status_type","","",null,null],[5,"SSL_CTX_set_tlsext_status_cb","","",null,null],[5,"SSL_CTX_set_tlsext_status_arg","","",null,null],[5,"SSL_CTX_get_extra_chain_certs","","",null,null],[5,"SSL_CTX_set_session_cache_mode","","",null,null],[5,"SSL_get_tlsext_status_ocsp_resp","","",null,null],[5,"SSL_set_tlsext_status_ocsp_resp","","",null,null],[5,"ERR_GET_LIB","","",null,{"i":[{"n":"c_ulong"}],"o":{"n":"c_int"}}],[5,"ERR_GET_FUNC","","",null,{"i":[{"n":"c_ulong"}],"o":{"n":"c_int"}}],[5,"ERR_GET_REASON","","",null,{"i":[{"n":"c_ulong"}],"o":{"n":"c_int"}}],[5,"BIO_new","","",null,null],[5,"BIO_s_file","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"BN_get_rfc2409_prime_768","","",null,null],[5,"BN_get_rfc2409_prime_1024","","",null,null],[5,"BN_get_rfc3526_prime_1536","","",null,null],[5,"BN_get_rfc3526_prime_2048","","",null,null],[5,"BN_get_rfc3526_prime_3072","","",null,null],[5,"BN_get_rfc3526_prime_4096","","",null,null],[5,"BN_get_rfc3526_prime_6144","","",null,null],[5,"BN_get_rfc3526_prime_8192","","",null,null],[5,"CRYPTO_malloc","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"EVP_chacha20","","",null,null],[5,"EVP_chacha20_poly1305","","",null,null],[5,"HMAC_CTX_new","","",null,null],[5,"HMAC_CTX_free","","",null,null],[5,"OCSP_cert_to_id","","",null,null],[5,"TLS_method","","",null,null],[5,"DTLS_method","","",null,null],[5,"SSL_CIPHER_get_version","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_get_issuer_name","","",null,null],[5,"X509_set1_notAfter","","",null,null],[5,"X509_set1_notBefore","","",null,null],[5,"X509_get_ext_d2i","","",null,null],[5,"X509_NAME_add_entry_by_NID","","",null,null],[5,"X509_get_signature_nid","","",null,null],[5,"X509_ALGOR_get0","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"X509V3_EXT_nconf_nid","","",null,null],[5,"X509V3_EXT_nconf","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"BN_is_negative","","",null,null],[5,"EVP_CIPHER_key_length","","",null,null],[5,"EVP_CIPHER_block_size","","",null,null],[5,"EVP_CIPHER_iv_length","","",null,null],[5,"EVP_PBE_scrypt","","",null,null],[5,"DSA_get0_pqg","","",null,null],[5,"DSA_get0_key","","",null,null],[5,"RSA_get0_key","","",null,null],[5,"RSA_get0_factors","","",null,null],[5,"RSA_get0_crt_params","","",null,null],[5,"RSA_set0_key","","",null,null],[5,"RSA_set0_factors","","",null,null],[5,"RSA_set0_crt_params","","",null,null],[5,"ASN1_STRING_get0_data","","",null,null],[5,"OPENSSL_sk_num","","",null,null],[5,"OPENSSL_sk_value","","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_set_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"SSL_CTX_sess_set_get_cb","","",null,null],[5,"SSL_get_client_random","","",null,null],[5,"SSL_get_server_random","","",null,null],[5,"X509_getm_notAfter","","",null,null],[5,"X509_getm_notBefore","","",null,null],[5,"X509_get0_signature","","",null,null],[5,"DH_set0_pqg","","",null,null],[5,"BIO_set_init","","",null,null],[5,"BIO_set_data","","",null,null],[5,"BIO_get_data","","",null,null],[5,"BIO_meth_new","","",null,null],[5,"BIO_meth_free","","",null,null],[5,"BIO_meth_set_write","","",null,null],[5,"BIO_meth_set_read","","",null,null],[5,"BIO_meth_set_puts","","",null,null],[5,"BIO_meth_set_ctrl","","",null,null],[5,"BIO_meth_set_create","","",null,null],[5,"BIO_meth_set_destroy","","",null,null],[5,"CRYPTO_get_ex_new_index","","",null,null],[5,"X509_up_ref","","",null,null],[5,"SSL_CTX_up_ref","","",null,null],[5,"SSL_session_reused","","",null,null],[5,"SSL_SESSION_get_master_key","","",null,null],[5,"SSL_SESSION_up_ref","","",null,null],[5,"X509_get0_extensions","","",null,null],[5,"X509_STORE_CTX_get0_chain","","",null,null],[5,"EVP_MD_CTX_new","","",null,null],[5,"EVP_MD_CTX_free","","",null,null],[5,"EVP_PKEY_bits","","",null,null],[5,"OpenSSL_version_num","","",null,null],[5,"OpenSSL_version","","",null,null],[5,"OPENSSL_init_ssl","","",null,null],[5,"OPENSSL_sk_new_null","","",null,null],[5,"OPENSSL_sk_free","","",null,null],[5,"OPENSSL_sk_pop_free","","",null,null],[5,"OPENSSL_sk_push","","",null,null],[5,"OPENSSL_sk_pop","","",null,null],[5,"PKCS12_create","","",null,null],[5,"X509_REQ_get_version","","",null,null],[5,"X509_REQ_get_subject_name","","",null,null],[5,"SSL_extension_supported","","",null,null],[5,"ECDSA_SIG_get0","","",null,null],[5,"ECDSA_SIG_set0","","",null,null],[5,"SSL_CIPHER_get_cipher_nid","","",null,null],[5,"SSL_CIPHER_get_digest_nid","","",null,null],[5,"AES_set_encrypt_key","","",null,null],[5,"AES_set_decrypt_key","","",null,null],[5,"AES_ige_encrypt","","",null,null],[5,"ASN1_INTEGER_get","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_INTEGER_to_BN","","",null,null],[5,"ASN1_GENERALIZEDTIME_free","","",null,null],[5,"ASN1_GENERALIZEDTIME_print","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"ASN1_TIME_print","","",null,null],[5,"ASN1_BIT_STRING_free","","",null,null],[5,"ASN1_OBJECT_free","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new_fp","","",null,null],[5,"BIO_new_socket","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_new_mem_buf","","",null,null],[5,"BIO_set_flags","","",null,null],[5,"BIO_clear_flags","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear","","",null,null],[5,"BN_free","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"BN_to_ASN1_INTEGER","","",null,null],[5,"NCONF_default","","",null,null],[5,"NCONF_new","","",null,null],[5,"NCONF_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"DH_new","","",null,null],[5,"DH_free","","",null,null],[5,"DH_get_1024_160","","",null,null],[5,"DH_get_2048_224","","",null,null],[5,"DH_get_2048_256","","",null,null],[5,"EC_KEY_new","","",null,null],[5,"EC_KEY_new_by_curve_name","","",null,null],[5,"EC_KEY_dup","","",null,null],[5,"EC_KEY_up_ref","","",null,null],[5,"EC_KEY_set_group","","",null,null],[5,"EC_KEY_get0_group","","",null,null],[5,"EC_KEY_set_public_key","","",null,null],[5,"EC_KEY_get0_public_key","","",null,null],[5,"EC_KEY_set_private_key","","",null,null],[5,"EC_KEY_get0_private_key","","",null,null],[5,"EC_KEY_generate_key","","",null,null],[5,"EC_KEY_check_key","","",null,null],[5,"EC_KEY_free","","",null,null],[5,"EC_KEY_set_public_key_affine_coordinates","","",null,null],[5,"EC_GF2m_simple_method","","",null,null],[5,"EC_GROUP_new","","",null,null],[5,"EC_GROUP_new_curve_GFp","","",null,null],[5,"EC_GROUP_new_curve_GF2m","","",null,null],[5,"EC_GROUP_new_by_curve_name","","",null,null],[5,"EC_GROUP_get_curve_GFp","","",null,null],[5,"EC_GROUP_get_curve_GF2m","","",null,null],[5,"EC_GROUP_get_degree","","",null,null],[5,"EC_GROUP_get_order","","",null,null],[5,"EC_GROUP_set_asn1_flag","","",null,null],[5,"EC_GROUP_free","","",null,null],[5,"EC_POINT_new","","",null,null],[5,"EC_POINT_add","","",null,null],[5,"EC_POINT_mul","","",null,null],[5,"EC_POINT_invert","","",null,null],[5,"EC_POINT_point2oct","","",null,null],[5,"EC_POINT_oct2point","","",null,null],[5,"EC_POINT_cmp","","",null,null],[5,"EC_POINT_free","","",null,null],[5,"EC_POINT_get_affine_coordinates_GFp","","",null,null],[5,"EC_POINT_get_affine_coordinates_GF2m","","",null,null],[5,"ECDSA_SIG_new","","",null,null],[5,"ECDSA_SIG_free","","",null,null],[5,"ECDSA_do_verify","","",null,null],[5,"ECDSA_do_sign","","",null,null],[5,"ERR_peek_last_error","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_get_error_line_data","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_clear_error","","",null,null],[5,"ERR_put_error","","",null,null],[5,"ERR_set_error_data","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_128_xts","","",null,null],[5,"EVP_aes_128_ctr","","",null,null],[5,"EVP_aes_128_gcm","","",null,null],[5,"EVP_aes_128_ccm","","",null,null],[5,"EVP_aes_128_cfb1","","",null,null],[5,"EVP_aes_128_cfb128","","",null,null],[5,"EVP_aes_128_cfb8","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_aes_256_xts","","",null,null],[5,"EVP_aes_256_ctr","","",null,null],[5,"EVP_aes_256_gcm","","",null,null],[5,"EVP_aes_256_ccm","","",null,null],[5,"EVP_aes_256_cfb1","","",null,null],[5,"EVP_aes_256_cfb128","","",null,null],[5,"EVP_aes_256_cfb8","","",null,null],[5,"EVP_bf_cbc","","",null,null],[5,"EVP_bf_ecb","","",null,null],[5,"EVP_bf_cfb64","","",null,null],[5,"EVP_bf_ofb","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_des_cbc","","",null,null],[5,"EVP_des_ecb","","",null,null],[5,"EVP_des_ede3","","",null,null],[5,"EVP_des_ede3_cbc","","",null,null],[5,"EVP_BytesToKey","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_set_key_length","","",null,null],[5,"EVP_CIPHER_CTX_ctrl","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherInit_ex","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_DigestSignInit","","",null,null],[5,"EVP_DigestSignFinal","","",null,null],[5,"EVP_DigestVerifyInit","","",null,null],[5,"EVP_DigestVerifyFinal","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_copy_parameters","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"EVP_PKEY_get1_DSA","","",null,null],[5,"EVP_PKEY_get1_DH","","",null,null],[5,"EVP_PKEY_get1_EC_KEY","","",null,null],[5,"EVP_PKEY_cmp","","",null,null],[5,"EVP_PKEY_id","","",null,null],[5,"EVP_PKEY_new_mac_key","","",null,null],[5,"EVP_PKEY_derive_init","","",null,null],[5,"EVP_PKEY_derive_set_peer","","",null,null],[5,"EVP_PKEY_derive","","",null,null],[5,"d2i_PKCS8PrivateKey_bio","","",null,null],[5,"EVP_PKEY_CTX_new","","",null,null],[5,"EVP_PKEY_CTX_new_id","","",null,null],[5,"EVP_PKEY_CTX_free","","",null,null],[5,"EVP_PKEY_CTX_ctrl","","",null,null],[5,"EVP_PKEY_keygen_init","","",null,null],[5,"EVP_PKEY_keygen","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"OBJ_obj2nid","","",null,null],[5,"OBJ_obj2txt","","",null,null],[5,"OBJ_nid2sn","","",null,null],[5,"OCSP_BASICRESP_new","","",null,null],[5,"OCSP_BASICRESP_free","","",null,null],[5,"OCSP_basic_verify","","",null,null],[5,"OCSP_resp_find_status","","",null,null],[5,"OCSP_check_validity","","",null,null],[5,"OCSP_CERTID_free","","",null,null],[5,"OCSP_RESPONSE_new","","",null,null],[5,"OCSP_RESPONSE_free","","",null,null],[5,"i2d_OCSP_RESPONSE","","",null,null],[5,"d2i_OCSP_RESPONSE","","",null,null],[5,"OCSP_response_create","","",null,null],[5,"OCSP_response_status","","",null,null],[5,"OCSP_response_get1_basic","","",null,null],[5,"OCSP_REQUEST_new","","",null,null],[5,"OCSP_REQUEST_free","","",null,null],[5,"i2d_OCSP_REQUEST","","",null,null],[5,"d2i_OCSP_REQUEST","","",null,null],[5,"OCSP_request_add0_id","","",null,null],[5,"OCSP_ONEREQ_free","","",null,null],[5,"PEM_read_bio_DHparams","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_X509_REQ","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_read_bio_PUBKEY","","",null,null],[5,"PEM_read_bio_RSAPrivateKey","","",null,null],[5,"PEM_read_bio_RSAPublicKey","","",null,null],[5,"PEM_read_bio_RSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DHparams","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PKCS8PrivateKey","","",null,null],[5,"PEM_write_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_RSAPrivateKey","","",null,null],[5,"PEM_write_bio_RSAPublicKey","","",null,null],[5,"PEM_write_bio_RSA_PUBKEY","","",null,null],[5,"PEM_read_bio_DSAPrivateKey","","",null,null],[5,"PEM_read_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DSAPrivateKey","","",null,null],[5,"PEM_write_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PEM_write_bio_X509_REQ","","",null,null],[5,"PEM_write_bio_ECPrivateKey","","",null,null],[5,"PEM_read_bio_ECPrivateKey","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"PKCS5_PBKDF2_HMAC","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RAND_status","","",null,null],[5,"RSA_new","","",null,null],[5,"RSA_free","","",null,null],[5,"RSA_generate_key_ex","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_decrypt","","",null,null],[5,"RSA_private_encrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"DSA_new","","",null,null],[5,"DSA_free","","",null,null],[5,"DSA_size","","",null,null],[5,"DSA_generate_parameters_ex","","",null,null],[5,"DSA_generate_key","","",null,null],[5,"DSA_sign","","",null,null],[5,"DSA_verify","","",null,null],[5,"SHA1","","",null,null],[5,"SHA224","","",null,null],[5,"SHA256","","",null,null],[5,"SHA384","","",null,null],[5,"SHA512","","",null,null],[5,"SHA1_Init","","",null,null],[5,"SHA1_Update","","",null,null],[5,"SHA1_Final","","",null,null],[5,"SHA256_Init","","",null,null],[5,"SHA256_Update","","",null,null],[5,"SHA256_Final","","",null,null],[5,"SHA224_Init","","",null,null],[5,"SHA224_Update","","",null,null],[5,"SHA224_Final","","",null,null],[5,"SHA384_Init","","",null,null],[5,"SHA384_Update","","",null,null],[5,"SHA384_Final","","",null,null],[5,"SHA512_Init","","",null,null],[5,"SHA512_Update","","",null,null],[5,"SHA512_Final","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_pending","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_do_handshake","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_set_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_get_peer_cert_chain","","",null,null],[5,"SSL_get_ssl_method","","",null,null],[5,"SSL_get_version","","",null,null],[5,"SSL_version","","",null,null],[5,"SSL_state_string","","",null,null],[5,"SSL_state_string_long","","",null,null],[5,"SSL_set_verify","","",null,null],[5,"SSL_set_ex_data","","",null,null],[5,"SSL_get_ex_data","","",null,null],[5,"SSL_get_servername","","",null,null],[5,"SSL_get_current_cipher","","",null,null],[5,"SSL_get0_param","","",null,null],[5,"SSL_get_verify_result","","",null,null],[5,"SSL_shutdown","","",null,null],[5,"SSL_get_certificate","","",null,null],[5,"SSL_get_privatekey","","",null,null],[5,"SSL_load_client_CA_file","","",null,null],[5,"SSL_set_tmp_dh_callback","","",null,null],[5,"SSL_export_keying_material","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_CIPHER_get_name","","",null,null],[5,"SSL_CIPHER_get_bits","","",null,null],[5,"SSL_CIPHER_description","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"SSL_CTX_callback_ctrl","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_set_default_verify_paths","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_set_session_id_context","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate_chain_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_client_CA_list","","",null,null],[5,"SSL_CTX_get_cert_store","","",null,null],[5,"SSL_CTX_set_tmp_dh_callback","","",null,null],[5,"SSL_CTX_sess_set_new_cb","","",null,null],[5,"SSL_CTX_sess_set_remove_cb","","",null,null],[5,"SSL_CTX_get0_certificate","","",null,null],[5,"SSL_CTX_get0_privatekey","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"SSL_CTX_set_next_protos_advertised_cb","","",null,null],[5,"SSL_CTX_set_next_proto_select_cb","","",null,null],[5,"SSL_CTX_set_psk_client_callback","","",null,null],[5,"SSL_select_next_proto","","",null,null],[5,"SSL_get0_next_proto_negotiated","","",null,null],[5,"SSL_get_session","","",null,null],[5,"SSL_set_session","","",null,null],[5,"SSL_is_server","","",null,null],[5,"SSL_SESSION_free","","",null,null],[5,"SSL_SESSION_get_id","","",null,null],[5,"d2i_SSL_SESSION","","",null,null],[5,"i2d_SSL_SESSION","","",null,null],[5,"SSL_CTX_set_alpn_protos","","",null,null],[5,"SSL_set_alpn_protos","","",null,null],[5,"SSL_CTX_set_alpn_select_cb","","",null,null],[5,"SSL_get0_alpn_selected","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_REQ_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_subject_name","","",null,null],[5,"X509_set_serialNumber","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_to_X509_REQ","","",null,null],[5,"X509_verify_cert","","",null,null],[5,"X509_verify_cert_error_string","","",null,null],[5,"X509_get1_ocsp","","",null,null],[5,"X509_check_issued","","",null,null],[5,"X509_ALGOR_free","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_new","","",null,null],[5,"X509_NAME_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_ENTRY_free","","",null,null],[5,"ASN1_STRING_free","","",null,null],[5,"ASN1_STRING_length","","",null,null],[5,"ASN1_INTEGER_free","","",null,null],[5,"X509_STORE_new","","",null,null],[5,"X509_STORE_free","","",null,null],[5,"X509_STORE_add_cert","","",null,null],[5,"X509_STORE_set_default_paths","","",null,null],[5,"X509_STORE_CTX_new","","",null,null],[5,"X509_STORE_CTX_cleanup","","",null,null],[5,"X509_STORE_CTX_init","","",null,null],[5,"X509_STORE_CTX_free","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_set_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509_STORE_CTX_get_error_depth","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"X509V3_set_nconf","","",null,null],[5,"X509_REQ_new","","",null,null],[5,"X509_REQ_set_version","","",null,null],[5,"X509_REQ_set_subject_name","","",null,null],[5,"X509_REQ_set_pubkey","","",null,null],[5,"X509_REQ_get_pubkey","","",null,null],[5,"X509_REQ_add_extensions","","",null,null],[5,"X509_REQ_get_extensions","","",null,null],[5,"X509_REQ_sign","","",null,null],[5,"X509_VERIFY_PARAM_free","","",null,null],[5,"X509_VERIFY_PARAM_set_hostflags","","",null,null],[5,"X509_VERIFY_PARAM_set1_host","","",null,null],[5,"X509_VERIFY_PARAM_set1_ip","","",null,null],[5,"d2i_DHparams","","",null,null],[5,"i2d_DHparams","","",null,null],[5,"d2i_DSAPublicKey","","",null,null],[5,"i2d_DSAPublicKey","","",null,null],[5,"d2i_DSAPrivateKey","","",null,null],[5,"i2d_DSAPrivateKey","","",null,null],[5,"d2i_DSA_PUBKEY","","",null,null],[5,"i2d_DSA_PUBKEY","","",null,null],[5,"d2i_ECPrivateKey","","",null,null],[5,"i2d_ECPrivateKey","","",null,null],[5,"d2i_X509","","",null,null],[5,"d2i_X509_REQ","","",null,null],[5,"i2d_X509_bio","","",null,null],[5,"i2d_X509","","",null,null],[5,"i2d_X509_REQ_bio","","",null,null],[5,"i2d_X509_REQ","","",null,null],[5,"d2i_AutoPrivateKey","","",null,null],[5,"d2i_PUBKEY","","",null,null],[5,"i2d_PUBKEY_bio","","",null,null],[5,"i2d_PrivateKey_bio","","",null,null],[5,"i2d_PUBKEY","","",null,null],[5,"i2d_PrivateKey","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPublicKey","","",null,null],[5,"d2i_RSAPublicKey","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[5,"i2d_PKCS12_bio","","",null,null],[5,"i2d_PKCS12","","",null,null],[5,"d2i_PKCS12","","",null,null],[5,"PKCS12_parse","","",null,null],[5,"PKCS12_free","","",null,null],[5,"GENERAL_NAME_free","","",null,null],[5,"HMAC_Init_ex","","",null,null],[5,"HMAC_Update","","",null,null],[5,"HMAC_Final","","",null,null],[5,"CMS_decrypt","","",null,null],[5,"SMIME_read_CMS","","",null,null],[5,"CMS_ContentInfo_free","","",null,null],[5,"FIPS_mode_set","","",null,null],[5,"FIPS_mode","","",null,null],[5,"SSL_CTX_set_cookie_generate_cb","","",null,null],[5,"SSL_CTX_set_cookie_verify_cb","","",null,null],[5,"EVP_MD_size","","",null,null],[5,"EVP_get_cipherbyname","","",null,null],[6,"bio_info_cb","","",null,null],[6,"GEN_SESSION_CB","","",null,null],[6,"tls_session_ticket_ext_cb_fn","","",null,null],[6,"tls_session_secret_cb_fn","","",null,null],[6,"BN_ULONG","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[6,"SHA_LONG","","",null,null],[6,"SHA_LONG64","","",null,null],[17,"SSL_CTRL_SET_MIN_PROTO_VERSION","","",null,null],[17,"SSL_CTRL_SET_MAX_PROTO_VERSION","","",null,null],[17,"SSL_CTRL_GET_MIN_PROTO_VERSION","","",null,null],[17,"SSL_CTRL_GET_MAX_PROTO_VERSION","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"OPENSSL_VERSION","","",null,null],[17,"OPENSSL_CFLAGS","","",null,null],[17,"OPENSSL_BUILT_ON","","",null,null],[17,"OPENSSL_PLATFORM","","",null,null],[17,"OPENSSL_DIR","","",null,null],[17,"CRYPTO_EX_INDEX_SSL","","",null,null],[17,"CRYPTO_EX_INDEX_SSL_CTX","","",null,null],[17,"OPENSSL_INIT_LOAD_SSL_STRINGS","","",null,null],[17,"X509_V_ERR_DANE_NO_MATCH","","",null,null],[17,"X509_V_ERR_EE_KEY_TOO_SMALL","","",null,null],[17,"X509_V_ERR_CA_KEY_TOO_SMALL","","",null,null],[17,"X509_V_ERR_CA_MD_TOO_WEAK","","",null,null],[17,"X509_V_ERR_INVALID_CALL","","",null,null],[17,"X509_V_ERR_STORE_LOOKUP","","",null,null],[17,"X509_V_ERR_NO_VALID_SCTS","","",null,null],[17,"X509_CHECK_FLAG_NEVER_CHECK_SUBJECT","","",null,null],[17,"AES_ENCRYPT","","",null,null],[17,"AES_DECRYPT","","",null,null],[17,"AES_MAXNR","","",null,null],[17,"AES_BLOCK_SIZE","","",null,null],[17,"BIO_TYPE_NONE","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"BIO_CTRL_INFO","","",null,null],[17,"BIO_CTRL_FLUSH","","",null,null],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",null,null],[17,"BIO_FLAGS_READ","","",null,null],[17,"BIO_FLAGS_WRITE","","",null,null],[17,"BIO_FLAGS_IO_SPECIAL","","",null,null],[17,"BIO_FLAGS_RWS","","",null,null],[17,"BIO_FLAGS_SHOULD_RETRY","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"ERR_TXT_MALLOCED","","",null,null],[17,"ERR_TXT_STRING","","",null,null],[17,"ERR_LIB_PEM","","",null,null],[17,"PEM_R_NO_START_LINE","","",null,null],[17,"EVP_MAX_MD_SIZE","","",null,null],[17,"EVP_PKEY_RSA","","",null,null],[17,"EVP_PKEY_HMAC","","",null,null],[17,"EVP_PKEY_CMAC","","",null,null],[17,"EVP_PKEY_DSA","","",null,null],[17,"EVP_PKEY_DH","","",null,null],[17,"EVP_PKEY_EC","","",null,null],[17,"EVP_PKEY_ALG_CTRL","","",null,null],[17,"EVP_PKEY_CTRL_RSA_PADDING","","",null,null],[17,"EVP_PKEY_CTRL_RSA_PSS_SALTLEN","","",null,null],[17,"EVP_PKEY_CTRL_RSA_MGF1_MD","","",null,null],[17,"EVP_PKEY_CTRL_GET_RSA_PADDING","","",null,null],[17,"EVP_PKEY_CTRL_SET_MAC_KEY","","",null,null],[17,"EVP_PKEY_CTRL_CIPHER","","",null,null],[17,"EVP_PKEY_OP_KEYGEN","","",null,null],[17,"EVP_PKEY_OP_SIGN","","",null,null],[17,"EVP_PKEY_OP_VERIFY","","",null,null],[17,"EVP_PKEY_OP_VERIFYRECOVER","","",null,null],[17,"EVP_PKEY_OP_SIGNCTX","","",null,null],[17,"EVP_PKEY_OP_VERIFYCTX","","",null,null],[17,"EVP_PKEY_OP_ENCRYPT","","",null,null],[17,"EVP_PKEY_OP_DECRYPT","","",null,null],[17,"EVP_PKEY_OP_TYPE_SIG","","",null,null],[17,"EVP_PKEY_OP_TYPE_CRYPT","","",null,null],[17,"EVP_CTRL_GCM_SET_IVLEN","","",null,null],[17,"EVP_CTRL_GCM_GET_TAG","","",null,null],[17,"EVP_CTRL_GCM_SET_TAG","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_undef","","",null,null],[17,"NID_itu_t","","",null,null],[17,"NID_ccitt","","",null,null],[17,"NID_iso","","",null,null],[17,"NID_joint_iso_itu_t","","",null,null],[17,"NID_joint_iso_ccitt","","",null,null],[17,"NID_member_body","","",null,null],[17,"NID_identified_organization","","",null,null],[17,"NID_hmac_md5","","",null,null],[17,"NID_hmac_sha1","","",null,null],[17,"NID_certicom_arc","","",null,null],[17,"NID_international_organizations","","",null,null],[17,"NID_wap","","",null,null],[17,"NID_wap_wsg","","",null,null],[17,"NID_selected_attribute_types","","",null,null],[17,"NID_clearance","","",null,null],[17,"NID_ISO_US","","",null,null],[17,"NID_X9_57","","",null,null],[17,"NID_X9cm","","",null,null],[17,"NID_dsa","","",null,null],[17,"NID_dsaWithSHA1","","",null,null],[17,"NID_ansi_X9_62","","",null,null],[17,"NID_X9_62_prime_field","","",null,null],[17,"NID_X9_62_characteristic_two_field","","",null,null],[17,"NID_X9_62_id_characteristic_two_basis","","",null,null],[17,"NID_X9_62_onBasis","","",null,null],[17,"NID_X9_62_tpBasis","","",null,null],[17,"NID_X9_62_ppBasis","","",null,null],[17,"NID_X9_62_id_ecPublicKey","","",null,null],[17,"NID_X9_62_c2pnb163v1","","",null,null],[17,"NID_X9_62_c2pnb163v2","","",null,null],[17,"NID_X9_62_c2pnb163v3","","",null,null],[17,"NID_X9_62_c2pnb176v1","","",null,null],[17,"NID_X9_62_c2tnb191v1","","",null,null],[17,"NID_X9_62_c2tnb191v2","","",null,null],[17,"NID_X9_62_c2tnb191v3","","",null,null],[17,"NID_X9_62_c2onb191v4","","",null,null],[17,"NID_X9_62_c2onb191v5","","",null,null],[17,"NID_X9_62_c2pnb208w1","","",null,null],[17,"NID_X9_62_c2tnb239v1","","",null,null],[17,"NID_X9_62_c2tnb239v2","","",null,null],[17,"NID_X9_62_c2tnb239v3","","",null,null],[17,"NID_X9_62_c2onb239v4","","",null,null],[17,"NID_X9_62_c2onb239v5","","",null,null],[17,"NID_X9_62_c2pnb272w1","","",null,null],[17,"NID_X9_62_c2pnb304w1","","",null,null],[17,"NID_X9_62_c2tnb359v1","","",null,null],[17,"NID_X9_62_c2pnb368w1","","",null,null],[17,"NID_X9_62_c2tnb431r1","","",null,null],[17,"NID_X9_62_prime192v1","","",null,null],[17,"NID_X9_62_prime192v2","","",null,null],[17,"NID_X9_62_prime192v3","","",null,null],[17,"NID_X9_62_prime239v1","","",null,null],[17,"NID_X9_62_prime239v2","","",null,null],[17,"NID_X9_62_prime239v3","","",null,null],[17,"NID_X9_62_prime256v1","","",null,null],[17,"NID_ecdsa_with_SHA1","","",null,null],[17,"NID_ecdsa_with_Recommended","","",null,null],[17,"NID_ecdsa_with_Specified","","",null,null],[17,"NID_ecdsa_with_SHA224","","",null,null],[17,"NID_ecdsa_with_SHA256","","",null,null],[17,"NID_ecdsa_with_SHA384","","",null,null],[17,"NID_ecdsa_with_SHA512","","",null,null],[17,"NID_secp112r1","","",null,null],[17,"NID_secp112r2","","",null,null],[17,"NID_secp128r1","","",null,null],[17,"NID_secp128r2","","",null,null],[17,"NID_secp160k1","","",null,null],[17,"NID_secp160r1","","",null,null],[17,"NID_secp160r2","","",null,null],[17,"NID_secp192k1","","",null,null],[17,"NID_secp224k1","","",null,null],[17,"NID_secp224r1","","",null,null],[17,"NID_secp256k1","","",null,null],[17,"NID_secp384r1","","",null,null],[17,"NID_secp521r1","","",null,null],[17,"NID_sect113r1","","",null,null],[17,"NID_sect113r2","","",null,null],[17,"NID_sect131r1","","",null,null],[17,"NID_sect131r2","","",null,null],[17,"NID_sect163k1","","",null,null],[17,"NID_sect163r1","","",null,null],[17,"NID_sect163r2","","",null,null],[17,"NID_sect193r1","","",null,null],[17,"NID_sect193r2","","",null,null],[17,"NID_sect233k1","","",null,null],[17,"NID_sect233r1","","",null,null],[17,"NID_sect239k1","","",null,null],[17,"NID_sect283k1","","",null,null],[17,"NID_sect283r1","","",null,null],[17,"NID_sect409k1","","",null,null],[17,"NID_sect409r1","","",null,null],[17,"NID_sect571k1","","",null,null],[17,"NID_sect571r1","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls1","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls3","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls4","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls5","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls6","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls7","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls8","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls9","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls10","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls11","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls12","","",null,null],[17,"NID_cast5_cbc","","",null,null],[17,"NID_cast5_ecb","","",null,null],[17,"NID_cast5_cfb64","","",null,null],[17,"NID_cast5_ofb64","","",null,null],[17,"NID_pbeWithMD5AndCast5_CBC","","",null,null],[17,"NID_id_PasswordBasedMAC","","",null,null],[17,"NID_id_DHBasedMac","","",null,null],[17,"NID_rsadsi","","",null,null],[17,"NID_pkcs","","",null,null],[17,"NID_pkcs1","","",null,null],[17,"NID_rsaEncryption","","",null,null],[17,"NID_md2WithRSAEncryption","","",null,null],[17,"NID_md4WithRSAEncryption","","",null,null],[17,"NID_md5WithRSAEncryption","","",null,null],[17,"NID_sha1WithRSAEncryption","","",null,null],[17,"NID_rsaesOaep","","",null,null],[17,"NID_mgf1","","",null,null],[17,"NID_rsassaPss","","",null,null],[17,"NID_sha256WithRSAEncryption","","",null,null],[17,"NID_sha384WithRSAEncryption","","",null,null],[17,"NID_sha512WithRSAEncryption","","",null,null],[17,"NID_sha224WithRSAEncryption","","",null,null],[17,"NID_pkcs3","","",null,null],[17,"NID_dhKeyAgreement","","",null,null],[17,"NID_pkcs5","","",null,null],[17,"NID_pbeWithMD2AndDES_CBC","","",null,null],[17,"NID_pbeWithMD5AndDES_CBC","","",null,null],[17,"NID_pbeWithMD2AndRC2_CBC","","",null,null],[17,"NID_pbeWithMD5AndRC2_CBC","","",null,null],[17,"NID_pbeWithSHA1AndDES_CBC","","",null,null],[17,"NID_pbeWithSHA1AndRC2_CBC","","",null,null],[17,"NID_id_pbkdf2","","",null,null],[17,"NID_pbes2","","",null,null],[17,"NID_pbmac1","","",null,null],[17,"NID_pkcs7","","",null,null],[17,"NID_pkcs7_data","","",null,null],[17,"NID_pkcs7_signed","","",null,null],[17,"NID_pkcs7_enveloped","","",null,null],[17,"NID_pkcs7_signedAndEnveloped","","",null,null],[17,"NID_pkcs7_digest","","",null,null],[17,"NID_pkcs7_encrypted","","",null,null],[17,"NID_pkcs9","","",null,null],[17,"NID_pkcs9_emailAddress","","",null,null],[17,"NID_pkcs9_unstructuredName","","",null,null],[17,"NID_pkcs9_contentType","","",null,null],[17,"NID_pkcs9_messageDigest","","",null,null],[17,"NID_pkcs9_signingTime","","",null,null],[17,"NID_pkcs9_countersignature","","",null,null],[17,"NID_pkcs9_challengePassword","","",null,null],[17,"NID_pkcs9_unstructuredAddress","","",null,null],[17,"NID_pkcs9_extCertAttributes","","",null,null],[17,"NID_ext_req","","",null,null],[17,"NID_SMIMECapabilities","","",null,null],[17,"NID_SMIME","","",null,null],[17,"NID_id_smime_mod","","",null,null],[17,"NID_id_smime_ct","","",null,null],[17,"NID_id_smime_aa","","",null,null],[17,"NID_id_smime_alg","","",null,null],[17,"NID_id_smime_cd","","",null,null],[17,"NID_id_smime_spq","","",null,null],[17,"NID_id_smime_cti","","",null,null],[17,"NID_id_smime_mod_cms","","",null,null],[17,"NID_id_smime_mod_ess","","",null,null],[17,"NID_id_smime_mod_oid","","",null,null],[17,"NID_id_smime_mod_msg_v3","","",null,null],[17,"NID_id_smime_mod_ets_eSignature_88","","",null,null],[17,"NID_id_smime_mod_ets_eSignature_97","","",null,null],[17,"NID_id_smime_mod_ets_eSigPolicy_88","","",null,null],[17,"NID_id_smime_mod_ets_eSigPolicy_97","","",null,null],[17,"NID_id_smime_ct_receipt","","",null,null],[17,"NID_id_smime_ct_authData","","",null,null],[17,"NID_id_smime_ct_publishCert","","",null,null],[17,"NID_id_smime_ct_TSTInfo","","",null,null],[17,"NID_id_smime_ct_TDTInfo","","",null,null],[17,"NID_id_smime_ct_contentInfo","","",null,null],[17,"NID_id_smime_ct_DVCSRequestData","","",null,null],[17,"NID_id_smime_ct_DVCSResponseData","","",null,null],[17,"NID_id_smime_ct_compressedData","","",null,null],[17,"NID_id_ct_asciiTextWithCRLF","","",null,null],[17,"NID_id_smime_aa_receiptRequest","","",null,null],[17,"NID_id_smime_aa_securityLabel","","",null,null],[17,"NID_id_smime_aa_mlExpandHistory","","",null,null],[17,"NID_id_smime_aa_contentHint","","",null,null],[17,"NID_id_smime_aa_msgSigDigest","","",null,null],[17,"NID_id_smime_aa_encapContentType","","",null,null],[17,"NID_id_smime_aa_contentIdentifier","","",null,null],[17,"NID_id_smime_aa_macValue","","",null,null],[17,"NID_id_smime_aa_equivalentLabels","","",null,null],[17,"NID_id_smime_aa_contentReference","","",null,null],[17,"NID_id_smime_aa_encrypKeyPref","","",null,null],[17,"NID_id_smime_aa_signingCertificate","","",null,null],[17,"NID_id_smime_aa_smimeEncryptCerts","","",null,null],[17,"NID_id_smime_aa_timeStampToken","","",null,null],[17,"NID_id_smime_aa_ets_sigPolicyId","","",null,null],[17,"NID_id_smime_aa_ets_commitmentType","","",null,null],[17,"NID_id_smime_aa_ets_signerLocation","","",null,null],[17,"NID_id_smime_aa_ets_signerAttr","","",null,null],[17,"NID_id_smime_aa_ets_otherSigCert","","",null,null],[17,"NID_id_smime_aa_ets_contentTimestamp","","",null,null],[17,"NID_id_smime_aa_ets_CertificateRefs","","",null,null],[17,"NID_id_smime_aa_ets_RevocationRefs","","",null,null],[17,"NID_id_smime_aa_ets_certValues","","",null,null],[17,"NID_id_smime_aa_ets_revocationValues","","",null,null],[17,"NID_id_smime_aa_ets_escTimeStamp","","",null,null],[17,"NID_id_smime_aa_ets_certCRLTimestamp","","",null,null],[17,"NID_id_smime_aa_ets_archiveTimeStamp","","",null,null],[17,"NID_id_smime_aa_signatureType","","",null,null],[17,"NID_id_smime_aa_dvcs_dvc","","",null,null],[17,"NID_id_smime_alg_ESDHwith3DES","","",null,null],[17,"NID_id_smime_alg_ESDHwithRC2","","",null,null],[17,"NID_id_smime_alg_3DESwrap","","",null,null],[17,"NID_id_smime_alg_RC2wrap","","",null,null],[17,"NID_id_smime_alg_ESDH","","",null,null],[17,"NID_id_smime_alg_CMS3DESwrap","","",null,null],[17,"NID_id_smime_alg_CMSRC2wrap","","",null,null],[17,"NID_id_alg_PWRI_KEK","","",null,null],[17,"NID_id_smime_cd_ldap","","",null,null],[17,"NID_id_smime_spq_ets_sqt_uri","","",null,null],[17,"NID_id_smime_spq_ets_sqt_unotice","","",null,null],[17,"NID_id_smime_cti_ets_proofOfOrigin","","",null,null],[17,"NID_id_smime_cti_ets_proofOfReceipt","","",null,null],[17,"NID_id_smime_cti_ets_proofOfDelivery","","",null,null],[17,"NID_id_smime_cti_ets_proofOfSender","","",null,null],[17,"NID_id_smime_cti_ets_proofOfApproval","","",null,null],[17,"NID_id_smime_cti_ets_proofOfCreation","","",null,null],[17,"NID_friendlyName","","",null,null],[17,"NID_localKeyID","","",null,null],[17,"NID_ms_csp_name","","",null,null],[17,"NID_LocalKeySet","","",null,null],[17,"NID_x509Certificate","","",null,null],[17,"NID_sdsiCertificate","","",null,null],[17,"NID_x509Crl","","",null,null],[17,"NID_pbe_WithSHA1And128BitRC4","","",null,null],[17,"NID_pbe_WithSHA1And40BitRC4","","",null,null],[17,"NID_pbe_WithSHA1And3_Key_TripleDES_CBC","","",null,null],[17,"NID_pbe_WithSHA1And2_Key_TripleDES_CBC","","",null,null],[17,"NID_pbe_WithSHA1And128BitRC2_CBC","","",null,null],[17,"NID_pbe_WithSHA1And40BitRC2_CBC","","",null,null],[17,"NID_keyBag","","",null,null],[17,"NID_pkcs8ShroudedKeyBag","","",null,null],[17,"NID_certBag","","",null,null],[17,"NID_crlBag","","",null,null],[17,"NID_secretBag","","",null,null],[17,"NID_safeContentsBag","","",null,null],[17,"NID_md2","","",null,null],[17,"NID_md4","","",null,null],[17,"NID_md5","","",null,null],[17,"NID_md5_sha1","","",null,null],[17,"NID_hmacWithMD5","","",null,null],[17,"NID_hmacWithSHA1","","",null,null],[17,"NID_hmacWithSHA224","","",null,null],[17,"NID_hmacWithSHA256","","",null,null],[17,"NID_hmacWithSHA384","","",null,null],[17,"NID_hmacWithSHA512","","",null,null],[17,"NID_rc2_cbc","","",null,null],[17,"NID_rc2_ecb","","",null,null],[17,"NID_rc2_cfb64","","",null,null],[17,"NID_rc2_ofb64","","",null,null],[17,"NID_rc2_40_cbc","","",null,null],[17,"NID_rc2_64_cbc","","",null,null],[17,"NID_rc4","","",null,null],[17,"NID_rc4_40","","",null,null],[17,"NID_des_ede3_cbc","","",null,null],[17,"NID_rc5_cbc","","",null,null],[17,"NID_rc5_ecb","","",null,null],[17,"NID_rc5_cfb64","","",null,null],[17,"NID_rc5_ofb64","","",null,null],[17,"NID_ms_ext_req","","",null,null],[17,"NID_ms_code_ind","","",null,null],[17,"NID_ms_code_com","","",null,null],[17,"NID_ms_ctl_sign","","",null,null],[17,"NID_ms_sgc","","",null,null],[17,"NID_ms_efs","","",null,null],[17,"NID_ms_smartcard_login","","",null,null],[17,"NID_ms_upn","","",null,null],[17,"NID_idea_cbc","","",null,null],[17,"NID_idea_ecb","","",null,null],[17,"NID_idea_cfb64","","",null,null],[17,"NID_idea_ofb64","","",null,null],[17,"NID_bf_cbc","","",null,null],[17,"NID_bf_ecb","","",null,null],[17,"NID_bf_cfb64","","",null,null],[17,"NID_bf_ofb64","","",null,null],[17,"NID_id_pkix","","",null,null],[17,"NID_id_pkix_mod","","",null,null],[17,"NID_id_pe","","",null,null],[17,"NID_id_qt","","",null,null],[17,"NID_id_kp","","",null,null],[17,"NID_id_it","","",null,null],[17,"NID_id_pkip","","",null,null],[17,"NID_id_alg","","",null,null],[17,"NID_id_cmc","","",null,null],[17,"NID_id_on","","",null,null],[17,"NID_id_pda","","",null,null],[17,"NID_id_aca","","",null,null],[17,"NID_id_qcs","","",null,null],[17,"NID_id_cct","","",null,null],[17,"NID_id_ppl","","",null,null],[17,"NID_id_ad","","",null,null],[17,"NID_id_pkix1_explicit_88","","",null,null],[17,"NID_id_pkix1_implicit_88","","",null,null],[17,"NID_id_pkix1_explicit_93","","",null,null],[17,"NID_id_pkix1_implicit_93","","",null,null],[17,"NID_id_mod_crmf","","",null,null],[17,"NID_id_mod_cmc","","",null,null],[17,"NID_id_mod_kea_profile_88","","",null,null],[17,"NID_id_mod_kea_profile_93","","",null,null],[17,"NID_id_mod_cmp","","",null,null],[17,"NID_id_mod_qualified_cert_88","","",null,null],[17,"NID_id_mod_qualified_cert_93","","",null,null],[17,"NID_id_mod_attribute_cert","","",null,null],[17,"NID_id_mod_timestamp_protocol","","",null,null],[17,"NID_id_mod_ocsp","","",null,null],[17,"NID_id_mod_dvcs","","",null,null],[17,"NID_id_mod_cmp2000","","",null,null],[17,"NID_info_access","","",null,null],[17,"NID_biometricInfo","","",null,null],[17,"NID_qcStatements","","",null,null],[17,"NID_ac_auditEntity","","",null,null],[17,"NID_ac_targeting","","",null,null],[17,"NID_aaControls","","",null,null],[17,"NID_sbgp_ipAddrBlock","","",null,null],[17,"NID_sbgp_autonomousSysNum","","",null,null],[17,"NID_sbgp_routerIdentifier","","",null,null],[17,"NID_ac_proxying","","",null,null],[17,"NID_sinfo_access","","",null,null],[17,"NID_proxyCertInfo","","",null,null],[17,"NID_id_qt_cps","","",null,null],[17,"NID_id_qt_unotice","","",null,null],[17,"NID_textNotice","","",null,null],[17,"NID_server_auth","","",null,null],[17,"NID_client_auth","","",null,null],[17,"NID_code_sign","","",null,null],[17,"NID_email_protect","","",null,null],[17,"NID_ipsecEndSystem","","",null,null],[17,"NID_ipsecTunnel","","",null,null],[17,"NID_ipsecUser","","",null,null],[17,"NID_time_stamp","","",null,null],[17,"NID_OCSP_sign","","",null,null],[17,"NID_dvcs","","",null,null],[17,"NID_id_it_caProtEncCert","","",null,null],[17,"NID_id_it_signKeyPairTypes","","",null,null],[17,"NID_id_it_encKeyPairTypes","","",null,null],[17,"NID_id_it_preferredSymmAlg","","",null,null],[17,"NID_id_it_caKeyUpdateInfo","","",null,null],[17,"NID_id_it_currentCRL","","",null,null],[17,"NID_id_it_unsupportedOIDs","","",null,null],[17,"NID_id_it_subscriptionRequest","","",null,null],[17,"NID_id_it_subscriptionResponse","","",null,null],[17,"NID_id_it_keyPairParamReq","","",null,null],[17,"NID_id_it_keyPairParamRep","","",null,null],[17,"NID_id_it_revPassphrase","","",null,null],[17,"NID_id_it_implicitConfirm","","",null,null],[17,"NID_id_it_confirmWaitTime","","",null,null],[17,"NID_id_it_origPKIMessage","","",null,null],[17,"NID_id_it_suppLangTags","","",null,null],[17,"NID_id_regCtrl","","",null,null],[17,"NID_id_regInfo","","",null,null],[17,"NID_id_regCtrl_regToken","","",null,null],[17,"NID_id_regCtrl_authenticator","","",null,null],[17,"NID_id_regCtrl_pkiPublicationInfo","","",null,null],[17,"NID_id_regCtrl_pkiArchiveOptions","","",null,null],[17,"NID_id_regCtrl_oldCertID","","",null,null],[17,"NID_id_regCtrl_protocolEncrKey","","",null,null],[17,"NID_id_regInfo_utf8Pairs","","",null,null],[17,"NID_id_regInfo_certReq","","",null,null],[17,"NID_id_alg_des40","","",null,null],[17,"NID_id_alg_noSignature","","",null,null],[17,"NID_id_alg_dh_sig_hmac_sha1","","",null,null],[17,"NID_id_alg_dh_pop","","",null,null],[17,"NID_id_cmc_statusInfo","","",null,null],[17,"NID_id_cmc_identification","","",null,null],[17,"NID_id_cmc_identityProof","","",null,null],[17,"NID_id_cmc_dataReturn","","",null,null],[17,"NID_id_cmc_transactionId","","",null,null],[17,"NID_id_cmc_senderNonce","","",null,null],[17,"NID_id_cmc_recipientNonce","","",null,null],[17,"NID_id_cmc_addExtensions","","",null,null],[17,"NID_id_cmc_encryptedPOP","","",null,null],[17,"NID_id_cmc_decryptedPOP","","",null,null],[17,"NID_id_cmc_lraPOPWitness","","",null,null],[17,"NID_id_cmc_getCert","","",null,null],[17,"NID_id_cmc_getCRL","","",null,null],[17,"NID_id_cmc_revokeRequest","","",null,null],[17,"NID_id_cmc_regInfo","","",null,null],[17,"NID_id_cmc_responseInfo","","",null,null],[17,"NID_id_cmc_queryPending","","",null,null],[17,"NID_id_cmc_popLinkRandom","","",null,null],[17,"NID_id_cmc_popLinkWitness","","",null,null],[17,"NID_id_cmc_confirmCertAcceptance","","",null,null],[17,"NID_id_on_personalData","","",null,null],[17,"NID_id_on_permanentIdentifier","","",null,null],[17,"NID_id_pda_dateOfBirth","","",null,null],[17,"NID_id_pda_placeOfBirth","","",null,null],[17,"NID_id_pda_gender","","",null,null],[17,"NID_id_pda_countryOfCitizenship","","",null,null],[17,"NID_id_pda_countryOfResidence","","",null,null],[17,"NID_id_aca_authenticationInfo","","",null,null],[17,"NID_id_aca_accessIdentity","","",null,null],[17,"NID_id_aca_chargingIdentity","","",null,null],[17,"NID_id_aca_group","","",null,null],[17,"NID_id_aca_role","","",null,null],[17,"NID_id_aca_encAttrs","","",null,null],[17,"NID_id_qcs_pkixQCSyntax_v1","","",null,null],[17,"NID_id_cct_crs","","",null,null],[17,"NID_id_cct_PKIData","","",null,null],[17,"NID_id_cct_PKIResponse","","",null,null],[17,"NID_id_ppl_anyLanguage","","",null,null],[17,"NID_id_ppl_inheritAll","","",null,null],[17,"NID_Independent","","",null,null],[17,"NID_ad_OCSP","","",null,null],[17,"NID_ad_ca_issuers","","",null,null],[17,"NID_ad_timeStamping","","",null,null],[17,"NID_ad_dvcs","","",null,null],[17,"NID_caRepository","","",null,null],[17,"NID_id_pkix_OCSP_basic","","",null,null],[17,"NID_id_pkix_OCSP_Nonce","","",null,null],[17,"NID_id_pkix_OCSP_CrlID","","",null,null],[17,"NID_id_pkix_OCSP_acceptableResponses","","",null,null],[17,"NID_id_pkix_OCSP_noCheck","","",null,null],[17,"NID_id_pkix_OCSP_archiveCutoff","","",null,null],[17,"NID_id_pkix_OCSP_serviceLocator","","",null,null],[17,"NID_id_pkix_OCSP_extendedStatus","","",null,null],[17,"NID_id_pkix_OCSP_valid","","",null,null],[17,"NID_id_pkix_OCSP_path","","",null,null],[17,"NID_id_pkix_OCSP_trustRoot","","",null,null],[17,"NID_algorithm","","",null,null],[17,"NID_md5WithRSA","","",null,null],[17,"NID_des_ecb","","",null,null],[17,"NID_des_cbc","","",null,null],[17,"NID_des_ofb64","","",null,null],[17,"NID_des_cfb64","","",null,null],[17,"NID_rsaSignature","","",null,null],[17,"NID_dsa_2","","",null,null],[17,"NID_dsaWithSHA","","",null,null],[17,"NID_shaWithRSAEncryption","","",null,null],[17,"NID_des_ede_ecb","","",null,null],[17,"NID_des_ede3_ecb","","",null,null],[17,"NID_des_ede_cbc","","",null,null],[17,"NID_des_ede_cfb64","","",null,null],[17,"NID_des_ede3_cfb64","","",null,null],[17,"NID_des_ede_ofb64","","",null,null],[17,"NID_des_ede3_ofb64","","",null,null],[17,"NID_desx_cbc","","",null,null],[17,"NID_sha","","",null,null],[17,"NID_sha1","","",null,null],[17,"NID_dsaWithSHA1_2","","",null,null],[17,"NID_sha1WithRSA","","",null,null],[17,"NID_ripemd160","","",null,null],[17,"NID_ripemd160WithRSA","","",null,null],[17,"NID_sxnet","","",null,null],[17,"NID_X500","","",null,null],[17,"NID_X509","","",null,null],[17,"NID_commonName","","",null,null],[17,"NID_surname","","",null,null],[17,"NID_serialNumber","","",null,null],[17,"NID_countryName","","",null,null],[17,"NID_localityName","","",null,null],[17,"NID_stateOrProvinceName","","",null,null],[17,"NID_streetAddress","","",null,null],[17,"NID_organizationName","","",null,null],[17,"NID_organizationalUnitName","","",null,null],[17,"NID_title","","",null,null],[17,"NID_description","","",null,null],[17,"NID_searchGuide","","",null,null],[17,"NID_businessCategory","","",null,null],[17,"NID_postalAddress","","",null,null],[17,"NID_postalCode","","",null,null],[17,"NID_postOfficeBox","","",null,null],[17,"NID_physicalDeliveryOfficeName","","",null,null],[17,"NID_telephoneNumber","","",null,null],[17,"NID_telexNumber","","",null,null],[17,"NID_teletexTerminalIdentifier","","",null,null],[17,"NID_facsimileTelephoneNumber","","",null,null],[17,"NID_x121Address","","",null,null],[17,"NID_internationaliSDNNumber","","",null,null],[17,"NID_registeredAddress","","",null,null],[17,"NID_destinationIndicator","","",null,null],[17,"NID_preferredDeliveryMethod","","",null,null],[17,"NID_presentationAddress","","",null,null],[17,"NID_supportedApplicationContext","","",null,null],[17,"NID_member","","",null,null],[17,"NID_owner","","",null,null],[17,"NID_roleOccupant","","",null,null],[17,"NID_seeAlso","","",null,null],[17,"NID_userPassword","","",null,null],[17,"NID_userCertificate","","",null,null],[17,"NID_cACertificate","","",null,null],[17,"NID_authorityRevocationList","","",null,null],[17,"NID_certificateRevocationList","","",null,null],[17,"NID_crossCertificatePair","","",null,null],[17,"NID_name","","",null,null],[17,"NID_givenName","","",null,null],[17,"NID_initials","","",null,null],[17,"NID_generationQualifier","","",null,null],[17,"NID_x500UniqueIdentifier","","",null,null],[17,"NID_dnQualifier","","",null,null],[17,"NID_enhancedSearchGuide","","",null,null],[17,"NID_protocolInformation","","",null,null],[17,"NID_distinguishedName","","",null,null],[17,"NID_uniqueMember","","",null,null],[17,"NID_houseIdentifier","","",null,null],[17,"NID_supportedAlgorithms","","",null,null],[17,"NID_deltaRevocationList","","",null,null],[17,"NID_dmdName","","",null,null],[17,"NID_pseudonym","","",null,null],[17,"NID_role","","",null,null],[17,"NID_X500algorithms","","",null,null],[17,"NID_rsa","","",null,null],[17,"NID_mdc2WithRSA","","",null,null],[17,"NID_mdc2","","",null,null],[17,"NID_id_ce","","",null,null],[17,"NID_subject_directory_attributes","","",null,null],[17,"NID_subject_key_identifier","","",null,null],[17,"NID_key_usage","","",null,null],[17,"NID_private_key_usage_period","","",null,null],[17,"NID_subject_alt_name","","",null,null],[17,"NID_issuer_alt_name","","",null,null],[17,"NID_basic_constraints","","",null,null],[17,"NID_crl_number","","",null,null],[17,"NID_crl_reason","","",null,null],[17,"NID_invalidity_date","","",null,null],[17,"NID_delta_crl","","",null,null],[17,"NID_issuing_distribution_point","","",null,null],[17,"NID_certificate_issuer","","",null,null],[17,"NID_name_constraints","","",null,null],[17,"NID_crl_distribution_points","","",null,null],[17,"NID_certificate_policies","","",null,null],[17,"NID_any_policy","","",null,null],[17,"NID_policy_mappings","","",null,null],[17,"NID_authority_key_identifier","","",null,null],[17,"NID_policy_constraints","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_freshest_crl","","",null,null],[17,"NID_inhibit_any_policy","","",null,null],[17,"NID_target_information","","",null,null],[17,"NID_no_rev_avail","","",null,null],[17,"NID_anyExtendedKeyUsage","","",null,null],[17,"NID_netscape","","",null,null],[17,"NID_netscape_cert_extension","","",null,null],[17,"NID_netscape_data_type","","",null,null],[17,"NID_netscape_cert_type","","",null,null],[17,"NID_netscape_base_url","","",null,null],[17,"NID_netscape_revocation_url","","",null,null],[17,"NID_netscape_ca_revocation_url","","",null,null],[17,"NID_netscape_renewal_url","","",null,null],[17,"NID_netscape_ca_policy_url","","",null,null],[17,"NID_netscape_ssl_server_name","","",null,null],[17,"NID_netscape_comment","","",null,null],[17,"NID_netscape_cert_sequence","","",null,null],[17,"NID_ns_sgc","","",null,null],[17,"NID_org","","",null,null],[17,"NID_dod","","",null,null],[17,"NID_iana","","",null,null],[17,"NID_Directory","","",null,null],[17,"NID_Management","","",null,null],[17,"NID_Experimental","","",null,null],[17,"NID_Private","","",null,null],[17,"NID_Security","","",null,null],[17,"NID_SNMPv2","","",null,null],[17,"NID_Mail","","",null,null],[17,"NID_Enterprises","","",null,null],[17,"NID_dcObject","","",null,null],[17,"NID_mime_mhs","","",null,null],[17,"NID_mime_mhs_headings","","",null,null],[17,"NID_mime_mhs_bodies","","",null,null],[17,"NID_id_hex_partial_message","","",null,null],[17,"NID_id_hex_multipart_message","","",null,null],[17,"NID_zlib_compression","","",null,null],[17,"NID_aes_128_ecb","","",null,null],[17,"NID_aes_128_cbc","","",null,null],[17,"NID_aes_128_ofb128","","",null,null],[17,"NID_aes_128_cfb128","","",null,null],[17,"NID_id_aes128_wrap","","",null,null],[17,"NID_aes_128_gcm","","",null,null],[17,"NID_aes_128_ccm","","",null,null],[17,"NID_id_aes128_wrap_pad","","",null,null],[17,"NID_aes_192_ecb","","",null,null],[17,"NID_aes_192_cbc","","",null,null],[17,"NID_aes_192_ofb128","","",null,null],[17,"NID_aes_192_cfb128","","",null,null],[17,"NID_id_aes192_wrap","","",null,null],[17,"NID_aes_192_gcm","","",null,null],[17,"NID_aes_192_ccm","","",null,null],[17,"NID_id_aes192_wrap_pad","","",null,null],[17,"NID_aes_256_ecb","","",null,null],[17,"NID_aes_256_cbc","","",null,null],[17,"NID_aes_256_ofb128","","",null,null],[17,"NID_aes_256_cfb128","","",null,null],[17,"NID_id_aes256_wrap","","",null,null],[17,"NID_aes_256_gcm","","",null,null],[17,"NID_aes_256_ccm","","",null,null],[17,"NID_id_aes256_wrap_pad","","",null,null],[17,"NID_aes_128_cfb1","","",null,null],[17,"NID_aes_192_cfb1","","",null,null],[17,"NID_aes_256_cfb1","","",null,null],[17,"NID_aes_128_cfb8","","",null,null],[17,"NID_aes_192_cfb8","","",null,null],[17,"NID_aes_256_cfb8","","",null,null],[17,"NID_aes_128_ctr","","",null,null],[17,"NID_aes_192_ctr","","",null,null],[17,"NID_aes_256_ctr","","",null,null],[17,"NID_aes_128_xts","","",null,null],[17,"NID_aes_256_xts","","",null,null],[17,"NID_des_cfb1","","",null,null],[17,"NID_des_cfb8","","",null,null],[17,"NID_des_ede3_cfb1","","",null,null],[17,"NID_des_ede3_cfb8","","",null,null],[17,"NID_sha256","","",null,null],[17,"NID_sha384","","",null,null],[17,"NID_sha512","","",null,null],[17,"NID_sha224","","",null,null],[17,"NID_dsa_with_SHA224","","",null,null],[17,"NID_dsa_with_SHA256","","",null,null],[17,"NID_hold_instruction_code","","",null,null],[17,"NID_hold_instruction_none","","",null,null],[17,"NID_hold_instruction_call_issuer","","",null,null],[17,"NID_hold_instruction_reject","","",null,null],[17,"NID_data","","",null,null],[17,"NID_pss","","",null,null],[17,"NID_ucl","","",null,null],[17,"NID_pilot","","",null,null],[17,"NID_pilotAttributeType","","",null,null],[17,"NID_pilotAttributeSyntax","","",null,null],[17,"NID_pilotObjectClass","","",null,null],[17,"NID_pilotGroups","","",null,null],[17,"NID_iA5StringSyntax","","",null,null],[17,"NID_caseIgnoreIA5StringSyntax","","",null,null],[17,"NID_pilotObject","","",null,null],[17,"NID_pilotPerson","","",null,null],[17,"NID_account","","",null,null],[17,"NID_document","","",null,null],[17,"NID_room","","",null,null],[17,"NID_documentSeries","","",null,null],[17,"NID_Domain","","",null,null],[17,"NID_rFC822localPart","","",null,null],[17,"NID_dNSDomain","","",null,null],[17,"NID_domainRelatedObject","","",null,null],[17,"NID_friendlyCountry","","",null,null],[17,"NID_simpleSecurityObject","","",null,null],[17,"NID_pilotOrganization","","",null,null],[17,"NID_pilotDSA","","",null,null],[17,"NID_qualityLabelledData","","",null,null],[17,"NID_userId","","",null,null],[17,"NID_textEncodedORAddress","","",null,null],[17,"NID_rfc822Mailbox","","",null,null],[17,"NID_info","","",null,null],[17,"NID_favouriteDrink","","",null,null],[17,"NID_roomNumber","","",null,null],[17,"NID_photo","","",null,null],[17,"NID_userClass","","",null,null],[17,"NID_host","","",null,null],[17,"NID_manager","","",null,null],[17,"NID_documentIdentifier","","",null,null],[17,"NID_documentTitle","","",null,null],[17,"NID_documentVersion","","",null,null],[17,"NID_documentAuthor","","",null,null],[17,"NID_documentLocation","","",null,null],[17,"NID_homeTelephoneNumber","","",null,null],[17,"NID_secretary","","",null,null],[17,"NID_otherMailbox","","",null,null],[17,"NID_lastModifiedTime","","",null,null],[17,"NID_lastModifiedBy","","",null,null],[17,"NID_domainComponent","","",null,null],[17,"NID_aRecord","","",null,null],[17,"NID_pilotAttributeType27","","",null,null],[17,"NID_mXRecord","","",null,null],[17,"NID_nSRecord","","",null,null],[17,"NID_sOARecord","","",null,null],[17,"NID_cNAMERecord","","",null,null],[17,"NID_associatedDomain","","",null,null],[17,"NID_associatedName","","",null,null],[17,"NID_homePostalAddress","","",null,null],[17,"NID_personalTitle","","",null,null],[17,"NID_mobileTelephoneNumber","","",null,null],[17,"NID_pagerTelephoneNumber","","",null,null],[17,"NID_friendlyCountryName","","",null,null],[17,"NID_organizationalStatus","","",null,null],[17,"NID_janetMailbox","","",null,null],[17,"NID_mailPreferenceOption","","",null,null],[17,"NID_buildingName","","",null,null],[17,"NID_dSAQuality","","",null,null],[17,"NID_singleLevelQuality","","",null,null],[17,"NID_subtreeMinimumQuality","","",null,null],[17,"NID_subtreeMaximumQuality","","",null,null],[17,"NID_personalSignature","","",null,null],[17,"NID_dITRedirect","","",null,null],[17,"NID_audio","","",null,null],[17,"NID_documentPublisher","","",null,null],[17,"NID_id_set","","",null,null],[17,"NID_set_ctype","","",null,null],[17,"NID_set_msgExt","","",null,null],[17,"NID_set_attr","","",null,null],[17,"NID_set_policy","","",null,null],[17,"NID_set_certExt","","",null,null],[17,"NID_set_brand","","",null,null],[17,"NID_setct_PANData","","",null,null],[17,"NID_setct_PANToken","","",null,null],[17,"NID_setct_PANOnly","","",null,null],[17,"NID_setct_OIData","","",null,null],[17,"NID_setct_PI","","",null,null],[17,"NID_setct_PIData","","",null,null],[17,"NID_setct_PIDataUnsigned","","",null,null],[17,"NID_setct_HODInput","","",null,null],[17,"NID_setct_AuthResBaggage","","",null,null],[17,"NID_setct_AuthRevReqBaggage","","",null,null],[17,"NID_setct_AuthRevResBaggage","","",null,null],[17,"NID_setct_CapTokenSeq","","",null,null],[17,"NID_setct_PInitResData","","",null,null],[17,"NID_setct_PI_TBS","","",null,null],[17,"NID_setct_PResData","","",null,null],[17,"NID_setct_AuthReqTBS","","",null,null],[17,"NID_setct_AuthResTBS","","",null,null],[17,"NID_setct_AuthResTBSX","","",null,null],[17,"NID_setct_AuthTokenTBS","","",null,null],[17,"NID_setct_CapTokenData","","",null,null],[17,"NID_setct_CapTokenTBS","","",null,null],[17,"NID_setct_AcqCardCodeMsg","","",null,null],[17,"NID_setct_AuthRevReqTBS","","",null,null],[17,"NID_setct_AuthRevResData","","",null,null],[17,"NID_setct_AuthRevResTBS","","",null,null],[17,"NID_setct_CapReqTBS","","",null,null],[17,"NID_setct_CapReqTBSX","","",null,null],[17,"NID_setct_CapResData","","",null,null],[17,"NID_setct_CapRevReqTBS","","",null,null],[17,"NID_setct_CapRevReqTBSX","","",null,null],[17,"NID_setct_CapRevResData","","",null,null],[17,"NID_setct_CredReqTBS","","",null,null],[17,"NID_setct_CredReqTBSX","","",null,null],[17,"NID_setct_CredResData","","",null,null],[17,"NID_setct_CredRevReqTBS","","",null,null],[17,"NID_setct_CredRevReqTBSX","","",null,null],[17,"NID_setct_CredRevResData","","",null,null],[17,"NID_setct_PCertReqData","","",null,null],[17,"NID_setct_PCertResTBS","","",null,null],[17,"NID_setct_BatchAdminReqData","","",null,null],[17,"NID_setct_BatchAdminResData","","",null,null],[17,"NID_setct_CardCInitResTBS","","",null,null],[17,"NID_setct_MeAqCInitResTBS","","",null,null],[17,"NID_setct_RegFormResTBS","","",null,null],[17,"NID_setct_CertReqData","","",null,null],[17,"NID_setct_CertReqTBS","","",null,null],[17,"NID_setct_CertResData","","",null,null],[17,"NID_setct_CertInqReqTBS","","",null,null],[17,"NID_setct_ErrorTBS","","",null,null],[17,"NID_setct_PIDualSignedTBE","","",null,null],[17,"NID_setct_PIUnsignedTBE","","",null,null],[17,"NID_setct_AuthReqTBE","","",null,null],[17,"NID_setct_AuthResTBE","","",null,null],[17,"NID_setct_AuthResTBEX","","",null,null],[17,"NID_setct_AuthTokenTBE","","",null,null],[17,"NID_setct_CapTokenTBE","","",null,null],[17,"NID_setct_CapTokenTBEX","","",null,null],[17,"NID_setct_AcqCardCodeMsgTBE","","",null,null],[17,"NID_setct_AuthRevReqTBE","","",null,null],[17,"NID_setct_AuthRevResTBE","","",null,null],[17,"NID_setct_AuthRevResTBEB","","",null,null],[17,"NID_setct_CapReqTBE","","",null,null],[17,"NID_setct_CapReqTBEX","","",null,null],[17,"NID_setct_CapResTBE","","",null,null],[17,"NID_setct_CapRevReqTBE","","",null,null],[17,"NID_setct_CapRevReqTBEX","","",null,null],[17,"NID_setct_CapRevResTBE","","",null,null],[17,"NID_setct_CredReqTBE","","",null,null],[17,"NID_setct_CredReqTBEX","","",null,null],[17,"NID_setct_CredResTBE","","",null,null],[17,"NID_setct_CredRevReqTBE","","",null,null],[17,"NID_setct_CredRevReqTBEX","","",null,null],[17,"NID_setct_CredRevResTBE","","",null,null],[17,"NID_setct_BatchAdminReqTBE","","",null,null],[17,"NID_setct_BatchAdminResTBE","","",null,null],[17,"NID_setct_RegFormReqTBE","","",null,null],[17,"NID_setct_CertReqTBE","","",null,null],[17,"NID_setct_CertReqTBEX","","",null,null],[17,"NID_setct_CertResTBE","","",null,null],[17,"NID_setct_CRLNotificationTBS","","",null,null],[17,"NID_setct_CRLNotificationResTBS","","",null,null],[17,"NID_setct_BCIDistributionTBS","","",null,null],[17,"NID_setext_genCrypt","","",null,null],[17,"NID_setext_miAuth","","",null,null],[17,"NID_setext_pinSecure","","",null,null],[17,"NID_setext_pinAny","","",null,null],[17,"NID_setext_track2","","",null,null],[17,"NID_setext_cv","","",null,null],[17,"NID_set_policy_root","","",null,null],[17,"NID_setCext_hashedRoot","","",null,null],[17,"NID_setCext_certType","","",null,null],[17,"NID_setCext_merchData","","",null,null],[17,"NID_setCext_cCertRequired","","",null,null],[17,"NID_setCext_tunneling","","",null,null],[17,"NID_setCext_setExt","","",null,null],[17,"NID_setCext_setQualf","","",null,null],[17,"NID_setCext_PGWYcapabilities","","",null,null],[17,"NID_setCext_TokenIdentifier","","",null,null],[17,"NID_setCext_Track2Data","","",null,null],[17,"NID_setCext_TokenType","","",null,null],[17,"NID_setCext_IssuerCapabilities","","",null,null],[17,"NID_setAttr_Cert","","",null,null],[17,"NID_setAttr_PGWYcap","","",null,null],[17,"NID_setAttr_TokenType","","",null,null],[17,"NID_setAttr_IssCap","","",null,null],[17,"NID_set_rootKeyThumb","","",null,null],[17,"NID_set_addPolicy","","",null,null],[17,"NID_setAttr_Token_EMV","","",null,null],[17,"NID_setAttr_Token_B0Prime","","",null,null],[17,"NID_setAttr_IssCap_CVM","","",null,null],[17,"NID_setAttr_IssCap_T2","","",null,null],[17,"NID_setAttr_IssCap_Sig","","",null,null],[17,"NID_setAttr_GenCryptgrm","","",null,null],[17,"NID_setAttr_T2Enc","","",null,null],[17,"NID_setAttr_T2cleartxt","","",null,null],[17,"NID_setAttr_TokICCsig","","",null,null],[17,"NID_setAttr_SecDevSig","","",null,null],[17,"NID_set_brand_IATA_ATA","","",null,null],[17,"NID_set_brand_Diners","","",null,null],[17,"NID_set_brand_AmericanExpress","","",null,null],[17,"NID_set_brand_JCB","","",null,null],[17,"NID_set_brand_Visa","","",null,null],[17,"NID_set_brand_MasterCard","","",null,null],[17,"NID_set_brand_Novus","","",null,null],[17,"NID_des_cdmf","","",null,null],[17,"NID_rsaOAEPEncryptionSET","","",null,null],[17,"NID_ipsec3","","",null,null],[17,"NID_ipsec4","","",null,null],[17,"NID_whirlpool","","",null,null],[17,"NID_cryptopro","","",null,null],[17,"NID_cryptocom","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_2001","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_94","","",null,null],[17,"NID_id_GostR3411_94","","",null,null],[17,"NID_id_HMACGostR3411_94","","",null,null],[17,"NID_id_GostR3410_2001","","",null,null],[17,"NID_id_GostR3410_94","","",null,null],[17,"NID_id_Gost28147_89","","",null,null],[17,"NID_gost89_cnt","","",null,null],[17,"NID_id_Gost28147_89_MAC","","",null,null],[17,"NID_id_GostR3411_94_prf","","",null,null],[17,"NID_id_GostR3410_2001DH","","",null,null],[17,"NID_id_GostR3410_94DH","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_KeyMeshing","","",null,null],[17,"NID_id_Gost28147_89_None_KeyMeshing","","",null,null],[17,"NID_id_GostR3411_94_TestParamSet","","",null,null],[17,"NID_id_GostR3411_94_CryptoProParamSet","","",null,null],[17,"NID_id_Gost28147_89_TestParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_D_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_TestParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_D_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchA_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchB_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchC_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_TestParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_a","","",null,null],[17,"NID_id_GostR3410_94_aBis","","",null,null],[17,"NID_id_GostR3410_94_b","","",null,null],[17,"NID_id_GostR3410_94_bBis","","",null,null],[17,"NID_id_Gost28147_89_cc","","",null,null],[17,"NID_id_GostR3410_94_cc","","",null,null],[17,"NID_id_GostR3410_2001_cc","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_94_cc","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_2001_cc","","",null,null],[17,"NID_id_GostR3410_2001_ParamSet_cc","","",null,null],[17,"NID_camellia_128_cbc","","",null,null],[17,"NID_camellia_192_cbc","","",null,null],[17,"NID_camellia_256_cbc","","",null,null],[17,"NID_id_camellia128_wrap","","",null,null],[17,"NID_id_camellia192_wrap","","",null,null],[17,"NID_id_camellia256_wrap","","",null,null],[17,"NID_camellia_128_ecb","","",null,null],[17,"NID_camellia_128_ofb128","","",null,null],[17,"NID_camellia_128_cfb128","","",null,null],[17,"NID_camellia_192_ecb","","",null,null],[17,"NID_camellia_192_ofb128","","",null,null],[17,"NID_camellia_192_cfb128","","",null,null],[17,"NID_camellia_256_ecb","","",null,null],[17,"NID_camellia_256_ofb128","","",null,null],[17,"NID_camellia_256_cfb128","","",null,null],[17,"NID_camellia_128_cfb1","","",null,null],[17,"NID_camellia_192_cfb1","","",null,null],[17,"NID_camellia_256_cfb1","","",null,null],[17,"NID_camellia_128_cfb8","","",null,null],[17,"NID_camellia_192_cfb8","","",null,null],[17,"NID_camellia_256_cfb8","","",null,null],[17,"NID_kisa","","",null,null],[17,"NID_seed_ecb","","",null,null],[17,"NID_seed_cbc","","",null,null],[17,"NID_seed_cfb128","","",null,null],[17,"NID_seed_ofb128","","",null,null],[17,"NID_hmac","","",null,null],[17,"NID_cmac","","",null,null],[17,"NID_rc4_hmac_md5","","",null,null],[17,"NID_aes_128_cbc_hmac_sha1","","",null,null],[17,"NID_aes_192_cbc_hmac_sha1","","",null,null],[17,"NID_aes_256_cbc_hmac_sha1","","",null,null],[17,"OCSP_NOCERTS","","",null,null],[17,"OCSP_NOINTERN","","",null,null],[17,"OCSP_NOSIGS","","",null,null],[17,"OCSP_NOCHAIN","","",null,null],[17,"OCSP_NOVERIFY","","",null,null],[17,"OCSP_NOEXPLICIT","","",null,null],[17,"OCSP_NOCASIGN","","",null,null],[17,"OCSP_NODELEGATED","","",null,null],[17,"OCSP_NOCHECKS","","",null,null],[17,"OCSP_TRUSTOTHER","","",null,null],[17,"OCSP_RESPID_KEY","","",null,null],[17,"OCSP_NOTIME","","",null,null],[17,"V_OCSP_CERTSTATUS_GOOD","","",null,null],[17,"V_OCSP_CERTSTATUS_REVOKED","","",null,null],[17,"V_OCSP_CERTSTATUS_UNKNOWN","","",null,null],[17,"OCSP_REVOKED_STATUS_NOSTATUS","","",null,null],[17,"OCSP_REVOKED_STATUS_UNSPECIFIED","","",null,null],[17,"OCSP_REVOKED_STATUS_KEYCOMPROMISE","","",null,null],[17,"OCSP_REVOKED_STATUS_CACOMPROMISE","","",null,null],[17,"OCSP_REVOKED_STATUS_AFFILIATIONCHANGED","","",null,null],[17,"OCSP_REVOKED_STATUS_SUPERSEDED","","",null,null],[17,"OCSP_REVOKED_STATUS_CESSATIONOFOPERATION","","",null,null],[17,"OCSP_REVOKED_STATUS_CERTIFICATEHOLD","","",null,null],[17,"OCSP_REVOKED_STATUS_REMOVEFROMCRL","","",null,null],[17,"OCSP_RESPONSE_STATUS_SUCCESSFUL","","",null,null],[17,"OCSP_RESPONSE_STATUS_MALFORMEDREQUEST","","",null,null],[17,"OCSP_RESPONSE_STATUS_INTERNALERROR","","",null,null],[17,"OCSP_RESPONSE_STATUS_TRYLATER","","",null,null],[17,"OCSP_RESPONSE_STATUS_SIGREQUIRED","","",null,null],[17,"OCSP_RESPONSE_STATUS_UNAUTHORIZED","","",null,null],[17,"OPENSSL_EC_NAMED_CURVE","","",null,null],[17,"PKCS5_SALT_LEN","","",null,null],[17,"PKCS12_DEFAULT_ITER","","",null,null],[17,"RSA_F4","","",null,null],[17,"RSA_PKCS1_PADDING","","",null,null],[17,"RSA_SSLV23_PADDING","","",null,null],[17,"RSA_NO_PADDING","","",null,null],[17,"RSA_PKCS1_OAEP_PADDING","","",null,null],[17,"RSA_X931_PADDING","","",null,null],[17,"RSA_PKCS1_PSS_PADDING","","",null,null],[17,"SHA_LBLOCK","","",null,null],[17,"SSL3_AD_ILLEGAL_PARAMETER","","",null,null],[17,"SSL_AD_ILLEGAL_PARAMETER","","",null,null],[17,"TLS1_AD_DECODE_ERROR","","",null,null],[17,"SSL_AD_DECODE_ERROR","","",null,null],[17,"TLS1_AD_UNRECOGNIZED_NAME","","",null,null],[17,"SSL_AD_UNRECOGNIZED_NAME","","",null,null],[17,"SSL_CTRL_SET_TMP_DH","","",null,null],[17,"SSL_CTRL_SET_TMP_ECDH","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_MODE","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_CTRL_SET_SESS_CACHE_MODE","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE","","",null,null],[17,"SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP","","",null,null],[17,"SSL_CTRL_GET_EXTRA_CHAIN_CERTS","","",null,null],[17,"SSL_CTRL_SET_VERIFY_CERT_STORE","","",null,null],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_MODE_NO_AUTO_CHAIN","","",null,null],[17,"SSL_MODE_RELEASE_BUFFERS","","",null,null],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"SSL_OP_NO_TLSv1_1","","",null,null],[17,"SSL_OP_NO_TLSv1_2","","",null,null],[17,"SSL_OP_NO_DTLSv1","","",null,null],[17,"SSL_OP_NO_DTLSv1_2","","",null,null],[17,"SSL_OP_NO_SSL_MASK","","",null,null],[17,"SSL_FILETYPE_PEM","","",null,null],[17,"SSL_FILETYPE_ASN1","","",null,null],[17,"SSL_SESS_CACHE_OFF","","",null,null],[17,"SSL_SESS_CACHE_CLIENT","","",null,null],[17,"SSL_SESS_CACHE_SERVER","","",null,null],[17,"SSL_SESS_CACHE_BOTH","","",null,null],[17,"SSL_SESS_CACHE_NO_AUTO_CLEAR","","",null,null],[17,"SSL_SESS_CACHE_NO_INTERNAL_LOOKUP","","",null,null],[17,"SSL_SESS_CACHE_NO_INTERNAL_STORE","","",null,null],[17,"SSL_SESS_CACHE_NO_INTERNAL","","",null,null],[17,"SSL3_VERSION","","",null,null],[17,"TLS1_VERSION","","",null,null],[17,"TLS1_1_VERSION","","",null,null],[17,"TLS1_2_VERSION","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"TLSEXT_STATUSTYPE_ocsp","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"OPENSSL_NPN_UNSUPPORTED","","",null,null],[17,"OPENSSL_NPN_NEGOTIATED","","",null,null],[17,"OPENSSL_NPN_NO_OVERLAP","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_OK","","",null,null],[17,"X509_V_ERR_UNSPECIFIED","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_SUITE_B_INVALID_VERSION","","",null,null],[17,"X509_V_ERR_SUITE_B_INVALID_ALGORITHM","","",null,null],[17,"X509_V_ERR_SUITE_B_INVALID_CURVE","","",null,null],[17,"X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM","","",null,null],[17,"X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256","","",null,null],[17,"X509_V_ERR_HOSTNAME_MISMATCH","","",null,null],[17,"X509_V_ERR_EMAIL_MISMATCH","","",null,null],[17,"X509_V_ERR_IP_ADDRESS_MISMATCH","","",null,null],[17,"X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT","","",null,null],[17,"X509_CHECK_FLAG_NO_WILDCARDS","","",null,null],[17,"X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS","","",null,null],[17,"X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS","","",null,null],[17,"X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS","","",null,null],[17,"GEN_OTHERNAME","","",null,null],[17,"GEN_EMAIL","","",null,null],[17,"GEN_DNS","","",null,null],[17,"GEN_X400","","",null,null],[17,"GEN_DIRNAME","","",null,null],[17,"GEN_EDIPARTY","","",null,null],[17,"GEN_URI","","",null,null],[17,"GEN_IPADD","","",null,null],[17,"GEN_RID","","",null,null],[17,"DTLS1_COOKIE_LENGTH","","",null,null],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"point_conversion_form_t"}}]],"paths":[[3,"GENERAL_NAME"],[3,"SHA_CTX"],[3,"SHA256_CTX"],[3,"SHA512_CTX"],[4,"point_conversion_form_t"]]};
searchIndex["owning_ref"] = {"doc":"An owning reference.","items":[[8,"StableAddress","owning_ref","An unsafe marker trait for types that deref to a stable address, even when moved. For example, this is implemented by Box, Vec, Rc, Arc and String, among others. Even when a Box is moved, the underlying storage remains at a fixed location.",null,null],[8,"CloneStableAddress","","An unsafe marker trait for types where clones deref to the same address. This has all the requirements of StableDeref, and additionally requires that after calling clone(), both the old and new value deref to the same address. For example, Rc and Arc implement CloneStableDeref, but Box and Vec do not.",null,null],[3,"OwningRef","","An owning reference.",null,null],[3,"OwningRefMut","","An mutable owning reference.",null,null],[3,"OwningHandle","","`OwningHandle` is a complement to `OwningRef`. Where `OwningRef` allows consumers to pass around an owned object and a dependent reference, `OwningHandle` contains an owned object and a dependent object.",null,null],[6,"BoxRef","","Typedef of a owning reference that uses a `Box` as the owner.",null,null],[6,"VecRef","","Typedef of a owning reference that uses a `Vec` as the owner.",null,null],[6,"StringRef","","Typedef of a owning reference that uses a `String` as the owner.",null,null],[6,"RcRef","","Typedef of a owning reference that uses a `Rc` as the owner.",null,null],[6,"ArcRef","","Typedef of a owning reference that uses a `Arc` as the owner.",null,null],[6,"RefRef","","Typedef of a owning reference that uses a `Ref` as the owner.",null,null],[6,"RefMutRef","","Typedef of a owning reference that uses a `RefMut` as the owner.",null,null],[6,"MutexGuardRef","","Typedef of a owning reference that uses a `MutexGuard` as the owner.",null,null],[6,"RwLockReadGuardRef","","Typedef of a owning reference that uses a `RwLockReadGuard` as the owner.",null,null],[6,"RwLockWriteGuardRef","","Typedef of a owning reference that uses a `RwLockWriteGuard` as the owner.",null,null],[6,"BoxRefMut","","Typedef of a mutable owning reference that uses a `Box` as the owner.",null,null],[6,"VecRefMut","","Typedef of a mutable owning reference that uses a `Vec` as the owner.",null,null],[6,"StringRefMut","","Typedef of a mutable owning reference that uses a `String` as the owner.",null,null],[6,"RefMutRefMut","","Typedef of a mutable owning reference that uses a `RefMut` as the owner.",null,null],[6,"MutexGuardRefMut","","Typedef of a mutable owning reference that uses a `MutexGuard` as the owner.",null,null],[6,"RwLockWriteGuardRefMut","","Typedef of a mutable owning reference that uses a `RwLockWriteGuard` as the owner.",null,null],[6,"ErasedBoxRef","","Typedef of a owning reference that uses an erased `Box` as the owner.",null,null],[6,"ErasedRcRef","","Typedef of a owning reference that uses an erased `Rc` as the owner.",null,null],[6,"ErasedArcRef","","Typedef of a owning reference that uses an erased `Arc` as the owner.",null,null],[6,"ErasedBoxRefMut","","Typedef of a mutable owning reference that uses an erased `Box` as the owner.",null,null],[8,"Erased","","Helper trait for an erased concrete type an owner dereferences to. This is used in form of a trait object for keeping something around to (virtually) call the destructor.",null,null],[8,"IntoErased","","Helper trait for erasing the concrete type of what an owner derferences to, for example `Box<T> -> Box<Erased>`. This would be unneeded with higher kinded types support in the language.",null,null],[16,"Erased","","Owner with the dereference type substituted to `Erased`.",0,null],[10,"into_erased","","Perform the type erasure.",0,null],[8,"ToHandle","","Trait to implement the conversion of owner to handle for common types.",null,null],[16,"Handle","","The type of handle to be encapsulated by the OwningHandle.",1,null],[10,"to_handle","","Given an appropriately-long-lived pointer to ourselves, create a handle to be encapsulated by the `OwningHandle`.",1,null],[8,"ToHandleMut","","Trait to implement the conversion of owner to mutable handle for common types.",null,null],[16,"HandleMut","","The type of handle to be encapsulated by the OwningHandle.",2,null],[10,"to_handle_mut","","Given an appropriately-long-lived pointer to ourselves, create a mutable handle to be encapsulated by the `OwningHandle`.",2,null],[11,"new","","Creates a new owning reference from a owner initialized to the direct dereference of it.",3,{"i":[{"n":"o"}],"o":{"n":"self"}}],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the `StableAddress` trait. Instead, the caller is responsible to make the same promises as implementing the trait.",3,{"i":[{"n":"o"}],"o":{"n":"self"}}],[11,"map","","Converts `self` into a new owning reference that points at something reachable from the previous one.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"owningref"}}],[11,"try_map","","Tries to convert `self` into a new owning reference that points at something reachable from the previous one.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["owningref"],"n":"result"}}],[11,"map_owner","","Converts `self` into a new owning reference with a different owner type.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"owningref"}}],[11,"map_owner_box","","Converts `self` into a new owning reference where the owner is wrapped in an additional `Box<O>`.",3,{"i":[{"n":"self"}],"o":{"g":["box"],"n":"owningref"}}],[11,"erase_owner","","Erases the concrete base type of the owner with a trait object.",3,{"i":[{"n":"self"}],"o":{"n":"owningref"}}],[11,"owner","","A getter for the underlying owner.",3,{"i":[{"n":"self"}],"o":{"n":"o"}}],[11,"into_inner","","Discards the reference and retrieves the owner.",3,{"i":[{"n":"self"}],"o":{"n":"o"}}],[11,"new","","Creates a new owning reference from a owner initialized to the direct dereference of it.",4,{"i":[{"n":"o"}],"o":{"n":"self"}}],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the `StableAddress` trait. Instead, the caller is responsible to make the same promises as implementing the trait.",4,{"i":[{"n":"o"}],"o":{"n":"self"}}],[11,"map","","Converts `self` into a new shared owning reference that points at something reachable from the previous one.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"owningref"}}],[11,"map_mut","","Converts `self` into a new mutable owning reference that points at something reachable from the previous one.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"owningrefmut"}}],[11,"try_map","","Tries to convert `self` into a new shared owning reference that points at something reachable from the previous one.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["owningref"],"n":"result"}}],[11,"try_map_mut","","Tries to convert `self` into a new mutable owning reference that points at something reachable from the previous one.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["owningrefmut"],"n":"result"}}],[11,"map_owner","","Converts `self` into a new owning reference with a different owner type.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"owningrefmut"}}],[11,"map_owner_box","","Converts `self` into a new owning reference where the owner is wrapped in an additional `Box<O>`.",4,{"i":[{"n":"self"}],"o":{"g":["box"],"n":"owningrefmut"}}],[11,"erase_owner","","Erases the concrete base type of the owner with a trait object.",4,{"i":[{"n":"self"}],"o":{"n":"owningrefmut"}}],[11,"owner","","A getter for the underlying owner.",4,{"i":[{"n":"self"}],"o":{"n":"o"}}],[11,"into_inner","","Discards the reference and retrieves the owner.",4,{"i":[{"n":"self"}],"o":{"n":"o"}}],[11,"deref","","",5,null],[11,"deref_mut","","",5,null],[11,"new","","Create a new `OwningHandle` for a type that implements `ToHandle`. For types that don't implement `ToHandle`, callers may invoke `new_with_fn`, which accepts a callback to perform the conversion.",5,{"i":[{"n":"o"}],"o":{"n":"self"}}],[11,"new_mut","","Create a new mutable `OwningHandle` for a type that implements `ToHandleMut`.",5,{"i":[{"n":"o"}],"o":{"n":"self"}}],[11,"new_with_fn","","Create a new OwningHandle. The provided callback will be invoked with a pointer to the object owned by `o`, and the returned value is stored as the object to which this `OwningHandle` will forward `Deref` and `DerefMut`.",5,{"i":[{"n":"o"},{"n":"f"}],"o":{"n":"self"}}],[11,"try_new","","Create a new OwningHandle. The provided callback will be invoked with a pointer to the object owned by `o`, and the returned value is stored as the object to which this `OwningHandle` will forward `Deref` and `DerefMut`.",5,{"i":[{"n":"o"},{"n":"f"}],"o":{"n":"result"}}],[11,"deref","","",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref","","",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_ref","","",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_ref","","",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_mut","","",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"borrow","","",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"from","","",3,{"i":[{"n":"o"}],"o":{"n":"self"}}],[11,"from","","",4,{"i":[{"n":"o"}],"o":{"n":"self"}}],[11,"from","","",3,{"i":[{"n":"owningrefmut"}],"o":{"n":"self"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"ordering"}}],[11,"hash","","",3,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"ordering"}}],[11,"hash","","",4,{"i":[{"n":"self"},{"n":"h"}]}]],"paths":[[8,"IntoErased"],[8,"ToHandle"],[8,"ToHandleMut"],[3,"OwningRef"],[3,"OwningRefMut"],[3,"OwningHandle"],[8,"Erased"]]};
searchIndex["parking_lot"] = {"doc":"This library provides implementations of `Mutex`, `RwLock`, `Condvar` and `Once` that are smaller, faster and more flexible than those in the Rust standard library. It also provides a `ReentrantMutex` type.","items":[[3,"Condvar","parking_lot","A Condition Variable",null,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition variable returned due to a time out or not.",null,null],[3,"Once","","A synchronization primitive which can be used to run a one-time initialization. Useful for one-time initialization for globals, FFI or related functionality.",null,null],[3,"RawMutex","","Raw mutex type backed by the parking lot.",null,null],[3,"RawRwLock","","Raw reader-writer lock type backed by the parking lot.",null,null],[3,"RawThreadId","","Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.",null,null],[4,"OnceState","","Current state of a `Once`.",null,null],[13,"New","","A closure has not been executed yet",0,null],[13,"Poisoned","","A closure was executed but panicked.",0,null],[13,"InProgress","","A thread is currently executing a closure.",0,null],[13,"Done","","A closure has completed sucessfully.",0,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"waittimeoutresult"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"waittimeoutresult"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"waittimeoutresult"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and notified.",2,{"o":{"n":"condvar"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,{"i":[{"n":"self"}]}],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,{"i":[{"n":"self"}]}],[11,"wait","","Blocks the current thread until this condition variable receives a notification.",2,{"i":[{"n":"self"},{"n":"mutexguard"}]}],[11,"wait_until","","Waits on this condition variable for a notification, timing out after the specified time instant.",2,{"i":[{"n":"self"},{"n":"mutexguard"},{"n":"instant"}],"o":{"n":"waittimeoutresult"}}],[11,"wait_for","","Waits on this condition variable for a notification, timing out after a specified duration.",2,{"i":[{"n":"self"},{"n":"mutexguard"},{"n":"duration"}],"o":{"n":"waittimeoutresult"}}],[11,"default","","",2,{"o":{"n":"condvar"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"oncestate"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"oncestate"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"done","","Returns whether the associated `Once` has successfullly executed a closure.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"new","","Creates a new `Once` value.",3,{"o":{"n":"once"}}],[11,"state","","Returns the current state of this `Once`.",3,{"i":[{"n":"self"}],"o":{"n":"oncestate"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure will be executed if this is the first time `call_once` has been called, and otherwise the routine will not be invoked.",3,{"i":[{"n":"self"},{"n":"f"}]}],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",3,{"i":[{"n":"self"},{"n":"f"}]}],[11,"default","","",3,{"o":{"n":"once"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"lock","","",4,{"i":[{"n":"self"}]}],[11,"try_lock","","",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"unlock","","",4,{"i":[{"n":"self"}]}],[11,"unlock_fair","","",4,{"i":[{"n":"self"}]}],[11,"bump","","",4,{"i":[{"n":"self"}]}],[11,"try_lock_until","","",4,{"i":[{"n":"self"},{"n":"instant"}],"o":{"n":"bool"}}],[11,"try_lock_for","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"lock_exclusive","","",5,{"i":[{"n":"self"}]}],[11,"try_lock_exclusive","","",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"unlock_exclusive","","",5,{"i":[{"n":"self"}]}],[11,"lock_shared","","",5,{"i":[{"n":"self"}]}],[11,"try_lock_shared","","",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"unlock_shared","","",5,{"i":[{"n":"self"}]}],[11,"unlock_shared_fair","","",5,{"i":[{"n":"self"}]}],[11,"unlock_exclusive_fair","","",5,{"i":[{"n":"self"}]}],[11,"bump_shared","","",5,{"i":[{"n":"self"}]}],[11,"bump_exclusive","","",5,{"i":[{"n":"self"}]}],[11,"downgrade","","",5,{"i":[{"n":"self"}]}],[11,"try_lock_shared_for","","",5,null],[11,"try_lock_shared_until","","",5,null],[11,"try_lock_exclusive_for","","",5,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"try_lock_exclusive_until","","",5,{"i":[{"n":"self"},{"n":"instant"}],"o":{"n":"bool"}}],[11,"lock_shared_recursive","","",5,{"i":[{"n":"self"}]}],[11,"try_lock_shared_recursive","","",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"try_lock_shared_recursive_for","","",5,null],[11,"try_lock_shared_recursive_until","","",5,null],[11,"lock_upgradable","","",5,{"i":[{"n":"self"}]}],[11,"try_lock_upgradable","","",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"unlock_upgradable","","",5,{"i":[{"n":"self"}]}],[11,"upgrade","","",5,{"i":[{"n":"self"}]}],[11,"try_upgrade","","",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"unlock_upgradable_fair","","",5,{"i":[{"n":"self"}]}],[11,"bump_upgradable","","",5,{"i":[{"n":"self"}]}],[11,"downgrade_upgradable","","",5,{"i":[{"n":"self"}]}],[11,"downgrade_to_upgradable","","",5,{"i":[{"n":"self"}]}],[11,"try_lock_upgradable_until","","",5,{"i":[{"n":"self"},{"n":"instant"}],"o":{"n":"bool"}}],[11,"try_lock_upgradable_for","","",5,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"try_upgrade_until","","",5,{"i":[{"n":"self"},{"n":"instant"}],"o":{"n":"bool"}}],[11,"try_upgrade_for","","",5,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"nonzero_thread_id","","",6,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[6,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which can point to a subfield of the protected data.",null,null],[6,"Mutex","","A mutual exclusion primitive useful for protecting shared data",null,null],[6,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.",null,null],[6,"MappedReentrantMutexGuard","","An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a subfield of the protected data.",null,null],[6,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",null,null],[6,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.",null,null],[6,"MappedRwLockReadGuard","","An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a subfield of the protected data.",null,null],[6,"MappedRwLockWriteGuard","","An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a subfield of the protected data.",null,null],[6,"RwLock","","A reader-writer lock",null,null],[6,"RwLockReadGuard","","RAII structure used to release the shared read access of a lock when dropped.",null,null],[6,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access of a lock when dropped.",null,null],[6,"RwLockWriteGuard","","RAII structure used to release the exclusive write access of a lock when dropped.",null,null],[17,"ONCE_INIT","","Initialization value for static `Once` values.",null,null]],"paths":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"]]};
searchIndex["parking_lot_core"] = {"doc":"This library exposes a low-level API for creating your own efficient synchronization primitives.","items":[[3,"ParkToken","parking_lot_core","A value associated with a parked thread which can be used by `unpark_filter`.",null,null],[12,"0","","",0,null],[3,"UnparkResult","","Result of an unpark operation.",null,null],[12,"unparked_threads","","The number of threads that were unparked.",1,null],[12,"have_more_threads","","Whether there are any threads remaining in the queue. This only returns true if a thread was unparked.",1,null],[12,"be_fair","","This is set to true on average once every 0.5ms for any given key. It should be used to switch to a fair unlocking mechanism for a particular unlock.",1,null],[3,"UnparkToken","","A value which is passed from an unparker to a parked thread.",null,null],[12,"0","","",2,null],[3,"SpinWait","","A counter used to perform exponential backoff in spin loops.",null,null],[4,"FilterOp","","Operation that `unpark_filter` should perform for each thread.",null,null],[13,"Unpark","","Unpark the thread and continue scanning the list of parked threads.",3,null],[13,"Skip","","Don't unpark the thread and continue scanning the list of parked threads.",3,null],[13,"Stop","","Don't unpark the thread and stop scanning the list of parked threads.",3,null],[4,"ParkResult","","Result of a park operation.",null,null],[13,"Unparked","","We were unparked by another thread with the given token.",4,null],[13,"Invalid","","The validation callback returned false.",4,null],[13,"TimedOut","","The timeout expired.",4,null],[4,"RequeueOp","","Operation that `unpark_requeue` should perform.",null,null],[13,"Abort","","Abort the operation without doing anything.",5,null],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target queue.",5,null],[13,"RequeueAll","","Requeue all threads onto the target queue.",5,null],[5,"park","","Parks the current thread in the queue associated with the given key.",null,{"i":[{"n":"usize"},{"n":"v"},{"n":"b"},{"n":"t"},{"n":"parktoken"},{"g":["instant"],"n":"option"}],"o":{"n":"parkresult"}}],[5,"unpark_all","","Unparks all threads in the queue associated with the given key.",null,{"i":[{"n":"usize"},{"n":"unparktoken"}],"o":{"n":"usize"}}],[5,"unpark_filter","","Unparks a number of threads from the front of the queue associated with `key` depending on the results of a filter function which inspects the `ParkToken` associated with each thread.",null,{"i":[{"n":"usize"},{"n":"f"},{"n":"c"}],"o":{"n":"unparkresult"}}],[5,"unpark_one","","Unparks one thread from the queue associated with the given key.",null,{"i":[{"n":"usize"},{"n":"c"}],"o":{"n":"unparkresult"}}],[5,"unpark_requeue","","Removes all threads from the queue associated with `key_from`, optionally unparks the first one and requeues the rest onto the queue associated with `key_to`.",null,{"i":[{"n":"usize"},{"n":"usize"},{"n":"v"},{"n":"c"}],"o":{"n":"unparkresult"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"parkresult"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"parkresult"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"parkresult"}],"o":{"n":"bool"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"is_unparked","","Returns true if we were unparked by another thread.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"unparkresult"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"unparkresult"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"unparkresult"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"requeueop"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"requeueop"}],"o":{"n":"bool"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"filterop"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"filterop"}],"o":{"n":"bool"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"unparktoken"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"unparktoken"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"unparktoken"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"parktoken"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"parktoken"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"parktoken"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `SpinWait`.",6,{"o":{"n":"spinwait"}}],[11,"reset","","Resets a `SpinWait` to its initial state.",6,{"i":[{"n":"self"}]}],[11,"spin","","Spins until the sleep threshold has been reached.",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,{"i":[{"n":"self"}]}],[11,"default","","",6,{"o":{"n":"spinwait"}}],[0,"deadlock","","[Experimental] Deadlock detection",null,null],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock detector Noop if deadlock_detection feature isn't enabled. Note: Call after the resource is acquired",null,{"i":[{"n":"usize"}]}],[5,"release_resource","","Release a resource identified by key in the deadlock detector. Noop if deadlock_detection feature isn't enabled. Note: Call before the resource is released # Panics Panics if the resource was already released or wasn't acquired in this thread.",null,{"i":[{"n":"usize"}]}],[17,"DEFAULT_PARK_TOKEN","parking_lot_core","A default park token to use.",null,null],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",null,null]],"paths":[[3,"ParkToken"],[3,"UnparkResult"],[3,"UnparkToken"],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["percent_encoding"] = {"doc":"URLs use special chacters to indicate the parts of the request.  For example, a forward slash indicates a path.  In order for that charcter to exist outside of a path separator, that charcter would need to be encoded.","items":[[3,"SIMPLE_ENCODE_SET","percent_encoding","This encode set is used for the path of cannot-be-a-base URLs.",null,null],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",null,null],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",null,null],[3,"PercentEncode","","The return type of `percent_encode()` and `utf8_percent_encode()`.",null,null],[3,"PercentDecode","","The return type of `percent_decode()`.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",null,{"i":[{"n":"u8"}],"o":{"n":"str"}}],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",null,null],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"i":[{"n":"str"},{"n":"e"}],"o":{"n":"percentencode"}}],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[8,"EncodeSet","","Represents a set of characters / bytes that should be percent-encoded.",null,null],[10,"contains","","Called with UTF-8 bytes rather than code points. Should return true for all non-ASCII bytes.",0,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"simple_encode_set"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"contains","","",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"query_encode_set"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"contains","","",2,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"default_encode_set"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"contains","","",3,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"path_segment_encode_set"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"contains","","",4,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"userinfo_encode_set"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"contains","","",5,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"percentencode"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",6,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"size_hint","","",6,null],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"percentdecode"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",7,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"size_hint","","",7,null],[11,"if_any","","If the percent-decoding is different from the input, return it as a new bytes vector.",7,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"option"}}],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",7,{"i":[{"n":"self"}],"o":{"g":["cow","utf8error"],"n":"result"}}],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",7,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"cow"}}],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",null,null]],"paths":[[8,"EncodeSet"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"],[3,"PercentDecode"]]};
searchIndex["persistent"] = {"doc":"A set of middleware for sharing data between requests in the Iron framework.","items":[[3,"State","persistent","Middleware for data that persists between requests with read and write capabilities.",null,null],[3,"Read","","Middleware for data that persists between Requests with read-only capabilities.",null,null],[3,"Write","","Middleware for data that persists between Requests for data which mostly needs to be written instead of read.",null,null],[4,"PersistentError","","The type that can be returned by `eval` to indicate error.",null,null],[13,"NotFound","","The value was not found.",0,null],[8,"PersistentInto","","Helper trait for overloading the constructors of `Read`/`Write`/`State`. This is an implementation detail, and should not be used for any other purpose.",null,null],[10,"persistent_into","","Convert `self` into a value of type `T`.",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"persistenterror"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"read"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"state"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"write"}}],[11,"eval","","",3,{"i":[{"n":"request"}],"o":{"g":["arc","persistenterror"],"n":"result"}}],[11,"eval","","",2,{"i":[{"n":"request"}],"o":{"g":["arc","persistenterror"],"n":"result"}}],[11,"eval","","",4,{"i":[{"n":"request"}],"o":{"g":["arc","persistenterror"],"n":"result"}}],[11,"before","","",3,{"i":[{"n":"self"},{"n":"request"}],"o":{"n":"ironresult"}}],[11,"before","","",2,{"i":[{"n":"self"},{"n":"request"}],"o":{"n":"ironresult"}}],[11,"before","","",4,{"i":[{"n":"self"},{"n":"request"}],"o":{"n":"ironresult"}}],[11,"after","","",3,{"i":[{"n":"self"},{"n":"request"},{"n":"response"}],"o":{"g":["response"],"n":"ironresult"}}],[11,"after","","",2,{"i":[{"n":"self"},{"n":"request"},{"n":"response"}],"o":{"g":["response"],"n":"ironresult"}}],[11,"after","","",4,{"i":[{"n":"self"},{"n":"request"},{"n":"response"}],"o":{"g":["response"],"n":"ironresult"}}],[11,"both","","Construct a new pair of `State` that can be passed directly to `Chain::link`.",3,null],[11,"one","","Construct a new `State` that can be passed directly to `Chain::link_before` or `Chain::link_after`.",3,{"i":[{"n":"t"}],"o":{"n":"state"}}],[11,"both","","Construct a new pair of `Read` that can be passed directly to `Chain::link`.",2,null],[11,"one","","Construct a new `Read` that can be passed directly to `Chain::link_before` or `Chain::link_after`.",2,{"i":[{"n":"t"}],"o":{"n":"read"}}],[11,"both","","Construct a new pair of `Write` that can be passed directly to `Chain::link`.",4,null],[11,"one","","Construct a new `Write` that can be passed directly to `Chain::link_before` or `Chain::link_after`.",4,{"i":[{"n":"t"}],"o":{"n":"write"}}]],"paths":[[4,"PersistentError"],[8,"PersistentInto"],[3,"Read"],[3,"State"],[3,"Write"]]};
searchIndex["phf"] = {"doc":"Compile time optimized maps and sets.","items":[[8,"PhfHash","phf","A trait implemented by types which can be used in PHF data structures.",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher as necessary.",0,null],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,null],[3,"Map","","An immutable map constructed at compile time.",null,null],[3,"Set","","An immutable set constructed at compile time.",null,null],[3,"OrderedMap","","An order-preserving immutable map constructed at compile time.",null,null],[3,"OrderedSet","","An order-preserving immutable set constructed at compile time.",null,null],[0,"map","","An immutable map constructed at compile time.",null,null],[3,"Map","phf::map","An immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the key/value pairs in a `Map`.",null,null],[3,"Keys","","An iterator over the keys in a `Map`.",null,null],[3,"Values","","An iterator over the values in a `Map`.",null,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"index","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"v"}}],[11,"is_empty","","Returns true if the `Map` is empty.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"len","","Returns the number of entries in the `Map`.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"contains_key","","Determines if `key` is in the `Map`.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"get","","Returns a reference to the value that `key` maps to.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"option"}}],[11,"get_key","","Returns a reference to the map's internal static instance of the given key.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"option"}}],[11,"get_entry","","Like `get`, but returns both the key and the value.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"option"}}],[11,"entries","","Returns an iterator over the key/value pairs in the map.",1,{"i":[{"n":"self"}],"o":{"n":"entries"}}],[11,"keys","","Returns an iterator over the keys in the map.",1,{"i":[{"n":"self"}],"o":{"n":"keys"}}],[11,"values","","Returns an iterator over the values in the map.",1,{"i":[{"n":"self"}],"o":{"n":"values"}}],[11,"next","","",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",3,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",3,null],[11,"next_back","","",3,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[0,"set","phf","An immutable set constructed at compile time.",null,null],[3,"Set","phf::set","An immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `Set`.",null,null],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"len","","Returns the number of elements in the `Set`.",5,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the `Set` contains no elements.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"get_key","","Returns a reference to the set's internal static instance of the given key.",5,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"option"}}],[11,"contains","","Returns true if `value` is in the `Set`.",5,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"bool"}}],[11,"iter","","Returns an iterator over the values in the set.",5,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",5,{"i":[{"n":"self"},{"n":"set"}],"o":{"n":"bool"}}],[11,"is_subset","","Returns true if `other` contains all values in `self`.",5,{"i":[{"n":"self"},{"n":"set"}],"o":{"n":"bool"}}],[11,"is_superset","","Returns true if `self` contains all values in `other`.",5,{"i":[{"n":"self"},{"n":"set"}],"o":{"n":"bool"}}],[11,"next","","",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",6,null],[11,"next_back","","",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[0,"ordered_map","phf","An order-preserving immutable map constructed at compile time.",null,null],[3,"OrderedMap","phf::ordered_map","An order-preserving immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the entries in a `OrderedMap`.",null,null],[3,"Keys","","An iterator over the keys in a `OrderedMap`.",null,null],[3,"Values","","An iterator over the values in a `OrderedMap`.",null,null],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"index","","",7,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"v"}}],[11,"len","","Returns the number of entries in the `Map`.",7,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the `Map` is empty.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"get","","Returns a reference to the value that `key` maps to.",7,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"option"}}],[11,"get_key","","Returns a reference to the map's internal static instance of the given key.",7,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"option"}}],[11,"contains_key","","Determines if `key` is in the `Map`.",7,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"get_index","","Returns the index of the key within the list used to initialize the ordered map.",7,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["usize"],"n":"option"}}],[11,"index","","Returns references to both the key and values at an index within the list used to initialize the ordered map. See `.get_index(key)`.",7,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"get_entry","","Like `get`, but returns both the key and the value.",7,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"option"}}],[11,"entries","","Returns an iterator over the key/value pairs in the map.",7,{"i":[{"n":"self"}],"o":{"n":"entries"}}],[11,"keys","","Returns an iterator over the keys in the map.",7,{"i":[{"n":"self"}],"o":{"n":"keys"}}],[11,"values","","Returns an iterator over the values in the map.",7,{"i":[{"n":"self"}],"o":{"n":"values"}}],[11,"next","","",8,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",8,null],[11,"next_back","","",8,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",9,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",9,null],[11,"next_back","","",9,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",10,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"i":[{"n":"self"}],"o":{"n":"option"}}],[0,"ordered_set","phf","An order-preserving immutable set constructed at compile time.",null,null],[3,"OrderedSet","phf::ordered_set","An order-preserving immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `OrderedSet`.",null,null],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"len","","Returns the number of elements in the `OrderedSet`.",11,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the `OrderedSet` contains no elements.",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"get_key","","Returns a reference to the set's internal static instance of the given key.",11,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"option"}}],[11,"get_index","","Returns the index of the key within the list used to initialize the ordered set.",11,{"i":[{"n":"self"},{"n":"u"}],"o":{"g":["usize"],"n":"option"}}],[11,"index","","Returns a reference to the key at an index within the list used to initialize the ordered set. See `.get_index(key)`.",11,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"contains","","Returns true if `value` is in the `Set`.",11,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"bool"}}],[11,"iter","","Returns an iterator over the values in the set.",11,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",11,{"i":[{"n":"self"},{"n":"orderedset"}],"o":{"n":"bool"}}],[11,"is_subset","","Returns true if `other` contains all values in `self`.",11,{"i":[{"n":"self"},{"n":"orderedset"}],"o":{"n":"bool"}}],[11,"is_superset","","Returns true if `self` contains all values in `other`.",11,{"i":[{"n":"self"},{"n":"orderedset"}],"o":{"n":"bool"}}],[11,"next","","",12,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",12,null],[11,"next_back","","",12,{"i":[{"n":"self"}],"o":{"n":"option"}}]],"paths":[[8,"PhfHash"],[3,"Map"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Set"],[3,"Iter"],[3,"OrderedMap"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"OrderedSet"],[3,"Iter"]]};
searchIndex["phf_shared"] = {"doc":"","items":[[5,"displace","phf_shared","",null,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"u32"}}],[5,"split","","",null,null],[5,"hash","","`key` is from `phf_generator::HashState::key`.",null,{"i":[{"n":"t"},{"n":"u64"}],"o":{"n":"u64"}}],[5,"get_index","","Return an index into `phf_generator::HashState::map`.",null,null],[8,"PhfHash","","A trait implemented by types which can be used in PHF data structures.",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher as necessary.",0,{"i":[{"n":"self"},{"n":"h"}]}],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,null]],"paths":[[8,"PhfHash"]]};
searchIndex["plugin"] = {"doc":"Lazily-Evaluated, Order-Independent Plugins for Extensible Types.","items":[[8,"Plugin","plugin","Implementers of this trait can act as plugins for other types, via `OtherType::get<P>()`.",null,null],[16,"Error","","The error type associated with this plugin.",0,null],[10,"eval","","Create the plugin from an instance of the extended type.",0,{"i":[{"n":"e"}],"o":{"n":"result"}}],[8,"Extensible","","Defines an interface that extensible types must implement.",null,null],[10,"extensions","","Get a reference to the type's extension storage.",1,{"i":[{"n":"self"}],"o":{"n":"typemap"}}],[10,"extensions_mut","","Get a mutable reference to the type's extension storage.",1,{"i":[{"n":"self"}],"o":{"n":"typemap"}}],[8,"Pluggable","","An interface for plugins that cache values between calls.",null,null],[11,"get","","Return a copy of the plugin's produced value.",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"get_ref","","Return a reference to the plugin's produced value.",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"get_mut","","Return a mutable reference to the plugin's produced value.",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"compute","","Create and evaluate a once-off instance of a plugin.",2,{"i":[{"n":"self"}],"o":{"n":"result"}}]],"paths":[[8,"Plugin"],[8,"Extensible"],[8,"Pluggable"]]};
searchIndex["pq_sys"] = {"doc":"","items":[[3,"__BindgenUnionField","pq_sys","",null,null],[3,"__sbuf","","",null,null],[12,"_base","","",0,null],[12,"_size","","",0,null],[3,"__sFILEX","","",null,null],[3,"__sFILE","","",null,null],[12,"_p","","",1,null],[12,"_r","","",1,null],[12,"_w","","",1,null],[12,"_flags","","",1,null],[12,"_file","","",1,null],[12,"_bf","","",1,null],[12,"_lbfsize","","",1,null],[12,"_cookie","","",1,null],[12,"_close","","",1,null],[12,"_read","","",1,null],[12,"_seek","","",1,null],[12,"_write","","",1,null],[12,"_ub","","",1,null],[12,"_extra","","",1,null],[12,"_ur","","",1,null],[12,"_ubuf","","",1,null],[12,"_nbuf","","",1,null],[12,"_lb","","",1,null],[12,"_blksize","","",1,null],[12,"_offset","","",1,null],[3,"pg_conn","","",null,null],[3,"pg_result","","",null,null],[3,"pg_cancel","","",null,null],[3,"pgNotify","","",null,null],[12,"relname","","",2,null],[12,"be_pid","","",2,null],[12,"extra","","",2,null],[12,"next","","",2,null],[3,"_PQprintOpt","","",null,null],[12,"header","","",3,null],[12,"align","","",3,null],[12,"standard","","",3,null],[12,"html3","","",3,null],[12,"expanded","","",3,null],[12,"pager","","",3,null],[12,"fieldSep","","",3,null],[12,"tableOpt","","",3,null],[12,"caption","","",3,null],[12,"fieldName","","",3,null],[3,"_PQconninfoOption","","",null,null],[12,"keyword","","",4,null],[12,"envvar","","",4,null],[12,"compiled","","",4,null],[12,"val","","",4,null],[12,"label","","",4,null],[12,"dispchar","","",4,null],[12,"dispsize","","",4,null],[3,"_bindgen_ty_8","","",null,null],[12,"len","","",5,null],[12,"isint","","",5,null],[12,"u","","",5,null],[3,"_bindgen_ty_8__bindgen_ty_1","","",null,null],[12,"ptr","","",6,null],[12,"integer","","",6,null],[12,"bindgen_union_field","","",6,null],[3,"pgresAttDesc","","",null,null],[12,"name","","",7,null],[12,"tableid","","",7,null],[12,"columnid","","",7,null],[12,"format","","",7,null],[12,"typid","","",7,null],[12,"typlen","","",7,null],[12,"atttypmod","","",7,null],[4,"_bindgen_ty_2","","",null,null],[13,"CONNECTION_OK","","",8,null],[13,"CONNECTION_BAD","","",8,null],[13,"CONNECTION_STARTED","","",8,null],[13,"CONNECTION_MADE","","",8,null],[13,"CONNECTION_AWAITING_RESPONSE","","",8,null],[13,"CONNECTION_AUTH_OK","","",8,null],[13,"CONNECTION_SETENV","","",8,null],[13,"CONNECTION_SSL_STARTUP","","",8,null],[13,"CONNECTION_NEEDED","","",8,null],[4,"_bindgen_ty_3","","",null,null],[13,"PGRES_POLLING_FAILED","","",9,null],[13,"PGRES_POLLING_READING","","",9,null],[13,"PGRES_POLLING_WRITING","","",9,null],[13,"PGRES_POLLING_OK","","",9,null],[13,"PGRES_POLLING_ACTIVE","","",9,null],[4,"_bindgen_ty_4","","",null,null],[13,"PGRES_EMPTY_QUERY","","",10,null],[13,"PGRES_COMMAND_OK","","",10,null],[13,"PGRES_TUPLES_OK","","",10,null],[13,"PGRES_COPY_OUT","","",10,null],[13,"PGRES_COPY_IN","","",10,null],[13,"PGRES_BAD_RESPONSE","","",10,null],[13,"PGRES_NONFATAL_ERROR","","",10,null],[13,"PGRES_FATAL_ERROR","","",10,null],[13,"PGRES_COPY_BOTH","","",10,null],[13,"PGRES_SINGLE_TUPLE","","",10,null],[4,"_bindgen_ty_5","","",null,null],[13,"PQTRANS_IDLE","","",11,null],[13,"PQTRANS_ACTIVE","","",11,null],[13,"PQTRANS_INTRANS","","",11,null],[13,"PQTRANS_INERROR","","",11,null],[13,"PQTRANS_UNKNOWN","","",11,null],[4,"_bindgen_ty_6","","",null,null],[13,"PQERRORS_TERSE","","",12,null],[13,"PQERRORS_DEFAULT","","",12,null],[13,"PQERRORS_VERBOSE","","",12,null],[4,"_bindgen_ty_7","","",null,null],[13,"PQPING_OK","","",13,null],[13,"PQPING_REJECT","","",13,null],[13,"PQPING_NO_RESPONSE","","",13,null],[13,"PQPING_NO_ATTEMPT","","",13,null],[5,"PQconnectStart","","",null,null],[5,"PQconnectStartParams","","",null,null],[5,"PQconnectPoll","","",null,null],[5,"PQconnectdb","","",null,null],[5,"PQconnectdbParams","","",null,null],[5,"PQsetdbLogin","","",null,null],[5,"PQfinish","","",null,null],[5,"PQconndefaults","","",null,null],[5,"PQconninfoParse","","",null,null],[5,"PQconninfo","","",null,null],[5,"PQconninfoFree","","",null,null],[5,"PQresetStart","","",null,null],[5,"PQresetPoll","","",null,null],[5,"PQreset","","",null,null],[5,"PQgetCancel","","",null,null],[5,"PQfreeCancel","","",null,null],[5,"PQcancel","","",null,null],[5,"PQrequestCancel","","",null,null],[5,"PQdb","","",null,null],[5,"PQuser","","",null,null],[5,"PQpass","","",null,null],[5,"PQhost","","",null,null],[5,"PQport","","",null,null],[5,"PQtty","","",null,null],[5,"PQoptions","","",null,null],[5,"PQstatus","","",null,null],[5,"PQtransactionStatus","","",null,null],[5,"PQparameterStatus","","",null,null],[5,"PQprotocolVersion","","",null,null],[5,"PQserverVersion","","",null,null],[5,"PQerrorMessage","","",null,null],[5,"PQsocket","","",null,null],[5,"PQbackendPID","","",null,null],[5,"PQconnectionNeedsPassword","","",null,null],[5,"PQconnectionUsedPassword","","",null,null],[5,"PQclientEncoding","","",null,null],[5,"PQsetClientEncoding","","",null,null],[5,"PQsslInUse","","",null,null],[5,"PQsslStruct","","",null,null],[5,"PQsslAttribute","","",null,null],[5,"PQsslAttributeNames","","",null,null],[5,"PQgetssl","","",null,null],[5,"PQinitSSL","","",null,null],[5,"PQinitOpenSSL","","",null,null],[5,"PQsetErrorVerbosity","","",null,null],[5,"PQtrace","","",null,null],[5,"PQuntrace","","",null,null],[5,"PQsetNoticeReceiver","","",null,null],[5,"PQsetNoticeProcessor","","",null,null],[5,"PQregisterThreadLock","","",null,null],[5,"PQexec","","",null,null],[5,"PQexecParams","","",null,null],[5,"PQprepare","","",null,null],[5,"PQexecPrepared","","",null,null],[5,"PQsendQuery","","",null,null],[5,"PQsendQueryParams","","",null,null],[5,"PQsendPrepare","","",null,null],[5,"PQsendQueryPrepared","","",null,null],[5,"PQsetSingleRowMode","","",null,null],[5,"PQgetResult","","",null,null],[5,"PQisBusy","","",null,null],[5,"PQconsumeInput","","",null,null],[5,"PQnotifies","","",null,null],[5,"PQputCopyData","","",null,null],[5,"PQputCopyEnd","","",null,null],[5,"PQgetCopyData","","",null,null],[5,"PQgetline","","",null,null],[5,"PQputline","","",null,null],[5,"PQgetlineAsync","","",null,null],[5,"PQputnbytes","","",null,null],[5,"PQendcopy","","",null,null],[5,"PQsetnonblocking","","",null,null],[5,"PQisnonblocking","","",null,null],[5,"PQisthreadsafe","","",null,null],[5,"PQping","","",null,null],[5,"PQpingParams","","",null,null],[5,"PQflush","","",null,null],[5,"PQfn","","",null,null],[5,"PQresultStatus","","",null,null],[5,"PQresStatus","","",null,null],[5,"PQresultErrorMessage","","",null,null],[5,"PQresultErrorField","","",null,null],[5,"PQntuples","","",null,null],[5,"PQnfields","","",null,null],[5,"PQbinaryTuples","","",null,null],[5,"PQfname","","",null,null],[5,"PQfnumber","","",null,null],[5,"PQftable","","",null,null],[5,"PQftablecol","","",null,null],[5,"PQfformat","","",null,null],[5,"PQftype","","",null,null],[5,"PQfsize","","",null,null],[5,"PQfmod","","",null,null],[5,"PQcmdStatus","","",null,null],[5,"PQoidStatus","","",null,null],[5,"PQoidValue","","",null,null],[5,"PQcmdTuples","","",null,null],[5,"PQgetvalue","","",null,null],[5,"PQgetlength","","",null,null],[5,"PQgetisnull","","",null,null],[5,"PQnparams","","",null,null],[5,"PQparamtype","","",null,null],[5,"PQdescribePrepared","","",null,null],[5,"PQdescribePortal","","",null,null],[5,"PQsendDescribePrepared","","",null,null],[5,"PQsendDescribePortal","","",null,null],[5,"PQclear","","",null,null],[5,"PQfreemem","","",null,null],[5,"PQmakeEmptyPGresult","","",null,null],[5,"PQcopyResult","","",null,null],[5,"PQsetResultAttrs","","",null,null],[5,"PQresultAlloc","","",null,null],[5,"PQsetvalue","","",null,null],[5,"PQescapeStringConn","","",null,null],[5,"PQescapeLiteral","","",null,null],[5,"PQescapeIdentifier","","",null,null],[5,"PQescapeByteaConn","","",null,null],[5,"PQunescapeBytea","","",null,null],[5,"PQescapeString","","",null,null],[5,"PQescapeBytea","","",null,null],[5,"PQprint","","",null,null],[5,"PQdisplayTuples","","",null,null],[5,"PQprintTuples","","",null,null],[5,"PQlibVersion","","",null,null],[5,"PQmblen","","",null,null],[5,"PQdsplen","","",null,null],[5,"PQenv2encoding","","",null,null],[5,"PQencryptPassword","","",null,null],[6,"__int64_t","","",null,null],[6,"__darwin_size_t","","",null,null],[6,"__darwin_off_t","","",null,null],[6,"fpos_t","","",null,null],[6,"FILE","","",null,null],[6,"Oid","","",null,null],[6,"PGconn","","",null,null],[6,"PGresult","","",null,null],[6,"PGcancel","","",null,null],[6,"PGnotify","","",null,null],[6,"PQnoticeReceiver","","",null,null],[6,"PQnoticeProcessor","","",null,null],[6,"pqbool","","",null,null],[6,"PQprintOpt","","",null,null],[6,"PQconninfoOption","","",null,null],[6,"PQArgBlock","","",null,null],[6,"PGresAttDesc","","",null,null],[6,"pgthreadlock_t","","",null,null],[17,"CONNECTION_OK","","",null,null],[17,"CONNECTION_BAD","","",null,null],[17,"CONNECTION_STARTED","","",null,null],[17,"CONNECTION_MADE","","",null,null],[17,"CONNECTION_AWAITING_RESPONSE","","",null,null],[17,"CONNECTION_AUTH_OK","","",null,null],[17,"CONNECTION_SETENV","","",null,null],[17,"CONNECTION_SSL_STARTUP","","",null,null],[17,"CONNECTION_NEEDED","","",null,null],[17,"PGRES_POLLING_FAILED","","",null,null],[17,"PGRES_POLLING_READING","","",null,null],[17,"PGRES_POLLING_WRITING","","",null,null],[17,"PGRES_POLLING_OK","","",null,null],[17,"PGRES_POLLING_ACTIVE","","",null,null],[17,"PGRES_EMPTY_QUERY","","",null,null],[17,"PGRES_COMMAND_OK","","",null,null],[17,"PGRES_TUPLES_OK","","",null,null],[17,"PGRES_COPY_OUT","","",null,null],[17,"PGRES_COPY_IN","","",null,null],[17,"PGRES_BAD_RESPONSE","","",null,null],[17,"PGRES_NONFATAL_ERROR","","",null,null],[17,"PGRES_FATAL_ERROR","","",null,null],[17,"PGRES_COPY_BOTH","","",null,null],[17,"PGRES_SINGLE_TUPLE","","",null,null],[17,"PQTRANS_IDLE","","",null,null],[17,"PQTRANS_ACTIVE","","",null,null],[17,"PQTRANS_INTRANS","","",null,null],[17,"PQTRANS_INERROR","","",null,null],[17,"PQTRANS_UNKNOWN","","",null,null],[17,"PQERRORS_TERSE","","",null,null],[17,"PQERRORS_DEFAULT","","",null,null],[17,"PQERRORS_VERBOSE","","",null,null],[17,"PQPING_OK","","",null,null],[17,"PQPING_REJECT","","",null,null],[17,"PQPING_NO_RESPONSE","","",null,null],[17,"PQPING_NO_ATTEMPT","","",null,null],[11,"new","","",14,{"o":{"n":"self"}}],[11,"as_ref","","",14,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_mut","","",14,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"default","","",14,{"o":{"n":"self"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"__sfilex"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"_bindgen_ty_2"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"_bindgen_ty_2"}],"o":{"n":"bool"}}],[11,"hash","","",8,null],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"_bindgen_ty_3"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"_bindgen_ty_3"}],"o":{"n":"bool"}}],[11,"hash","","",9,null],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"_bindgen_ty_4"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"_bindgen_ty_4"}],"o":{"n":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"_bindgen_ty_5"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"_bindgen_ty_5"}],"o":{"n":"bool"}}],[11,"hash","","",11,null],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"_bindgen_ty_6"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"_bindgen_ty_6"}],"o":{"n":"bool"}}],[11,"hash","","",12,null],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"_bindgen_ty_7"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"_bindgen_ty_7"}],"o":{"n":"bool"}}],[11,"hash","","",13,null],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"pg_conn"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"pg_result"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"pg_cancel"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"self"}}]],"paths":[[3,"__sbuf"],[3,"__sFILE"],[3,"pgNotify"],[3,"_PQprintOpt"],[3,"_PQconninfoOption"],[3,"_bindgen_ty_8"],[3,"_bindgen_ty_8__bindgen_ty_1"],[3,"pgresAttDesc"],[4,"_bindgen_ty_2"],[4,"_bindgen_ty_3"],[4,"_bindgen_ty_4"],[4,"_bindgen_ty_5"],[4,"_bindgen_ty_6"],[4,"_bindgen_ty_7"],[3,"__BindgenUnionField"],[3,"__sFILEX"],[3,"pg_conn"],[3,"pg_result"],[3,"pg_cancel"]]};
searchIndex["proc_macro2"] = {"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`] API on to stable Rust.","items":[[3,"TokenStream","proc_macro2","",null,null],[3,"LexError","","",null,null],[3,"Span","","",null,null],[3,"Group","","",null,null],[3,"Op","","",null,null],[3,"Term","","",null,null],[3,"Literal","","",null,null],[4,"TokenTree","","",null,null],[13,"Group","","",0,null],[13,"Term","","",0,null],[13,"Op","","",0,null],[13,"Literal","","",0,null],[4,"Delimiter","","",null,null],[13,"Parenthesis","","",1,null],[13,"Brace","","",1,null],[13,"Bracket","","",1,null],[13,"None","","",1,null],[4,"Spacing","","",null,null],[13,"Alone","","",2,null],[13,"Joint","","",2,null],[0,"token_stream","","",null,null],[3,"IntoIter","proc_macro2::token_stream","",null,null],[11,"next","","",3,{"i":[{"n":"self"}],"o":{"g":["tokentree"],"n":"option"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_iter","proc_macro2","",4,{"i":[{"n":"self"}],"o":{"n":"intoiter"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"tokenstream"}}],[11,"empty","","",4,{"o":{"n":"tokenstream"}}],[11,"is_empty","","",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from_str","","",4,{"i":[{"n":"str"}],"o":{"g":["tokenstream","lexerror"],"n":"result"}}],[11,"from","","",4,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[11,"from_iter","","",4,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"call_site","","",6,{"o":{"n":"span"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"tokentree"}}],[11,"span","","",0,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",0,{"i":[{"n":"self"},{"n":"span"}]}],[11,"from","","",0,{"i":[{"n":"group"}],"o":{"n":"tokentree"}}],[11,"from","","",0,{"i":[{"n":"term"}],"o":{"n":"tokentree"}}],[11,"from","","",0,{"i":[{"n":"op"}],"o":{"n":"tokentree"}}],[11,"from","","",0,{"i":[{"n":"literal"}],"o":{"n":"tokentree"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"group"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"delimiter"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"delimiter"}],"o":{"n":"bool"}}],[11,"new","","",7,{"i":[{"n":"delimiter"},{"n":"tokenstream"}],"o":{"n":"group"}}],[11,"delimiter","","",7,{"i":[{"n":"self"}],"o":{"n":"delimiter"}}],[11,"stream","","",7,{"i":[{"n":"self"}],"o":{"n":"tokenstream"}}],[11,"span","","",7,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",7,{"i":[{"n":"self"},{"n":"span"}]}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"op"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"spacing"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"spacing"}],"o":{"n":"bool"}}],[11,"new","","",8,{"i":[{"n":"char"},{"n":"spacing"}],"o":{"n":"op"}}],[11,"op","","",8,{"i":[{"n":"self"}],"o":{"n":"char"}}],[11,"spacing","","",8,{"i":[{"n":"self"}],"o":{"n":"spacing"}}],[11,"span","","",8,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",8,{"i":[{"n":"self"},{"n":"span"}]}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"term"}}],[11,"new","","",9,{"i":[{"n":"str"},{"n":"span"}],"o":{"n":"term"}}],[11,"as_str","","",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"span","","",9,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",9,{"i":[{"n":"self"},{"n":"span"}]}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"literal"}}],[11,"u8_suffixed","","",10,{"i":[{"n":"u8"}],"o":{"n":"literal"}}],[11,"u16_suffixed","","",10,{"i":[{"n":"u16"}],"o":{"n":"literal"}}],[11,"u32_suffixed","","",10,{"i":[{"n":"u32"}],"o":{"n":"literal"}}],[11,"u64_suffixed","","",10,{"i":[{"n":"u64"}],"o":{"n":"literal"}}],[11,"usize_suffixed","","",10,{"i":[{"n":"usize"}],"o":{"n":"literal"}}],[11,"i8_suffixed","","",10,{"i":[{"n":"i8"}],"o":{"n":"literal"}}],[11,"i16_suffixed","","",10,{"i":[{"n":"i16"}],"o":{"n":"literal"}}],[11,"i32_suffixed","","",10,{"i":[{"n":"i32"}],"o":{"n":"literal"}}],[11,"i64_suffixed","","",10,{"i":[{"n":"i64"}],"o":{"n":"literal"}}],[11,"isize_suffixed","","",10,{"i":[{"n":"isize"}],"o":{"n":"literal"}}],[11,"u8_unsuffixed","","",10,{"i":[{"n":"u8"}],"o":{"n":"literal"}}],[11,"u16_unsuffixed","","",10,{"i":[{"n":"u16"}],"o":{"n":"literal"}}],[11,"u32_unsuffixed","","",10,{"i":[{"n":"u32"}],"o":{"n":"literal"}}],[11,"u64_unsuffixed","","",10,{"i":[{"n":"u64"}],"o":{"n":"literal"}}],[11,"usize_unsuffixed","","",10,{"i":[{"n":"usize"}],"o":{"n":"literal"}}],[11,"i8_unsuffixed","","",10,{"i":[{"n":"i8"}],"o":{"n":"literal"}}],[11,"i16_unsuffixed","","",10,{"i":[{"n":"i16"}],"o":{"n":"literal"}}],[11,"i32_unsuffixed","","",10,{"i":[{"n":"i32"}],"o":{"n":"literal"}}],[11,"i64_unsuffixed","","",10,{"i":[{"n":"i64"}],"o":{"n":"literal"}}],[11,"isize_unsuffixed","","",10,{"i":[{"n":"isize"}],"o":{"n":"literal"}}],[11,"f64_unsuffixed","","",10,{"i":[{"n":"f64"}],"o":{"n":"literal"}}],[11,"f64_suffixed","","",10,{"i":[{"n":"f64"}],"o":{"n":"literal"}}],[11,"f32_unsuffixed","","",10,{"i":[{"n":"f32"}],"o":{"n":"literal"}}],[11,"f32_suffixed","","",10,{"i":[{"n":"f32"}],"o":{"n":"literal"}}],[11,"string","","",10,{"i":[{"n":"str"}],"o":{"n":"literal"}}],[11,"character","","",10,{"i":[{"n":"char"}],"o":{"n":"literal"}}],[11,"byte_string","","",10,null],[11,"span","","",10,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",10,{"i":[{"n":"self"},{"n":"span"}]}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"IntoIter"],[3,"TokenStream"],[3,"LexError"],[3,"Span"],[3,"Group"],[3,"Op"],[3,"Term"],[3,"Literal"]]};
searchIndex["quick_error"] = {"doc":"A macro which makes errors easy to write","items":[[3,"Context","quick_error","Generic context type",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[8,"ResultExt","","Result extension trait adding a `context` method",null,null],[10,"context","","The method is use to add context information to current operation",1,{"i":[{"n":"self"},{"n":"x"}],"o":{"g":["context"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[14,"quick_error","","Main macro that does all the work",null,null]],"paths":[[3,"Context"],[8,"ResultExt"]]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust syntax tree data structures into tokens of source code.","items":[[3,"Tokens","quote","Tokens produced by a [`quote!`] invocation.",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"tokens"}}],[11,"default","","",0,{"o":{"n":"tokens"}}],[11,"new","","Empty tokens.",0,{"o":{"n":"self"}}],[11,"append","","For use by `ToTokens` implementations.",0,{"i":[{"n":"self"},{"n":"u"}]}],[11,"append_all","","For use by `ToTokens` implementations.",0,{"i":[{"n":"self"},{"n":"i"}]}],[11,"append_separated","","For use by `ToTokens` implementations.",0,{"i":[{"n":"self"},{"n":"i"},{"n":"u"}]}],[11,"append_terminated","","For use by `ToTokens` implementations.",0,{"i":[{"n":"self"},{"n":"i"},{"n":"u"}]}],[11,"to_tokens","","",0,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"into_tokens","","",0,{"i":[{"n":"self"}],"o":{"n":"tokens"}}],[11,"into_iter","","",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",0,{"i":[{"n":"self"},{"n":"h"}]}],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`] invocation.",null,null],[10,"to_tokens","","Write `self` to the given `Tokens`.",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"into_tokens","","Convert `self` directly into a `Tokens` object.",1,{"i":[{"n":"self"}],"o":{"n":"tokens"}}],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens originating within the macro invocation.",null,null],[11,"into_tokens","","Convert `self` directly into a `Tokens` object.",1,{"i":[{"n":"self"}],"o":{"n":"tokens"}}]],"paths":[[3,"Tokens"],[8,"ToTokens"]]};
searchIndex["r2d2"] = {"doc":"A generic connection pool.","items":[[3,"Builder","r2d2","A builder for a connection pool.",null,null],[3,"NopErrorHandler","","A `HandleError` implementation which does nothing.",null,null],[3,"LoggingErrorHandler","","A `HandleError` implementation which logs at the error level.",null,null],[3,"NopConnectionCustomizer","","A `CustomizeConnection` which does nothing.",null,null],[3,"Pool","","A generic connection pool.",null,null],[3,"Error","","The error type returned by methods in this crate.",null,null],[3,"State","","Information about the state of a `Pool`.",null,null],[12,"connections","","The number of connections currently being managed by the pool.",0,null],[12,"idle_connections","","The number of idle connections.",0,null],[3,"PooledConnection","","A smart pointer wrapping a connection.",null,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",1,{"o":{"n":"builder"}}],[11,"new","","Constructs a new `Builder`.",1,{"o":{"n":"builder"}}],[11,"max_size","","Sets the maximum number of connections managed by the pool.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"builder"}}],[11,"min_idle","","Sets the minimum idle connection count maintained by the pool.",1,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"builder"}}],[11,"thread_pool","","Sets the thread pool used for asynchronous operations such as connection creation.",1,{"i":[{"n":"self"},{"g":["scheduledthreadpool"],"n":"arc"}],"o":{"n":"builder"}}],[11,"test_on_check_out","","If true, the health of a connection will be verified via a call to `ConnectionManager::is_valid` before it is checked out of the pool.",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"builder"}}],[11,"max_lifetime","","Sets the maximum lifetime of connections in the pool.",1,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"builder"}}],[11,"idle_timeout","","Sets the idle timeout used by the pool.",1,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"builder"}}],[11,"connection_timeout","","Sets the connection timeout used by the pool.",1,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"builder"}}],[11,"error_handler","","Sets the handler for errors reported in the pool.",1,{"i":[{"n":"self"},{"g":["handleerror"],"n":"box"}],"o":{"n":"builder"}}],[11,"connection_customizer","","Sets the connection customizer used by the pool.",1,{"i":[{"n":"self"},{"g":["customizeconnection"],"n":"box"}],"o":{"n":"builder"}}],[11,"build","","Consumes the builder, returning a new, initialized pool.",1,{"i":[{"n":"self"},{"n":"m"}],"o":{"g":["pool","error"],"n":"result"}}],[11,"build_unchecked","","Consumes the builder, returning a new pool.",1,{"i":[{"n":"self"},{"n":"m"}],"o":{"n":"pool"}}],[8,"ManageConnection","","A trait which provides connection-specific functionality.",null,null],[16,"Connection","","The connection type this manager deals with.",2,null],[16,"Error","","The error type returned by `Connection`s.",2,null],[10,"connect","","Attempts to create a new connection.",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"is_valid","","Determines if the connection is still connected to the database.",2,null],[10,"has_broken","","Quickly determines if the connection is no longer usable.",2,null],[8,"HandleError","","A trait which handles errors reported by the `ManageConnection`.",null,null],[10,"handle_error","","Handles an error.",3,{"i":[{"n":"self"},{"n":"e"}]}],[8,"CustomizeConnection","","A trait which allows for customization of connections.",null,null],[11,"on_acquire","","Called with connections immediately after they are returned from `ManageConnection::connect`.",4,{"i":[{"n":"self"},{"n":"c"}],"o":{"n":"result"}}],[11,"on_release","","Called with connections when they are removed from the pool.",4,{"i":[{"n":"self"},{"n":"c"}]}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"noperrorhandler"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"handle_error","","",5,{"i":[{"n":"self"},{"n":"e"}]}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"loggingerrorhandler"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"handle_error","","",6,{"i":[{"n":"self"},{"n":"e"}]}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"nopconnectioncustomizer"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"pool"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new connection pool with a default configuration.",8,{"i":[{"n":"m"}],"o":{"g":["pool","error"],"n":"result"}}],[11,"builder","","Returns a builder type to configure a new pool.",8,{"o":{"n":"builder"}}],[11,"get","","Retrieves a connection from the pool.",8,{"i":[{"n":"self"}],"o":{"g":["pooledconnection","error"],"n":"result"}}],[11,"try_get","","Attempts to retrieve a connection from the pool if there is one available.",8,{"i":[{"n":"self"}],"o":{"g":["pooledconnection"],"n":"option"}}],[11,"state","","Returns information about the current state of the pool.",8,{"i":[{"n":"self"}],"o":{"n":"state"}}],[11,"max_size","","Returns the configured maximum pool size.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"min_idle","","Returns the configured mimimum idle connection count.",8,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"test_on_check_out","","Returns if the pool is configured to test connections on check out.",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"max_lifetime","","Returns the configured maximum connection lifetime.",8,{"i":[{"n":"self"}],"o":{"g":["duration"],"n":"option"}}],[11,"idle_timeout","","Returns the configured idle connection timeout.",8,{"i":[{"n":"self"}],"o":{"g":["duration"],"n":"option"}}],[11,"connection_timeout","","Returns the configured connection timeout.",8,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",10,{"i":[{"n":"self"}]}],[11,"deref","","",10,null],[11,"deref_mut","","",10,null]],"paths":[[3,"State"],[3,"Builder"],[8,"ManageConnection"],[8,"HandleError"],[8,"CustomizeConnection"],[3,"NopErrorHandler"],[3,"LoggingErrorHandler"],[3,"NopConnectionCustomizer"],[3,"Pool"],[3,"Error"],[3,"PooledConnection"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"OsRng","rand","A random number generator that retrieves randomness straight from the operating system. Platform sources:",null,null],[3,"IsaacRng","","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[3,"ChaChaRng","","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[0,"isaac","","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it generates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it has generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",0,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",1,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by replacing the RNG with the result of a `Default::default` call.",null,null],[0,"os","rand","Interfaces to the operating system provided random number generators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from the operating system. Platform sources:",null,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will work best with an infinite reader, but this is not required.",null,null],[8,"Rng","rand","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",2,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","Return the next random u64.",2,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open interval `[0, 1)`.",2,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open interval `[0, 1)`.",2,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",2,null],[11,"gen","","Return a random value of a `Rand` type.",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",2,{"i":[{"n":"self"}],"o":{"n":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",2,{"i":[{"n":"self"},{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",2,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",2,{"i":[{"n":"self"}],"o":{"n":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",2,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",2,null],[11,"shuffle","","Shuffle a mutable slice in place.",2,null],[8,"Rand","","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",3,{"i":[{"n":"r"}],"o":{"n":"self"}}],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce the same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",4,null],[10,"from_seed","","Create a new RNG with the given seed.",4,{"i":[{"n":"seed"}],"o":{"n":"self"}}],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number generator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the open interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",5,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the closed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",6,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current platform.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"o":{"n":"xorshiftrng"}}],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"o":{"n":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"o":{"n":"t"}}],[5,"sample","","DEPRECATED: use `seq::sample_iter` instead.",null,{"i":[{"n":"r"},{"n":"i"},{"n":"usize"}],"o":{"n":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"Range","rand::distributions","Sample values uniformly between two bounds.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample uniformly between two values. This should not be used directly, and is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range` requires. This should not ever be called directly, only via `Range::new`, which will check that `low < high`, so this function doesn't have to repeat the check.",7,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as a source of randomness.",7,{"i":[{"n":"range"},{"n":"r"}],"o":{"n":"self"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",null,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers (a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",8,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",9,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",10,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",11,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"support"}}],[3,"RandSample","","A wrapper for generating types that implement `Rand` via the `Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",12,null],[12,"item","","The actual item which is being weighted",12,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[11,"new","rand::os","Create a new `OsRng`.",13,{"o":{"g":["osrng","error"],"n":"result"}}],[11,"reseed","rand::reseeding","",14,null],[11,"next_u32","rand::chacha","",15,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u32","rand::isaac","",16,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u32","rand::read","",17,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",17,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",17,null],[11,"next_u32","rand","",18,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",18,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"next_u32","rand::isaac","",19,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",19,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"next_u32","rand::reseeding","",0,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",0,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",0,null],[11,"next_u32","rand::os","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",13,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",13,null],[11,"next_u32","rand","",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u32","","",21,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",21,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",21,null],[11,"ind_sample","rand::distributions::range","",22,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"ind_sample","rand::distributions::normal","",23,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","rand::distributions::gamma","",24,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",25,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","rand::distributions::exponential","",26,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","rand::distributions::gamma","",27,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","rand::distributions","",28,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"t"}}],[11,"ind_sample","rand::distributions::normal","",29,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","rand::distributions::gamma","",30,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","rand::distributions","",31,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"clone","rand::distributions::exponential","",9,{"i":[{"n":"self"}],"o":{"n":"exp1"}}],[11,"clone","rand::isaac","",16,{"i":[{"n":"self"}],"o":{"n":"isaacrng"}}],[11,"clone","rand::distributions::exponential","",26,{"i":[{"n":"self"}],"o":{"n":"exp"}}],[11,"clone","rand::distributions","",12,{"i":[{"n":"self"}],"o":{"n":"weighted"}}],[11,"clone","rand","",20,{"i":[{"n":"self"}],"o":{"n":"xorshiftrng"}}],[11,"clone","rand::distributions","",31,{"i":[{"n":"self"}],"o":{"n":"randsample"}}],[11,"clone","rand::distributions::normal","",23,{"i":[{"n":"self"}],"o":{"n":"normal"}}],[11,"clone","rand::distributions::gamma","",24,{"i":[{"n":"self"}],"o":{"n":"gamma"}}],[11,"clone","rand","",18,{"i":[{"n":"self"}],"o":{"n":"stdrng"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"threadrng"}}],[11,"clone","rand::distributions::normal","",29,{"i":[{"n":"self"}],"o":{"n":"lognormal"}}],[11,"clone","rand::distributions::range","",22,{"i":[{"n":"self"}],"o":{"n":"range"}}],[11,"clone","rand::distributions::normal","",8,{"i":[{"n":"self"}],"o":{"n":"standardnormal"}}],[11,"clone","rand::distributions::gamma","",25,{"i":[{"n":"self"}],"o":{"n":"chisquared"}}],[11,"clone","rand::chacha","",15,{"i":[{"n":"self"}],"o":{"n":"chacharng"}}],[11,"clone","rand::isaac","",19,{"i":[{"n":"self"}],"o":{"n":"isaac64rng"}}],[11,"clone","rand::reseeding","",14,{"i":[{"n":"self"}],"o":{"n":"reseedwithdefault"}}],[11,"clone","rand::distributions::gamma","",30,{"i":[{"n":"self"}],"o":{"n":"fisherf"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"studentt"}}],[11,"rand","rand::chacha","",15,{"i":[{"n":"r"}],"o":{"n":"chacharng"}}],[11,"rand","rand","",5,{"i":[{"n":"r"}],"o":{"g":["f32"],"n":"open01"}}],[11,"rand","","",6,{"i":[{"n":"r"}],"o":{"g":["f32"],"n":"closed01"}}],[11,"rand","","",5,{"i":[{"n":"r"}],"o":{"g":["f64"],"n":"open01"}}],[11,"rand","rand::distributions::exponential","",9,{"i":[{"n":"r"}],"o":{"n":"exp1"}}],[11,"rand","rand::isaac","",16,{"i":[{"n":"r"}],"o":{"n":"isaacrng"}}],[11,"rand","","",19,{"i":[{"n":"r"}],"o":{"n":"isaac64rng"}}],[11,"rand","rand","",20,{"i":[{"n":"r"}],"o":{"n":"xorshiftrng"}}],[11,"rand","rand::distributions::normal","",8,{"i":[{"n":"r"}],"o":{"n":"standardnormal"}}],[11,"rand","rand","",6,{"i":[{"n":"r"}],"o":{"g":["f64"],"n":"closed01"}}],[11,"default","rand::reseeding","",14,{"o":{"n":"reseedwithdefault"}}],[11,"reseed","","",0,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and seed. This uses a default value for `generation_threshold`.",0,null],[11,"reseed","rand","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",20,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",20,null],[11,"reseed","","",18,null],[11,"from_seed","","",18,null],[11,"reseed","rand::chacha","",15,null],[11,"from_seed","","Create a ChaCha generator from a seed, obtained from a variable-length u32 array. Only up to 8 words are used; if less than 8 words are used, the remaining are set to zero.",15,null],[11,"reseed","rand::isaac","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",19,null],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",16,null],[11,"sample","rand::distributions::normal","",23,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"sample","rand::distributions::gamma","",30,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"sample","rand::distributions","",28,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"t"}}],[11,"sample","rand::distributions::normal","",29,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"sample","rand::distributions::exponential","",26,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"sample","rand::distributions::gamma","",25,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"sample","","",24,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"sample","","",27,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"sample","rand::distributions::range","",22,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"sample","rand::distributions","",31,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"next","rand","",32,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",33,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[11,"fmt","rand::reseeding","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions::gamma","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions::gamma","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions::range","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions::exponential","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::chacha","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions::gamma","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions::normal","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions::normal","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::reseeding","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions::normal","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions::gamma","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::isaac","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions::exponential","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::isaac","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::os","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::distributions","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","rand::read","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"new_unseeded","rand::isaac","Create an ISAAC random number generator using the default fixed seed.",16,{"o":{"n":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",19,{"o":{"n":"isaac64rng"}}],[11,"new_unseeded","rand::chacha","Create an ChaCha random number generator using the default fixed key of 8 zero words.",15,{"o":{"n":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to a user-provided value. This permits jumping arbitrarily ahead (or backwards) in the pseudorandom stream.",15,null],[11,"new","rand::reseeding","Create a new `ReseedingRng` with the given parameters.",0,{"i":[{"n":"r"},{"n":"u64"},{"n":"rsdr"}],"o":{"n":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been generated exceed the threshold.",0,null],[11,"new","rand::read","Create a new `ReadRng` from a `Read`.",17,{"i":[{"n":"r"}],"o":{"n":"readrng"}}],[11,"new_unseeded","rand","Creates a new XorShiftRng instance which is not seeded.",20,{"o":{"n":"xorshiftrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",18,{"o":{"g":["stdrng","error"],"n":"result"}}],[11,"new","rand::distributions::range","Create a new `Range` instance that samples uniformly from `[low, high)`. Panics if `low >= high`.",22,{"i":[{"n":"x"},{"n":"x"}],"o":{"n":"range"}}],[11,"new","rand::distributions::gamma","Construct an object representing the `Gamma(shape, scale)` distribution.",24,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"gamma"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",25,{"i":[{"n":"f64"}],"o":{"n":"chisquared"}}],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",30,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"fisherf"}}],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",27,{"i":[{"n":"f64"}],"o":{"n":"studentt"}}],[11,"new","rand::distributions::normal","Construct a new `Normal` distribution with the given mean and standard deviation.",23,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"normal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",29,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"lognormal"}}],[11,"new","rand::distributions::exponential","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",26,{"i":[{"n":"f64"}],"o":{"n":"exp"}}],[11,"new","rand::distributions","",31,{"o":{"n":"randsample"}}],[11,"new","","Create a new `WeightedChoice`.",28,null]],"paths":[[3,"ReseedingRng"],[8,"Reseeder"],[8,"Rng"],[8,"Rand"],[8,"SeedableRng"],[3,"Open01"],[3,"Closed01"],[8,"SampleRange"],[3,"StandardNormal"],[3,"Exp1"],[8,"Sample"],[8,"IndependentSample"],[3,"Weighted"],[3,"OsRng"],[3,"ReseedWithDefault"],[3,"ChaChaRng"],[3,"IsaacRng"],[3,"ReadRng"],[3,"StdRng"],[3,"Isaac64Rng"],[3,"XorShiftRng"],[3,"ThreadRng"],[3,"Range"],[3,"Normal"],[3,"Gamma"],[3,"ChiSquared"],[3,"Exp"],[3,"StudentT"],[3,"WeightedChoice"],[3,"LogNormal"],[3,"FisherF"],[3,"RandSample"],[3,"Generator"],[3,"AsciiGenerator"]]};
searchIndex["rand_core"] = {"doc":"Random number generation traits","items":[[3,"Error","rand_core","Error type of random number generators",null,null],[12,"kind","","The error kind",0,null],[12,"msg","","The error message",0,null],[4,"ErrorKind","","Error kind which can be matched over.",null,null],[13,"Unavailable","","Feature is not available; not recoverable.",1,null],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",1,null],[13,"Transient","","A transient failure which likely can be resolved or worked around.",1,null],[13,"NotReady","","Not ready yet: recommended to try again a little later.",1,null],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"errorkind"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"should_retry","","True if this kind of error may resolve itself on retry.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"should_wait","","True if we should retry but wait before retrying",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"description","","A description of this error kind",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new instance, with specified kind and a message.",0,{"i":[{"n":"errorkind"},{"n":"str"}],"o":{"n":"self"}}],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",0,{"i":[{"n":"errorkind"},{"n":"str"},{"n":"e"}],"o":{"n":"self"}}],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",0,{"i":[{"n":"self"}],"o":{"g":["box"],"n":"option"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",0,{"i":[{"n":"self"}],"o":{"g":["stderror"],"n":"option"}}],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",null,null],[12,"core","","The core part of the RNG, implementing the `generate` function.",2,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",null,null],[12,"core","","The core part of the RNG, implementing the `generate` function.",3,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers individually, but in blocks (typically `[u32; N]`). This technique is commonly used by cryptographic RNGs to improve performance.",null,null],[16,"Item","","Results element type, e.g. `u32`.",4,null],[16,"Results","","Results type. This is the 'block' an RNG implementing `BlockRngCore` generates, which will usually be an array like `[u32; 16]`.",4,null],[10,"generate","","Generate a new block of results.",4,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"blockrng"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",2,{"i":[{"n":"r"}],"o":{"n":"blockrng"}}],[11,"index","","Get the index into the result buffer.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",2,{"i":[{"n":"self"}]}],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"next_u32","","",2,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",2,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",2,null],[11,"try_fill_bytes","","",2,null],[11,"from_seed","","",2,null],[11,"from_rng","","",2,{"i":[{"n":"s"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"blockrng64"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",3,{"i":[{"n":"r"}],"o":{"n":"blockrng64"}}],[11,"index","","Get the index into the result buffer.",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",3,{"i":[{"n":"self"}]}],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",3,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"next_u32","","",3,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",3,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",3,null],[11,"try_fill_bytes","","",3,null],[11,"from_seed","","",3,null],[11,"from_rng","","",3,{"i":[{"n":"s"}],"o":{"g":["error"],"n":"result"}}],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,{"i":[{"n":"r"}],"o":{"n":"u64"}}],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.",null,null],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",null,null],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",null,null],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,{"i":[{"n":"r"}],"o":{"n":"u32"}}],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,{"i":[{"n":"r"}],"o":{"n":"u64"}}],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",null,null],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",null,null],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"next_u64","","Return the next random `u64`.",5,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[10,"fill_bytes","","Fill `dest` with random data.",5,null],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,null],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",6,null],[10,"from_seed","","Create a new PRNG using the given seed.",6,null],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,{"i":[{"n":"r"}],"o":{"g":["error"],"n":"result"}}],[11,"read","","",5,null]],"paths":[[3,"Error"],[4,"ErrorKind"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["regex"] = {"doc":"This crate provides a library for parsing, compiling, and executing regular expressions. Its syntax is similar to Perl-style regular expressions, but lacks a few features like look around and backreferences. In exchange, all searches execute in linear time with respect to the size of the regular expression and search text.","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Captures","","Captures represents a group of captured strings for a single match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups matching a particular regular expression.",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order in which they appear in the regex.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw offsets of each submatch.",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"Split","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[4,"Error","","An error that occurred during parsing or compiling a regular expression.",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The argument is the size limit imposed.",1,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,{"i":[{"n":"str"}],"o":{"n":"string"}}],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups matching a particular regular expression.",null,null],[3,"Split","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw offsets of each submatch.",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a single match.",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order in which they appear in the regex.",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a byte string.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,{"i":[{"n":"self"},{"n":"captures"},{"n":"vec"}]}],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,{"i":[{"n":"self"}],"o":{"g":["cow"],"n":"option"}}],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,{"i":[{"n":"self"}],"o":{"n":"replacerref"}}],[11,"clone","regex","",1,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",1,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",4,{"i":[{"n":"str"}],"o":{"n":"regexbuilder"}}],[11,"build","","Consume the builder and compile the regular expression.",4,{"i":[{"n":"self"}],"o":{"g":["regex","error"],"n":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"octal","","Whether to support octal syntax or not.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"regexbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"regexbuilder"}}],[11,"nest_limit","","Set the nesting limit for this parser.",4,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"regexbuilder"}}],[11,"new","regex","Create a new regular expression builder with the given pattern.",5,{"i":[{"n":"str"}],"o":{"n":"regexbuilder"}}],[11,"build","","Consume the builder and compile the regular expression.",5,{"i":[{"n":"self"}],"o":{"g":["regex","error"],"n":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"octal","","Whether to support octal syntax or not.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",5,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"regexbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"regexbuilder"}}],[11,"nest_limit","","Set the nesting limit for this parser.",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"regexbuilder"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",6,{"i":[{"n":"i"}],"o":{"n":"regexsetbuilder"}}],[11,"build","","Consume the builder and compile the regular expressions into a set.",6,{"i":[{"n":"self"}],"o":{"g":["regexset","error"],"n":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"octal","","Whether to support octal syntax or not.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",6,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"regexsetbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"regexsetbuilder"}}],[11,"nest_limit","","Set the nesting limit for this parser.",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"regexsetbuilder"}}],[11,"new","regex","Create a new regular expression builder with the given pattern.",7,{"i":[{"n":"i"}],"o":{"n":"regexsetbuilder"}}],[11,"build","","Consume the builder and compile the regular expressions into a set.",7,{"i":[{"n":"self"}],"o":{"g":["regexset","error"],"n":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"octal","","Whether to support octal syntax or not.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"regexsetbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",7,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"regexsetbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"regexsetbuilder"}}],[11,"nest_limit","","Set the nesting limit for this parser.",7,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"regexsetbuilder"}}],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,{"i":[{"n":"self"}],"o":{"g":["cow"],"n":"option"}}],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,{"i":[{"n":"self"}],"o":{"n":"replacerref"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"match"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"match"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"match"}],"o":{"n":"bool"}}],[11,"start","","Returns the starting byte offset of the match in the haystack.",8,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"as_bytes","","Returns the matched text.",8,null],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"regex"}}],[11,"fmt","","Shows the original regular expression.",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","Shows the original regular expression.",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","Attempts to parse a string into a regular expression",9,{"i":[{"n":"str"}],"o":{"g":["regex","error"],"n":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly to search, split or replace text in a string.",9,{"i":[{"n":"str"}],"o":{"g":["regex","error"],"n":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",9,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in `text`. If no match exists, then `None` is returned.",9,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in `text`, returning the start and end byte indices with respect to `text`.",9,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first match in `text`. Capture group `0` always corresponds to the entire match. If no match is found, then `None` is returned.",9,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched in `text`. This is operationally the same as `find_iter`, except it yields information about capturing group matches.",9,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the regular expression. Namely, each element of the iterator corresponds to text that isn't matched by the regular expression.",9,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited by a match of the regular expression. (A `limit` of `0` will return no substrings.) Namely, each element of the iterator corresponds to text that isn't matched by the regular expression. The remainder of the string that is not split will be the last element in the iterator.",9,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The replacement can be a regular byte string (where `$N` and `$name` are expanded to match capture groups) or a function that takes the matches' `Captures` and returns the replaced byte string.",9,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement provided. This is the same as calling `replacen` with `limit` set to `0`.",9,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the replacement provided. If `limit` is 0, then all non-overlapping matches are replaced.",9,null],[11,"shortest_match","","Returns the end location of a match in the text given.",9,null],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search at the given offset.",9,null],[11,"is_match_at","","Returns the same as is_match, but starts the search at the given offset.",9,null],[11,"find_at","","Returns the same as find, but starts the search at the given offset.",9,null],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations` instead of `Captures` in order to amortize allocations.",9,null],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search at the given offset and populates the capture locations given.",9,null],[11,"as_str","","Returns the original string of this regex.",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"capture_names","","Returns an iterator over the capture names.",9,{"i":[{"n":"self"}],"o":{"n":"capturenames"}}],[11,"captures_len","","Returns the number of captures.",9,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"capture_locations","","Returns an empty set of capture locations that can be reused in multiple calls to `captures_read` or `captures_read_at`.",9,{"i":[{"n":"self"}],"o":{"n":"capturelocations"}}],[11,"next","","",10,{"i":[{"n":"self"}],"o":{"g":["match"],"n":"option"}}],[11,"next","","",11,{"i":[{"n":"self"}],"o":{"g":["captures"],"n":"option"}}],[11,"next","","",12,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",13,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",14,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"option"}}],[11,"size_hint","","",14,null],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"capturelocations"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get","","Returns the start and end positions of the Nth capture group. Returns `None` if `i` is not a valid capture group or if the capture group did not match anything. The positions returned are always byte indices with respect to the original string matched.",15,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"len","","Returns the total number of capturing groups.",15,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"get","","Returns the match associated with the capture group at index `i`. If `i` does not correspond to a capture group, or if the capture group did not participate in the match, then `None` is returned.",16,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["match"],"n":"option"}}],[11,"name","","Returns the match for the capture group named `name`. If `name` isn't a valid capture group or didn't match anything, then `None` is returned.",16,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["match"],"n":"option"}}],[11,"iter","","An iterator that yields all capturing matches in the order in which they appear in the regex. If a particular capture group didn't participate in the match, then `None` is yielded for that capture.",16,{"i":[{"n":"self"}],"o":{"n":"subcapturematches"}}],[11,"expand","","Expands all instances of `$name` in `replacement` to the corresponding capture group `name`, and writes them to the `dst` buffer given.",16,null],[11,"len","","Returns the number of captured groups.",16,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"index","","",16,null],[11,"index","","",16,null],[11,"next","","",17,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"option"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"replace_append","","",18,{"i":[{"n":"self"},{"n":"captures"},{"n":"vec"}]}],[11,"no_expansion","","",18,{"i":[{"n":"self"}],"o":{"g":["cow"],"n":"option"}}],[11,"replace_append","","",2,{"i":[{"n":"self"},{"n":"captures"},{"n":"vec"}]}],[11,"no_expansion","","",2,{"i":[{"n":"self"}],"o":{"g":["cow"],"n":"option"}}],[11,"clone","regex","",19,{"i":[{"n":"self"}],"o":{"n":"regexset"}}],[11,"new","","Create a new regex set with the given regular expressions.",19,{"i":[{"n":"i"}],"o":{"g":["regexset","error"],"n":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches the text given.",19,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"matches","","Returns the set of regular expressions that match in the given text.",19,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"setmatches"}}],[11,"len","","Returns the total number of regular expressions in this set.",19,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"setmatches"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"matched_any","","Whether this set contains any matches.",20,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"matched","","Whether the regex at the given index matched.",20,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"len","","The total number of regexes in the set that created these matches.",20,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"iter","","Returns an iterator over indexes in the regex that matched.",20,{"i":[{"n":"self"}],"o":{"n":"setmatchesiter"}}],[11,"into_iter","","",20,null],[11,"next","","",21,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"size_hint","","",21,null],[11,"next_back","","",21,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"setmatchesiter"}}],[11,"next","","",22,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"size_hint","","",22,null],[11,"next_back","","",22,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","regex::bytes","",23,{"i":[{"n":"self"}],"o":{"n":"regexset"}}],[11,"new","","Create a new regex set with the given regular expressions.",23,{"i":[{"n":"i"}],"o":{"g":["regexset","error"],"n":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches the text given.",23,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",23,null],[11,"len","","Returns the total number of regular expressions in this set.",23,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"setmatches"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"matched_any","","Whether this set contains any matches.",24,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"matched","","Whether the regex at the given index matched.",24,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"len","","The total number of regexes in the set that created these matches.",24,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"iter","","Returns an iterator over indexes in the regex that matched.",24,{"i":[{"n":"self"}],"o":{"n":"setmatchesiter"}}],[11,"into_iter","","",24,null],[11,"next","","",25,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"size_hint","","",25,null],[11,"next_back","","",25,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"setmatchesiter"}}],[11,"next","","",26,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"size_hint","","",26,null],[11,"next_back","","",26,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","regex","",27,{"i":[{"n":"self"}],"o":{"n":"match"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"match"}],"o":{"n":"bool"}}],[11,"ne","","",27,{"i":[{"n":"self"},{"n":"match"}],"o":{"n":"bool"}}],[11,"start","","Returns the starting byte offset of the match in the haystack.",27,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"end","","Returns the ending byte offset of the match in the haystack.",27,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"as_str","","Returns the matched text.",27,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"regex"}}],[11,"fmt","","Shows the original regular expression.",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","Shows the original regular expression.",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","Attempts to parse a string into a regular expression",28,{"i":[{"n":"str"}],"o":{"g":["regex","error"],"n":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly to search, split or replace text in a string.",28,{"i":[{"n":"str"}],"o":{"g":["regex","error"],"n":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",28,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"find","","Returns the start and end byte range of the leftmost-first match in `text`. If no match exists, then `None` is returned.",28,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["match"],"n":"option"}}],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in `text`, returning the start and end byte indices with respect to `text`.",28,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"matches"}}],[11,"captures","","Returns the capture groups corresponding to the leftmost-first match in `text`. Capture group `0` always corresponds to the entire match. If no match is found, then `None` is returned.",28,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["captures"],"n":"option"}}],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched in `text`. This is operationally the same as `find_iter`, except it yields information about capturing group matches.",28,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"capturematches"}}],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the regular expression. Namely, each element of the iterator corresponds to text that isn't matched by the regular expression.",28,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"split"}}],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited by a match of the regular expression. (A `limit` of `0` will return no substrings.) Namely, each element of the iterator corresponds to text that isn't matched by the regular expression. The remainder of the string that is not split will be the last element in the iterator.",28,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"}],"o":{"n":"splitn"}}],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The replacement can be a regular string (where `$N` and `$name` are expanded to match capture groups) or a function that takes the matches' `Captures` and returns the replaced string.",28,{"i":[{"n":"self"},{"n":"str"},{"n":"r"}],"o":{"g":["str"],"n":"cow"}}],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement provided. This is the same as calling `replacen` with `limit` set to `0`.",28,{"i":[{"n":"self"},{"n":"str"},{"n":"r"}],"o":{"g":["str"],"n":"cow"}}],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the replacement provided. If `limit` is 0, then all non-overlapping matches are replaced.",28,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"r"}],"o":{"g":["str"],"n":"cow"}}],[11,"shortest_match","","Returns the end location of a match in the text given.",28,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["usize"],"n":"option"}}],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search at the given offset.",28,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"}],"o":{"g":["usize"],"n":"option"}}],[11,"is_match_at","","Returns the same as is_match, but starts the search at the given offset.",28,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"find_at","","Returns the same as find, but starts the search at the given offset.",28,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"}],"o":{"g":["match"],"n":"option"}}],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations` instead of `Captures` in order to amortize allocations.",28,{"i":[{"n":"self"},{"n":"capturelocations"},{"n":"str"}],"o":{"g":["match"],"n":"option"}}],[11,"captures_read_at","","Returns the same as captures, but starts the search at the given offset and populates the capture locations given.",28,{"i":[{"n":"self"},{"n":"capturelocations"},{"n":"str"},{"n":"usize"}],"o":{"g":["match"],"n":"option"}}],[11,"as_str","","Returns the original string of this regex.",28,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"capture_names","","Returns an iterator over the capture names.",28,{"i":[{"n":"self"}],"o":{"n":"capturenames"}}],[11,"captures_len","","Returns the number of captures.",28,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"capture_locations","","Returns an empty set of capture locations that can be reused in multiple calls to `captures_read` or `captures_read_at`.",28,{"i":[{"n":"self"}],"o":{"n":"capturelocations"}}],[11,"next","","",29,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"option"}}],[11,"size_hint","","",29,null],[11,"next","","",30,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"next","","",31,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"capturelocations"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get","","Returns the start and end positions of the Nth capture group. Returns `None` if `i` is not a valid capture group or if the capture group did not match anything. The positions returned are always byte indices with respect to the original string matched.",32,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"len","","Returns the total number of capturing groups.",32,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"get","","Returns the match associated with the capture group at index `i`. If `i` does not correspond to a capture group, or if the capture group did not participate in the match, then `None` is returned.",33,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["match"],"n":"option"}}],[11,"name","","Returns the match for the capture group named `name`. If `name` isn't a valid capture group or didn't match anything, then `None` is returned.",33,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["match"],"n":"option"}}],[11,"iter","","An iterator that yields all capturing matches in the order in which they appear in the regex. If a particular capture group didn't participate in the match, then `None` is yielded for that capture.",33,{"i":[{"n":"self"}],"o":{"n":"subcapturematches"}}],[11,"expand","","Expands all instances of `$name` in `replacement` to the corresponding capture group `name`, and writes them to the `dst` buffer given.",33,{"i":[{"n":"self"},{"n":"str"},{"n":"string"}]}],[11,"len","","Returns the number of captured groups.",33,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"index","","",33,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"str"}}],[11,"index","","",33,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"str"}}],[11,"next","","",34,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"option"}}],[11,"next","","",35,{"i":[{"n":"self"}],"o":{"g":["captures"],"n":"option"}}],[11,"next","","",36,{"i":[{"n":"self"}],"o":{"g":["match"],"n":"option"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"replace_append","","",37,{"i":[{"n":"self"},{"n":"captures"},{"n":"string"}]}],[11,"no_expansion","","",37,{"i":[{"n":"self"}],"o":{"g":["cow"],"n":"option"}}],[11,"replace_append","","",0,{"i":[{"n":"self"},{"n":"captures"},{"n":"string"}]}],[11,"no_expansion","","",0,{"i":[{"n":"self"}],"o":{"g":["cow"],"n":"option"}}],[8,"Replacer","","Replacer describes types that can be used to replace matches in a string.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",38,{"i":[{"n":"self"},{"n":"captures"},{"n":"string"}]}],[11,"no_expansion","","Return a fixed unchanging replacement string.",38,{"i":[{"n":"self"}],"o":{"g":["cow"],"n":"option"}}],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",38,{"i":[{"n":"self"}],"o":{"n":"replacerref"}}],[11,"no_expansion","","Return a fixed unchanging replacement string.",38,{"i":[{"n":"self"}],"o":{"g":["cow"],"n":"option"}}],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",38,{"i":[{"n":"self"}],"o":{"n":"replacerref"}}]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"CaptureLocations"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Match"],[3,"Regex"],[3,"CaptureNames"],[3,"Split"],[3,"SplitN"],[3,"CaptureLocations"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"CaptureMatches"],[3,"Matches"],[3,"ReplacerRef"],[8,"Replacer"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a robust regular expression parser.","items":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[4,"Error","","This error type encompasses any error that can be returned by this crate.",null,null],[13,"Parse","","An error that occurred while translating concrete syntax into abstract syntax (AST).",0,null],[13,"Translate","","An error that occurred while translating abstract syntax into a high level intermediate representation (HIR).",0,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,{"i":[{"n":"str"}],"o":{"n":"string"}}],[5,"escape_into","","Escapes all meta characters in `text` and writes the result into `buf`.",null,{"i":[{"n":"str"},{"n":"string"}]}],[5,"is_meta_character","","Returns true if the give character has significance in a regex.",null,{"i":[{"n":"char"}],"o":{"n":"bool"}}],[5,"is_word_character","","Returns true if and only if the given character is a Unicode word character.",null,{"i":[{"n":"char"}],"o":{"n":"bool"}}],[5,"is_word_byte","","Returns true if and only if the given character is an ASCII word character.",null,{"i":[{"n":"u8"}],"o":{"n":"bool"}}],[0,"ast","","Defines an abstract syntax for regular expressions.",null,null],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression into an abstract syntax tree.",null,null],[3,"Span","","Span represents the position information of a single AST item.",null,null],[12,"start","","The start byte offset.",1,null],[12,"end","","The end byte offset.",1,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at `0` from the beginning of the regular expression pattern string.",2,null],[12,"line","","The line number, starting at `1`.",2,null],[12,"column","","The approximate column number, starting at `1`.",2,null],[3,"WithComments","","An abstract syntax tree for a singular expression along with comments found.",null,null],[12,"ast","","The actual ast.",3,null],[12,"comments","","All comments found in the original regular expression.",3,null],[3,"Comment","","A comment from a regular expression with an associated span.",null,null],[12,"span","","The span of this comment, including the beginning `#` and ending `\\n`.",4,null],[12,"comment","","The comment text, starting with the first character following the `#` and ending with the last character preceding the `\\n`.",4,null],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",5,null],[12,"asts","","The alternate regular expressions.",5,null],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",6,null],[12,"asts","","The concatenation regular expressions.",6,null],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",7,null],[12,"kind","","The kind of this literal.",7,null],[12,"c","","The Unicode scalar value corresponding to this literal.",7,null],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",8,null],[12,"kind","","The kind of Perl class.",8,null],[12,"negated","","Whether the class is negated or not. e.g., `\\d` is not negated but `\\D` is.",8,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",9,null],[12,"kind","","The kind of ASCII class.",9,null],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]` is not negated but `[[:^alpha:]]` is.",9,null],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",10,null],[12,"negated","","Whether this class is negated or not.",10,null],[12,"kind","","The kind of Unicode class.",10,null],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",null,null],[12,"span","","The span of this class.",11,null],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not negated but `[^a]` is.",11,null],[12,"kind","","The type of this set. A set is either a normal union of things, e.g., `[abc]` or a result of applying set operations, e.g., `[\\pL--c]`.",11,null],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",12,null],[12,"start","","The start of this range.",12,null],[12,"end","","The end of this range.",12,null],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the `a-z0-9` in `[^a-z0-9]`",13,null],[12,"items","","The sequence of items that make up this union.",13,null],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in `[a-z--h-p]`.",14,null],[12,"kind","","The type of this set operation.",14,null],[12,"lhs","","The left hand side of the operation.",14,null],[12,"rhs","","The right hand side of the operation.",14,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",15,null],[12,"kind","","The assertion kind, e.g., `\\b` or `^`.",15,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",16,null],[12,"op","","The actual operation.",16,null],[12,"greedy","","Whether this operation was applied greedily or not.",16,null],[12,"ast","","The regular expression under repetition.",16,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like `+`, `*?` and `{m,n}`.",17,null],[12,"kind","","The type of operation.",17,null],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",18,null],[12,"kind","","The kind of this group.",18,null],[12,"ast","","The regular expression in this group.",18,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",19,null],[12,"name","","The capture name.",19,null],[12,"index","","The capture index.",19,null],[3,"SetFlags","","A group of flags that is not applied to a particular regular expression.",null,null],[12,"span","","The span of these flags, including the grouping parentheses.",20,null],[12,"flags","","The actual sequence of flags.",20,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",21,null],[12,"items","","A sequence of flag items. Each item is either a flag or a negation operator.",21,null],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",22,null],[12,"kind","","The kind of this item.",22,null],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class set.",23,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid range is any range where the start is greater than the end.",23,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class. Range boundaries must be a single literal codepoint, but this error indicates that something else was found, such as a nested class.",23,null],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,null],[13,"DecimalEmpty","","An empty decimal number was given where one was expected.",23,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode scalar value.",23,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,null],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position points to the duplicate flag.",23,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error position points to the duplicate negation operator.",23,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture name. The error position itself points to the duplicate occurrence.",23,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name. This includes errors where the first character is a digit (even though subsequent characters are allowed to be digits).",23,null],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,null],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,null],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the limit configured in the parser.",23,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is invalid. The range is invalid if the start is greater than the end.",23,null],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing sub-expression. This occurs, for example, in the regex consisting of just a `*` or even `(?i)*`. It is, however, possible to create a repetition operating on an empty sub-expression. For example, `()*` is still considered valid.",23,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced when an octal escape is used. The octal escape is assumed to be an invocation of a backreference, which is the common case.",23,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE's look-around is used, this error is returned. Some example syntaxes that are rejected include, but are not necessarily limited to, `(?=re)`, `(?!re)`, `(?<=re)` and `(?<!re)`. Note that all of these syntaxes are otherwise invalid; this error is used to improve the user experience.",23,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",24,null],[13,"Flags","","A set of flags, e.g., `(?is)`.",24,null],[13,"Literal","","A single character literal, which includes escape sequences.",24,null],[13,"Dot","","The \"any character\" class.",24,null],[13,"Assertion","","A single zero-width assertion.",24,null],[13,"Class","","A single character class. This includes all forms of character classes except for `.`. e.g., `\\d`, `\\pN`, `[a-z]` and `[[:alpha:]]`.",24,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular expression.",24,null],[13,"Group","","A grouped regular expression.",24,null],[13,"Alternation","","An alternation of regular expressions.",24,null],[13,"Concat","","A concatenation of regular expressions.",24,null],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",25,null],[13,"Punctuation","","The literal is written as an escape because it is punctuation, e.g., `\\*` or `\\[`.",25,null],[13,"Octal","","The literal is written as an octal escape, e.g., `\\141`.",25,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number of digits depending on the type of the escape, e.g., `\\x61` or or `\\u0061` or `\\U00000061`.",25,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed number of digits. The only restriction is that the bracketed hex code must refer to a valid Unicode scalar value.",25,null],[13,"Special","","The literal is written as a specially recognized escape, e.g., `\\f` or `\\n`.",25,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled `\\a` (`\\x07`).",26,null],[13,"FormFeed","","Form feed, spelled `\\f` (`\\x0C`).",26,null],[13,"Tab","","Tab, spelled `\\t` (`\\x09`).",26,null],[13,"LineFeed","","Line feed, spelled `\\n` (`\\x0A`).",26,null],[13,"CarriageReturn","","Carriage return, spelled `\\r` (`\\x0D`).",26,null],[13,"VerticalTab","","Vertical tab, spelled `\\v` (`\\x0B`).",26,null],[13,"Space","","Space, spelled `\\` (`\\x20`). Note that this can only appear when parsing in verbose mode.",26,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A `\\x` prefix. When used without brackets, this form is limited to two digits.",27,null],[13,"UnicodeShort","","A `\\u` prefix. When used without brackets, this form is limited to four digits.",27,null],[13,"UnicodeLong","","A `\\U` prefix. When used without brackets, this form is limited to eight digits.",27,null],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",28,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",28,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or more character ranges and/or zero or more nested classes. e.g., `[a-zA-Z\\pL]`.",28,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",29,null],[13,"Space","","Whitespace.",29,null],[13,"Word","","Word characters.",29,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","`[0-9A-Za-z]`",30,null],[13,"Alpha","","`[A-Za-z]`",30,null],[13,"Ascii","","`[\\x00-\\x7F]`",30,null],[13,"Blank","","`[ \\t]`",30,null],[13,"Cntrl","","`[\\x00-\\x1F\\x7F]`",30,null],[13,"Digit","","`[0-9]`",30,null],[13,"Graph","","`[!-~]`",30,null],[13,"Lower","","`[a-z]`",30,null],[13,"Print","","`[ -~]`",30,null],[13,"Punct","","`[!-/:-@\\[-`{-~]`",30,null],[13,"Space","","`[\\t\\n\\v\\f\\r ]`",30,null],[13,"Upper","","`[A-Z]`",30,null],[13,"Word","","`[0-9A-Za-z_]`",30,null],[13,"Xdigit","","`[0-9A-Fa-f]`",30,null],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\pN`.",31,null],[13,"Named","","A binary property, general category or script. The string may be empty.",31,null],[13,"NamedValue","","A property name and an associated value.",31,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with `value`.",31,null],[12,"name","","The property name (which may be empty).",31,null],[12,"value","","The property value (which may be empty).",31,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g., `\\p{scx=Katakana}`.",32,null],[13,"Colon","","A property set to a specific value using a colon, e.g., `\\p{scx:Katakana}`.",32,null],[13,"NotEqual","","A property that isn't a particular value, e.g., `\\p{scx!=Katakana}`.",32,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested character class or a union of items.",33,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",33,null],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",34,null],[13,"Literal","","A single literal.",34,null],[13,"Range","","A range between two literals.",34,null],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",34,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",34,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or more character ranges and/or zero or more nested classes. e.g., `[a-zA-Z\\pL]`.",34,null],[13,"Union","","A union of items.",34,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,null],[13,"Difference","","The difference of two sets, e.g., `\\pN--[0-9]`.",35,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric difference is the set of elements belonging to one but not both sets. e.g., `[\\pL~~[:ascii:]]`.",35,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","`^`",36,null],[13,"EndLine","","`$`",36,null],[13,"StartText","","`\\A`",36,null],[13,"EndText","","`\\z`",36,null],[13,"WordBoundary","","`\\b`",36,null],[13,"NotWordBoundary","","`\\B`",36,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","`?`",37,null],[13,"ZeroOrMore","","`*`",37,null],[13,"OneOrMore","","`+`",37,null],[13,"Range","","`{m,n}`",37,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","`{m}`",38,null],[13,"AtLeast","","`{m,}`",38,null],[13,"Bounded","","`{m,n}`",38,null],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","`(a)`",39,null],[13,"CaptureName","","`(?P<name>a)`",39,null],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",39,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in the enclosing group.",40,null],[13,"Flag","","A single flag in a group.",40,null],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","`i`",41,null],[13,"MultiLine","","`m`",41,null],[13,"DotMatchesNewLine","","`s`",41,null],[13,"SwapGreed","","`U`",41,null],[13,"Unicode","","`u`",41,null],[13,"IgnoreWhitespace","","`x`",41,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack space.",null,{"i":[{"n":"ast"},{"n":"v"}],"o":{"n":"result"}}],[0,"parse","","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[3,"Parser","","A regular expression parser.",null,null],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"parserbuilder"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",42,{"o":{"n":"parserbuilder"}}],[11,"new","","Create a new parser builder with a default configuration.",42,{"o":{"n":"parserbuilder"}}],[11,"build","","Build a parser from this configuration with the given pattern.",42,{"i":[{"n":"self"}],"o":{"n":"parser"}}],[11,"nest_limit","","Set the nesting limit for this parser.",42,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"parserbuilder"}}],[11,"octal","","Whether to support octal syntax or not.",42,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parserbuilder"}}],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",42,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parserbuilder"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"parser"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new parser with a default configuration.",43,{"o":{"n":"parser"}}],[11,"parse","","Parse the regular expression into an abstract syntax tree.",43,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["ast","error"],"n":"result"}}],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax tree with all of the comments found in the pattern.",43,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["withcomments","error"],"n":"result"}}],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new printer.",44,{"o":{"n":"printer"}}],[11,"print","","Print the given `Ast` to the given writer. The writer must implement `fmt::Write`. Typical implementations of `fmt::Write` that can be used here are a `fmt::Formatter` (which is available in `fmt::Display` implementations) or a `&mut String`.",44,{"i":[{"n":"self"},{"n":"ast"},{"n":"w"}],"o":{"n":"result"}}],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in depth first order.",null,null],[16,"Output","","The result of visiting an AST.",45,null],[16,"Err","","An error that visiting an AST might return.",45,null],[10,"finish","","All implementors of `Visitor` must provide a `finish` method, which yields the result of visiting the AST or an error.",45,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start","","This method is called before beginning traversal of the AST.",45,{"i":[{"n":"self"}]}],[11,"visit_pre","","This method is called on an `Ast` before descending into child `Ast` nodes.",45,{"i":[{"n":"self"},{"n":"ast"}],"o":{"n":"result"}}],[11,"visit_post","","This method is called on an `Ast` after descending all of its child `Ast` nodes.",45,{"i":[{"n":"self"},{"n":"ast"}],"o":{"n":"result"}}],[11,"visit_alternation_in","","This method is called between child nodes of an `Alternation`.",45,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before descending into child nodes.",45,{"i":[{"n":"self"},{"n":"classsetitem"}],"o":{"n":"result"}}],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after descending into child nodes.",45,{"i":[{"n":"self"},{"n":"classsetitem"}],"o":{"n":"result"}}],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before descending into child nodes.",45,{"i":[{"n":"self"},{"n":"classsetbinaryop"}],"o":{"n":"result"}}],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after descending into child nodes.",45,{"i":[{"n":"self"},{"n":"classsetbinaryop"}],"o":{"n":"result"}}],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand child nodes of a `ClassSetBinaryOp`.",45,{"i":[{"n":"self"},{"n":"classsetbinaryop"}],"o":{"n":"result"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ne","","",46,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"kind","","Return the type of this error.",46,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"pattern","","The original pattern string in which this error occurred.",46,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"span","","Return the span at which this error occurred.",46,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some errors that benefit from being able to point to two locations in the original regular expression. For example, \"duplicate\" errors will have the main error position set to the duplicate occurrence while its auxiliary span will be set to the initial occurrence.",46,{"i":[{"n":"self"}],"o":{"g":["span"],"n":"option"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",23,{"i":[{"n":"self"},{"n":"errorkind"}],"o":{"n":"bool"}}],[11,"ne","","",23,{"i":[{"n":"self"},{"n":"errorkind"}],"o":{"n":"bool"}}],[11,"description","","",46,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"span"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"span"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"span"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"span"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"position"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"position"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"position"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"position"}],"o":{"g":["ordering"],"n":"option"}}],[11,"new","","Create a new span with the given positions.",1,{"i":[{"n":"position"},{"n":"position"}],"o":{"n":"span"}}],[11,"splat","","Create a new span using the given position as the start and end.",1,{"i":[{"n":"position"}],"o":{"n":"span"}}],[11,"with_start","","Create a new span by replacing the starting the position with the one given.",1,{"i":[{"n":"self"},{"n":"position"}],"o":{"n":"span"}}],[11,"with_end","","Create a new span by replacing the ending the position with the one given.",1,{"i":[{"n":"self"},{"n":"position"}],"o":{"n":"span"}}],[11,"is_one_line","","Returns true if and only if this span occurs on a single line.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_empty","","Returns true if and only if this span is empty. That is, it points to a single position in the concrete syntax of a regular expression.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"new","","Create a new position with the given information.",2,{"i":[{"n":"usize"},{"n":"usize"},{"n":"usize"}],"o":{"n":"position"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"withcomments"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"withcomments"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"withcomments"}],"o":{"n":"bool"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"comment"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"comment"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"comment"}],"o":{"n":"bool"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"ast"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",24,{"i":[{"n":"self"},{"n":"ast"}],"o":{"n":"bool"}}],[11,"ne","","",24,{"i":[{"n":"self"},{"n":"ast"}],"o":{"n":"bool"}}],[11,"span","","Return the span of this abstract syntax tree.",24,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"is_empty","","Return true if and only if this Ast is empty.",24,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"alternation"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"alternation"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"alternation"}],"o":{"n":"bool"}}],[11,"into_ast","","Return this alternation as an AST.",5,{"i":[{"n":"self"}],"o":{"n":"ast"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"concat"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"concat"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"concat"}],"o":{"n":"bool"}}],[11,"into_ast","","Return this concatenation as an AST.",6,{"i":[{"n":"self"}],"o":{"n":"ast"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"literal"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"literal"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"literal"}],"o":{"n":"bool"}}],[11,"byte","","If this literal was written as a `\\x` hex escape, then this returns the corresponding byte value. Otherwise, this returns `None`.",7,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"literalkind"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",25,{"i":[{"n":"self"},{"n":"literalkind"}],"o":{"n":"bool"}}],[11,"ne","","",25,{"i":[{"n":"self"},{"n":"literalkind"}],"o":{"n":"bool"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"specialliteralkind"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",26,{"i":[{"n":"self"},{"n":"specialliteralkind"}],"o":{"n":"bool"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"hexliteralkind"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"hexliteralkind"}],"o":{"n":"bool"}}],[11,"digits","","The number of digits that must be used with this literal form when used without brackets. When used with brackets, there is no restriction on the number of digits.",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"class"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"class"}],"o":{"n":"bool"}}],[11,"ne","","",28,{"i":[{"n":"self"},{"n":"class"}],"o":{"n":"bool"}}],[11,"span","","Return the span of this character class.",28,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"classperl"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"classperl"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"classperl"}],"o":{"n":"bool"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"classperlkind"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",29,{"i":[{"n":"self"},{"n":"classperlkind"}],"o":{"n":"bool"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"classascii"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"classascii"}],"o":{"n":"bool"}}],[11,"ne","","",9,{"i":[{"n":"self"},{"n":"classascii"}],"o":{"n":"bool"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"classasciikind"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",30,{"i":[{"n":"self"},{"n":"classasciikind"}],"o":{"n":"bool"}}],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the given name.",30,{"i":[{"n":"str"}],"o":{"g":["classasciikind"],"n":"option"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"classunicode"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"classunicode"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"classunicode"}],"o":{"n":"bool"}}],[11,"is_negated","","Returns true if this class has been negated.",10,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"classunicodekind"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",31,{"i":[{"n":"self"},{"n":"classunicodekind"}],"o":{"n":"bool"}}],[11,"ne","","",31,{"i":[{"n":"self"},{"n":"classunicodekind"}],"o":{"n":"bool"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"classunicodeopkind"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",32,{"i":[{"n":"self"},{"n":"classunicodeopkind"}],"o":{"n":"bool"}}],[11,"is_equal","","Whether the op is an equality op or not.",32,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"classbracketed"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"classbracketed"}],"o":{"n":"bool"}}],[11,"ne","","",11,{"i":[{"n":"self"},{"n":"classbracketed"}],"o":{"n":"bool"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"classset"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",33,{"i":[{"n":"self"},{"n":"classset"}],"o":{"n":"bool"}}],[11,"ne","","",33,{"i":[{"n":"self"},{"n":"classset"}],"o":{"n":"bool"}}],[11,"union","","Build a set from a union.",33,{"i":[{"n":"classsetunion"}],"o":{"n":"classset"}}],[11,"span","","Return the span of this character class set.",33,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"classsetitem"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",34,{"i":[{"n":"self"},{"n":"classsetitem"}],"o":{"n":"bool"}}],[11,"ne","","",34,{"i":[{"n":"self"},{"n":"classsetitem"}],"o":{"n":"bool"}}],[11,"span","","Return the span of this character class set item.",34,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"classsetrange"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"classsetrange"}],"o":{"n":"bool"}}],[11,"ne","","",12,{"i":[{"n":"self"},{"n":"classsetrange"}],"o":{"n":"bool"}}],[11,"is_valid","","Returns true if and only if this character class range is valid.",12,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"classsetunion"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"classsetunion"}],"o":{"n":"bool"}}],[11,"ne","","",13,{"i":[{"n":"self"},{"n":"classsetunion"}],"o":{"n":"bool"}}],[11,"push","","Push a new item in this union.",13,{"i":[{"n":"self"},{"n":"classsetitem"}]}],[11,"into_item","","Return this union as a character class set item.",13,{"i":[{"n":"self"}],"o":{"n":"classsetitem"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"classsetbinaryop"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",14,{"i":[{"n":"self"},{"n":"classsetbinaryop"}],"o":{"n":"bool"}}],[11,"ne","","",14,{"i":[{"n":"self"},{"n":"classsetbinaryop"}],"o":{"n":"bool"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"classsetbinaryopkind"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",35,{"i":[{"n":"self"},{"n":"classsetbinaryopkind"}],"o":{"n":"bool"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"assertion"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"assertion"}],"o":{"n":"bool"}}],[11,"ne","","",15,{"i":[{"n":"self"},{"n":"assertion"}],"o":{"n":"bool"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"assertionkind"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",36,{"i":[{"n":"self"},{"n":"assertionkind"}],"o":{"n":"bool"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"repetition"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"repetition"}],"o":{"n":"bool"}}],[11,"ne","","",16,{"i":[{"n":"self"},{"n":"repetition"}],"o":{"n":"bool"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"repetitionop"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"repetitionop"}],"o":{"n":"bool"}}],[11,"ne","","",17,{"i":[{"n":"self"},{"n":"repetitionop"}],"o":{"n":"bool"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"repetitionkind"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",37,{"i":[{"n":"self"},{"n":"repetitionkind"}],"o":{"n":"bool"}}],[11,"ne","","",37,{"i":[{"n":"self"},{"n":"repetitionkind"}],"o":{"n":"bool"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"repetitionrange"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",38,{"i":[{"n":"self"},{"n":"repetitionrange"}],"o":{"n":"bool"}}],[11,"ne","","",38,{"i":[{"n":"self"},{"n":"repetitionrange"}],"o":{"n":"bool"}}],[11,"is_valid","","Returns true if and only if this repetition range is valid.",38,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"group"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"group"}],"o":{"n":"bool"}}],[11,"ne","","",18,{"i":[{"n":"self"},{"n":"group"}],"o":{"n":"bool"}}],[11,"flags","","If this group is non-capturing, then this returns the (possibly empty) set of flags. Otherwise, `None` is returned.",18,{"i":[{"n":"self"}],"o":{"g":["flags"],"n":"option"}}],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"capture_index","","Returns the capture index of this group, if this is a capturing group.",18,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"groupkind"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",39,{"i":[{"n":"self"},{"n":"groupkind"}],"o":{"n":"bool"}}],[11,"ne","","",39,{"i":[{"n":"self"},{"n":"groupkind"}],"o":{"n":"bool"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"capturename"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",19,{"i":[{"n":"self"},{"n":"capturename"}],"o":{"n":"bool"}}],[11,"ne","","",19,{"i":[{"n":"self"},{"n":"capturename"}],"o":{"n":"bool"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"setflags"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"setflags"}],"o":{"n":"bool"}}],[11,"ne","","",20,{"i":[{"n":"self"},{"n":"setflags"}],"o":{"n":"bool"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"flags"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"ne","","",21,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"add_item","","Add the given item to this sequence of flags.",21,{"i":[{"n":"self"},{"n":"flagsitem"}],"o":{"g":["usize"],"n":"option"}}],[11,"flag_state","","Returns the state of the given flag in this set.",21,{"i":[{"n":"self"},{"n":"flag"}],"o":{"g":["bool"],"n":"option"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"flagsitem"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"flagsitem"}],"o":{"n":"bool"}}],[11,"ne","","",22,{"i":[{"n":"self"},{"n":"flagsitem"}],"o":{"n":"bool"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"flagsitemkind"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",40,{"i":[{"n":"self"},{"n":"flagsitemkind"}],"o":{"n":"bool"}}],[11,"ne","","",40,{"i":[{"n":"self"},{"n":"flagsitemkind"}],"o":{"n":"bool"}}],[11,"is_negation","","Returns true if and only if this item is a negation operator.",40,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"flag"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",41,{"i":[{"n":"self"},{"n":"flag"}],"o":{"n":"bool"}}],[11,"drop","","",24,{"i":[{"n":"self"}]}],[11,"drop","","",33,{"i":[{"n":"self"}]}],[11,"clone","regex_syntax","",0,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"error"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"error"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"hir","","Defines a high-level intermediate representation for regular expressions.",null,null],[3,"Error","regex_syntax::hir","An error that can occur while translating an `Ast` to a `Hir`.",null,null],[3,"Hir","","A high-level intermediate representation (HIR) for a regular expression.",null,null],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar values.",null,null],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where one byte corresponds to one character).",null,null],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",null,null],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then the kind contains the capture group index (and the name, if it is a named group).",47,null],[12,"hir","","The expression inside the capturing group, which may be empty.",47,null],[3,"Repetition","","The high-level intermediate representation of a repetition operator.",null,null],[12,"kind","","The kind of this repetition operator.",48,null],[12,"greedy","","Whether this repetition operator is greedy or not. A greedy operator will match as much as it can. A non-greedy operator will match as little as it can.",48,null],[12,"hir","","The expression being repeated.",48,null],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when Unicode support is disabled. For example `(?-u:\\pL)` would trigger this error.",49,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could match a byte sequence that isn't UTF-8 and `allow_invalid_utf8` was disabled.",49,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name could not be found.",49,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value could not be found.",49,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a character class that is empty.",49,null],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything, including the empty string.",50,null],[13,"Literal","","A single literal character that matches exactly this character.",50,null],[13,"Class","","A single character class that matches any of the characters in the class. A class can either consist of Unicode scalar values as characters, or it can use bytes.",50,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has zero length.",50,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode aware. A word boundary assertion match always has zero length.",50,null],[13,"Repetition","","A repetition operation applied to a child expression.",50,null],[13,"Group","","A possibly capturing group, which contains a child expression.",50,null],[13,"Concat","","A concatenation of expressions. A concatenation always has at least two child expressions.",50,null],[13,"Alternation","","An alternation of expressions. An alternation always has at least two child expressions.",50,null],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",51,null],[13,"Byte","","A single character represented by an arbitrary byte.",51,null],[4,"Class","","The high-level intermediate representation of a character class.",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",52,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one byte per character).",52,null],[4,"Anchor","","The high-level intermediate representation for an anchor assertion.",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text. Specifically, this matches at the starting position of the input, or at the position immediately following a `\\n` character.",53,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically, this matches at the end position of the input, or at the position immediately preceding a `\\n` character.",53,null],[13,"StartText","","Match the beginning of text. Specifically, this matches at the starting position of the input.",53,null],[13,"EndText","","Match the end of text. Specifically, this matches at the ending position of the input.",53,null],[4,"WordBoundary","","The high-level intermediate representation for a word-boundary assertion.",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches a position where the left adjacent character and right adjacent character correspond to a word and non-word or a non-word and word character.",54,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",54,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a position where the left adjacent character and right adjacent character correspond to a word and non-word or a non-word and word character.",54,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",54,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",55,null],[13,"CaptureName","","A named capturing group.",55,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,null],[12,"index","","The capture index of the group.",55,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",55,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",56,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",56,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",56,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",56,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",57,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",57,null],[13,"Bounded","","Matches a sub-expression at least `m` times and at most `n` times.",57,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack space.",null,{"i":[{"n":"hir"},{"n":"v"}],"o":{"n":"result"}}],[0,"literal","","Provides routines for extracting literal prefixes and suffixes from an `Hir`.",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular expression.",null,null],[3,"Literal","","A single member of a set of literals extracted from a regular expression.",null,null],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"literals"}}],[11,"eq","","",58,{"i":[{"n":"self"},{"n":"literals"}],"o":{"n":"bool"}}],[11,"ne","","",58,{"i":[{"n":"self"},{"n":"literals"}],"o":{"n":"bool"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"literal"}}],[11,"cmp","","",59,{"i":[{"n":"self"},{"n":"literal"}],"o":{"n":"ordering"}}],[11,"empty","","Returns a new empty set of literals using default limits.",58,{"o":{"n":"literals"}}],[11,"prefixes","","Returns a set of literal prefixes extracted from the given `Hir`.",58,{"i":[{"n":"hir"}],"o":{"n":"literals"}}],[11,"suffixes","","Returns a set of literal suffixes extracted from the given `Hir`.",58,{"i":[{"n":"hir"}],"o":{"n":"literals"}}],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",58,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",58,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"literals"}}],[11,"limit_class","","Get the character class size limit for this set.",58,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",58,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"literals"}}],[11,"literals","","Returns the set of literals as a slice. Its order is unspecified.",58,null],[11,"min_len","","Returns the length of the smallest literal.",58,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"all_complete","","Returns true if all members in this set are complete.",58,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"any_complete","","Returns true if any member in this set is complete.",58,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"contains_empty","","Returns true if this set contains an empty literal.",58,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_empty","","Returns true if this set is empty or if all of its members is empty.",58,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",58,{"i":[{"n":"self"}],"o":{"n":"literals"}}],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this set.",58,null],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this set.",58,null],[11,"trim_suffix","","Returns a new set of literals with the given number of bytes trimmed from the suffix of each literal.",58,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["literals"],"n":"option"}}],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that are guaranteed to be unambiguous.",58,{"i":[{"n":"self"}],"o":{"n":"literals"}}],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that are guaranteed to be unambiguous.",58,{"i":[{"n":"self"}],"o":{"n":"literals"}}],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",58,{"i":[{"n":"self"},{"n":"hir"}],"o":{"n":"bool"}}],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",58,{"i":[{"n":"self"},{"n":"hir"}],"o":{"n":"bool"}}],[11,"union","","Unions this set with another set.",58,{"i":[{"n":"self"},{"n":"literals"}],"o":{"n":"bool"}}],[11,"cross_product","","Extends this set with another set.",58,{"i":[{"n":"self"},{"n":"literals"}],"o":{"n":"bool"}}],[11,"cross_add","","Extends each literal in this set with the bytes given.",58,null],[11,"add","","Adds the given literal to this set.",58,{"i":[{"n":"self"},{"n":"literal"}],"o":{"n":"bool"}}],[11,"add_char_class","","Extends each literal in this set with the character class given.",58,{"i":[{"n":"self"},{"n":"classunicode"}],"o":{"n":"bool"}}],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",58,{"i":[{"n":"self"},{"n":"classbytes"}],"o":{"n":"bool"}}],[11,"cut","","Cuts every member of this set. When a member is cut, it can never be extended.",58,{"i":[{"n":"self"}]}],[11,"reverse","","Reverses all members in place.",58,{"i":[{"n":"self"}]}],[11,"clear","","Clears this set of all members.",58,{"i":[{"n":"self"}]}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Returns a new complete literal with the bytes given.",59,{"i":[{"g":["u8"],"n":"vec"}],"o":{"n":"literal"}}],[11,"empty","","Returns a new complete empty literal.",59,{"o":{"n":"literal"}}],[11,"is_cut","","Returns true if this literal was \"cut.\"",59,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"cut","","Cuts this literal.",59,{"i":[{"n":"self"}]}],[11,"eq","","",59,{"i":[{"n":"self"},{"n":"literal"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",59,{"i":[{"n":"self"},{"n":"literal"}],"o":{"g":["ordering"],"n":"option"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_ref","","",59,null],[11,"deref","","",59,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",59,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression's high-level intermediate representation.",null,null],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new printer.",60,{"o":{"n":"printer"}}],[11,"print","","Print the given `Ast` to the given writer. The writer must implement `fmt::Write`. Typical implementations of `fmt::Write` that can be used here are a `fmt::Formatter` (which is available in `fmt::Display` implementations) or a `&mut String`.",60,{"i":[{"n":"self"},{"n":"hir"},{"n":"w"}],"o":{"n":"result"}}],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[3,"Translator","","A translator maps abstract syntax to a high level intermediate representation.",null,null],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"translatorbuilder"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",61,{"o":{"n":"translatorbuilder"}}],[11,"new","","Create a new translator builder with a default c onfiguration.",61,{"o":{"n":"translatorbuilder"}}],[11,"build","","Build a translator using the current configuration.",61,{"i":[{"n":"self"}],"o":{"n":"translator"}}],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of a regular expression that may match invalid UTF-8.",61,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"translatorbuilder"}}],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by default.",61,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"translatorbuilder"}}],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by default.",61,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"translatorbuilder"}}],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag (`s`) by default.",61,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"translatorbuilder"}}],[11,"swap_greed","","Enable or disable the \"swap greed\" flag (`U`) by default.",61,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"translatorbuilder"}}],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",61,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"translatorbuilder"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"translator"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new translator using the default configuration.",62,{"o":{"n":"translator"}}],[11,"translate","","Translate the given abstract syntax tree (AST) into a high level intermediate representation (HIR).",62,{"i":[{"n":"self"},{"n":"str"},{"n":"ast"}],"o":{"g":["hir","error"],"n":"result"}}],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth first order.",null,null],[16,"Output","","The result of visiting an HIR.",63,null],[16,"Err","","An error that visiting an HIR might return.",63,null],[10,"finish","","All implementors of `Visitor` must provide a `finish` method, which yields the result of visiting the HIR or an error.",63,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start","","This method is called before beginning traversal of the HIR.",63,{"i":[{"n":"self"}]}],[11,"visit_pre","","This method is called on an `Hir` before descending into child `Hir` nodes.",63,{"i":[{"n":"self"},{"n":"hir"}],"o":{"n":"result"}}],[11,"visit_post","","This method is called on an `Hir` after descending all of its child `Hir` nodes.",63,{"i":[{"n":"self"},{"n":"hir"}],"o":{"n":"result"}}],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",64,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ne","","",64,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"kind","","Return the type of this error.",64,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"pattern","","The original pattern string in which this error occurred.",64,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"span","","Return the span at which this error occurred.",64,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",49,{"i":[{"n":"self"},{"n":"errorkind"}],"o":{"n":"bool"}}],[11,"description","","",64,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"hir"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",65,{"i":[{"n":"self"},{"n":"hir"}],"o":{"n":"bool"}}],[11,"ne","","",65,{"i":[{"n":"self"},{"n":"hir"}],"o":{"n":"bool"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"hirkind"}}],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",50,{"i":[{"n":"self"},{"n":"hirkind"}],"o":{"n":"bool"}}],[11,"ne","","",50,{"i":[{"n":"self"},{"n":"hirkind"}],"o":{"n":"bool"}}],[11,"kind","","Returns a reference to the underlying HIR kind.",65,{"i":[{"n":"self"}],"o":{"n":"hirkind"}}],[11,"into_kind","","Consumes ownership of this HIR expression and returns its underlying `HirKind`.",65,{"i":[{"n":"self"}],"o":{"n":"hirkind"}}],[11,"empty","","Returns an empty HIR expression.",65,{"o":{"n":"hir"}}],[11,"literal","","Creates a literal HIR expression.",65,{"i":[{"n":"literal"}],"o":{"n":"hir"}}],[11,"class","","Creates a class HIR expression.",65,{"i":[{"n":"class"}],"o":{"n":"hir"}}],[11,"anchor","","Creates an anchor assertion HIR expression.",65,{"i":[{"n":"anchor"}],"o":{"n":"hir"}}],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",65,{"i":[{"n":"wordboundary"}],"o":{"n":"hir"}}],[11,"repetition","","Creates a repetition HIR expression.",65,{"i":[{"n":"repetition"}],"o":{"n":"hir"}}],[11,"group","","Creates a group HIR expression.",65,{"i":[{"n":"group"}],"o":{"n":"hir"}}],[11,"concat","","Returns the concatenation of the given expressions.",65,{"i":[{"g":["hir"],"n":"vec"}],"o":{"n":"hir"}}],[11,"alternation","","Returns the alternation of the given expressions.",65,{"i":[{"g":["hir"],"n":"vec"}],"o":{"n":"hir"}}],[11,"dot","","Build an HIR expression for `.`.",65,{"i":[{"n":"bool"}],"o":{"n":"hir"}}],[11,"any","","Build an HIR expression for `(?s).`.",65,{"i":[{"n":"bool"}],"o":{"n":"hir"}}],[11,"is_always_utf8","","Return true if and only if this HIR will always match valid UTF-8.",65,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is made up of zero-width assertions.",65,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_anchored_start","","Return true if and only if this HIR is required to match from the beginning of text. This includes expressions like `^foo`, `^(foo|bar)`, `^foo|^bar` but not `^foo|bar`.",65,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_anchored_end","","Return true if and only if this HIR is required to match at the end of text. This includes expressions like `foo$`, `(foo|bar)$`, `foo$|bar$` but not `foo$|bar`.",65,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any sub-expression that is required to match at the beginning of text. Specifically, this returns true if the `^` symbol (when multiline mode is disabled) or the `\\A` escape appear anywhere in the regex.",65,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any sub-expression that is required to match at the end of text. Specifically, this returns true if the `$` symbol (when multiline mode is disabled) or the `\\z` escape appear anywhere in the regex.",65,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_match_empty","","Return true if and only if the empty string is part of the language matched by this regular expression.",65,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_empty","","Return true if and only if this HIR is the empty regular expression.",50,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"has_subexprs","","Returns true if and only if this kind has any (including possibly empty) subexpressions.",50,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"literal"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",51,{"i":[{"n":"self"},{"n":"literal"}],"o":{"n":"bool"}}],[11,"ne","","",51,{"i":[{"n":"self"},{"n":"literal"}],"o":{"n":"bool"}}],[11,"is_unicode","","Returns true if and only if this literal corresponds to a Unicode scalar value.",51,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"class"}}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",52,{"i":[{"n":"self"},{"n":"class"}],"o":{"n":"bool"}}],[11,"ne","","",52,{"i":[{"n":"self"},{"n":"class"}],"o":{"n":"bool"}}],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class, in place. The character class will be expanded to include all simple case folded character variants.",52,{"i":[{"n":"self"}]}],[11,"negate","","Negate this character class in place.",52,{"i":[{"n":"self"}]}],[11,"is_always_utf8","","Returns true if and only if this character class will only ever match valid UTF-8.",52,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"classunicode"}}],[11,"fmt","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",66,{"i":[{"n":"self"},{"n":"classunicode"}],"o":{"n":"bool"}}],[11,"ne","","",66,{"i":[{"n":"self"},{"n":"classunicode"}],"o":{"n":"bool"}}],[11,"new","","Create a new class from a sequence of ranges.",66,{"i":[{"n":"i"}],"o":{"n":"classunicode"}}],[11,"empty","","Create a new class with no ranges.",66,{"o":{"n":"classunicode"}}],[11,"push","","Add a new range to this set.",66,{"i":[{"n":"self"},{"n":"classunicoderange"}]}],[11,"iter","","Return an iterator over all ranges in this class.",66,{"i":[{"n":"self"}],"o":{"n":"classunicodeiter"}}],[11,"ranges","","Return the underlying ranges as a slice.",66,null],[11,"case_fold_simple","","Expand this character class such that it contains all case folded characters, according to Unicode's \"simple\" mapping. For example, if this class consists of the range `a-z`, then applying case folding will result in the class containing both the ranges `a-z` and `A-Z`.",66,{"i":[{"n":"self"}]}],[11,"negate","","Negate this character class.",66,{"i":[{"n":"self"}]}],[11,"union","","Union this character class with the given character class, in place.",66,{"i":[{"n":"self"},{"n":"classunicode"}]}],[11,"intersect","","Intersect this character class with the given character class, in place.",66,{"i":[{"n":"self"},{"n":"classunicode"}]}],[11,"difference","","Subtract the given character class from this character class, in place.",66,{"i":[{"n":"self"},{"n":"classunicode"}]}],[11,"symmetric_difference","","Compute the symmetric difference of the given character classes, in place.",66,{"i":[{"n":"self"},{"n":"classunicode"}]}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",67,{"i":[{"n":"self"}],"o":{"g":["classunicoderange"],"n":"option"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"classunicoderange"}}],[11,"default","","",68,{"o":{"n":"classunicoderange"}}],[11,"eq","","",68,{"i":[{"n":"self"},{"n":"classunicoderange"}],"o":{"n":"bool"}}],[11,"ne","","",68,{"i":[{"n":"self"},{"n":"classunicoderange"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",68,{"i":[{"n":"self"},{"n":"classunicoderange"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",68,{"i":[{"n":"self"},{"n":"classunicoderange"}],"o":{"n":"bool"}}],[11,"le","","",68,{"i":[{"n":"self"},{"n":"classunicoderange"}],"o":{"n":"bool"}}],[11,"gt","","",68,{"i":[{"n":"self"},{"n":"classunicoderange"}],"o":{"n":"bool"}}],[11,"ge","","",68,{"i":[{"n":"self"},{"n":"classunicoderange"}],"o":{"n":"bool"}}],[11,"cmp","","",68,{"i":[{"n":"self"},{"n":"classunicoderange"}],"o":{"n":"ordering"}}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new Unicode scalar value range for a character class.",68,{"i":[{"n":"char"},{"n":"char"}],"o":{"n":"classunicoderange"}}],[11,"start","","Return the start of this range.",68,{"i":[{"n":"self"}],"o":{"n":"char"}}],[11,"end","","Return the end of this range.",68,{"i":[{"n":"self"}],"o":{"n":"char"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"classbytes"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",69,{"i":[{"n":"self"},{"n":"classbytes"}],"o":{"n":"bool"}}],[11,"ne","","",69,{"i":[{"n":"self"},{"n":"classbytes"}],"o":{"n":"bool"}}],[11,"new","","Create a new class from a sequence of ranges.",69,{"i":[{"n":"i"}],"o":{"n":"classbytes"}}],[11,"empty","","Create a new class with no ranges.",69,{"o":{"n":"classbytes"}}],[11,"push","","Add a new range to this set.",69,{"i":[{"n":"self"},{"n":"classbytesrange"}]}],[11,"iter","","Return an iterator over all ranges in this class.",69,{"i":[{"n":"self"}],"o":{"n":"classbytesiter"}}],[11,"ranges","","Return the underlying ranges as a slice.",69,null],[11,"case_fold_simple","","Expand this character class such that it contains all case folded characters. For example, if this class consists of the range `a-z`, then applying case folding will result in the class containing both the ranges `a-z` and `A-Z`.",69,{"i":[{"n":"self"}]}],[11,"negate","","Negate this byte class.",69,{"i":[{"n":"self"}]}],[11,"union","","Union this byte class with the given byte class, in place.",69,{"i":[{"n":"self"},{"n":"classbytes"}]}],[11,"intersect","","Intersect this byte class with the given byte class, in place.",69,{"i":[{"n":"self"},{"n":"classbytes"}]}],[11,"difference","","Subtract the given byte class from this byte class, in place.",69,{"i":[{"n":"self"},{"n":"classbytes"}]}],[11,"symmetric_difference","","Compute the symmetric difference of the given byte classes, in place.",69,{"i":[{"n":"self"},{"n":"classbytes"}]}],[11,"is_all_ascii","","Returns true if and only if this character class will either match nothing or only ASCII bytes. Stated differently, this returns false if and only if this class contains a non-ASCII byte.",69,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",70,{"i":[{"n":"self"}],"o":{"g":["classbytesrange"],"n":"option"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"classbytesrange"}}],[11,"default","","",71,{"o":{"n":"classbytesrange"}}],[11,"eq","","",71,{"i":[{"n":"self"},{"n":"classbytesrange"}],"o":{"n":"bool"}}],[11,"ne","","",71,{"i":[{"n":"self"},{"n":"classbytesrange"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",71,{"i":[{"n":"self"},{"n":"classbytesrange"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",71,{"i":[{"n":"self"},{"n":"classbytesrange"}],"o":{"n":"bool"}}],[11,"le","","",71,{"i":[{"n":"self"},{"n":"classbytesrange"}],"o":{"n":"bool"}}],[11,"gt","","",71,{"i":[{"n":"self"},{"n":"classbytesrange"}],"o":{"n":"bool"}}],[11,"ge","","",71,{"i":[{"n":"self"},{"n":"classbytesrange"}],"o":{"n":"bool"}}],[11,"cmp","","",71,{"i":[{"n":"self"},{"n":"classbytesrange"}],"o":{"n":"ordering"}}],[11,"new","","Create a new byte range for a character class.",71,{"i":[{"n":"u8"},{"n":"u8"}],"o":{"n":"classbytesrange"}}],[11,"start","","Return the start of this range.",71,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"end","","Return the end of this range.",71,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"anchor"}}],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",53,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"wordboundary"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",54,{"i":[{"n":"self"},{"n":"wordboundary"}],"o":{"n":"bool"}}],[11,"is_negated","","Returns true if and only if this word boundary assertion is negated.",54,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"group"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",47,{"i":[{"n":"self"},{"n":"group"}],"o":{"n":"bool"}}],[11,"ne","","",47,{"i":[{"n":"self"},{"n":"group"}],"o":{"n":"bool"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"groupkind"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",55,{"i":[{"n":"self"},{"n":"groupkind"}],"o":{"n":"bool"}}],[11,"ne","","",55,{"i":[{"n":"self"},{"n":"groupkind"}],"o":{"n":"bool"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"repetition"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",48,{"i":[{"n":"self"},{"n":"repetition"}],"o":{"n":"bool"}}],[11,"ne","","",48,{"i":[{"n":"self"},{"n":"repetition"}],"o":{"n":"bool"}}],[11,"is_match_empty","","Returns true if and only if this repetition operator makes it possible to match the empty string.",48,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"repetitionkind"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",56,{"i":[{"n":"self"},{"n":"repetitionkind"}],"o":{"n":"bool"}}],[11,"ne","","",56,{"i":[{"n":"self"},{"n":"repetitionkind"}],"o":{"n":"bool"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"repetitionrange"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",57,{"i":[{"n":"self"},{"n":"repetitionrange"}],"o":{"n":"bool"}}],[11,"ne","","",57,{"i":[{"n":"self"},{"n":"repetitionrange"}],"o":{"n":"bool"}}],[11,"drop","","",65,{"i":[{"n":"self"}]}],[11,"clone","regex_syntax","",72,{"i":[{"n":"self"}],"o":{"n":"parserbuilder"}}],[11,"fmt","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",72,{"o":{"n":"parserbuilder"}}],[11,"new","","Create a new parser builder with a default configuration.",72,{"o":{"n":"parserbuilder"}}],[11,"build","","Build a parser from this configuration with the given pattern.",72,{"i":[{"n":"self"}],"o":{"n":"parser"}}],[11,"nest_limit","","Set the nesting limit for this parser.",72,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"parserbuilder"}}],[11,"octal","","Whether to support octal syntax or not.",72,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parserbuilder"}}],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a regular expression that may match invalid UTF-8.",72,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parserbuilder"}}],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",72,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parserbuilder"}}],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",72,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parserbuilder"}}],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",72,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parserbuilder"}}],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag by default.",72,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parserbuilder"}}],[11,"swap_greed","","Enable or disable the \"swap greed\" flag by default.",72,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parserbuilder"}}],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",72,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parserbuilder"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"parser"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new parser with a default configuration.",73,{"o":{"n":"parser"}}],[11,"parse","","Parse the regular expression into a high level intermediate representation.",73,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["hir"],"n":"result"}}],[6,"Result","","A type alias for dealing with errors returned by this crate.",null,null],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",45,{"i":[{"n":"self"}]}],[11,"visit_pre","","This method is called on an `Ast` before descending into child `Ast` nodes.",45,{"i":[{"n":"self"},{"n":"ast"}],"o":{"n":"result"}}],[11,"visit_post","","This method is called on an `Ast` after descending all of its child `Ast` nodes.",45,{"i":[{"n":"self"},{"n":"ast"}],"o":{"n":"result"}}],[11,"visit_alternation_in","","This method is called between child nodes of an `Alternation`.",45,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before descending into child nodes.",45,{"i":[{"n":"self"},{"n":"classsetitem"}],"o":{"n":"result"}}],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after descending into child nodes.",45,{"i":[{"n":"self"},{"n":"classsetitem"}],"o":{"n":"result"}}],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before descending into child nodes.",45,{"i":[{"n":"self"},{"n":"classsetbinaryop"}],"o":{"n":"result"}}],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after descending into child nodes.",45,{"i":[{"n":"self"},{"n":"classsetbinaryop"}],"o":{"n":"result"}}],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand child nodes of a `ClassSetBinaryOp`.",45,{"i":[{"n":"self"},{"n":"classsetbinaryop"}],"o":{"n":"result"}}],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",63,{"i":[{"n":"self"}]}],[11,"visit_pre","","This method is called on an `Hir` before descending into child `Hir` nodes.",63,{"i":[{"n":"self"},{"n":"hir"}],"o":{"n":"result"}}],[11,"visit_post","","This method is called on an `Hir` after descending all of its child `Hir` nodes.",63,{"i":[{"n":"self"},{"n":"hir"}],"o":{"n":"result"}}],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,{"i":[{"n":"self"}],"o":{"n":"result"}}]],"paths":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeIter"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesIter"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"]]};
searchIndex["route_recognizer"] = {"doc":"","items":[[3,"Params","route_recognizer","",null,null],[3,"Iter","","",null,null],[3,"Match","","",null,null],[12,"handler","","",0,null],[12,"params","","",0,null],[3,"Router","","",null,null],[0,"nfa","","",null,null],[3,"CharSet","route_recognizer::nfa","",null,null],[3,"State","","",null,null],[12,"index","","",1,null],[12,"chars","","",1,null],[12,"next_states","","",1,null],[12,"acceptance","","",1,null],[12,"start_capture","","",1,null],[12,"end_capture","","",1,null],[12,"metadata","","",1,null],[3,"Match","","",null,null],[12,"state","","",2,null],[12,"captures","","",2,null],[3,"NFA","","",null,null],[4,"CharacterClass","","",null,null],[13,"Ascii","","",3,null],[13,"ValidChars","","",3,null],[13,"InvalidChars","","",3,null],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"charset"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"charset"}],"o":{"n":"bool"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"charset"}}],[11,"new","","",4,{"o":{"n":"charset"}}],[11,"insert","","",4,{"i":[{"n":"self"},{"n":"char"}]}],[11,"contains","","",4,{"i":[{"n":"self"},{"n":"char"}],"o":{"n":"bool"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"characterclass"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"characterclass"}],"o":{"n":"bool"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"characterclass"}}],[11,"any","","",3,{"o":{"n":"characterclass"}}],[11,"valid","","",3,{"i":[{"n":"str"}],"o":{"n":"characterclass"}}],[11,"invalid","","",3,{"i":[{"n":"str"}],"o":{"n":"characterclass"}}],[11,"valid_char","","",3,{"i":[{"n":"char"}],"o":{"n":"characterclass"}}],[11,"invalid_char","","",3,{"i":[{"n":"char"}],"o":{"n":"characterclass"}}],[11,"matches","","",3,{"i":[{"n":"self"},{"n":"char"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"state"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"state"}],"o":{"n":"bool"}}],[11,"new","","",1,{"i":[{"n":"usize"},{"n":"characterclass"}],"o":{"n":"state"}}],[11,"new","","",2,{"i":[{"n":"usize"},{"g":["str"],"n":"vec"}],"o":{"n":"match"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"nfa"}}],[11,"new","","",5,{"o":{"n":"nfa"}}],[11,"process","","",5,{"i":[{"n":"self"},{"n":"str"},{"n":"f"}],"o":{"g":["match","string"],"n":"result"}}],[11,"get","","",5,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"state"}}],[11,"get_mut","","",5,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"state"}}],[11,"put","","",5,{"i":[{"n":"self"},{"n":"usize"},{"n":"characterclass"}],"o":{"n":"usize"}}],[11,"put_state","","",5,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}]}],[11,"acceptance","","",5,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"start_capture","","",5,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"end_capture","","",5,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"metadata","","",5,{"i":[{"n":"self"},{"n":"usize"},{"n":"t"}]}],[11,"eq","route_recognizer","",6,{"i":[{"n":"self"},{"n":"params"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"params"}],"o":{"n":"bool"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"params"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",6,{"o":{"n":"params"}}],[11,"insert","","",6,{"i":[{"n":"self"},{"n":"string"},{"n":"string"}]}],[11,"find","","",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["str"],"n":"option"}}],[11,"iter","","",6,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"index","","",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"string"}}],[11,"next","","",7,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",7,null],[11,"new","","",0,{"i":[{"n":"t"},{"n":"params"}],"o":{"n":"match"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"router"}}],[11,"new","","",8,{"o":{"n":"router"}}],[11,"add","","",8,{"i":[{"n":"self"},{"n":"str"},{"n":"t"}]}],[11,"recognize","","",8,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["match","string"],"n":"result"}}]],"paths":[[3,"Match"],[3,"State"],[3,"Match"],[4,"CharacterClass"],[3,"CharSet"],[3,"NFA"],[3,"Params"],[3,"Iter"],[3,"Router"]]};
searchIndex["router"] = {"doc":"`Router` provides fast and flexible routing for Iron.","items":[[3,"Params","router","",null,null],[3,"Router","","`Router` provides an interface for creating complex routes as middleware for the Iron framework.",null,null],[3,"NoRoute","","The error thrown by router if there is no matching route, it is always accompanied by a NotFound response.",null,null],[3,"TrailingSlash","","The error thrown by router if a request was redirected by adding or removing a trailing slash.",null,null],[5,"url_for","","Generate a URL based off of the currently requested URL.",null,{"i":[{"n":"request"},{"n":"str"},{"g":["string","string"],"n":"hashmap"}],"o":{"n":"url"}}],[11,"new","","Construct a new, empty `Router`.",0,{"o":{"n":"router"}}],[11,"route","","Add a new route to a `Router`, matching both a method and glob pattern.",0,{"i":[{"n":"self"},{"n":"method"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"get","","Like route, but specialized to the `Get` method.",0,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"post","","Like route, but specialized to the `Post` method.",0,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"put","","Like route, but specialized to the `Put` method.",0,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"delete","","Like route, but specialized to the `Delete` method.",0,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"head","","Like route, but specialized to the `Head` method.",0,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"patch","","Like route, but specialized to the `Patch` method.",0,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"options","","Like route, but specialized to the `Options` method.",0,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"any","","Route will match any method, including gibberish. In case of ambiguity, handlers specific to methods will be preferred.",0,{"i":[{"n":"self"},{"n":"s"},{"n":"h"},{"n":"i"}],"o":{"n":"router"}}],[11,"handle","","",0,{"i":[{"n":"self"},{"n":"request"}],"o":{"g":["response"],"n":"ironresult"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"noroute"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"trailingslash"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[14,"router","","Create and populate a router.",null,null],[14,"url_for","","Generate a URL based off of the requested one.",null,null],[11,"new","","",3,{"o":{"n":"params"}}],[11,"insert","","",3,null],[11,"find","","",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["str"],"n":"option"}}],[11,"iter","","",3,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"params"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"params"}],"o":{"n":"bool"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"params"}}],[11,"index","","",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"string"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}]],"paths":[[3,"Router"],[3,"NoRoute"],[3,"TrailingSlash"],[3,"Params"]]};
searchIndex["rustc_demangle"] = {"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when demangling fails.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,{"i":[{"n":"str"}],"o":{"n":"demangle"}}],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the string does not appear to be a Rust symbol, rather than \"demangling\" the given string as a no-op.",null,{"i":[{"n":"str"}],"o":{"g":["demangle","trydemangleerror"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"trydemangleerror"}}],[11,"as_str","","Returns the underlying string that's being demangled.",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"TryDemangleError"],[3,"Demangle"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified format configuration, returning the owned string.",4,{"i":[{"n":"self"},{"n":"config"}],"o":{"n":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into an owned vector of bytes, returning the vector.",5,{"i":[{"n":"self"}],"o":{"g":["vec","frombase64error"],"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"characterset"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"newline"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"config"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"frombase64error"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned string.",7,{"i":[{"n":"self"}],"o":{"n":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data, into an owned vector of bytes, returning the vector.",8,{"i":[{"n":"self"}],"o":{"g":["vec","fromhexerror"],"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"fromhexerror"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",6,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical structure of the JSON stream. For example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming an iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack. For example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the StackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"i":[{"n":"errorcode"}],"o":{"n":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"i":[{"n":"str"}],"o":{"n":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"i":[{"n":"t"}],"o":{"g":["string"],"n":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON on-the-fly via `write!`",null,{"i":[{"n":"t"}],"o":{"n":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON on-the-fly via `write!`",null,{"i":[{"n":"t"}],"o":{"n":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,{"i":[{"n":"self"}],"o":{"n":"json"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"json"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"json"}],"o":{"n":"bool"}}],[11,"ne","","",9,{"i":[{"n":"self"},{"n":"json"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",9,{"i":[{"n":"self"},{"n":"json"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",9,{"i":[{"n":"self"},{"n":"json"}],"o":{"n":"bool"}}],[11,"le","","",9,{"i":[{"n":"self"},{"n":"json"}],"o":{"n":"bool"}}],[11,"gt","","",9,{"i":[{"n":"self"},{"n":"json"}],"o":{"n":"bool"}}],[11,"ge","","",9,{"i":[{"n":"self"},{"n":"json"}],"o":{"n":"bool"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"errorcode"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"errorcode"}],"o":{"n":"bool"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"parsererror"}],"o":{"n":"bool"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"decodererror"}],"o":{"n":"bool"}}],[11,"ne","","",12,{"i":[{"n":"self"},{"n":"decodererror"}],"o":{"n":"bool"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"encodererror"}],"o":{"n":"bool"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",12,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",12,{"i":[{"n":"self"}],"o":{"g":["stderror"],"n":"option"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",12,{"i":[{"n":"parsererror"}],"o":{"n":"decodererror"}}],[11,"description","","",11,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",11,{"i":[{"n":"error"}],"o":{"n":"parsererror"}}],[11,"description","","",13,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",13,{"i":[{"n":"error"}],"o":{"n":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable JSON to the specified writer",17,{"i":[{"n":"write"}],"o":{"n":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact JSON to the specified writer",17,{"i":[{"n":"write"}],"o":{"n":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level. This is safe to set during encoding.",17,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"emit_nil","","",17,{"i":[{"n":"self"}],"o":{"n":"encoderesult"}}],[11,"emit_usize","","",17,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"encoderesult"}}],[11,"emit_u64","","",17,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"encoderesult"}}],[11,"emit_u32","","",17,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"encoderesult"}}],[11,"emit_u16","","",17,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"encoderesult"}}],[11,"emit_u8","","",17,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"encoderesult"}}],[11,"emit_isize","","",17,{"i":[{"n":"self"},{"n":"isize"}],"o":{"n":"encoderesult"}}],[11,"emit_i64","","",17,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"encoderesult"}}],[11,"emit_i32","","",17,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"encoderesult"}}],[11,"emit_i16","","",17,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"encoderesult"}}],[11,"emit_i8","","",17,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"encoderesult"}}],[11,"emit_bool","","",17,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"encoderesult"}}],[11,"emit_f64","","",17,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"encoderesult"}}],[11,"emit_f32","","",17,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"encoderesult"}}],[11,"emit_char","","",17,{"i":[{"n":"self"},{"n":"char"}],"o":{"n":"encoderesult"}}],[11,"emit_str","","",17,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"encoderesult"}}],[11,"emit_enum","","",17,{"i":[{"n":"self"},{"n":"str"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_enum_variant","","",17,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_enum_variant_arg","","",17,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_enum_struct_variant","","",17,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",17,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_struct","","",17,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_struct_field","","",17,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_tuple","","",17,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_tuple_arg","","",17,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_tuple_struct","","",17,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",17,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_option","","",17,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_option_none","","",17,{"i":[{"n":"self"}],"o":{"n":"encoderesult"}}],[11,"emit_option_some","","",17,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_seq","","",17,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_seq_elt","","",17,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_map","","",17,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_map_elt_key","","",17,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"emit_map_elt_val","","",17,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"encoderesult"}}],[11,"encode","","",9,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",9,{"i":[{"n":"read"}],"o":{"g":["buildererror"],"n":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"i":[{"n":"str"}],"o":{"g":["buildererror"],"n":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty representation for it via `Display`.",9,{"i":[{"n":"self"}],"o":{"n":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key. Otherwise, returns None.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["json"],"n":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`. If any key is found not to exist, find_path will return None. Otherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until a value associated with the provided key is found. If no value is found or the Json value is not an Object, returns None.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["json"],"n":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["object"],"n":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["object"],"n":"option"}}],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["object"],"n":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["array"],"n":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["array"],"n":"option"}}],[11,"into_array","","If the Json value is an Array, returns the associated vector. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["array"],"n":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool. Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_null","","If the Json value is a Null, returns (). Returns None otherwise.",9,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"index","","",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"json"}}],[11,"index","","",9,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"json"}}],[11,"eq","","",14,{"i":[{"n":"self"},{"n":"jsonevent"}],"o":{"n":"bool"}}],[11,"ne","","",14,{"i":[{"n":"self"},{"n":"jsonevent"}],"o":{"n":"bool"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"stackelement"}],"o":{"n":"bool"}}],[11,"ne","","",15,{"i":[{"n":"self"},{"n":"stackelement"}],"o":{"n":"bool"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"stackelement"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",18,{"o":{"n":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",18,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"get","","Provides access to the StackElement at a given index. lower indices are at the bottom of the stack while higher indices are at the top.",18,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as the ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as the ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,{"i":[{"n":"self"}],"o":{"g":["stackelement"],"n":"option"}}],[11,"next","","",19,{"i":[{"n":"self"}],"o":{"g":["jsonevent"],"n":"option"}}],[11,"new","","Creates the JSON parser.",19,{"i":[{"n":"t"}],"o":{"n":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the JSON stream.",19,{"i":[{"n":"self"}],"o":{"n":"stack"}}],[11,"new","","Create a JSON Builder.",20,{"i":[{"n":"t"}],"o":{"n":"builder"}}],[11,"build","","",20,{"i":[{"n":"self"}],"o":{"g":["json","buildererror"],"n":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"i":[{"n":"json"}],"o":{"n":"decoder"}}],[11,"read_nil","","",21,{"i":[{"n":"self"}],"o":{"n":"decoderesult"}}],[11,"read_usize","","",21,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"decoderesult"}}],[11,"read_u8","","",21,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"decoderesult"}}],[11,"read_u16","","",21,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"decoderesult"}}],[11,"read_u32","","",21,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"decoderesult"}}],[11,"read_u64","","",21,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"decoderesult"}}],[11,"read_isize","","",21,{"i":[{"n":"self"}],"o":{"g":["isize"],"n":"decoderesult"}}],[11,"read_i8","","",21,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"decoderesult"}}],[11,"read_i16","","",21,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"decoderesult"}}],[11,"read_i32","","",21,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"decoderesult"}}],[11,"read_i64","","",21,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"decoderesult"}}],[11,"read_f32","","",21,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"decoderesult"}}],[11,"read_f64","","",21,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"decoderesult"}}],[11,"read_bool","","",21,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"decoderesult"}}],[11,"read_char","","",21,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"decoderesult"}}],[11,"read_str","","",21,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"decoderesult"}}],[11,"read_enum","","",21,{"i":[{"n":"self"},{"n":"str"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_struct","","",21,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_struct_field","","",21,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_tuple","","",21,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_tuple_arg","","",21,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_tuple_struct","","",21,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_tuple_struct_arg","","",21,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_option","","",21,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_seq","","",21,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_seq_elt","","",21,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_map","","",21,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_map_elt_key","","",21,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"read_map_elt_val","","",21,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"decoderesult"}}],[11,"error","","",21,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"decodererror"}}],[11,"to_json","","",9,{"i":[{"n":"self"}],"o":{"n":"json"}}],[11,"fmt","","Encodes a json value into a string",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","Encodes a json value into a string",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","Encodes a json value into a string",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",24,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",9,{"i":[{"n":"str"}],"o":{"g":["json","parsererror"],"n":"result"}}],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",25,null],[10,"read_nil","","Read a nil value.",25,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"read_usize","","Read a usize value.",25,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[10,"read_u64","","Read a u64 value.",25,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[10,"read_u32","","Read a u32 value.",25,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"read_u16","","Read a u16 value.",25,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"result"}}],[10,"read_u8","","Read a u8 value.",25,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"result"}}],[10,"read_isize","","Read a isize value.",25,{"i":[{"n":"self"}],"o":{"g":["isize"],"n":"result"}}],[10,"read_i64","","Read a i64 value.",25,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[10,"read_i32","","Read a i32 value.",25,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[10,"read_i16","","Read a i16 value.",25,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"result"}}],[10,"read_i8","","Read a i8 value.",25,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"result"}}],[10,"read_bool","","Read a bool value.",25,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"read_f64","","Read a f64 value.",25,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"result"}}],[10,"read_f32","","Read a f32 value.",25,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"result"}}],[10,"read_char","","Read a char value.",25,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"result"}}],[10,"read_str","","Read a string value.",25,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"result"}}],[10,"read_enum","","Read an enumeration value.",25,{"i":[{"n":"self"},{"n":"str"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_enum_variant","","Read an enumeration value.",25,null],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_enum_struct_variant","","Read an enumeration value.",25,null],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_struct","","Read an struct value.",25,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_struct_field","","Read a field for a struct value.",25,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_tuple","","Read a tuple value.",25,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_tuple_arg","","Read a data item for a tuple.",25,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_tuple_struct","","Read a tuple struct value.",25,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_option","","Read an optional value.",25,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_seq","","Read a sequence of values.",25,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_seq_elt","","Read an element in the sequence.",25,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_map","","Read an associative container (map).",25,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"error","","Record a decoding error.",25,null],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",26,null],[10,"emit_nil","","Emit a nil value.",26,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"emit_usize","","Emit a usize value.",26,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"emit_u64","","Emit a u64 value.",26,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[10,"emit_u32","","Emit a u32 value.",26,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"emit_u16","","Emit a u16 value.",26,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[10,"emit_u8","","Emit a u8 value.",26,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[10,"emit_isize","","Emit a isize value.",26,{"i":[{"n":"self"},{"n":"isize"}],"o":{"n":"result"}}],[10,"emit_i64","","Emit a i64 value.",26,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[10,"emit_i32","","Emit a i32 value.",26,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[10,"emit_i16","","Emit a i16 value.",26,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[10,"emit_i8","","Emit a i8 value.",26,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[10,"emit_bool","","Emit a bool value.",26,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"emit_f64","","Emit a f64 value.",26,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}],[10,"emit_f32","","Emit a f32 value.",26,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[10,"emit_char","","Emit a char value.",26,{"i":[{"n":"self"},{"n":"char"}],"o":{"n":"result"}}],[10,"emit_str","","Emit a string value.",26,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[10,"emit_enum","","Emit an enumeration value.",26,{"i":[{"n":"self"},{"n":"str"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_struct","","Emit a struct value.",26,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_struct_field","","Emit a field item for a struct.",26,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_tuple","","Emit a tuple value.",26,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_option","","Emit an optional value.",26,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_option_none","","Emit the `None` optional value.",26,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_seq","","Emit a sequence of values.",26,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_seq_elt","","Emit an element in a sequence.",26,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_map","","Emit an associative container (map).",26,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"result"}}],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",27,{"i":[{"n":"d"}],"o":{"n":"result"}}],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",28,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",29,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["vec"],"n":"result"}}],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["safemem"] = {"doc":"Safe wrappers for memory-accessing functions like `std::ptr::copy()`.","items":[[5,"copy_over","safemem","Copy `len` elements from `src_idx` to `dest_idx`. Ranges may overlap.",null,null],[5,"write_bytes","","Safe wrapper for `std::ptr::write_bytes()`/`memset()`.",null,null],[5,"prepend","","Prepend `elems` to `vec`, resizing if necessary.",null,null]],"paths":[]};
searchIndex["scheduled_thread_pool"] = {"doc":"A thread pool to execute scheduled actions in parallel.","items":[[3,"JobHandle","scheduled_thread_pool","A handle to a scheduled job.",null,null],[3,"ScheduledThreadPool","","A pool of threads which can run tasks at specific time intervals.",null,null],[11,"cancel","","Cancels the job.",0,{"i":[{"n":"self"}]}],[11,"drop","","",1,{"i":[{"n":"self"}]}],[11,"new","","Creates a new thread pool with the specified number of threads.",1,{"i":[{"n":"usize"}],"o":{"n":"scheduledthreadpool"}}],[11,"with_name","","Creates a new thread pool with the specified number of threads which will be named.",1,{"i":[{"n":"str"},{"n":"usize"}],"o":{"n":"scheduledthreadpool"}}],[11,"execute","","Executes a closure as soon as possible in the pool.",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"jobhandle"}}],[11,"execute_after","","Executes a closure after a time delay in the pool.",1,{"i":[{"n":"self"},{"n":"duration"},{"n":"f"}],"o":{"n":"jobhandle"}}],[11,"execute_at_fixed_rate","","Executes a closure after an initial delay at a fixed rate in the pool.",1,{"i":[{"n":"self"},{"n":"duration"},{"n":"duration"},{"n":"f"}],"o":{"n":"jobhandle"}}],[11,"execute_with_fixed_delay","","Executes a closure after an initial delay at a fixed rate in the pool.",1,{"i":[{"n":"self"},{"n":"duration"},{"n":"duration"},{"n":"f"}],"o":{"n":"jobhandle"}}]],"paths":[[3,"JobHandle"],[3,"ScheduledThreadPool"]]};
searchIndex["scopeguard"] = {"doc":"A scope guard will run a given closure when it goes out of scope, even if the code between panics. (as long as panic doesn't abort)","items":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected value.",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred closure `dropfn`.",null,{"i":[{"n":"t"},{"n":"f"}],"o":{"g":["always"],"n":"scopeguard"}}],[8,"Strategy","","",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run (in the context where this method is called).",0,{"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"should_run","","",1,{"o":{"n":"bool"}}],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through deref) and calls `dropfn` when its destructor runs.",2,{"i":[{"n":"t"},{"n":"f"}],"o":{"n":"scopeguard"}}],[11,"deref","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",2,{"i":[{"n":"self"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[14,"defer_on_unwind","","Macro to create a `ScopeGuard` (run on unwinding from panic).",null,null]],"paths":[[8,"Strategy"],[4,"Always"],[3,"ScopeGuard"]]};
searchIndex["serde"] = {"doc":"Serde","items":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any one of the `Visitor` trait methods.",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that was not expected.",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or `i64` that was not expected.",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that was not expected.",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not expected.",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not expected.",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input contained that was not expected.",0,null],[0,"value","","Building blocks for deserializing basic values using the `IntoDeserializer` trait.",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can occur using the `IntoDeserializer` trait.",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to another deserializer.",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to another deserializer.",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"custom","","",1,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"custom","","",1,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"unitdeserializer"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",2,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",2,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",2,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",2,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",2,null],[11,"deserialize_enum","","",2,null],[11,"deserialize_identifier","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"booldeserializer"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",3,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",3,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",3,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",3,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",3,null],[11,"deserialize_enum","","",3,null],[11,"deserialize_identifier","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"i8deserializer"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",4,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",4,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",4,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",4,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",4,null],[11,"deserialize_enum","","",4,null],[11,"deserialize_identifier","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",4,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"i16deserializer"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",5,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",5,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",5,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",5,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",5,null],[11,"deserialize_enum","","",5,null],[11,"deserialize_identifier","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",5,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"i32deserializer"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",6,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",6,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",6,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",6,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",6,null],[11,"deserialize_enum","","",6,null],[11,"deserialize_identifier","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",6,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"i64deserializer"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",7,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",7,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",7,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",7,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",7,null],[11,"deserialize_enum","","",7,null],[11,"deserialize_identifier","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",7,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"isizedeserializer"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",8,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",8,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",8,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",8,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",8,null],[11,"deserialize_enum","","",8,null],[11,"deserialize_identifier","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",8,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"u8deserializer"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",9,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",9,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",9,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",9,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",9,null],[11,"deserialize_enum","","",9,null],[11,"deserialize_identifier","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",9,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"u16deserializer"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",10,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",10,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",10,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",10,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",10,null],[11,"deserialize_enum","","",10,null],[11,"deserialize_identifier","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",10,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"u64deserializer"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",11,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",11,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",11,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",11,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",11,null],[11,"deserialize_enum","","",11,null],[11,"deserialize_identifier","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",11,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"usizedeserializer"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",12,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",12,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",12,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",12,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",12,null],[11,"deserialize_enum","","",12,null],[11,"deserialize_identifier","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",12,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"f32deserializer"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",13,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",13,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",13,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",13,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",13,null],[11,"deserialize_enum","","",13,null],[11,"deserialize_identifier","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",13,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"f64deserializer"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",14,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",14,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",14,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",14,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",14,null],[11,"deserialize_enum","","",14,null],[11,"deserialize_identifier","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",14,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"chardeserializer"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",15,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",15,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",15,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",15,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",15,null],[11,"deserialize_enum","","",15,null],[11,"deserialize_identifier","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",15,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"u32deserializer"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",16,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",16,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",16,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",16,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",16,null],[11,"deserialize_identifier","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_any","","",16,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_enum","","",16,null],[11,"variant_seed","","",16,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"strdeserializer"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_any","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_enum","","",17,null],[11,"deserialize_bool","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",17,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",17,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",17,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",17,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",17,null],[11,"deserialize_identifier","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",17,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"variant_seed","","",17,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"borrowedstrdeserializer"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new borrowed deserializer from the given string.",18,{"i":[{"n":"str"}],"o":{"n":"borrowedstrdeserializer"}}],[11,"deserialize_any","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_enum","","",18,null],[11,"deserialize_bool","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",18,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",18,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",18,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",18,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",18,null],[11,"deserialize_identifier","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",18,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"variant_seed","","",18,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"stringdeserializer"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_any","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_enum","","",19,null],[11,"deserialize_bool","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",19,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",19,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",19,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",19,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",19,null],[11,"deserialize_identifier","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",19,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"variant_seed","","",19,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"cowstrdeserializer"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deserialize_any","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_enum","","",20,null],[11,"deserialize_bool","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",20,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",20,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",20,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",20,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",20,null],[11,"deserialize_identifier","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",20,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"variant_seed","","",20,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"borrowedbytesdeserializer"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new borrowed deserializer from the given byte slice.",21,null],[11,"deserialize_any","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",21,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",21,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",21,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",21,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",21,null],[11,"deserialize_identifier","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",21,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_enum","","",21,null],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"seqdeserializer"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",22,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"end","","Check for remaining elements after passing a `SeqDeserializer` to `Visitor::visit_seq`.",22,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"deserialize_any","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",22,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",22,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",22,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",22,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",22,null],[11,"deserialize_enum","","",22,null],[11,"deserialize_identifier","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"next_element_seed","","",22,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["option"],"n":"result"}}],[11,"size_hint","","",22,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"seqaccessdeserializer"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",23,{"i":[{"n":"a"}],"o":{"n":"self"}}],[11,"deserialize_any","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",23,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",23,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",23,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",23,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",23,null],[11,"deserialize_enum","","",23,null],[11,"deserialize_identifier","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",23,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"new","","Construct a new `MapDeserializer<I, E>`.",24,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"end","","Check for remaining elements after passing a `MapDeserializer` to `Visitor::visit_map`.",24,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"deserialize_any","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",24,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",24,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",24,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",24,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",24,null],[11,"deserialize_enum","","",24,null],[11,"deserialize_identifier","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",24,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"next_key_seed","","",24,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["option"],"n":"result"}}],[11,"next_value_seed","","",24,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"next_entry_seed","","",24,{"i":[{"n":"self"},{"n":"tk"},{"n":"tv"}],"o":{"g":["option"],"n":"result"}}],[11,"size_hint","","",24,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"next_element_seed","","",24,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["option"],"n":"result"}}],[11,"size_hint","","",24,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"mapaccessdeserializer"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",25,{"i":[{"n":"a"}],"o":{"n":"self"}}],[11,"deserialize_any","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",25,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",25,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",25,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",25,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",25,null],[11,"deserialize_enum","","",25,null],[11,"deserialize_identifier","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",25,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"clone","serde::de","",26,{"i":[{"n":"self"}],"o":{"n":"ignoredany"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",26,{"o":{"n":"ignoredany"}}],[11,"expecting","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"visit_bool","","",26,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"visit_i64","","",26,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"visit_u64","","",26,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"visit_f64","","",26,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}],[11,"visit_str","","",26,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"visit_none","","",26,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"visit_some","","",26,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"result"}}],[11,"visit_newtype_struct","","",26,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"result"}}],[11,"visit_unit","","",26,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"visit_seq","","",26,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"result"}}],[11,"visit_map","","",26,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"result"}}],[11,"visit_bytes","","",26,null],[11,"deserialize","","",26,{"i":[{"n":"d"}],"o":{"g":["ignoredany"],"n":"result"}}],[8,"Error","","The `Error` trait allows `Deserialize` implementations to create descriptive error messages belonging to the `Deserializer` against which they are currently running.",null,null],[10,"custom","","Raised when there is general error when deserializing a type.",27,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from what it was expecting.",27,{"i":[{"n":"unexpected"},{"n":"expected"}],"o":{"n":"self"}}],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right type but that is wrong for some other reason.",27,{"i":[{"n":"unexpected"},{"n":"expected"}],"o":{"n":"self"}}],[11,"invalid_length","","Raised when deserializing a sequence or map and the input data contains too many or too few elements.",27,{"i":[{"n":"usize"},{"n":"expected"}],"o":{"n":"self"}}],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant with an unrecognized name.",27,null],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field with an unrecognized name.",27,null],[11,"missing_field","","Raised when a `Deserialize` struct type expected to receive a required field with a particular name but that field was not present in the input.",27,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the same field.",27,{"i":[{"n":"str"}],"o":{"n":"self"}}],[8,"Expected","","`Expected` represents an explanation of what data a `Visitor` was expecting to receive.",null,null],[10,"fmt","","Format an explanation of what data was being expected. Same signature as the `Display` and `Debug` traits.",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",29,{"i":[{"n":"d"}],"o":{"n":"result"}}],[8,"DeserializeOwned","","A data structure that can be deserialized without borrowing any data from the deserializer.",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the `Deserialize` trait. If you ever find yourself looking for a way to pass data into a `Deserialize` impl, this trait is the way to do it.",null,null],[16,"Value","","The type produced by using this seed.",30,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize` method, except with some initial piece of data (the seed) passed in.",30,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"result"}}],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",31,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",31,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",31,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",31,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",31,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",31,null],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",31,null],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",31,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",null,null],[16,"Value","","The value produced by this visitor.",32,null],[10,"expecting","","Format a message stating what data this Visitor expects to receive.",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"visit_bool","","The input contains a boolean.",32,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"visit_i8","","The input contains an `i8`.",32,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[11,"visit_i16","","The input contains an `i16`.",32,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[11,"visit_i32","","The input contains an `i32`.",32,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"visit_i64","","The input contains an `i64`.",32,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"visit_u8","","The input contains a `u8`.",32,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[11,"visit_u16","","The input contains a `u16`.",32,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[11,"visit_u32","","The input contains a `u32`.",32,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"visit_u64","","The input contains a `u64`.",32,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"visit_f32","","The input contains an `f32`.",32,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[11,"visit_f64","","The input contains an `f64`.",32,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}],[11,"visit_char","","The input contains a `char`.",32,{"i":[{"n":"self"},{"n":"char"}],"o":{"n":"result"}}],[11,"visit_str","","The input contains a string. The lifetime of the string is ephemeral and it may be destroyed after this method returns.",32,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as the `Deserializer`.",32,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"visit_string","","The input contains a string and ownership of the string is being given to the `Visitor`.",32,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"result"}}],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte array is ephemeral and it may be destroyed after this method returns.",32,null],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as long as the `Deserializer`.",32,null],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte array is being given to the `Visitor`.",32,{"i":[{"n":"self"},{"g":["u8"],"n":"vec"}],"o":{"n":"result"}}],[11,"visit_none","","The input contains an optional that is absent.",32,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"visit_some","","The input contains an optional that is present.",32,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"result"}}],[11,"visit_unit","","The input contains a unit `()`.",32,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"visit_newtype_struct","","The input contains a newtype struct.",32,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"result"}}],[11,"visit_seq","","The input contains a sequence of elements.",32,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"result"}}],[11,"visit_map","","The input contains a key-value map.",32,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"result"}}],[11,"visit_enum","","The input contains an enum.",32,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"result"}}],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",33,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",33,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["option"],"n":"result"}}],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",33,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"size_hint","","Returns the number of elements remaining in the sequence, if known.",33,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",34,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",34,{"i":[{"n":"self"},{"n":"k"}],"o":{"g":["option"],"n":"result"}}],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",34,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",34,{"i":[{"n":"self"},{"n":"k"},{"n":"v"}],"o":{"g":["option"],"n":"result"}}],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",34,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",34,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",34,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"size_hint","","Returns the number of entries remaining in the map, if known.",34,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",35,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content of the enum variant.",35,null],[10,"variant_seed","","`variant` is called to identify which variant to deserialize.",35,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"variant","","`variant` is called to identify which variant to deserialize.",35,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the `Deserializer` and passed to the `Deserialize` to deserialize the content of a particular enum variant.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization. Must match the error type of our `EnumAccess`.",36,null],[10,"unit_variant","","Called when deserializing a variant with no values.",36,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",36,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"newtype_variant","","Called when deserializing a variant with a single value.",36,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",36,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[10,"struct_variant","","Called when deserializing a struct-like variant.",36,null],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from which other values can be deserialized.",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",37,null],[10,"into_deserializer","","Convert this value into a deserializer.",37,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"unexpected"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"unexpected"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"unexpected"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not support serializing one of the compound types.",null,null],[11,"serialize_element","","",38,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"end","","",38,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"serialize_element","","",38,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"end","","",38,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"serialize_field","","",38,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"end","","",38,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"serialize_field","","",38,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"end","","",38,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"serialize_key","","",38,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"serialize_value","","",38,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"end","","",38,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"serialize_field","","",38,{"i":[{"n":"self"},{"n":"str"},{"n":"t"}],"o":{"n":"result"}}],[11,"end","","",38,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"serialize_field","","",38,{"i":[{"n":"self"},{"n":"str"},{"n":"t"}],"o":{"n":"result"}}],[11,"end","","",38,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"Error","","Trait used by `Serialize` implementations to generically construct errors belonging to the `Serializer` against which they are currently running.",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any error while serializing a type.",39,{"i":[{"n":"t"}],"o":{"n":"self"}}],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",40,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",null,null],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",41,null],[16,"Error","","The error type when some error occurs during serialization.",41,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",41,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",41,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",41,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",41,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",41,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",41,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",41,null],[10,"serialize_bool","","Serialize a `bool` value.",41,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"serialize_i8","","Serialize an `i8` value.",41,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[10,"serialize_i16","","Serialize an `i16` value.",41,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[10,"serialize_i32","","Serialize an `i32` value.",41,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[10,"serialize_i64","","Serialize an `i64` value.",41,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[10,"serialize_u8","","Serialize a `u8` value.",41,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[10,"serialize_u16","","Serialize a `u16` value.",41,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[10,"serialize_u32","","Serialize a `u32` value.",41,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"serialize_u64","","Serialize a `u64` value.",41,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[10,"serialize_f32","","Serialize an `f32` value.",41,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[10,"serialize_f64","","Serialize an `f64` value.",41,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}],[10,"serialize_char","","Serialize a character.",41,{"i":[{"n":"self"},{"n":"char"}],"o":{"n":"result"}}],[10,"serialize_str","","Serialize a `&str`.",41,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",41,null],[10,"serialize_none","","Serialize a [`None`] value.",41,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"serialize_some","","Serialize a [`Some(T)`] value.",41,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[10,"serialize_unit","","Serialize a `()` value.",41,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",41,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"u32"},{"n":"str"}],"o":{"n":"result"}}],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"t"}],"o":{"n":"result"}}],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"u32"},{"n":"str"},{"n":"t"}],"o":{"n":"result"}}],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",41,{"i":[{"n":"self"},{"g":["usize"],"n":"option"}],"o":{"n":"result"}}],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",41,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"}],"o":{"n":"result"}}],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"u32"},{"n":"str"},{"n":"usize"}],"o":{"n":"result"}}],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",41,{"i":[{"n":"self"},{"g":["usize"],"n":"option"}],"o":{"n":"result"}}],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"}],"o":{"n":"result"}}],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"u32"},{"n":"str"},{"n":"usize"}],"o":{"n":"result"}}],[11,"collect_seq","","Collect an iterator as a sequence.",41,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"result"}}],[11,"collect_map","","Collect an iterator as a map.",41,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"result"}}],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",41,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",41,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",42,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",42,null],[10,"serialize_element","","Serialize a sequence element.",42,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[10,"end","","Finish serializing a sequence.",42,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",43,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",43,null],[10,"serialize_element","","Serialize a tuple element.",43,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[10,"end","","Finish serializing a tuple.",43,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",44,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",44,null],[10,"serialize_field","","Serialize a tuple struct field.",44,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[10,"end","","Finish serializing a tuple struct.",44,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",45,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",45,null],[10,"serialize_field","","Serialize a tuple variant field.",45,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[10,"end","","Finish serializing a tuple variant.",45,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",46,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",46,null],[10,"serialize_key","","Serialize a map key.",46,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[10,"serialize_value","","Serialize a map value.",46,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",46,{"i":[{"n":"self"},{"n":"k"},{"n":"v"}],"o":{"n":"result"}}],[10,"end","","Finish serializing a map.",46,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",47,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",47,null],[10,"serialize_field","","Serialize a struct field.",47,{"i":[{"n":"self"},{"n":"str"},{"n":"t"}],"o":{"n":"result"}}],[11,"skip_field","","Indicate that a struct field has been skipped.",47,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[10,"end","","Finish serializing a struct.",47,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",48,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",48,null],[10,"serialize_field","","Serialize a struct variant field.",48,{"i":[{"n":"self"},{"n":"str"},{"n":"t"}],"o":{"n":"result"}}],[11,"skip_field","","Indicate that a struct variant field has been skipped.",48,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[10,"end","","Finish serializing a struct variant.",48,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"Deserialize","serde","A data structure that can be deserialized from any data format supported by Serde.",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",29,{"i":[{"n":"d"}],"o":{"n":"result"}}],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",31,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",31,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",31,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",31,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",31,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",31,null],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",31,null],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",31,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",31,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",40,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",null,null],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",41,null],[16,"Error","","The error type when some error occurs during serialization.",41,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",41,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",41,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",41,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",41,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",41,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",41,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",41,null],[10,"serialize_bool","","Serialize a `bool` value.",41,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"serialize_i8","","Serialize an `i8` value.",41,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[10,"serialize_i16","","Serialize an `i16` value.",41,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[10,"serialize_i32","","Serialize an `i32` value.",41,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[10,"serialize_i64","","Serialize an `i64` value.",41,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[10,"serialize_u8","","Serialize a `u8` value.",41,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[10,"serialize_u16","","Serialize a `u16` value.",41,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[10,"serialize_u32","","Serialize a `u32` value.",41,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"serialize_u64","","Serialize a `u64` value.",41,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[10,"serialize_f32","","Serialize an `f32` value.",41,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[10,"serialize_f64","","Serialize an `f64` value.",41,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}],[10,"serialize_char","","Serialize a character.",41,{"i":[{"n":"self"},{"n":"char"}],"o":{"n":"result"}}],[10,"serialize_str","","Serialize a `&str`.",41,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",41,null],[10,"serialize_none","","Serialize a [`None`] value.",41,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"serialize_some","","Serialize a [`Some(T)`] value.",41,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[10,"serialize_unit","","Serialize a `()` value.",41,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",41,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"u32"},{"n":"str"}],"o":{"n":"result"}}],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"t"}],"o":{"n":"result"}}],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"u32"},{"n":"str"},{"n":"t"}],"o":{"n":"result"}}],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",41,{"i":[{"n":"self"},{"g":["usize"],"n":"option"}],"o":{"n":"result"}}],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",41,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"}],"o":{"n":"result"}}],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"u32"},{"n":"str"},{"n":"usize"}],"o":{"n":"result"}}],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",41,{"i":[{"n":"self"},{"g":["usize"],"n":"option"}],"o":{"n":"result"}}],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"}],"o":{"n":"result"}}],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",41,{"i":[{"n":"self"},{"n":"str"},{"n":"u32"},{"n":"str"},{"n":"usize"}],"o":{"n":"result"}}],[11,"collect_seq","","Collect an iterator as a sequence.",41,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"result"}}],[11,"collect_map","","Collect an iterator as a map.",41,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"result"}}],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",41,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",41,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of a new data format for Serde.",null,null]],"paths":[[4,"Unexpected"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[3,"IgnoredAny"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[3,"Impossible"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"]]};
searchIndex["serde_derive"] = {"doc":"This crate provides Serde's two derive macros.","items":[[5,"derive_serialize","serde_derive","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[5,"derive_deserialize","","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}]],"paths":[]};
searchIndex["serde_ignored"] = {"doc":"","items":[[3,"Deserializer","serde_ignored","Deserializer adapter that invokes a callback with the path to every unused field of the input.",null,null],[4,"Path","","Path to the current value in the input, like `dependencies.serde.typo1`.",null,null],[13,"Root","","",0,null],[13,"Seq","","",0,null],[12,"parent","serde_ignored::Path","",0,null],[12,"index","","",0,null],[13,"Map","serde_ignored","",0,null],[12,"parent","serde_ignored::Path","",0,null],[12,"key","","",0,null],[13,"Some","serde_ignored","",0,null],[12,"parent","serde_ignored::Path","",0,null],[13,"NewtypeStruct","serde_ignored","",0,null],[12,"parent","serde_ignored::Path","",0,null],[13,"NewtypeVariant","serde_ignored","",0,null],[12,"parent","serde_ignored::Path","",0,null],[5,"deserialize","serde_ignored","Entry point. See crate documentation for an example.",null,{"i":[{"n":"d"},{"n":"f"}],"o":{"n":"result"}}],[11,"new","","",1,{"i":[{"n":"d"},{"n":"f"}],"o":{"n":"self"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_any","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u8","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u16","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u32","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_u64","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i8","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i16","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i32","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_i64","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f32","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_f64","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",1,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",1,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",1,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",1,null],[11,"deserialize_enum","","",1,null],[11,"deserialize_ignored_any","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_identifier","","",1,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}]],"paths":[[4,"Path"],[3,"Deserializer"]]};
searchIndex["serde_json"] = {"doc":"Serde JSON","items":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON values.",null,null],[3,"Error","","This type represents all possible errors that can occur when serializing or deserializing JSON data.",null,null],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of JSON.",null,{"i":[{"n":"r"}],"o":{"n":"result"}}],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,null],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON text.",null,{"i":[{"n":"str"}],"o":{"n":"result"}}],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,{"i":[{"n":"t"}],"o":{"g":["string"],"n":"result"}}],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed String of JSON.",null,{"i":[{"n":"t"}],"o":{"g":["string"],"n":"result"}}],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,{"i":[{"n":"t"}],"o":{"g":["vec"],"n":"result"}}],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed JSON byte vector.",null,{"i":[{"n":"t"}],"o":{"g":["vec"],"n":"result"}}],[5,"to_writer","","Serialize the given data structure as JSON into the IO stream.",null,{"i":[{"n":"w"},{"n":"t"}],"o":{"n":"result"}}],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON into the IO stream.",null,{"i":[{"n":"w"},{"n":"t"}],"o":{"n":"result"}}],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,{"i":[{"n":"value"}],"o":{"g":["error"],"n":"result"}}],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum that can represent any valid JSON data.",null,{"i":[{"n":"t"}],"o":{"g":["value","error"],"n":"result"}}],[0,"de","","Deserialize JSON data to a Rust data structure.",null,null],[3,"IoRead","serde_json::de","JSON input source that reads from a std::io input stream.",null,null],[3,"SliceRead","","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON values.",null,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of JSON.",null,{"i":[{"n":"r"}],"o":{"n":"result"}}],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,null],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON text.",null,{"i":[{"n":"str"}],"o":{"n":"result"}}],[8,"Read","","Trait used by the deserializer for iterating over input. This is manually \"specialized\" for iterating over &[u8]. Once feature(specialization) is stable we can use actual specialization.",null,null],[11,"new","","Create a JSON deserializer from one of the possible serde_json input sources.",1,{"i":[{"n":"r"}],"o":{"n":"self"}}],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,{"i":[{"n":"r"}],"o":{"n":"self"}}],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,null],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"end","","The `Deserializer::end` method should be called after a value has been fully deserialized. This allows the `Deserializer` to validate that the input stream is at the end or that it only has trailing whitespace.",1,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of type T.",1,{"i":[{"n":"self"}],"o":{"n":"streamdeserializer"}}],[11,"from_str","serde_json","",2,{"i":[{"n":"str"}],"o":{"n":"result"}}],[11,"new","serde_json::de","Create a JSON stream deserializer from one of the possible serde_json input sources.",3,{"i":[{"n":"r"}],"o":{"n":"self"}}],[11,"byte_offset","","Returns the number of bytes so far deserialized into a successful `T`.",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",3,{"i":[{"n":"self"}],"o":{"g":["result"],"n":"option"}}],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur when serializing or deserializing JSON data.",null,null],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes on an IO stream.",4,null],[13,"Syntax","","The error was caused by input that was not syntactically valid JSON.",4,null],[13,"Data","","The error was caused by input data that was semantically incorrect.",4,null],[13,"Eof","","The error was caused by prematurely reaching the end of the input data.",4,null],[6,"Result","","Alias for a `Result` with the error type `serde_json::Error`.",null,null],[11,"line","","One-based line number at which the error was detected.",5,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"column","","One-based column number at which the error was detected.",5,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"classify","","Categorizes the cause of this error.",5,{"i":[{"n":"self"}],"o":{"n":"category"}}],[11,"is_io","","Returns true if this error was caused by a failure to read or write bytes on an IO stream.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_syntax","","Returns true if this error was caused by input that was not syntactically valid JSON.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_data","","Returns true if this error was caused by input data that was semantically incorrect.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_eof","","Returns true if this error was caused by prematurely reaching the end of the input data.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"category"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"category"}],"o":{"n":"bool"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",5,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",5,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"custom","","",5,{"i":[{"n":"t"}],"o":{"n":"error"}}],[11,"invalid_type","","",5,{"i":[{"n":"unexpected"},{"n":"expected"}],"o":{"n":"self"}}],[11,"custom","","",5,{"i":[{"n":"t"}],"o":{"n":"error"}}],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",null,null],[3,"Iter","","An iterator over a serde_json::Map's entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map's keys.",null,null],[3,"Values","","An iterator over a serde_json::Map's values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map's values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be vacant or occupied. This enum is constructed from the [`entry`] method on [`Map`].",null,null],[13,"Vacant","","A vacant Entry.",6,null],[13,"Occupied","","An occupied Entry.",6,null],[11,"new","","Makes a new empty Map.",7,{"o":{"n":"self"}}],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",7,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"clear","","Clears the map, removing all values.",7,{"i":[{"n":"self"}]}],[11,"get","","Returns a reference to the value corresponding to the key.",7,{"i":[{"n":"self"},{"n":"q"}],"o":{"g":["value"],"n":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",7,{"i":[{"n":"self"},{"n":"q"}],"o":{"n":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",7,{"i":[{"n":"self"},{"n":"q"}],"o":{"g":["value"],"n":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",7,{"i":[{"n":"self"},{"n":"string"},{"n":"value"}],"o":{"g":["value"],"n":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key was previously in the map.",7,{"i":[{"n":"self"},{"n":"q"}],"o":{"g":["value"],"n":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"entry"}}],[11,"len","","Returns the number of elements in the map.",7,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"iter","","Gets an iterator over the entries of the map.",7,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",7,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"keys","","Gets an iterator over the keys of the map.",7,{"i":[{"n":"self"}],"o":{"n":"keys"}}],[11,"values","","Gets an iterator over the values of the map.",7,{"i":[{"n":"self"}],"o":{"n":"values"}}],[11,"values_mut","","Gets an iterator over mutable values of the map.",7,{"i":[{"n":"self"}],"o":{"n":"valuesmut"}}],[11,"default","","",7,{"o":{"n":"self"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"index","","",7,{"i":[{"n":"self"},{"n":"q"}],"o":{"n":"value"}}],[11,"index_mut","","",7,{"i":[{"n":"self"},{"n":"q"}],"o":{"n":"value"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"serialize","","",7,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"deserialize","","",7,{"i":[{"n":"d"}],"o":{"n":"result"}}],[11,"from_iter","","",7,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"extend","","",7,{"i":[{"n":"self"},{"n":"t"}]}],[11,"key","","Returns a reference to this entry's key.",6,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.",6,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"value"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.",6,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"value"}}],[11,"key","","Gets a reference to the key that would be used when inserting a value through the VacantEntry.",8,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key, and returns a mutable reference to it.",8,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"value"}}],[11,"key","","Gets a reference to the key in the entry.",9,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"get","","Gets a reference to the value in the entry.",9,{"i":[{"n":"self"}],"o":{"n":"value"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",9,{"i":[{"n":"self"}],"o":{"n":"value"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",9,{"i":[{"n":"self"}],"o":{"n":"value"}}],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s key, and returns the entry's old value.",9,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"value"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",9,{"i":[{"n":"self"}],"o":{"n":"value"}}],[11,"next","","",10,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",10,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",11,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",11,null],[11,"next_back","","",11,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",11,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"into_iter","","",7,null],[11,"next","","",12,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",12,null],[11,"next_back","","",12,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",12,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",13,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",13,null],[11,"next_back","","",13,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",13,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",14,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",14,null],[11,"next_back","","",14,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",14,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",15,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",15,null],[11,"next_back","","",15,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",15,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra whitespace.",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human readable.",null,null],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote `\"`",16,null],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",16,null],[13,"Solidus","","An escaped solidus `/`",16,null],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",16,null],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",16,null],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",16,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as `\\r`)",16,null],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",16,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped as `\\u00XX` where `XX` are two hex characters)",16,null],[5,"to_writer","","Serialize the given data structure as JSON into the IO stream.",null,{"i":[{"n":"w"},{"n":"t"}],"o":{"n":"result"}}],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON into the IO stream.",null,{"i":[{"n":"w"},{"n":"t"}],"o":{"n":"result"}}],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,{"i":[{"n":"t"}],"o":{"g":["vec"],"n":"result"}}],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed JSON byte vector.",null,{"i":[{"n":"t"}],"o":{"g":["vec"],"n":"result"}}],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,{"i":[{"n":"t"}],"o":{"g":["string"],"n":"result"}}],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed String of JSON.",null,{"i":[{"n":"t"}],"o":{"g":["string"],"n":"result"}}],[8,"Formatter","","This trait abstracts away serializing the JSON control characters, which allows the user to optionally pretty print the JSON output.",null,null],[11,"write_null","","Writes a `null` value to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"bool"}],"o":{"n":"result"}}],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"i8"}],"o":{"n":"result"}}],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"i16"}],"o":{"n":"result"}}],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"u8"}],"o":{"n":"result"}}],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"u16"}],"o":{"n":"result"}}],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"f32"}],"o":{"n":"result"}}],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"f64"}],"o":{"n":"result"}}],[11,"write_number_str","","Writes a number that has already been rendered to a string.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"str"}],"o":{"n":"result"}}],[11,"begin_string","","Called before each series of `write_string_fragment` and `write_char_escape`.  Writes a `\"` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"end_string","","Called after each series of `write_string_fragment` and `write_char_escape`.  Writes a `\"` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"str"}],"o":{"n":"result"}}],[11,"write_char_escape","","Writes a character escape code to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"charescape"}],"o":{"n":"result"}}],[11,"begin_array","","Called before every array.  Writes a `[` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"end_array","","Called after every array.  Writes a `]` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"begin_array_value","","Called before every array value.  Writes a `,` if needed to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"bool"}],"o":{"n":"result"}}],[11,"end_array_value","","Called after every array value.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"begin_object","","Called before every object.  Writes a `{` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"end_object","","Called after every object.  Writes a `}` to the specified writer.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"begin_object_key","","Called before every object key.",17,{"i":[{"n":"self"},{"n":"w"},{"n":"bool"}],"o":{"n":"result"}}],[11,"end_object_key","","Called after every object key.  A `:` should be written to the specified writer by either this method or `begin_object_value`.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"begin_object_value","","Called before every object value.  A `:` should be written to the specified writer by either this method or `end_object_key`.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"end_object_value","","Called after every object value.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"new","","Creates a new JSON serializer.",18,{"i":[{"n":"w"}],"o":{"n":"self"}}],[11,"pretty","","Creates a new JSON pretty print serializer.",18,{"i":[{"n":"w"}],"o":{"n":"self"}}],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to the writer specified.",18,{"i":[{"n":"w"},{"n":"f"}],"o":{"n":"self"}}],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",18,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"compactformatter"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"prettyformatter"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a pretty printer formatter that defaults to using two spaces for indentation.",20,{"o":{"n":"self"}}],[11,"with_indent","","Construct a pretty printer formatter that uses the `indent` string for indentation.",20,null],[11,"default","","",20,{"o":{"n":"self"}}],[11,"begin_array","","",20,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"end_array","","",20,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"begin_array_value","","",20,{"i":[{"n":"self"},{"n":"w"},{"n":"bool"}],"o":{"n":"result"}}],[11,"end_array_value","","",20,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"begin_object","","",20,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"end_object","","",20,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"begin_object_key","","",20,{"i":[{"n":"self"},{"n":"w"},{"n":"bool"}],"o":{"n":"result"}}],[11,"begin_object_value","","",20,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"end_object_value","","",20,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[0,"value","serde_json","The Value enum, a loosely typed way of representing any valid JSON value.",null,null],[3,"Number","serde_json::value","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum that can represent any valid JSON data.",null,{"i":[{"n":"t"}],"o":{"g":["value","error"],"n":"result"}}],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,{"i":[{"n":"value"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize","","",0,{"i":[{"n":"d"}],"o":{"g":["value"],"n":"result"}}],[11,"fmt","","Display a JSON value as a string.",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",0,{"i":[{"n":"str"}],"o":{"g":["value","error"],"n":"result"}}],[11,"deserialize_any","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_i8","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_i16","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_i32","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_i64","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_u8","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_u16","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_u32","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_u64","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_f32","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_f64","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_option","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_enum","","",0,null],[11,"deserialize_newtype_struct","","",0,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bool","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",0,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",0,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",0,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",0,null],[11,"deserialize_identifier","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"from","","",0,{"i":[{"n":"i8"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"i16"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"i32"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"i64"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"isize"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"u8"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"u16"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"u32"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"u64"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"from","","Convert 32-bit floating point number to `Value`",0,{"i":[{"n":"f32"}],"o":{"n":"self"}}],[11,"from","","Convert 64-bit floating point number to `Value`",0,{"i":[{"n":"f64"}],"o":{"n":"self"}}],[11,"from","","Convert boolean to `Value`",0,{"i":[{"n":"bool"}],"o":{"n":"self"}}],[11,"from","","Convert `String` to `Value`",0,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"from","","Convert string slice to `Value`",0,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","Convert copy-on-write string to `Value`",0,{"i":[{"g":["str"],"n":"cow"}],"o":{"n":"self"}}],[11,"from","","Convert map (with string keys) to `Value`",0,{"i":[{"g":["string","value"],"n":"map"}],"o":{"n":"self"}}],[11,"from","","Convert a `Vec` to `Value`",0,{"i":[{"n":"vec"}],"o":{"n":"self"}}],[11,"from","","Convert a slice to `Value`",0,null],[11,"from_iter","","Convert an iteratable type to a `Value`",0,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"index","","Index into a `serde_json::Value` using the syntax `value[0]` or `value[\"k\"]`.",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"value"}}],[11,"index_mut","","Write into a `serde_json::Value` using the syntax `value[0] = ...` or `value[\"k\"] = ...`.",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"value"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"isize"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"bool"}}],[11,"serialize","","",0,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"value"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"value"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get","","Index into a JSON array or map. A string index can be used to access a value in a map, and a usize index can be used to access an element of an array.",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"g":["value"],"n":"option"}}],[11,"get_mut","","Mutably index into a JSON array or map. A string index can be used to access a value in a map, and a usize index can be used to access an element of an array.",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"g":["value"],"n":"option"}}],[11,"is_object","","Returns true if the `Value` is an Object. Returns false otherwise.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_object","","If the `Value` is an Object, returns the associated Map. Returns None otherwise.",0,{"i":[{"n":"self"}],"o":{"g":["map"],"n":"option"}}],[11,"as_object_mut","","If the `Value` is an Object, returns the associated mutable Map. Returns None otherwise.",0,{"i":[{"n":"self"}],"o":{"g":["map"],"n":"option"}}],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_array","","If the `Value` is an Array, returns the associated vector. Returns None otherwise.",0,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"option"}}],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable vector. Returns None otherwise.",0,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"option"}}],[11,"is_string","","Returns true if the `Value` is a String. Returns false otherwise.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_str","","If the `Value` is a String, returns the associated str. Returns None otherwise.",0,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_i64","","Returns true if the `Value` is an integer between `i64::MIN` and `i64::MAX`.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_u64","","Returns true if the `Value` is an integer between zero and `u64::MAX`.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_f64","","Returns true if the `Value` is a number that can be represented by f64.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if possible. Returns None otherwise.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if possible. Returns None otherwise.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"option"}}],[11,"as_f64","","If the `Value` is a number, represent it as f64 if possible. Returns None otherwise.",0,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"option"}}],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false otherwise.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool. Returns None otherwise.",0,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"option"}}],[11,"is_null","","Returns true if the `Value` is a Null. Returns false otherwise.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_null","","If the `Value` is a Null, returns (). Returns None otherwise.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"pointer","","Looks up a value by a JSON Pointer.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["value"],"n":"option"}}],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable reference to that value.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["value"],"n":"option"}}],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in its place.",0,{"i":[{"n":"self"}],"o":{"n":"value"}}],[11,"default","","",0,{"o":{"n":"value"}}],[11,"clone","serde_json","",2,{"i":[{"n":"self"}],"o":{"n":"number"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"number"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"number"}],"o":{"n":"bool"}}],[11,"is_i64","","Returns true if the `Number` is an integer between `i64::MIN` and `i64::MAX`.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_u64","","Returns true if the `Number` is an integer between zero and `u64::MAX`.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if possible. Returns None otherwise.",2,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if possible. Returns None otherwise.",2,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"option"}}],[11,"as_f64","","Represents the number as f64 if possible. Returns None otherwise.",2,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"option"}}],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN values are not JSON numbers.",2,{"i":[{"n":"f64"}],"o":{"g":["number"],"n":"option"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"serialize","","",2,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"deserialize","","",2,{"i":[{"n":"d"}],"o":{"g":["number"],"n":"result"}}],[11,"deserialize_any","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_i8","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_i16","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_i32","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_i64","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_u8","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_u16","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_u32","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_u64","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_f32","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_f64","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize_bool","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_char","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_str","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_string","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_bytes","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_byte_buf","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_option","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_unit_struct","","",2,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_newtype_struct","","",2,{"i":[{"n":"self"},{"n":"str"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_seq","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple","","",2,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_tuple_struct","","",2,{"i":[{"n":"self"},{"n":"str"},{"n":"usize"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_map","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_struct","","",2,null],[11,"deserialize_enum","","",2,null],[11,"deserialize_identifier","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"deserialize_ignored_any","","",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"result"}}],[11,"from","","",2,{"i":[{"n":"u8"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"u16"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"u32"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"u64"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"i8"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"i16"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"i32"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"i64"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"isize"}],"o":{"n":"self"}}],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input stream.",21,{"i":[{"n":"r"}],"o":{"n":"self"}}],[11,"next","","",21,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"peek","","",21,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"discard","","",21,{"i":[{"n":"self"}]}],[11,"position","","",21,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"peek_position","","",21,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"byte_offset","","",21,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"parse_str","","",21,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["reference"],"n":"result"}}],[11,"parse_str_raw","","",21,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["reference"],"n":"result"}}],[11,"ignore_str","","",21,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"new","","Create a JSON input source to read from a slice of bytes.",22,null],[11,"next","","",22,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"peek","","",22,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"discard","","",22,{"i":[{"n":"self"}]}],[11,"position","","",22,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"peek_position","","",22,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"byte_offset","","",22,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"parse_str","","",22,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["reference"],"n":"result"}}],[11,"parse_str_raw","","",22,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["reference"],"n":"result"}}],[11,"ignore_str","","",22,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"new","","Create a JSON input source to read from a UTF-8 string.",23,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"next","","",23,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"peek","","",23,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"discard","","",23,{"i":[{"n":"self"}]}],[11,"position","","",23,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"peek_position","","",23,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"byte_offset","","",23,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"parse_str","","",23,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["reference"],"n":"result"}}],[11,"parse_str_raw","","",23,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["reference"],"n":"result"}}],[11,"ignore_str","","",23,{"i":[{"n":"self"}],"o":{"n":"result"}}],[6,"Result","serde_json","Alias for a `Result` with the error type `serde_json::Error`.",null,null],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",null,null]],"paths":[[4,"Value"],[3,"Deserializer"],[3,"Number"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"CompactFormatter"],[3,"PrettyFormatter"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"]]};
searchIndex["sha1"] = {"doc":"A minimal implementation of SHA1 for rust.","items":[[3,"Sha1","sha1","Represents a Sha1 hash object in memory.",null,null],[3,"Digest","","Digest generated from a `Sha1` instance.",null,null],[3,"DigestParseError","","Indicates that a digest couldn't be parsed.",null,null],[17,"DIGEST_LENGTH","","The length of a SHA1 digest in bytes",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"sha1"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"ordering"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"hash","","",0,null],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"ordering"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"digest"}}],[11,"default","","",1,{"o":{"n":"digest"}}],[11,"default","","",0,{"o":{"n":"sha1"}}],[11,"new","","Creates an fresh sha1 hash object.",0,{"o":{"n":"sha1"}}],[11,"from","","Shortcut to create a sha1 from some bytes.",0,{"i":[{"n":"d"}],"o":{"n":"sha1"}}],[11,"reset","","Resets the hash object to it's initial state.",0,{"i":[{"n":"self"}]}],[11,"update","","Update hash with input data.",0,null],[11,"digest","","Retrieve digest result.",0,{"i":[{"n":"self"}],"o":{"n":"digest"}}],[11,"hexdigest","","Retrieve the digest result as hex string directly.",0,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"bytes","","Returns the 160 bit (20 byte) digest as a byte array.",1,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"digestparseerror"}}],[11,"hash","","",2,null],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"le","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"gt","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"ge","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from_str","","",1,{"i":[{"n":"str"}],"o":{"g":["digest","digestparseerror"],"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Sha1"],[3,"Digest"],[3,"DigestParseError"]]};
searchIndex["siphasher"] = {"doc":"","items":[[0,"sip","siphasher","An implementation of SipHash.",null,null],[3,"SipHasher13","siphasher::sip","An implementation of SipHash 1-3.",null,null],[3,"SipHasher24","","An implementation of SipHash 2-4.",null,null],[3,"SipHasher","","An implementation of SipHash 2-4.",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"siphasher13"}}],[11,"default","","",0,{"o":{"n":"siphasher13"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"siphasher24"}}],[11,"default","","",1,{"o":{"n":"siphasher24"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"siphasher"}}],[11,"default","","",2,{"o":{"n":"siphasher"}}],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",2,{"o":{"n":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",2,{"i":[{"n":"u64"},{"n":"u64"}],"o":{"n":"siphasher"}}],[11,"keys","","Get the keys used by this hasher",2,null],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",0,{"o":{"n":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",0,{"i":[{"n":"u64"},{"n":"u64"}],"o":{"n":"siphasher13"}}],[11,"keys","","Get the keys used by this hasher",0,null],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",1,{"o":{"n":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",1,{"i":[{"n":"u64"},{"n":"u64"}],"o":{"n":"siphasher24"}}],[11,"keys","","Get the keys used by this hasher",1,null],[11,"write","","",2,null],[11,"finish","","",2,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"write","","",0,null],[11,"finish","","",0,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"write","","",1,null],[11,"finish","","",1,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[0,"sip128","siphasher","An implementation of SipHash with a 128-bit output.",null,null],[3,"Hash128","siphasher::sip128","A 128-bit (2x64) hash output",null,null],[12,"h1","","",3,null],[12,"h2","","",3,null],[3,"SipHasher13","","An implementation of SipHash128 1-3.",null,null],[3,"SipHasher24","","An implementation of SipHash128 2-4.",null,null],[3,"SipHasher","","An implementation of SipHash128 2-4.",null,null],[8,"Hasher128","","",null,null],[10,"finish128","","Return a 128-bit hash",4,{"i":[{"n":"self"}],"o":{"n":"hash128"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"hash128"}}],[11,"default","","",3,{"o":{"n":"hash128"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"siphasher13"}}],[11,"default","","",5,{"o":{"n":"siphasher13"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"siphasher24"}}],[11,"default","","",6,{"o":{"n":"siphasher24"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"siphasher"}}],[11,"default","","",7,{"o":{"n":"siphasher"}}],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",7,{"o":{"n":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",7,{"i":[{"n":"u64"},{"n":"u64"}],"o":{"n":"siphasher"}}],[11,"keys","","Get the keys used by this hasher",7,null],[11,"finish128","","Return a 128-bit hash",7,{"i":[{"n":"self"}],"o":{"n":"hash128"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",5,{"o":{"n":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",5,{"i":[{"n":"u64"},{"n":"u64"}],"o":{"n":"siphasher13"}}],[11,"keys","","Get the keys used by this hasher",5,null],[11,"finish128","","Return a 128-bit hash",5,{"i":[{"n":"self"}],"o":{"n":"hash128"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",6,{"o":{"n":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",6,{"i":[{"n":"u64"},{"n":"u64"}],"o":{"n":"siphasher24"}}],[11,"keys","","Get the keys used by this hasher",6,null],[11,"finish128","","Return a 128-bit hash",6,{"i":[{"n":"self"}],"o":{"n":"hash128"}}],[11,"write","","",7,null],[11,"finish","","",7,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"write","","",5,null],[11,"finish","","",5,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"write","","",6,null],[11,"finish","","",6,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"as_bytes","","Convert into a 16-bytes vector",3,null]],"paths":[[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"Hash128"],[8,"Hasher128"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"]]};
searchIndex["slog"] = {"doc":"Slog -  Structured, extensible, composable logging for Rust","items":[[3,"Logger","slog","Logging handle used to execute logging statements",null,null],[3,"Discard","","`Drain` discarding everything",null,null],[3,"Filter","","`Drain` filtering records",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"LevelFilter","","`Drain` filtering records by `Record` logging level",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[3,"MapError","","`Drain` mapping error returned by another `Drain`",null,null],[3,"Duplicate","","`Drain` duplicating records into two other `Drain`s",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[3,"Fuse","","`Drain` panicking on error",null,null],[12,"0","","",3,null],[3,"IgnoreResult","","`Drain` ignoring result",null,null],[3,"Record","","One logging record",null,null],[3,"FnValue","","Explicit lazy-closure `Value`",null,null],[12,"0","","",4,null],[3,"PushFnValueSerializer","","Handle passed to `PushFnValue` closure",null,null],[3,"PushFnValue","","Lazy `Value` that writes to Serializer",null,null],[12,"0","","",5,null],[3,"SingleKV","","Single pair `Key` and `Value`",null,null],[12,"0","","",6,null],[12,"1","","",6,null],[3,"OwnedKV","","Owned KV",null,null],[3,"BorrowedKV","","Borrowed `KV`",null,null],[3,"OwnedKVList","","Chain of `SyncMultiSerialize`-s of a `Logger` and its ancestors",null,null],[4,"MutexDrainError","","Error returned by `Mutex<D : Drain>`",null,null],[13,"Mutex","","Error acquiring mutex",7,null],[13,"Drain","","Error returned by drain",7,null],[4,"Level","","Logging level associated with a logging `Record`",null,null],[13,"Critical","","Critical",8,null],[13,"Error","","Error",8,null],[13,"Warning","","Warning",8,null],[13,"Info","","Info",8,null],[13,"Debug","","Debug",8,null],[13,"Trace","","Trace",8,null],[4,"FilterLevel","","Logging filtering level",null,null],[13,"Off","","Log nothing",9,null],[13,"Critical","","Log critical level only",9,null],[13,"Error","","Log only error level and above",9,null],[13,"Warning","","Log only warning level and above",9,null],[13,"Info","","Log only info level and above",9,null],[13,"Debug","","Log only debug level and above",9,null],[13,"Trace","","Log everything",9,null],[4,"Error","","Serialization Error",null,null],[13,"Io","","`io::Error` (not available in ![no_std] mode)",10,null],[13,"Fmt","","`fmt::Error`",10,null],[13,"Other","","Other error",10,null],[0,"ser","","Compatibility name to ease upgrading from `slog v1`",null,null],[6,"Key","","Key type",null,null],[6,"PushFnSerializer","","Old name of `PushFnValueSerializer`",null,null],[6,"Result","","Serialization `Result`",null,null],[6,"Serialize","","Compatibility name to ease upgrading from `slog v1`",null,null],[6,"PushLazy","","Compatibility name to ease upgrading from `slog v1`",null,null],[6,"ValueSerializer","","Compatibility name to ease upgrading from `slog v1`",null,null],[6,"OwnedKeyValueList","","Compatibility name to ease upgrading from `slog v1`",null,null],[7,"LOG_LEVEL_NAMES","","Official capitalized logging (and logging filtering) level names",null,null],[7,"LOG_LEVEL_SHORT_NAMES","","Official capitalized logging (and logging filtering) short level names",null,null],[8,"Drain","","Logging drain",null,null],[16,"Ok","","Type returned by this drain",11,null],[16,"Err","","Type of potential errors that can be returned by this `Drain`",11,null],[10,"log","","Handle one logging statement (`Record`)",11,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"n":"result"}}],[11,"is_enabled","","Avoid: Check if messages at the specified log level are maybe enabled for this logger.",11,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"is_critical_enabled","","Avoid: See `is_enabled`",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_error_enabled","","Avoid: See `is_enabled`",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_warning_enabled","","Avoid: See `is_enabled`",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_info_enabled","","Avoid: See `is_enabled`",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_debug_enabled","","Avoid: See `is_enabled`",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_trace_enabled","","Avoid: See `is_enabled`",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"map","","Pass `Drain` through a closure, eg. to wrap into another `Drain`.",11,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"r"}}],[11,"filter","","Filter logging records passed to `Drain`",11,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"filter"}}],[11,"filter_level","","Filter logging records passed to `Drain` (by level)",11,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"levelfilter"}}],[11,"map_err","","Map logging errors returned by this drain",11,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"maperror"}}],[11,"ignore_res","","Ignore results returned by this drain",11,{"i":[{"n":"self"}],"o":{"n":"ignoreresult"}}],[11,"fuse","","Make `Self` panic when returning any errors",11,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[8,"SendSyncUnwindSafe","","`Send + Sync + UnwindSafe` bound",null,null],[8,"SendSyncUnwindSafeDrain","","`Drain + Send + Sync + UnwindSafe` bound",null,null],[8,"SendSyncRefUnwindSafeDrain","","`Drain + Send + Sync + RefUnwindSafe` bound",null,null],[8,"MapErrFn","","Function that can be used in `MapErr` drain",null,null],[8,"FilterFn","","Function that can be used in `Filter` drain",null,null],[8,"SendRefUnwindSafeDrain","","`Drain + Send + RefUnwindSafe` bound",null,null],[8,"Serializer","","Serializer",null,null],[11,"emit_usize","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"usize"}],"o":{"n":"result"}}],[11,"emit_isize","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"isize"}],"o":{"n":"result"}}],[11,"emit_bool","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"bool"}],"o":{"n":"result"}}],[11,"emit_char","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"char"}],"o":{"n":"result"}}],[11,"emit_u8","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"u8"}],"o":{"n":"result"}}],[11,"emit_i8","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"i8"}],"o":{"n":"result"}}],[11,"emit_u16","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"u16"}],"o":{"n":"result"}}],[11,"emit_i16","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"i16"}],"o":{"n":"result"}}],[11,"emit_u32","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"u32"}],"o":{"n":"result"}}],[11,"emit_i32","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"i32"}],"o":{"n":"result"}}],[11,"emit_f32","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"f32"}],"o":{"n":"result"}}],[11,"emit_u64","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"u64"}],"o":{"n":"result"}}],[11,"emit_i64","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"i64"}],"o":{"n":"result"}}],[11,"emit_f64","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"f64"}],"o":{"n":"result"}}],[11,"emit_str","","Emit $t",12,{"i":[{"n":"self"},{"n":"key"},{"n":"str"}],"o":{"n":"result"}}],[11,"emit_unit","","Emit `()`",12,{"i":[{"n":"self"},{"n":"key"}],"o":{"n":"result"}}],[11,"emit_none","","Emit `None`",12,{"i":[{"n":"self"},{"n":"key"}],"o":{"n":"result"}}],[10,"emit_arguments","","Emit `fmt::Arguments`",12,{"i":[{"n":"self"},{"n":"key"},{"n":"arguments"}],"o":{"n":"result"}}],[8,"Value","","Value that can be serialized",null,null],[10,"serialize","","Serialize self into `Serializer`",13,{"i":[{"n":"self"},{"n":"record"},{"n":"key"},{"n":"serializer"}],"o":{"n":"result"}}],[8,"KV","","Key-value pair(s) for log events",null,null],[10,"serialize","","Serialize self into `Serializer`",14,{"i":[{"n":"self"},{"n":"record"},{"n":"serializer"}],"o":{"n":"result"}}],[8,"SendSyncRefUnwindSafeKV","","Thread-local safety bound for `KV`",null,null],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"logger"}}],[11,"root","","Build a root `Logger`",15,{"i":[{"n":"d"},{"n":"ownedkv"}],"o":{"n":"logger"}}],[11,"root_typed","","Build a root `Logger` that retains `drain` type",15,{"i":[{"n":"d"},{"n":"ownedkv"}],"o":{"n":"logger"}}],[11,"new","","Build a child logger",15,{"i":[{"n":"self"},{"n":"ownedkv"}],"o":{"n":"logger"}}],[11,"log","","Log one logging `Record`",15,{"i":[{"n":"self"},{"n":"record"}]}],[11,"list","","Get list of key-value pairs assigned to this `Logger`",15,{"i":[{"n":"self"}],"o":{"n":"ownedkvlist"}}],[11,"into_erased","","Convert to default, \"erased\" type: `Logger<Arc<SendSyncUnwindSafeDrain>>`",15,{"i":[{"n":"self"}],"o":{"g":["arc"],"n":"logger"}}],[11,"to_erased","","Create a copy with \"erased\" type",15,{"i":[{"n":"self"}],"o":{"g":["arc"],"n":"logger"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"log","","",15,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"n":"result"}}],[11,"is_enabled","","",15,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"discard"}}],[11,"log","","",16,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"g":["never"],"n":"result"}}],[11,"is_enabled","","",16,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"filter"}}],[11,"new","","Create `Filter` wrapping given `drain`",0,{"i":[{"n":"d"},{"n":"f"}],"o":{"n":"self"}}],[11,"log","","",0,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"n":"result"}}],[11,"is_enabled","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"levelfilter"}}],[11,"new","","Create `LevelFilter`",1,{"i":[{"n":"d"},{"n":"level"}],"o":{"n":"self"}}],[11,"log","","",1,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"n":"result"}}],[11,"is_enabled","","",1,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"new","","Create `Filter` wrapping given `drain`",17,{"i":[{"n":"d"},{"n":"f"}],"o":{"n":"self"}}],[11,"log","","",17,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"n":"result"}}],[11,"is_enabled","","",17,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"duplicate"}}],[11,"new","","Create `Duplicate`",2,{"i":[{"n":"d1"},{"n":"d2"}],"o":{"n":"self"}}],[11,"log","","",2,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"n":"result"}}],[11,"is_enabled","","",2,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[11,"new","","Create `Fuse` wrapping given `drain`",3,{"i":[{"n":"d"}],"o":{"n":"self"}}],[11,"log","","",3,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"g":["never"],"n":"result"}}],[11,"is_enabled","","",3,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"ignoreresult"}}],[11,"new","","Create `IgnoreResult` wrapping `drain`",18,{"i":[{"n":"d"}],"o":{"n":"self"}}],[11,"log","","",18,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"g":["never"],"n":"result"}}],[11,"is_enabled","","",18,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"mutexdrainerror"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"description","","",7,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",7,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"from","","",7,{"i":[{"g":["mutexguard"],"n":"poisonerror"}],"o":{"n":"mutexdrainerror"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"level"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"cmp","","",8,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",8,{"i":[{"n":"self"},{"n":"level"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"filterlevel"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"filterlevel"}],"o":{"n":"bool"}}],[11,"cmp","","",9,{"i":[{"n":"self"},{"n":"filterlevel"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",9,{"i":[{"n":"self"},{"n":"filterlevel"}],"o":{"g":["ordering"],"n":"option"}}],[11,"as_short_str","","Convert to `str` from `LOG_LEVEL_SHORT_NAMES`",8,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"as_str","","Convert to `str` from `LOG_LEVEL_NAMES`",8,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"as_usize","","Cast `Level` to ordering integer",8,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"from_usize","","Get a `Level` from an `usize`",8,{"i":[{"n":"usize"}],"o":{"g":["level"],"n":"option"}}],[11,"as_usize","","Convert to `usize` value",9,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"from_usize","","Get a `FilterLevel` from an `usize`",9,{"i":[{"n":"usize"}],"o":{"g":["filterlevel"],"n":"option"}}],[11,"max","","Maximum logging level (log everything)",9,{"o":{"n":"self"}}],[11,"min","","Minimum logging level (log nothing)",9,{"o":{"n":"self"}}],[11,"from_str","","",8,{"i":[{"n":"str"}],"o":{"g":["level"],"n":"result"}}],[11,"from_str","","",9,{"i":[{"n":"str"}],"o":{"g":["filterlevel"],"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"is_at_least","","Returns true if `self` is at least `level` logging level",8,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"msg","","Get a log record message",19,{"i":[{"n":"self"}],"o":{"n":"arguments"}}],[11,"level","","Get record logging level",19,{"i":[{"n":"self"}],"o":{"n":"level"}}],[11,"line","","Get line number",19,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"location","","Get line number",19,{"i":[{"n":"self"}],"o":{"n":"recordlocation"}}],[11,"column","","Get error column",19,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"file","","Get file path",19,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"tag","","Get tag",19,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"module","","Get module",19,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"function","","Get function (placeholder)",19,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"kv","","Get key-value pairs",19,{"i":[{"n":"self"}],"o":{"n":"borrowedkv"}}],[11,"serialize","","",4,{"i":[{"n":"self"},{"n":"record"},{"n":"key"},{"n":"serializer"}],"o":{"n":"result"}}],[11,"serialize","","Emit a value",20,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"emit","","Emit a value",20,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"drop","","",20,{"i":[{"n":"self"}]}],[11,"serialize","","",5,{"i":[{"n":"self"},{"n":"record"},{"n":"key"},{"n":"serializer"}],"o":{"n":"result"}}],[11,"from","","",6,null],[11,"serialize","","",6,{"i":[{"n":"self"},{"n":"record"},{"n":"serializer"}],"o":{"n":"result"}}],[11,"serialize","","",21,{"i":[{"n":"self"},{"n":"record"},{"n":"serializer"}],"o":{"n":"result"}}],[11,"serialize","","",22,{"i":[{"n":"self"},{"n":"record"},{"n":"serializer"}],"o":{"n":"result"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"ownedkvlist"}}],[11,"serialize","","",23,{"i":[{"n":"self"},{"n":"record"},{"n":"serializer"}],"o":{"n":"result"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",23,{"i":[{"n":"ownedkv"}],"o":{"n":"self"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",10,{"i":[{"n":"error"}],"o":{"n":"error"}}],[11,"from","","",10,{"i":[{"n":"error"}],"o":{"n":"error"}}],[11,"description","","",10,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",10,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[14,"o","","Macro for building group of key-value pairs: `OwnedKV`",null,null],[14,"slog_o","","Macro for building group of key-value pairs (alias)",null,null],[14,"b","","Macro for building group of key-value pairs in `BorrowedKV`",null,null],[14,"slog_b","","Alias of `b`",null,null],[14,"kv","","Macro for build `KV` implementing type",null,null],[14,"slog_kv","","Alias of `kv`",null,null],[14,"record_static","","Create `RecordStatic` at the given code location",null,null],[14,"slog_record_static","","Create `RecordStatic` at the given code location (alias)",null,null],[14,"record","","Create `Record` at the given code location",null,null],[14,"slog_record","","Create `Record` at the given code location (alias)",null,null],[14,"log","","Log message a logging record",null,null],[14,"slog_log","","Log message a logging record (alias)",null,null],[14,"crit","","Log critical level record",null,null],[14,"slog_crit","","Log critical level record (alias)",null,null],[14,"error","","Log error level record",null,null],[14,"slog_error","","Log error level record",null,null],[14,"warn","","Log warning level record",null,null],[14,"slog_warn","","Log warning level record (alias)",null,null],[14,"info","","Log info level record",null,null],[14,"slog_info","","Log info level record (alias)",null,null],[14,"debug","","Log debug level record",null,null],[14,"slog_debug","","Log debug level record (alias)",null,null],[14,"trace","","Log trace level record",null,null],[14,"slog_trace","","Log trace level record (alias)",null,null]],"paths":[[3,"Filter"],[3,"LevelFilter"],[3,"Duplicate"],[3,"Fuse"],[3,"FnValue"],[3,"PushFnValue"],[3,"SingleKV"],[4,"MutexDrainError"],[4,"Level"],[4,"FilterLevel"],[4,"Error"],[8,"Drain"],[8,"Serializer"],[8,"Value"],[8,"KV"],[3,"Logger"],[3,"Discard"],[3,"MapError"],[3,"IgnoreResult"],[3,"Record"],[3,"PushFnValueSerializer"],[3,"OwnedKV"],[3,"BorrowedKV"],[3,"OwnedKVList"]]};
searchIndex["slog_async"] = {"doc":"Async drain for slog-rs","items":[[3,"AsyncCoreBuilder","slog_async","`AsyncCore` builder",null,null],[3,"AsyncGuard","","Async guard",null,null],[3,"AsyncCore","","Core of `Async` drain",null,null],[3,"AsyncBuilder","","`Async` builder",null,null],[3,"Async","","Async drain",null,null],[4,"AsyncError","","Errors reported by `Async`",null,null],[13,"Full","","Could not send record to worker thread due to full queue",0,null],[13,"Fatal","","Fatal problem - mutex or channel poisoning issue",0,null],[4,"OverflowStrategy","","Behavior used when the channel is full.",null,null],[13,"DropAndReport","","The message gets dropped and a message with number of dropped is produced once there's space.",1,null],[13,"Drop","","The message gets dropped silently.",1,null],[13,"Block","","The caller is blocked until there's enough space.",1,null],[6,"AsyncResult","","`AsyncResult` alias",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",0,{"i":[{"n":"trysenderror"}],"o":{"n":"asyncerror"}}],[11,"from","","",0,{"i":[{"n":"trylockerror"}],"o":{"n":"asyncerror"}}],[11,"from","","",0,{"i":[{"n":"senderror"}],"o":{"n":"asyncerror"}}],[11,"from","","",0,{"i":[{"n":"poisonerror"}],"o":{"n":"asyncerror"}}],[11,"thread_name","","Configure a name to be used for the background thread.",2,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"self"}}],[11,"chan_size","","Set channel size used to send logging records to worker thread. When buffer is full `AsyncCore` will start returning `AsyncError::Full` or block, depending on the `blocking` configuration.",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"blocking","","Should the logging call be blocking if the channel is full?",2,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"self"}}],[11,"build","","Build `AsyncCore`",2,{"i":[{"n":"self"}],"o":{"n":"asynccore"}}],[11,"build_no_guard","","Build `AsyncCore`",2,{"i":[{"n":"self"}],"o":{"n":"asynccore"}}],[11,"build_with_guard","","Build `AsyncCore` with `AsyncGuard`",2,null],[11,"drop","","",3,{"i":[{"n":"self"}]}],[11,"new","","New `AsyncCore` with default parameters",4,{"i":[{"n":"d"}],"o":{"n":"self"}}],[11,"custom","","Build `AsyncCore` drain with custom parameters",4,{"i":[{"n":"d"}],"o":{"n":"asynccorebuilder"}}],[11,"log","","",4,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"n":"asyncresult"}}],[11,"drop","","",4,{"i":[{"n":"self"}]}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"overflowstrategy"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"overflowstrategy"}],"o":{"n":"bool"}}],[11,"hash","","",1,null],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"overflowstrategy"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"overflowstrategy"}],"o":{"g":["ordering"],"n":"option"}}],[11,"chan_size","","Set channel size used to send logging records to worker thread. When buffer is full `AsyncCore` will start returning `AsyncError::Full`.",5,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"overflow_strategy","","Sets what will happen if the channel is full.",5,{"i":[{"n":"self"},{"n":"overflowstrategy"}],"o":{"n":"self"}}],[11,"thread_name","","Configure a name to be used for the background thread.",5,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"self"}}],[11,"build","","Complete building `Async`",5,{"i":[{"n":"self"}],"o":{"n":"async"}}],[11,"build_no_guard","","Complete building `Async`",5,{"i":[{"n":"self"}],"o":{"n":"async"}}],[11,"build_with_guard","","Complete building `Async` with `AsyncGuard`",5,null],[11,"default","","New `AsyncCore` with default parameters",6,{"i":[{"n":"d"}],"o":{"n":"self"}}],[11,"new","","Build `Async` drain with custom parameters",6,{"i":[{"n":"d"}],"o":{"n":"asyncbuilder"}}],[11,"log","","",6,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"n":"asyncresult"}}],[11,"drop","","",6,{"i":[{"n":"self"}]}]],"paths":[[4,"AsyncError"],[4,"OverflowStrategy"],[3,"AsyncCoreBuilder"],[3,"AsyncGuard"],[3,"AsyncCore"],[3,"AsyncBuilder"],[3,"Async"]]};
searchIndex["slog_term"] = {"doc":"`slog-rs`'s `Drain` for terminal output","items":[[3,"FullFormat","slog_term","Terminal-output formatting `Drain`",null,null],[3,"FullFormatBuilder","","Streamer builder",null,null],[3,"CompactFormat","","Compact terminal-output formatting `Drain`",null,null],[3,"CompactFormatBuilder","","Streamer builder",null,null],[3,"PlainDecorator","","Plain (no-op) `Decorator` implementation",null,null],[3,"PlainRecordDecorator","","Record decorator used by `PlainDecorator`",null,null],[3,"PlainSyncDecorator","","PlainSync `Decorator` implementation",null,null],[3,"PlainSyncRecordDecorator","","`RecordDecorator` used by `PlainSyncDecorator`",null,null],[3,"TermDecoratorBuilder","","`TermDecorator` builder",null,null],[3,"TermDecorator","","`Decorator` implemented using `term` crate",null,null],[3,"TermRecordDecorator","","Record decorator used by `TermDecorator`",null,null],[3,"TestStdoutWriter","","Replacement for `std::io::stdout()` for when output capturing by rust's test harness is required.",null,null],[5,"timestamp_local","","Default local timezone timestamp function",null,{"i":[{"n":"write"}],"o":{"n":"result"}}],[5,"timestamp_utc","","Default UTC timestamp function",null,{"i":[{"n":"write"}],"o":{"n":"result"}}],[5,"term_compact","","Create a `CompactFormat` drain with default settings",null,{"o":{"g":["termdecorator"],"n":"compactformat"}}],[5,"term_full","","Create a `FullFormat` drain with default settings",null,{"o":{"g":["termdecorator"],"n":"fullformat"}}],[8,"Decorator","","Output decorator",null,null],[10,"with_record","","Get a `RecordDecorator` for a given `record`",0,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"},{"n":"f"}],"o":{"n":"result"}}],[8,"RecordDecorator","","Per-record decorator",null,null],[10,"reset","","Reset formatting to defaults",1,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_whitespace","","Format normal text",1,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_msg","","Format `Record` message",1,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_timestamp","","Format timestamp",1,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_level","","Format `Record` level",1,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_comma","","Format a comma between key-value pairs",1,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_key","","Format key",1,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_value","","Format a value",1,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_separator","","Format value",1,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"ThreadSafeTimestampFn","","Threadsafe timestamp formatting function type",null,null],[11,"use_utc_timestamp","","Use the UTC time zone for the timestamp",2,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"use_local_timestamp","","Use the local time zone for the timestamp (default)",2,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"use_custom_timestamp","","Provide a custom function to generate the timestamp",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"use_original_order","","Use the original ordering of key-value pairs",2,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"build","","Build `FullFormat`",2,{"i":[{"n":"self"}],"o":{"n":"fullformat"}}],[11,"log","","",3,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"n":"result"}}],[11,"new","","New `TermBuilder`",3,{"i":[{"n":"d"}],"o":{"n":"fullformatbuilder"}}],[11,"use_utc_timestamp","","Use the UTC time zone for the timestamp",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"use_local_timestamp","","Use the local time zone for the timestamp (default)",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"use_custom_timestamp","","Provide a custom function to generate the timestamp",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"build","","Build the streamer",4,{"i":[{"n":"self"}],"o":{"n":"compactformat"}}],[11,"log","","",5,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"}],"o":{"n":"result"}}],[11,"new","","New `CompactFormatBuilder`",5,{"i":[{"n":"d"}],"o":{"n":"compactformatbuilder"}}],[11,"new","","Create `PlainDecorator` instance",6,{"i":[{"n":"w"}],"o":{"n":"self"}}],[11,"with_record","","",6,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"},{"n":"f"}],"o":{"n":"result"}}],[11,"write","","",7,null],[11,"flush","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"drop","","",7,{"i":[{"n":"self"}]}],[11,"reset","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"new","","Create `PlainSyncDecorator` instance",8,{"i":[{"n":"w"}],"o":{"n":"self"}}],[11,"with_record","","",8,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"},{"n":"f"}],"o":{"n":"result"}}],[11,"write","","",9,null],[11,"flush","","",9,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"drop","","",9,{"i":[{"n":"self"}]}],[11,"reset","","",9,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"stderr","","Output to `stderr`",10,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"stdout","","Output to `stdout`",10,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"force_color","","Force colored output",10,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"force_plain","","Force colored output",10,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"try_build","","Try to build `TermDecorator`",10,{"i":[{"n":"self"}],"o":{"g":["termdecorator"],"n":"option"}}],[11,"build","","Build `TermDecorator`",10,{"i":[{"n":"self"}],"o":{"n":"termdecorator"}}],[11,"new","","Start building `TermDecorator`",11,{"o":{"n":"termdecoratorbuilder"}}],[11,"level_to_color","","`Level` color",11,{"i":[{"n":"level"}],"o":{"n":"u16"}}],[11,"with_record","","",11,{"i":[{"n":"self"},{"n":"record"},{"n":"ownedkvlist"},{"n":"f"}],"o":{"n":"result"}}],[11,"write","","",12,null],[11,"flush","","",12,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"drop","","",12,{"i":[{"n":"self"}]}],[11,"reset","","",12,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_level","","",12,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_key","","",12,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"start_msg","","",12,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"write","","",13,null],[11,"flush","","",13,{"i":[{"n":"self"}],"o":{"n":"result"}}]],"paths":[[8,"Decorator"],[8,"RecordDecorator"],[3,"FullFormatBuilder"],[3,"FullFormat"],[3,"CompactFormatBuilder"],[3,"CompactFormat"],[3,"PlainDecorator"],[3,"PlainRecordDecorator"],[3,"PlainSyncDecorator"],[3,"PlainSyncRecordDecorator"],[3,"TermDecoratorBuilder"],[3,"TermDecorator"],[3,"TermRecordDecorator"],[3,"TestStdoutWriter"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain number of elements inline, and fall back to the heap for larger allocations.  This can be a useful optimization for improving cache locality and reducing allocator traffic for workloads that fit within the inline buffer.","items":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and yields them by value.",null,null],[3,"SmallVec","","A `Vec`-like container that can store a small number of elements inline.",null,null],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its items by value.",null,null],[8,"VecLike","","Common operations implemented by both `Vec` and `SmallVec`.",null,null],[10,"push","","Append an element to the vector.",0,{"i":[{"n":"self"},{"n":"t"}]}],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be extended from a slice",null,null],[10,"extend_from_slice","","Extends a collection from a slice of its element type",1,null],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array's elements.",2,null],[10,"size","","Returns the number of items the array can hold.",2,{"o":{"n":"usize"}}],[10,"ptr","","Returns a pointer to the first element of the array.",2,null],[10,"ptr_mut","","Returns a mutable pointer to the first element of the array.",2,null],[11,"next","","",3,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",3,null],[11,"next_back","","",3,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"drop","","",3,{"i":[{"n":"self"}]}],[11,"new","","Construct an empty vector",4,{"o":{"n":"smallvec"}}],[11,"with_capacity","","Construct an empty vector with enough capacity pre-allocated to store at least `n` elements.",4,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",4,{"i":[{"n":"vec"}],"o":{"n":"smallvec"}}],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A` without copying elements.",4,{"i":[{"n":"a"}],"o":{"n":"smallvec"}}],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A` without copying elements. Also sets the length, which must be less or equal to the size of `buf`.",4,{"i":[{"n":"a"},{"n":"usize"}],"o":{"n":"smallvec"}}],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A` without copying elements. Also sets the length. The user is responsible for ensuring that `len <= A::size()`.",4,{"i":[{"n":"a"},{"n":"usize"}],"o":{"n":"smallvec"}}],[11,"set_len","","Sets the length of a vector.",4,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"inline_size","","The maximum number of elements this vector can hold inline",4,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"len","","The number of elements stored in the vector",4,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns `true` if the vector is empty",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"capacity","","The number of items the vector can hold without reallocating",4,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"spilled","","Returns `true` if the data has spilled into a separate heap-allocated buffer.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"drain","","Empty the vector and return an iterator over its former contents.",4,{"i":[{"n":"self"}],"o":{"n":"drain"}}],[11,"push","","Append an item to the vector.",4,null],[11,"pop","","Remove an item from the end of the vector and return it, or None if empty.",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"grow","","Re-allocate to set the capacity to `max(new_cap, inline_size())`.",4,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"reserve","","Reserve capacity for `additional` more elements to be inserted.",4,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"reserve_exact","","Reserve the minumum capacity for `additional` more elements to be inserted.",4,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",4,{"i":[{"n":"self"}]}],[11,"truncate","","Shorten the vector, keeping the first `len` elements and dropping the rest.",4,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"as_slice","","Extracts a slice containing the entire vector.",4,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",4,null],[11,"swap_remove","","Remove the element at position `index`, replacing it with the last element.",4,null],[11,"clear","","Remove all elements from the vector.",4,{"i":[{"n":"self"}]}],[11,"remove","","Remove and return the element at position `index`, shifting all elements after it to the left.",4,null],[11,"insert","","Insert an element at position `index`, shifting all elements after it to the right.",4,null],[11,"insert_many","","Insert multiple elements at position `index`, shifting all following elements toward the back.",4,{"i":[{"n":"self"},{"n":"usize"},{"n":"i"}]}],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto the heap.",4,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.",4,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"retain","","Retains only the elements specified by the predicate.",4,{"i":[{"n":"self"},{"n":"f"}]}],[11,"dedup","","Removes consecutive duplicate elements.",4,{"i":[{"n":"self"}]}],[11,"dedup_by","","Removes consecutive duplicate elements using the given equality relation.",4,{"i":[{"n":"self"},{"n":"f"}]}],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",4,{"i":[{"n":"self"},{"n":"f"}]}],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",4,null],[11,"insert_from_slice","","Copy elements from a slice into the vector at position `index`, shifting any following elements toward the back.",4,null],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",4,null],[11,"resize","","Resizes the vector so that its length is equal to `len`.",4,null],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use smallvec::SmallVec;",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"as_ref","","",4,null],[11,"as_mut","","",4,null],[11,"borrow","","",4,null],[11,"borrow_mut","","",4,null],[11,"write","","",4,null],[11,"write_all","","",4,null],[11,"flush","","",4,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"from","","",4,null],[11,"from","","",4,{"i":[{"n":"vec"}],"o":{"n":"smallvec"}}],[11,"from","","",4,{"i":[{"n":"a"}],"o":{"n":"smallvec"}}],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"extend_from_slice","","",4,null],[11,"push","","",4,null],[11,"from_iter","","",4,{"i":[{"n":"i"}],"o":{"n":"smallvec"}}],[11,"extend","","",4,{"i":[{"n":"self"},{"n":"i"}]}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",4,{"o":{"n":"smallvec"}}],[11,"drop","","",4,{"i":[{"n":"self"}]}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"smallvec"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"smallvec"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"smallvec"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"smallvec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"smallvec"}],"o":{"n":"ordering"}}],[11,"hash","","",4,{"i":[{"n":"self"},{"n":"h"}]}],[11,"drop","","",5,{"i":[{"n":"self"}]}],[11,"next","","",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_iter","","",4,null],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",null,null]],"paths":[[8,"VecLike"],[8,"ExtendFromSlice"],[8,"Array"],[3,"Drain"],[3,"SmallVec"],[3,"IntoIter"]]};
searchIndex["stable_deref_trait"] = {"doc":"This module defines an unsafe marker trait, StableDeref, for container types that deref to a fixed address which is valid even when the containing type is moved. For example, Box, Vec, Rc, Arc and String implement this trait. Additionally, it defines CloneStableDeref for types like Rc where clones deref to the same address.","items":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable address, even when moved. For example, this is implemented by Box, Vec, Rc, Arc and String, among others. Even when a Box is moved, the underlying storage remains at a fixed location.",null,null],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the same address. This has all the requirements of StableDeref, and additionally requires that after calling clone(), both the old and new value deref to the same address. For example, Rc and Arc implement CloneStableDeref, but Box and Vec do not.",null,null]],"paths":[]};
searchIndex["strsim"] = {"doc":"This library implements string similarity metrics.","items":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[5,"hamming","","Calculates the number of positions in the two strings where the characters differ. Returns an error if the strings have different lengths.",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"n":"hammingresult"}}],[5,"jaro","","Calculates the Jaro similarity between two strings. The returned value is between 0.0 and 1.0 (higher value means more similar).",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"n":"f64"}}],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common prefix.",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"n":"f64"}}],[5,"levenshtein","","Calculates the minimum number of insertions, deletions, and substitutions required to change one string into the other.",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"n":"usize"}}],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions. Each substring can only be edited once.",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"n":"usize"}}],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be edited an unlimited number of times, and the triangle inequality holds.",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"n":"usize"}}],[6,"HammingResult","","",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"strsimerror"}],"o":{"n":"bool"}}]],"paths":[[4,"StrSimError"]]};
searchIndex["swagger"] = {"doc":"Support crate for Swagger codegen.","items":[[3,"XSpanId","swagger","`X-Span-ID` header, used to track a request through a chain of microservices.",null,null],[12,"0","","",0,null],[3,"ApiError","","Very simple error type - just holds a description of the error. This is useful for human diagnosis and troubleshooting, but not for applications to parse. The justification for this is to deny applications visibility into the communication layer, forcing the application code to act solely on the logical responses that the API provides, promoting abstraction in the application code.",null,null],[12,"0","","",1,null],[0,"base64_format","","Module for encoding API properties in base64.",null,null],[3,"ByteArray","swagger::base64_format","Base64-encoded byte array",null,null],[12,"0","","",2,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"bytearray"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"bytearray"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"bytearray"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"bytearray"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",2,{"i":[{"n":"self"},{"n":"bytearray"}],"o":{"n":"bool"}}],[11,"le","","",2,{"i":[{"n":"self"},{"n":"bytearray"}],"o":{"n":"bool"}}],[11,"gt","","",2,{"i":[{"n":"self"},{"n":"bytearray"}],"o":{"n":"bool"}}],[11,"ge","","",2,{"i":[{"n":"self"},{"n":"bytearray"}],"o":{"n":"bool"}}],[11,"serialize","","",2,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"deserialize","","",2,{"i":[{"n":"d"}],"o":{"g":["bytearray"],"n":"result"}}],[11,"deref","","",2,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deref_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[0,"nullable_format","swagger","Module for encoding Nullable properties.",null,null],[4,"Nullable","swagger::nullable_format","The Nullable type. Represents a value which may be specified as null on an API. Note that this is distinct from a value that is optional and not present!",null,null],[13,"Null","","Null value",3,null],[13,"Present","","Value is present",3,null],[5,"default_optional_nullable","","Serde helper function to create a default `Option<Nullable<T>>` while deserializing",null,{"o":{"g":["nullable"],"n":"option"}}],[5,"deserialize_optional_nullable","","Serde helper function to deserialize into an `Option<Nullable<T>>`",null,{"i":[{"n":"d"}],"o":{"g":["option"],"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"nullable"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"nullable"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"nullable"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"nullable"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",3,{"i":[{"n":"self"},{"n":"nullable"}],"o":{"n":"bool"}}],[11,"le","","",3,{"i":[{"n":"self"},{"n":"nullable"}],"o":{"n":"bool"}}],[11,"gt","","",3,{"i":[{"n":"self"},{"n":"nullable"}],"o":{"n":"bool"}}],[11,"ge","","",3,{"i":[{"n":"self"},{"n":"nullable"}],"o":{"n":"bool"}}],[11,"is_present","","Returns `true` if the Nullable is a `Present` value.",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_null","","Returns `true` if the Nullable is a `Null` value.",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_ref","","Converts from `Nullable<T>` to `Nullable<&T>`.",3,{"i":[{"n":"self"}],"o":{"n":"nullable"}}],[11,"as_mut","","Converts from `Nullable<T>` to `Nullable<&mut T>`.",3,{"i":[{"n":"self"}],"o":{"n":"nullable"}}],[11,"expect","","Unwraps a Nullable, yielding the content of a `Nullable::Present`.",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Nullable<T>` if it is `Nullable::Present(v)`.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",3,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"map","","Maps a `Nullable<T>` to `Nullable<U>` by applying a function to a contained value.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"nullable"}}],[11,"map_or","","Applies a function to the contained value (if any), or returns a `default` (if not).",3,{"i":[{"n":"self"},{"n":"u"},{"n":"f"}],"o":{"n":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any), or computes a `default` (if not).",3,{"i":[{"n":"self"},{"n":"d"},{"n":"f"}],"o":{"n":"u"}}],[11,"ok_or","","Transforms the `Nullable<T>` into a [`Result<T, E>`], mapping `Nullable::Present(v)` to [`Ok(v)`] and `Nullable::Null` to [`Err(err)`][Err].",3,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"result"}}],[11,"ok_or_else","","Transforms the `Nullable<T>` into a [`Result<T, E>`], mapping `Nullable::Present(v)` to [`Ok(v)`] and `Nullable::Null` to [`Err(err())`][Err].",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[11,"and","","Returns `Nullable::Null` if the Nullable is `Nullable::Null`, otherwise returns `optb`.",3,{"i":[{"n":"self"},{"n":"nullable"}],"o":{"n":"nullable"}}],[11,"and_then","","Returns `Nullable::Null` if the Nullable is `Nullable::Null`, otherwise calls `f` with the wrapped value and returns the result.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"nullable"}}],[11,"or","","Returns the Nullable if it contains a value, otherwise returns `optb`.",3,{"i":[{"n":"self"},{"n":"nullable"}],"o":{"n":"nullable"}}],[11,"or_else","","Returns the Nullable if it contains a value, otherwise calls `f` and returns the result.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"nullable"}}],[11,"take","","Takes the value out of the Nullable, leaving a `Nullable::Null` in its place.",3,{"i":[{"n":"self"}],"o":{"n":"nullable"}}],[11,"cloned","","Maps an `Nullable<&T>` to an `Nullable<T>` by cloning the contents of the Nullable.",3,{"i":[{"n":"self"}],"o":{"n":"nullable"}}],[11,"unwrap_or_default","","Returns the contained value or a default",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"default","","Returns None.",3,{"o":{"n":"nullable"}}],[11,"from","","",3,{"i":[{"n":"t"}],"o":{"n":"nullable"}}],[11,"serialize","","",3,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"deserialize","","",3,{"i":[{"n":"d"}],"o":{"g":["nullable"],"n":"result"}}],[0,"auth","swagger","Authentication and authorization data structures",null,null],[3,"Authorization","swagger::auth","Storage of authorization parameters for an incoming request, used for REST API authorization.",null,null],[12,"subject","","Subject for which authorization is granted (i.e., what may be accessed.)",4,null],[12,"scopes","","Scopes for which authorization is granted (i.e., what types of access are permitted).",4,null],[12,"issuer","","Identity of the party to whom authorization was granted, if available (i.e., who is responsible for the access).",4,null],[3,"AllowAllMiddleware","","Dummy implementation of an Iron middleware to insert authorization data, allowing all access to an endpoint with the subject \"alice\".",null,null],[4,"Scopes","","Authorization scopes.",null,null],[13,"Some","","Some set of scopes.",5,null],[13,"All","","All possible scopes, authorization checking disabled.",5,null],[4,"AuthData","","Storage of raw authentication data, used both for storing incoming request authentication, and for authenticating outgoing client requests.",null,null],[13,"Basic","","HTTP Basic auth.",6,null],[13,"Bearer","","HTTP Bearer auth, used for OAuth2.",6,null],[13,"ApiKey","","Header-based or query parameter-based API key auth.",6,null],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"scopes"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"scopes"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"scopes"}],"o":{"n":"bool"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"authorization"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"authorization"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"authorization"}],"o":{"n":"bool"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"authdata"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"authdata"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"authdata"}],"o":{"n":"bool"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a middleware that authorizes with the configured subject.",7,{"i":[{"n":"s"}],"o":{"n":"allowallmiddleware"}}],[11,"before","","",7,{"i":[{"n":"self"},{"n":"request"}],"o":{"n":"ironresult"}}],[0,"context","swagger","Module for API context management.",null,null],[3,"Context","swagger::context","Request context, both as received in a server handler or as sent in a client request. When REST microservices are chained, the Context passes data from the server API to any further HTTP requests.",null,null],[12,"x_span_id","","Tracking ID when passing a request to another microservice.",8,null],[12,"authorization","","Authorization data, filled in from middlewares.",8,null],[12,"auth_data","","Raw authentication data, for use in making HTTP requests as a client.",8,null],[3,"ContextWrapper","","Context wrapper, to bind an API with a context.",null,null],[8,"ContextWrapperExt","","Trait to extend an API to make it easy to bind it to a context.",null,null],[11,"with_context","","Binds this API to a context.",9,{"i":[{"n":"self"},{"n":"context"}],"o":{"n":"contextwrapper"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"context"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",8,{"o":{"n":"context"}}],[11,"new","","Create a new, empty, `Context`.",8,{"o":{"n":"context"}}],[11,"new_with_span_id","","Create a `Context` with a given span ID.",8,{"i":[{"n":"s"}],"o":{"n":"context"}}],[11,"auth_basic","","Set Basic authentication",8,{"i":[{"n":"self"},{"n":"str"},{"n":"str"}]}],[11,"auth_bearer","","Set Bearer token authentication",8,{"i":[{"n":"self"},{"n":"str"}]}],[11,"auth_apikey","","Set ApiKey authentication",8,{"i":[{"n":"self"},{"n":"str"}]}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new ContextWrapper, binding the API and context.",10,{"i":[{"n":"t"},{"n":"context"}],"o":{"n":"contextwrapper"}}],[11,"api","","Borrows the API.",10,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"context","","Borrows the context.",10,{"i":[{"n":"self"}],"o":{"n":"context"}}],[11,"clone","swagger","",0,{"i":[{"n":"self"}],"o":{"n":"xspanid"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"xspanid"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"xspanid"}],"o":{"n":"bool"}}],[11,"deref","","",0,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"deref_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"header_name","","",0,{"o":{"n":"str"}}],[11,"parse_header","","",0,null],[11,"fmt_header","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"apierror"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from","","",1,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"error"}],"o":{"n":"self"}}]],"paths":[[3,"XSpanId"],[3,"ApiError"],[3,"ByteArray"],[4,"Nullable"],[3,"Authorization"],[4,"Scopes"],[4,"AuthData"],[3,"AllowAllMiddleware"],[3,"Context"],[8,"ContextWrapperExt"],[3,"ContextWrapper"]]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust tokens into a syntax tree of Rust source code.","items":[[3,"Attribute","syn","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tts","","",0,null],[12,"is_sugared_doc","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy, Clone)`.",null,null],[12,"ident","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",null,null],[12,"ident","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",10,null],[12,"bracket_token","","",10,null],[12,"elems","","",10,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",11,null],[12,"left","","",11,null],[12,"eq_token","","",11,null],[12,"right","","",11,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",12,null],[12,"left","","",12,null],[12,"op","","",12,null],[12,"right","","",12,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",13,null],[12,"left","","",13,null],[12,"op","","",13,null],[12,"right","","",13,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",14,null],[12,"block","","",14,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",15,null],[12,"box_token","","",15,null],[12,"expr","","",15,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional expression.",null,null],[12,"attrs","","",16,null],[12,"break_token","","",16,null],[12,"label","","",16,null],[12,"expr","","",16,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",17,null],[12,"func","","",17,null],[12,"paren_token","","",17,null],[12,"args","","",17,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",18,null],[12,"expr","","",18,null],[12,"as_token","","",18,null],[12,"ty","","",18,null],[3,"ExprCatch","","A catch expression: `do catch { ... }`.",null,null],[12,"attrs","","",19,null],[12,"do_token","","",19,null],[12,"catch_token","","",19,null],[12,"block","","",19,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",20,null],[12,"movability","","",20,null],[12,"capture","","",20,null],[12,"or1_token","","",20,null],[12,"inputs","","",20,null],[12,"or2_token","","",20,null],[12,"output","","",20,null],[12,"body","","",20,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",21,null],[12,"continue_token","","",21,null],[12,"label","","",21,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",null,null],[12,"attrs","","",22,null],[12,"base","","",22,null],[12,"dot_token","","",22,null],[12,"member","","",22,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",23,null],[12,"label","","",23,null],[12,"for_token","","",23,null],[12,"pat","","",23,null],[12,"in_token","","",23,null],[12,"expr","","",23,null],[12,"body","","",23,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",24,null],[12,"group_token","","",24,null],[12,"expr","","",24,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",null,null],[12,"attrs","","",25,null],[12,"if_token","","",25,null],[12,"cond","","",25,null],[12,"then_branch","","",25,null],[12,"else_branch","","",25,null],[3,"ExprIfLet","","An `if let` expression with an optional `else` block: `if let pat = expr { ... } else { ... }`.",null,null],[12,"attrs","","",26,null],[12,"if_token","","",26,null],[12,"let_token","","",26,null],[12,"pats","","",26,null],[12,"eq_token","","",26,null],[12,"expr","","",26,null],[12,"then_branch","","",26,null],[12,"else_branch","","",26,null],[3,"ExprInPlace","","A placement expression: `place <- value`.",null,null],[12,"attrs","","",27,null],[12,"place","","",27,null],[12,"arrow_token","","",27,null],[12,"value","","",27,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",28,null],[12,"expr","","",28,null],[12,"bracket_token","","",28,null],[12,"index","","",28,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",29,null],[12,"lit","","",29,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",30,null],[12,"label","","",30,null],[12,"loop_token","","",30,null],[12,"body","","",30,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[12,"attrs","","",31,null],[12,"mac","","",31,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",null,null],[12,"attrs","","",32,null],[12,"match_token","","",32,null],[12,"expr","","",32,null],[12,"brace_token","","",32,null],[12,"arms","","",32,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",33,null],[12,"receiver","","",33,null],[12,"dot_token","","",33,null],[12,"method","","",33,null],[12,"turbofish","","",33,null],[12,"paren_token","","",33,null],[12,"args","","",33,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",34,null],[12,"paren_token","","",34,null],[12,"expr","","",34,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",null,null],[12,"attrs","","",35,null],[12,"qself","","",35,null],[12,"path","","",35,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",36,null],[12,"from","","",36,null],[12,"limits","","",36,null],[12,"to","","",36,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",37,null],[12,"and_token","","",37,null],[12,"mutability","","",37,null],[12,"expr","","",37,null],[3,"ExprRepeat","","An array literal constructed from one repeated element: `[0u8; N]`.",null,null],[12,"attrs","","",38,null],[12,"bracket_token","","",38,null],[12,"expr","","",38,null],[12,"semi_token","","",38,null],[12,"len","","",38,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",39,null],[12,"return_token","","",39,null],[12,"expr","","",39,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",40,null],[12,"path","","",40,null],[12,"brace_token","","",40,null],[12,"fields","","",40,null],[12,"dot2_token","","",40,null],[12,"rest","","",40,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",41,null],[12,"expr","","",41,null],[12,"question_token","","",41,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",42,null],[12,"paren_token","","",42,null],[12,"elems","","",42,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",43,null],[12,"expr","","",43,null],[12,"colon_token","","",43,null],[12,"ty","","",43,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",44,null],[12,"op","","",44,null],[12,"expr","","",44,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",45,null],[12,"unsafe_token","","",45,null],[12,"block","","",45,null],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",null,null],[12,"tts","","",46,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",47,null],[12,"label","","",47,null],[12,"while_token","","",47,null],[12,"cond","","",47,null],[12,"body","","",47,null],[3,"ExprWhileLet","","A while-let loop: `while let pat = expr { ... }`.",null,null],[12,"attrs","","",48,null],[12,"label","","",48,null],[12,"while_token","","",48,null],[12,"let_token","","",48,null],[12,"pats","","",48,null],[12,"eq_token","","",48,null],[12,"expr","","",48,null],[12,"body","","",48,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",49,null],[12,"yield_token","","",49,null],[12,"expr","","",49,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",50,null],[12,"span","","",50,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true; }`.",null,null],[12,"attrs","","",51,null],[12,"leading_vert","","",51,null],[12,"pats","","",51,null],[12,"guard","","",51,null],[12,"fat_arrow_token","","",51,null],[12,"body","","",51,null],[12,"comma","","",51,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",52,null],[12,"stmts","","Statements in a block",52,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",53,null],[12,"member","","",53,null],[12,"colon_token","","",53,null],[12,"pat","","",53,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",54,null],[12,"member","","Name or index of the field.",54,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand like `Struct { x }`, there is no colon.",54,null],[12,"expr","","Value of the field.",54,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",55,null],[12,"colon_token","","",55,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",56,null],[12,"let_token","","",56,null],[12,"pats","","",56,null],[12,"ty","","",56,null],[12,"init","","",56,null],[12,"semi_token","","",56,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method call: `parse::<u64>()`.",null,null],[12,"colon2_token","","",57,null],[12,"lt_token","","",57,null],[12,"args","","",57,null],[12,"gt_token","","",57,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"box_token","","",58,null],[12,"pat","","",58,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.",null,null],[12,"by_ref","","",59,null],[12,"mutability","","",59,null],[12,"ident","","",59,null],[12,"subpat","","",59,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"expr","","",60,null],[3,"PatMacro","","A macro in expression position.",null,null],[12,"mac","","",61,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified with a self-type.",null,null],[12,"qself","","",62,null],[12,"path","","",62,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"lo","","",63,null],[12,"limits","","",63,null],[12,"hi","","",63,null],[3,"PatRef","","A reference pattern: `&mut (first, second)`.",null,null],[12,"and_token","","",64,null],[12,"mutability","","",64,null],[12,"pat","","",64,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",null,null],[12,"bracket_token","","",65,null],[12,"front","","",65,null],[12,"middle","","",65,null],[12,"dot2_token","","",65,null],[12,"comma_token","","",65,null],[12,"back","","",65,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"path","","",66,null],[12,"brace_token","","",66,null],[12,"fields","","",66,null],[12,"dot2_token","","",66,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"paren_token","","",67,null],[12,"front","","",67,null],[12,"dot2_token","","",67,null],[12,"comma_token","","",67,null],[12,"back","","",67,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.",null,null],[12,"path","","",68,null],[12,"pat","","",68,null],[3,"PatVerbatim","","Tokens in pattern position not interpreted by Syn.",null,null],[12,"tts","","",69,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"underscore_token","","",70,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",71,null],[12,"lt_token","","",71,null],[12,"lifetimes","","",71,null],[12,"gt_token","","",71,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"default","","",72,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",null,null],[12,"lt_token","","",73,null],[12,"params","","",73,null],[12,"gt_token","","",73,null],[12,"where_clause","","",73,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",74,null],[12,"lifetime","","",74,null],[12,"colon_token","","",74,null],[12,"bounds","","",74,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",75,null],[12,"eq_token","","",75,null],[12,"rhs_ty","","",75,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",76,null],[12,"colon_token","","",76,null],[12,"bounds","","",76,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",77,null],[12,"bounded_ty","","The type being bounded",77,null],[12,"colon_token","","",77,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",77,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",78,null],[12,"modifier","","",78,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",78,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",78,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",79,null],[12,"ident","","",79,null],[12,"colon_token","","",79,null],[12,"bounds","","",79,null],[12,"eq_token","","",79,null],[12,"default","","",79,null],[3,"WhereClause","","A `where` clause in a definition: `where T: Deserialize<'de>, D: 'static`.",null,null],[12,"where_token","","",80,null],[12,"predicates","","",80,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal variable name.",null,null],[3,"ArgCaptured","","An explicitly typed pattern captured by a function signature.",null,null],[12,"pat","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[3,"ArgSelf","","Self captured by value in a function signature: `self` or `mut self`.",null,null],[12,"mutability","","",82,null],[12,"self_token","","",82,null],[3,"ArgSelfRef","","Self captured by reference in a function signature: `&self` or `&mut self`.",null,null],[12,"and_token","","",83,null],[12,"lifetime","","",83,null],[12,"mutability","","",83,null],[12,"self_token","","",83,null],[3,"FnDecl","","Header of a function declaration, without including the body.",null,null],[12,"fn_token","","",84,null],[12,"generics","","",84,null],[12,"paren_token","","",84,null],[12,"inputs","","",84,null],[12,"variadic","","",84,null],[12,"output","","",84,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"ident","","",85,null],[12,"decl","","",85,null],[12,"semi_token","","",85,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext: u8`.",null,null],[12,"attrs","","",86,null],[12,"vis","","",86,null],[12,"static_token","","",86,null],[12,"mutability","","",86,null],[12,"ident","","",86,null],[12,"colon_token","","",86,null],[12,"ty","","",86,null],[12,"semi_token","","",86,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"type_token","","",87,null],[12,"ident","","",87,null],[12,"semi_token","","",87,null],[3,"ForeignItemVerbatim","","Tokens in an `extern` block not interpreted by Syn.",null,null],[12,"tts","","",88,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",89,null],[12,"vis","","",89,null],[12,"defaultness","","",89,null],[12,"const_token","","",89,null],[12,"ident","","",89,null],[12,"colon_token","","",89,null],[12,"ty","","",89,null],[12,"eq_token","","",89,null],[12,"expr","","",89,null],[12,"semi_token","","",89,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",90,null],[12,"mac","","",90,null],[12,"semi_token","","",90,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",91,null],[12,"vis","","",91,null],[12,"defaultness","","",91,null],[12,"sig","","",91,null],[12,"block","","",91,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",92,null],[12,"vis","","",92,null],[12,"defaultness","","",92,null],[12,"type_token","","",92,null],[12,"ident","","",92,null],[12,"generics","","",92,null],[12,"eq_token","","",92,null],[12,"ty","","",92,null],[12,"semi_token","","",92,null],[3,"ImplItemVerbatim","","Tokens within an impl block not interpreted by Syn.",null,null],[12,"tts","","",93,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",94,null],[12,"vis","","",94,null],[12,"const_token","","",94,null],[12,"ident","","",94,null],[12,"colon_token","","",94,null],[12,"ty","","",94,null],[12,"eq_token","","",94,null],[12,"expr","","",94,null],[12,"semi_token","","",94,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",null,null],[12,"attrs","","",95,null],[12,"vis","","",95,null],[12,"enum_token","","",95,null],[12,"ident","","",95,null],[12,"generics","","",95,null],[12,"brace_token","","",95,null],[12,"variants","","",95,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",96,null],[12,"vis","","",96,null],[12,"extern_token","","",96,null],[12,"crate_token","","",96,null],[12,"ident","","",96,null],[12,"rename","","",96,null],[12,"semi_token","","",96,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) -> Result<()> { ... }`.",null,null],[12,"attrs","","",97,null],[12,"vis","","",97,null],[12,"constness","","",97,null],[12,"unsafety","","",97,null],[12,"abi","","",97,null],[12,"ident","","",97,null],[12,"decl","","",97,null],[12,"block","","",97,null],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",null,null],[12,"attrs","","",98,null],[12,"abi","","",98,null],[12,"brace_token","","",98,null],[12,"items","","",98,null],[3,"ItemImpl","","An impl block providing trait or associated items: `impl<A> Trait for Data<A> { ... }`.",null,null],[12,"attrs","","",99,null],[12,"defaultness","","",99,null],[12,"unsafety","","",99,null],[12,"impl_token","","",99,null],[12,"generics","","",99,null],[12,"trait_","","Trait this impl implements.",99,null],[12,"self_ty","","The Self type of the impl.",99,null],[12,"brace_token","","",99,null],[12,"items","","",99,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!` definitions.",null,null],[12,"attrs","","",100,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",100,null],[12,"mac","","",100,null],[12,"semi_token","","",100,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro` keyword.",null,null],[12,"attrs","","",101,null],[12,"vis","","",101,null],[12,"macro_token","","",101,null],[12,"ident","","",101,null],[12,"paren_token","","",101,null],[12,"args","","",101,null],[12,"brace_token","","",101,null],[12,"body","","",101,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",102,null],[12,"vis","","",102,null],[12,"mod_token","","",102,null],[12,"ident","","",102,null],[12,"content","","",102,null],[12,"semi","","",102,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",103,null],[12,"vis","","",103,null],[12,"static_token","","",103,null],[12,"mutability","","",103,null],[12,"ident","","",103,null],[12,"colon_token","","",103,null],[12,"ty","","",103,null],[12,"eq_token","","",103,null],[12,"expr","","",103,null],[12,"semi_token","","",103,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",104,null],[12,"vis","","",104,null],[12,"struct_token","","",104,null],[12,"ident","","",104,null],[12,"generics","","",104,null],[12,"fields","","",104,null],[12,"semi_token","","",104,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",105,null],[12,"vis","","",105,null],[12,"unsafety","","",105,null],[12,"auto_token","","",105,null],[12,"trait_token","","",105,null],[12,"ident","","",105,null],[12,"generics","","",105,null],[12,"colon_token","","",105,null],[12,"supertraits","","",105,null],[12,"brace_token","","",105,null],[12,"items","","",105,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T, MyError>`.",null,null],[12,"attrs","","",106,null],[12,"vis","","",106,null],[12,"type_token","","",106,null],[12,"ident","","",106,null],[12,"generics","","",106,null],[12,"eq_token","","",106,null],[12,"ty","","",106,null],[12,"semi_token","","",106,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",107,null],[12,"vis","","",107,null],[12,"union_token","","",107,null],[12,"ident","","",107,null],[12,"generics","","",107,null],[12,"fields","","",107,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",108,null],[12,"vis","","",108,null],[12,"use_token","","",108,null],[12,"leading_colon","","",108,null],[12,"tree","","",108,null],[12,"semi_token","","",108,null],[3,"ItemVerbatim","","Tokens forming an item not interpreted by Syn.",null,null],[12,"tts","","",109,null],[3,"MethodSig","","A method's signature in a trait or implementation: `unsafe fn initialize(&self)`.",null,null],[12,"constness","","",110,null],[12,"unsafety","","",110,null],[12,"abi","","",110,null],[12,"ident","","",110,null],[12,"decl","","",110,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",111,null],[12,"const_token","","",111,null],[12,"ident","","",111,null],[12,"colon_token","","",111,null],[12,"ty","","",111,null],[12,"default","","",111,null],[12,"semi_token","","",111,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",112,null],[12,"mac","","",112,null],[12,"semi_token","","",112,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",113,null],[12,"sig","","",113,null],[12,"default","","",113,null],[12,"semi_token","","",113,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",114,null],[12,"type_token","","",114,null],[12,"ident","","",114,null],[12,"generics","","",114,null],[12,"colon_token","","",114,null],[12,"bounds","","",114,null],[12,"default","","",114,null],[12,"semi_token","","",114,null],[3,"TraitItemVerbatim","","Tokens within the definition of a trait not interpreted by Syn.",null,null],[12,"tts","","",115,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",116,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",117,null],[12,"items","","",117,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",118,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",119,null],[12,"colon2_token","","",119,null],[12,"tree","","",119,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap as Map`.",null,null],[12,"ident","","",120,null],[12,"as_token","","",120,null],[12,"rename","","",120,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",121,null],[12,"attrs","","",121,null],[12,"items","","",121,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",122,null],[12,"span","","",122,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",null,null],[12,"token","","",123,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",124,null],[12,"bang_token","","",124,null],[12,"delimiter","","",124,null],[12,"tts","","",124,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",125,null],[12,"brace_token","","",125,null],[12,"variants","","",125,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",126,null],[12,"fields","","",126,null],[12,"semi_token","","",126,null],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",127,null],[12,"fields","","",127,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",128,null],[12,"vis","","Visibility of the struct or enum.",128,null],[12,"ident","","Name of the struct or enum.",128,null],[12,"generics","","Generics required to complete the definition.",128,null],[12,"data","","Data within the struct or enum.",128,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",129,null],[12,"name","","",129,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize) -> bool`.",null,null],[12,"name","","",130,null],[12,"ty","","",130,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",131,null],[12,"elem","","",131,null],[12,"semi_token","","",131,null],[12,"len","","",131,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"unsafety","","",132,null],[12,"abi","","",132,null],[12,"fn_token","","",132,null],[12,"lifetimes","","",132,null],[12,"paren_token","","",132,null],[12,"inputs","","",132,null],[12,"variadic","","",132,null],[12,"output","","",132,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",133,null],[12,"elem","","",133,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",null,null],[12,"impl_token","","",134,null],[12,"bounds","","",134,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler: `_`.",null,null],[12,"underscore_token","","",135,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",136,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",137,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",138,null],[12,"elem","","",138,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",null,null],[12,"qself","","",139,null],[12,"path","","",139,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",140,null],[12,"const_token","","",140,null],[12,"mutability","","",140,null],[12,"elem","","",140,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",141,null],[12,"lifetime","","",141,null],[12,"mutability","","",141,null],[12,"elem","","",141,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",142,null],[12,"elem","","",142,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",null,null],[12,"dyn_token","","",143,null],[12,"bounds","","",143,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",144,null],[12,"elems","","",144,null],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",null,null],[12,"tts","","",145,null],[3,"PathTokens","","A helper for printing a self-type qualified path as tokens.",null,null],[12,"0","","",146,null],[12,"1","","",146,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K, V>`.",null,null],[12,"colon2_token","","",147,null],[12,"lt_token","","",147,null],[12,"args","","",147,null],[12,"gt_token","","",147,null],[3,"Binding","","A binding (equality constraint) on an associated type: `Item = u8`.",null,null],[12,"ident","","",148,null],[12,"eq_token","","",148,null],[12,"ty","","",148,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) -> C`.",null,null],[12,"paren_token","","",149,null],[12,"inputs","","`(A, B)`",149,null],[12,"output","","`C`",149,null],[3,"Path","","A path at which a named item is exported: `std::collections::HashMap`.",null,null],[12,"leading_colon","","",150,null],[12,"segments","","",150,null],[3,"PathSegment","","A segment of a path together with any path arguments on that segment.",null,null],[12,"ident","","",151,null],[12,"arguments","","",151,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T as Display>::fmt`.",null,null],[12,"lt_token","","",152,null],[12,"ty","","",152,null],[12,"position","","",152,null],[12,"as_token","","",152,null],[12,"gt_token","","",152,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and attributes that are contained within an item.",null,null],[13,"Outer","","",153,null],[13,"Inner","","",153,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Word","","",154,null],[13,"List","","A structured list within an attribute, like `derive(Copy, Clone)`.",154,null],[13,"NameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",154,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in `#[derive(Copy)]` which would be a nested `Meta::Word`.",155,null],[13,"Literal","","A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.",155,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",156,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",156,null],[13,"Unit","","Unit struct or unit variant such as `None`.",156,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or `pub(restricted)`.",null,null],[13,"Public","","A public visibility level: `pub`.",157,null],[13,"Crate","","A crate-level visibility: `crate`.",157,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",157,null],[13,"Inherited","","An inherited visibility, which usually means private.",157,null],[4,"Expr","","A Rust expression.",null,null],[13,"Box","","A box expression: `box f`.",158,null],[13,"InPlace","","A placement expression: `place <- value`.",158,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",158,null],[13,"Call","","A function call expression: `invoke(a, b)`.",158,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",158,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",158,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",158,null],[13,"Unary","","A unary operation: `!x`, `*x`.",158,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",158,null],[13,"Cast","","A cast expression: `foo as f64`.",158,null],[13,"Type","","A type ascription expression: `foo: f64`.",158,null],[13,"If","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",158,null],[13,"IfLet","","An `if let` expression with an optional `else` block: `if let pat = expr { ... } else { ... }`.",158,null],[13,"While","","A while loop: `while expr { ... }`.",158,null],[13,"WhileLet","","A while-let loop: `while let pat = expr { ... }`.",158,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",158,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",158,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",158,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",158,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",158,null],[13,"Block","","A blocked scope: `{ ... }`.",158,null],[13,"Assign","","An assignment expression: `a = compute()`.",158,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",158,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",158,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",158,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",158,null],[13,"Path","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",158,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",158,null],[13,"Break","","A `break`, with an optional label to break and an optional expression.",158,null],[13,"Continue","","A `continue`, with an optional label.",158,null],[13,"Return","","A `return`, with an optional value to be returned.",158,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",158,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",158,null],[13,"Repeat","","An array literal constructed from one repeated element: `[0u8; N]`.",158,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",158,null],[13,"Group","","An expression contained within invisible delimiters.",158,null],[13,"Try","","A try-expression: `expr?`.",158,null],[13,"Catch","","A catch expression: `do catch { ... }`.",158,null],[13,"Yield","","A yield expression: `yield expr`.",158,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",158,null],[4,"Member","","A struct or tuple struct field accessed in a struct literal or field expression.",null,null],[13,"Named","","A named field like `self.x`.",159,null],[13,"Unnamed","","An unnamed field like `self.0`.",159,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",160,null],[13,"Const","","A const expression. Must be inside of a block.",160,null],[4,"Pat","","A pattern in a local binding, function signature, match expression, or various other places.",null,null],[13,"Wild","","A pattern that matches any value: `_`.",161,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.",161,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",161,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.",161,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified with a self-type.",161,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",161,null],[13,"Box","","A box pattern: `box v`.",161,null],[13,"Ref","","A reference pattern: `&mut (first, second)`.",161,null],[13,"Lit","","A literal pattern: `0`.",161,null],[13,"Range","","A range pattern: `1..=2`.",161,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",161,null],[13,"Macro","","A macro in expression position.",161,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",161,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",162,null],[13,"Closed","","Inclusive at the beginning and end.",162,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",163,null],[13,"Item","","An item definition.",163,null],[13,"Expr","","Expr without trailing semicolon.",163,null],[13,"Semi","","Expression with trailing semicolon.",163,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T: Into<String>`, `'a: 'b`, `const LEN: usize`.",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",164,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",164,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",164,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the `?` in `?Sized`.",null,null],[13,"None","","",165,null],[13,"Maybe","","",165,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",166,null],[13,"Lifetime","","",166,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T: Deserialize<'de>`.",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",167,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",167,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",167,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn f(n: usize)`.",null,null],[13,"SelfRef","","Self captured by reference in a function signature: `&self` or `&mut self`.",168,null],[13,"SelfValue","","Self captured by value in a function signature: `self` or `mut self`.",168,null],[13,"Captured","","An explicitly typed pattern captured by a function signature.",168,null],[13,"Inferred","","A pattern whose type is inferred captured by a function signature.",168,null],[13,"Ignored","","A type not bound to any pattern in a function signature.",168,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",169,null],[13,"Static","","A foreign static item in an `extern` block: `static ext: u8`.",169,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",169,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",169,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",170,null],[13,"Method","","A method within an impl block.",170,null],[13,"Type","","An associated type within an impl block.",170,null],[13,"Macro","","A macro invocation within an impl block.",170,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",170,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",171,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",171,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",171,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",171,null],[13,"Fn","","A free-standing function: `fn process(n: usize) -> Result<()> { ... }`.",171,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",171,null],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",171,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T, MyError>`.",171,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",171,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",171,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",171,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",171,null],[13,"Impl","","An impl block providing trait or associated items: `impl<A> Trait for Data<A> { ... }`.",171,null],[13,"Macro","","A macro invocation, which includes `macro_rules!` definitions.",171,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro` keyword.",171,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",171,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",172,null],[13,"Method","","A trait method within the definition of a trait.",172,null],[13,"Type","","An associated type within the definition of a trait.",172,null],[13,"Macro","","A macro invocation within the definition of a trait.",172,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by Syn.",172,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as Renamed` or `*`.",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",173,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",173,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap as Map`.",173,null],[13,"Glob","","A glob import in a `use` item: `*`.",173,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",173,null],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the `f32` in `1.0f32`.",null,null],[13,"F32","","",174,null],[13,"F64","","",174,null],[13,"None","","",174,null],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in `127u8`.",null,null],[13,"I8","","",175,null],[13,"I16","","",175,null],[13,"I32","","",175,null],[13,"I64","","",175,null],[13,"I128","","",175,null],[13,"Isize","","",175,null],[13,"U8","","",175,null],[13,"U16","","",175,null],[13,"U32","","",175,null],[13,"U64","","",175,null],[13,"U128","","",175,null],[13,"Usize","","",175,null],[13,"None","","",175,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",176,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",176,null],[13,"Byte","","A byte literal: `b'f'`.",176,null],[13,"Char","","A character literal: `'a'`.",176,null],[13,"Int","","An integer literal: `1` or `1u16`.",176,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",176,null],[13,"Bool","","A boolean literal: `true` or `false`.",176,null],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",176,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a raw string like `r##\"data\"##`.",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",177,null],[13,"Raw","","A raw string like `r##\"data\"##`.",177,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.",null,null],[13,"Paren","","",178,null],[13,"Brace","","",178,null],[13,"Bracket","","",178,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",179,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",179,null],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",179,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",180,null],[13,"Sub","","The `-` operator (subtraction)",180,null],[13,"Mul","","The `*` operator (multiplication)",180,null],[13,"Div","","The `/` operator (division)",180,null],[13,"Rem","","The `%` operator (modulus)",180,null],[13,"And","","The `&&` operator (logical and)",180,null],[13,"Or","","The `||` operator (logical or)",180,null],[13,"BitXor","","The `^` operator (bitwise xor)",180,null],[13,"BitAnd","","The `&` operator (bitwise and)",180,null],[13,"BitOr","","The `|` operator (bitwise or)",180,null],[13,"Shl","","The `<<` operator (shift left)",180,null],[13,"Shr","","The `>>` operator (shift right)",180,null],[13,"Eq","","The `==` operator (equality)",180,null],[13,"Lt","","The `<` operator (less than)",180,null],[13,"Le","","The `<=` operator (less than or equal to)",180,null],[13,"Ne","","The `!=` operator (not equal to)",180,null],[13,"Ge","","The `>=` operator (greater than or equal to)",180,null],[13,"Gt","","The `>` operator (greater than)",180,null],[13,"AddEq","","The `+=` operator",180,null],[13,"SubEq","","The `-=` operator",180,null],[13,"MulEq","","The `*=` operator",180,null],[13,"DivEq","","The `/=` operator",180,null],[13,"RemEq","","The `%=` operator",180,null],[13,"BitXorEq","","The `^=` operator",180,null],[13,"BitAndEq","","The `&=` operator",180,null],[13,"BitOrEq","","The `|=` operator",180,null],[13,"ShlEq","","The `<<=` operator",180,null],[13,"ShrEq","","The `>>=` operator",180,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",181,null],[13,"Not","","The `!` operator for logical inversion",181,null],[13,"Neg","","The `-` operator for negation",181,null],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n: usize)`.",null,null],[13,"Named","","Argument given a name.",182,null],[13,"Wild","","Argument not given a name, matched with `_`.",182,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",183,null],[13,"Type","","A particular type is returned.",183,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",184,null],[13,"Array","","A fixed size array type: `[T; n]`.",184,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",184,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",184,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",184,null],[13,"Never","","The never type: `!`.",184,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",184,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",184,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",184,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",184,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",184,null],[13,"Group","","A type contained within invisible delimiters.",184,null],[13,"Infer","","Indication that a type should be inferred by the compiler: `_`.",184,null],[13,"Macro","","A macro in the type position.",184,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",184,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item = T`.",null,null],[13,"Lifetime","","A lifetime argument.",185,null],[13,"Type","","A type argument.",185,null],[13,"Binding","","A binding (equality constraint) on an associated type: the `Item = u8` in `Iterator<Item = u8>`.",185,null],[13,"Const","","A const expression. Must be inside of a block.",185,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path segment.",null,null],[13,"None","","",186,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",186,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",186,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree node.",null,{"i":[{"n":"tokenstream"}],"o":{"g":["parseerror"],"n":"result"}}],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",null,{"i":[{"n":"tokenstream"}],"o":{"g":["parseerror"],"n":"result"}}],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",null,{"i":[{"n":"str"}],"o":{"g":["parseerror"],"n":"result"}}],[5,"parse_file","","Parse the content of a file of Rust code.",null,{"i":[{"n":"str"}],"o":{"g":["file","parseerror"],"n":"result"}}],[0,"token","","Tokens representing Rust punctuation, keywords, and delimiters.",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"0","","",187,null],[3,"Add","","`+`",null,null],[12,"0","","",188,null],[3,"AddEq","","`+=`",null,null],[12,"0","","",189,null],[3,"And","","`&`",null,null],[12,"0","","",190,null],[3,"AndAnd","","`&&`",null,null],[12,"0","","",191,null],[3,"AndEq","","`&=`",null,null],[12,"0","","",192,null],[3,"At","","`@`",null,null],[12,"0","","",193,null],[3,"Bang","","`!`",null,null],[12,"0","","",194,null],[3,"Caret","","`^`",null,null],[12,"0","","",195,null],[3,"CaretEq","","`^=`",null,null],[12,"0","","",196,null],[3,"Colon","","`:`",null,null],[12,"0","","",197,null],[3,"Colon2","","`::`",null,null],[12,"0","","",198,null],[3,"Comma","","`,`",null,null],[12,"0","","",199,null],[3,"Div","","`/`",null,null],[12,"0","","",200,null],[3,"DivEq","","`/=`",null,null],[12,"0","","",201,null],[3,"Dollar","","`$`",null,null],[12,"0","","",202,null],[3,"Dot","","`.`",null,null],[12,"0","","",203,null],[3,"Dot2","","`..`",null,null],[12,"0","","",204,null],[3,"Dot3","","`...`",null,null],[12,"0","","",205,null],[3,"DotDotEq","","`..=`",null,null],[12,"0","","",206,null],[3,"Eq","","`=`",null,null],[12,"0","","",207,null],[3,"EqEq","","`==`",null,null],[12,"0","","",208,null],[3,"Ge","","`>=`",null,null],[12,"0","","",209,null],[3,"Gt","","`>`",null,null],[12,"0","","",210,null],[3,"Le","","`<=`",null,null],[12,"0","","",211,null],[3,"Lt","","`<`",null,null],[12,"0","","",212,null],[3,"MulEq","","`*=`",null,null],[12,"0","","",213,null],[3,"Ne","","`!=`",null,null],[12,"0","","",214,null],[3,"Or","","`|`",null,null],[12,"0","","",215,null],[3,"OrEq","","`|=`",null,null],[12,"0","","",216,null],[3,"OrOr","","`||`",null,null],[12,"0","","",217,null],[3,"Pound","","`#`",null,null],[12,"0","","",218,null],[3,"Question","","`?`",null,null],[12,"0","","",219,null],[3,"RArrow","","`->`",null,null],[12,"0","","",220,null],[3,"LArrow","","`<-`",null,null],[12,"0","","",221,null],[3,"Rem","","`%`",null,null],[12,"0","","",222,null],[3,"RemEq","","`%=`",null,null],[12,"0","","",223,null],[3,"FatArrow","","`=>`",null,null],[12,"0","","",224,null],[3,"Semi","","`;`",null,null],[12,"0","","",225,null],[3,"Shl","","`<<`",null,null],[12,"0","","",226,null],[3,"ShlEq","","`<<=`",null,null],[12,"0","","",227,null],[3,"Shr","","`>>`",null,null],[12,"0","","",228,null],[3,"ShrEq","","`>>=`",null,null],[12,"0","","",229,null],[3,"Star","","`*`",null,null],[12,"0","","",230,null],[3,"Sub","","`-`",null,null],[12,"0","","",231,null],[3,"SubEq","","`-=`",null,null],[12,"0","","",232,null],[3,"Brace","","`{...}`",null,null],[12,"0","","",233,null],[3,"Bracket","","`[...]`",null,null],[12,"0","","",234,null],[3,"Paren","","`(...)`",null,null],[12,"0","","",235,null],[3,"Group","","None-delimited group",null,null],[12,"0","","",236,null],[3,"As","","`as`",null,null],[12,"0","","",237,null],[3,"Auto","","`auto`",null,null],[12,"0","","",238,null],[3,"Box","","`box`",null,null],[12,"0","","",239,null],[3,"Break","","`break`",null,null],[12,"0","","",240,null],[3,"CapSelf","","`Self`",null,null],[12,"0","","",241,null],[3,"Catch","","`catch`",null,null],[12,"0","","",242,null],[3,"Const","","`const`",null,null],[12,"0","","",243,null],[3,"Continue","","`continue`",null,null],[12,"0","","",244,null],[3,"Crate","","`crate`",null,null],[12,"0","","",245,null],[3,"Default","","`default`",null,null],[12,"0","","",246,null],[3,"Do","","`do`",null,null],[12,"0","","",247,null],[3,"Dyn","","`dyn`",null,null],[12,"0","","",248,null],[3,"Else","","`else`",null,null],[12,"0","","",249,null],[3,"Enum","","`enum`",null,null],[12,"0","","",250,null],[3,"Extern","","`extern`",null,null],[12,"0","","",251,null],[3,"Fn","","`fn`",null,null],[12,"0","","",252,null],[3,"For","","`for`",null,null],[12,"0","","",253,null],[3,"If","","`if`",null,null],[12,"0","","",254,null],[3,"Impl","","`impl`",null,null],[12,"0","","",255,null],[3,"In","","`in`",null,null],[12,"0","","",256,null],[3,"Let","","`let`",null,null],[12,"0","","",257,null],[3,"Loop","","`loop`",null,null],[12,"0","","",258,null],[3,"Macro","","`macro`",null,null],[12,"0","","",259,null],[3,"Match","","`match`",null,null],[12,"0","","",260,null],[3,"Mod","","`mod`",null,null],[12,"0","","",261,null],[3,"Move","","`move`",null,null],[12,"0","","",262,null],[3,"Mut","","`mut`",null,null],[12,"0","","",263,null],[3,"Pub","","`pub`",null,null],[12,"0","","",264,null],[3,"Ref","","`ref`",null,null],[12,"0","","",265,null],[3,"Return","","`return`",null,null],[12,"0","","",266,null],[3,"Self_","","`self`",null,null],[12,"0","","",267,null],[3,"Static","","`static`",null,null],[12,"0","","",268,null],[3,"Struct","","`struct`",null,null],[12,"0","","",269,null],[3,"Super","","`super`",null,null],[12,"0","","",270,null],[3,"Trait","","`trait`",null,null],[12,"0","","",271,null],[3,"Type","","`type`",null,null],[12,"0","","",272,null],[3,"Union","","`union`",null,null],[12,"0","","",273,null],[3,"Unsafe","","`unsafe`",null,null],[12,"0","","",274,null],[3,"Use","","`use`",null,null],[12,"0","","",275,null],[3,"Where","","`where`",null,null],[12,"0","","",276,null],[3,"While","","`while`",null,null],[12,"0","","",277,null],[3,"Yield","","`yield`",null,null],[12,"0","","",278,null],[11,"clone","","",187,{"i":[{"n":"self"}],"o":{"n":"underscore"}}],[11,"new","","",187,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",187,{"o":{"n":"self"}}],[11,"from","","",187,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"to_tokens","","",187,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",187,{"i":[{"n":"cursor"}],"o":{"g":["underscore"],"n":"presult"}}],[11,"description","","",187,{"o":{"g":["str"],"n":"option"}}],[11,"clone","","",188,{"i":[{"n":"self"}],"o":{"n":"add"}}],[11,"new","","",188,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",188,{"o":{"n":"self"}}],[11,"from","","",188,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",189,{"i":[{"n":"self"}],"o":{"n":"addeq"}}],[11,"new","","",189,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",189,{"o":{"n":"self"}}],[11,"from","","",189,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",190,{"i":[{"n":"self"}],"o":{"n":"and"}}],[11,"new","","",190,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",190,{"o":{"n":"self"}}],[11,"from","","",190,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",191,{"i":[{"n":"self"}],"o":{"n":"andand"}}],[11,"new","","",191,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",191,{"o":{"n":"self"}}],[11,"from","","",191,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",192,{"i":[{"n":"self"}],"o":{"n":"andeq"}}],[11,"new","","",192,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",192,{"o":{"n":"self"}}],[11,"from","","",192,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",193,{"i":[{"n":"self"}],"o":{"n":"at"}}],[11,"new","","",193,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",193,{"o":{"n":"self"}}],[11,"from","","",193,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",194,{"i":[{"n":"self"}],"o":{"n":"bang"}}],[11,"new","","",194,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",194,{"o":{"n":"self"}}],[11,"from","","",194,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",195,{"i":[{"n":"self"}],"o":{"n":"caret"}}],[11,"new","","",195,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",195,{"o":{"n":"self"}}],[11,"from","","",195,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",196,{"i":[{"n":"self"}],"o":{"n":"careteq"}}],[11,"new","","",196,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",196,{"o":{"n":"self"}}],[11,"from","","",196,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",197,{"i":[{"n":"self"}],"o":{"n":"colon"}}],[11,"new","","",197,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",197,{"o":{"n":"self"}}],[11,"from","","",197,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",198,{"i":[{"n":"self"}],"o":{"n":"colon2"}}],[11,"new","","",198,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",198,{"o":{"n":"self"}}],[11,"from","","",198,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",199,{"i":[{"n":"self"}],"o":{"n":"comma"}}],[11,"new","","",199,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",199,{"o":{"n":"self"}}],[11,"from","","",199,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",200,{"i":[{"n":"self"}],"o":{"n":"div"}}],[11,"new","","",200,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",200,{"o":{"n":"self"}}],[11,"from","","",200,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",201,{"i":[{"n":"self"}],"o":{"n":"diveq"}}],[11,"new","","",201,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",201,{"o":{"n":"self"}}],[11,"from","","",201,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",202,{"i":[{"n":"self"}],"o":{"n":"dollar"}}],[11,"new","","",202,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",202,{"o":{"n":"self"}}],[11,"from","","",202,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",203,{"i":[{"n":"self"}],"o":{"n":"dot"}}],[11,"new","","",203,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",203,{"o":{"n":"self"}}],[11,"from","","",203,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",204,{"i":[{"n":"self"}],"o":{"n":"dot2"}}],[11,"new","","",204,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",204,{"o":{"n":"self"}}],[11,"from","","",204,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",205,{"i":[{"n":"self"}],"o":{"n":"dot3"}}],[11,"new","","",205,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",205,{"o":{"n":"self"}}],[11,"from","","",205,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",206,{"i":[{"n":"self"}],"o":{"n":"dotdoteq"}}],[11,"new","","",206,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",206,{"o":{"n":"self"}}],[11,"from","","",206,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",207,{"i":[{"n":"self"}],"o":{"n":"eq"}}],[11,"new","","",207,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",207,{"o":{"n":"self"}}],[11,"from","","",207,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",208,{"i":[{"n":"self"}],"o":{"n":"eqeq"}}],[11,"new","","",208,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",208,{"o":{"n":"self"}}],[11,"from","","",208,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",209,{"i":[{"n":"self"}],"o":{"n":"ge"}}],[11,"new","","",209,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",209,{"o":{"n":"self"}}],[11,"from","","",209,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",210,{"i":[{"n":"self"}],"o":{"n":"gt"}}],[11,"new","","",210,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",210,{"o":{"n":"self"}}],[11,"from","","",210,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",211,{"i":[{"n":"self"}],"o":{"n":"le"}}],[11,"new","","",211,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",211,{"o":{"n":"self"}}],[11,"from","","",211,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",212,{"i":[{"n":"self"}],"o":{"n":"lt"}}],[11,"new","","",212,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",212,{"o":{"n":"self"}}],[11,"from","","",212,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",213,{"i":[{"n":"self"}],"o":{"n":"muleq"}}],[11,"new","","",213,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",213,{"o":{"n":"self"}}],[11,"from","","",213,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",214,{"i":[{"n":"self"}],"o":{"n":"ne"}}],[11,"new","","",214,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",214,{"o":{"n":"self"}}],[11,"from","","",214,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",215,{"i":[{"n":"self"}],"o":{"n":"or"}}],[11,"new","","",215,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",215,{"o":{"n":"self"}}],[11,"from","","",215,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",216,{"i":[{"n":"self"}],"o":{"n":"oreq"}}],[11,"new","","",216,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",216,{"o":{"n":"self"}}],[11,"from","","",216,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",217,{"i":[{"n":"self"}],"o":{"n":"oror"}}],[11,"new","","",217,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",217,{"o":{"n":"self"}}],[11,"from","","",217,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",218,{"i":[{"n":"self"}],"o":{"n":"pound"}}],[11,"new","","",218,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",218,{"o":{"n":"self"}}],[11,"from","","",218,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",219,{"i":[{"n":"self"}],"o":{"n":"question"}}],[11,"new","","",219,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",219,{"o":{"n":"self"}}],[11,"from","","",219,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",220,{"i":[{"n":"self"}],"o":{"n":"rarrow"}}],[11,"new","","",220,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",220,{"o":{"n":"self"}}],[11,"from","","",220,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",221,{"i":[{"n":"self"}],"o":{"n":"larrow"}}],[11,"new","","",221,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",221,{"o":{"n":"self"}}],[11,"from","","",221,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",222,{"i":[{"n":"self"}],"o":{"n":"rem"}}],[11,"new","","",222,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",222,{"o":{"n":"self"}}],[11,"from","","",222,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",223,{"i":[{"n":"self"}],"o":{"n":"remeq"}}],[11,"new","","",223,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",223,{"o":{"n":"self"}}],[11,"from","","",223,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",224,{"i":[{"n":"self"}],"o":{"n":"fatarrow"}}],[11,"new","","",224,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",224,{"o":{"n":"self"}}],[11,"from","","",224,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",225,{"i":[{"n":"self"}],"o":{"n":"semi"}}],[11,"new","","",225,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",225,{"o":{"n":"self"}}],[11,"from","","",225,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",226,{"i":[{"n":"self"}],"o":{"n":"shl"}}],[11,"new","","",226,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",226,{"o":{"n":"self"}}],[11,"from","","",226,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",227,{"i":[{"n":"self"}],"o":{"n":"shleq"}}],[11,"new","","",227,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",227,{"o":{"n":"self"}}],[11,"from","","",227,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",228,{"i":[{"n":"self"}],"o":{"n":"shr"}}],[11,"new","","",228,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",228,{"o":{"n":"self"}}],[11,"from","","",228,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",229,{"i":[{"n":"self"}],"o":{"n":"shreq"}}],[11,"new","","",229,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",229,{"o":{"n":"self"}}],[11,"from","","",229,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",230,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"new","","",230,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",230,{"o":{"n":"self"}}],[11,"from","","",230,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",231,{"i":[{"n":"self"}],"o":{"n":"sub"}}],[11,"new","","",231,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",231,{"o":{"n":"self"}}],[11,"from","","",231,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",232,{"i":[{"n":"self"}],"o":{"n":"subeq"}}],[11,"new","","",232,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",232,{"o":{"n":"self"}}],[11,"from","","",232,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"to_tokens","","",188,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",188,{"i":[{"n":"cursor"}],"o":{"g":["add"],"n":"presult"}}],[11,"description","","",188,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",189,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",189,{"i":[{"n":"cursor"}],"o":{"g":["addeq"],"n":"presult"}}],[11,"description","","",189,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",190,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",190,{"i":[{"n":"cursor"}],"o":{"g":["and"],"n":"presult"}}],[11,"description","","",190,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",191,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",191,{"i":[{"n":"cursor"}],"o":{"g":["andand"],"n":"presult"}}],[11,"description","","",191,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",192,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",192,{"i":[{"n":"cursor"}],"o":{"g":["andeq"],"n":"presult"}}],[11,"description","","",192,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",193,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",193,{"i":[{"n":"cursor"}],"o":{"g":["at"],"n":"presult"}}],[11,"description","","",193,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",194,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",194,{"i":[{"n":"cursor"}],"o":{"g":["bang"],"n":"presult"}}],[11,"description","","",194,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",195,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",195,{"i":[{"n":"cursor"}],"o":{"g":["caret"],"n":"presult"}}],[11,"description","","",195,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",196,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",196,{"i":[{"n":"cursor"}],"o":{"g":["careteq"],"n":"presult"}}],[11,"description","","",196,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",197,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",197,{"i":[{"n":"cursor"}],"o":{"g":["colon"],"n":"presult"}}],[11,"description","","",197,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",198,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",198,{"i":[{"n":"cursor"}],"o":{"g":["colon2"],"n":"presult"}}],[11,"description","","",198,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",199,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",199,{"i":[{"n":"cursor"}],"o":{"g":["comma"],"n":"presult"}}],[11,"description","","",199,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",200,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",200,{"i":[{"n":"cursor"}],"o":{"g":["div"],"n":"presult"}}],[11,"description","","",200,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",201,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",201,{"i":[{"n":"cursor"}],"o":{"g":["diveq"],"n":"presult"}}],[11,"description","","",201,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",202,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",202,{"i":[{"n":"cursor"}],"o":{"g":["dollar"],"n":"presult"}}],[11,"description","","",202,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",203,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",203,{"i":[{"n":"cursor"}],"o":{"g":["dot"],"n":"presult"}}],[11,"description","","",203,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",204,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",204,{"i":[{"n":"cursor"}],"o":{"g":["dot2"],"n":"presult"}}],[11,"description","","",204,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",205,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",205,{"i":[{"n":"cursor"}],"o":{"g":["dot3"],"n":"presult"}}],[11,"description","","",205,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",206,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",206,{"i":[{"n":"cursor"}],"o":{"g":["dotdoteq"],"n":"presult"}}],[11,"description","","",206,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",207,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",207,{"i":[{"n":"cursor"}],"o":{"g":["eq"],"n":"presult"}}],[11,"description","","",207,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",208,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",208,{"i":[{"n":"cursor"}],"o":{"g":["eqeq"],"n":"presult"}}],[11,"description","","",208,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",209,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",209,{"i":[{"n":"cursor"}],"o":{"g":["ge"],"n":"presult"}}],[11,"description","","",209,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",210,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",210,{"i":[{"n":"cursor"}],"o":{"g":["gt"],"n":"presult"}}],[11,"description","","",210,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",211,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",211,{"i":[{"n":"cursor"}],"o":{"g":["le"],"n":"presult"}}],[11,"description","","",211,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",212,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",212,{"i":[{"n":"cursor"}],"o":{"g":["lt"],"n":"presult"}}],[11,"description","","",212,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",213,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",213,{"i":[{"n":"cursor"}],"o":{"g":["muleq"],"n":"presult"}}],[11,"description","","",213,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",214,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",214,{"i":[{"n":"cursor"}],"o":{"g":["ne"],"n":"presult"}}],[11,"description","","",214,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",215,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",215,{"i":[{"n":"cursor"}],"o":{"g":["or"],"n":"presult"}}],[11,"description","","",215,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",216,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",216,{"i":[{"n":"cursor"}],"o":{"g":["oreq"],"n":"presult"}}],[11,"description","","",216,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",217,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",217,{"i":[{"n":"cursor"}],"o":{"g":["oror"],"n":"presult"}}],[11,"description","","",217,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",218,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",218,{"i":[{"n":"cursor"}],"o":{"g":["pound"],"n":"presult"}}],[11,"description","","",218,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",219,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",219,{"i":[{"n":"cursor"}],"o":{"g":["question"],"n":"presult"}}],[11,"description","","",219,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",220,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",220,{"i":[{"n":"cursor"}],"o":{"g":["rarrow"],"n":"presult"}}],[11,"description","","",220,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",221,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",221,{"i":[{"n":"cursor"}],"o":{"g":["larrow"],"n":"presult"}}],[11,"description","","",221,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",222,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",222,{"i":[{"n":"cursor"}],"o":{"g":["rem"],"n":"presult"}}],[11,"description","","",222,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",223,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",223,{"i":[{"n":"cursor"}],"o":{"g":["remeq"],"n":"presult"}}],[11,"description","","",223,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",224,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",224,{"i":[{"n":"cursor"}],"o":{"g":["fatarrow"],"n":"presult"}}],[11,"description","","",224,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",225,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",225,{"i":[{"n":"cursor"}],"o":{"g":["semi"],"n":"presult"}}],[11,"description","","",225,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",226,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",226,{"i":[{"n":"cursor"}],"o":{"g":["shl"],"n":"presult"}}],[11,"description","","",226,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",227,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",227,{"i":[{"n":"cursor"}],"o":{"g":["shleq"],"n":"presult"}}],[11,"description","","",227,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",228,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",228,{"i":[{"n":"cursor"}],"o":{"g":["shr"],"n":"presult"}}],[11,"description","","",228,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",229,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",229,{"i":[{"n":"cursor"}],"o":{"g":["shreq"],"n":"presult"}}],[11,"description","","",229,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",230,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",230,{"i":[{"n":"cursor"}],"o":{"g":["star"],"n":"presult"}}],[11,"description","","",230,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",231,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",231,{"i":[{"n":"cursor"}],"o":{"g":["sub"],"n":"presult"}}],[11,"description","","",231,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",232,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",232,{"i":[{"n":"cursor"}],"o":{"g":["subeq"],"n":"presult"}}],[11,"description","","",232,{"o":{"g":["str"],"n":"option"}}],[11,"clone","","",233,{"i":[{"n":"self"}],"o":{"n":"brace"}}],[11,"default","","",233,{"o":{"n":"self"}}],[11,"surround","","",233,{"i":[{"n":"self"},{"n":"tokens"},{"n":"f"}]}],[11,"parse","","",233,{"i":[{"n":"cursor"},{"n":"f"}],"o":{"n":"presult"}}],[11,"from","","",233,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",234,{"i":[{"n":"self"}],"o":{"n":"bracket"}}],[11,"default","","",234,{"o":{"n":"self"}}],[11,"surround","","",234,{"i":[{"n":"self"},{"n":"tokens"},{"n":"f"}]}],[11,"parse","","",234,{"i":[{"n":"cursor"},{"n":"f"}],"o":{"n":"presult"}}],[11,"from","","",234,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",235,{"i":[{"n":"self"}],"o":{"n":"paren"}}],[11,"default","","",235,{"o":{"n":"self"}}],[11,"surround","","",235,{"i":[{"n":"self"},{"n":"tokens"},{"n":"f"}]}],[11,"parse","","",235,{"i":[{"n":"cursor"},{"n":"f"}],"o":{"n":"presult"}}],[11,"from","","",235,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",236,{"i":[{"n":"self"}],"o":{"n":"group"}}],[11,"default","","",236,{"o":{"n":"self"}}],[11,"surround","","",236,{"i":[{"n":"self"},{"n":"tokens"},{"n":"f"}]}],[11,"parse","","",236,{"i":[{"n":"cursor"},{"n":"f"}],"o":{"n":"presult"}}],[11,"from","","",236,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",237,{"i":[{"n":"self"}],"o":{"n":"as"}}],[11,"default","","",237,{"o":{"n":"self"}}],[11,"to_tokens","","",237,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",237,{"i":[{"n":"cursor"}],"o":{"g":["as"],"n":"presult"}}],[11,"description","","",237,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",237,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",238,{"i":[{"n":"self"}],"o":{"n":"auto"}}],[11,"default","","",238,{"o":{"n":"self"}}],[11,"to_tokens","","",238,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",238,{"i":[{"n":"cursor"}],"o":{"g":["auto"],"n":"presult"}}],[11,"description","","",238,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",238,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",239,{"i":[{"n":"self"}],"o":{"n":"box"}}],[11,"default","","",239,{"o":{"n":"self"}}],[11,"to_tokens","","",239,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",239,{"i":[{"n":"cursor"}],"o":{"g":["box"],"n":"presult"}}],[11,"description","","",239,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",239,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",240,{"i":[{"n":"self"}],"o":{"n":"break"}}],[11,"default","","",240,{"o":{"n":"self"}}],[11,"to_tokens","","",240,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",240,{"i":[{"n":"cursor"}],"o":{"g":["break"],"n":"presult"}}],[11,"description","","",240,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",240,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",241,{"i":[{"n":"self"}],"o":{"n":"capself"}}],[11,"default","","",241,{"o":{"n":"self"}}],[11,"to_tokens","","",241,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",241,{"i":[{"n":"cursor"}],"o":{"g":["capself"],"n":"presult"}}],[11,"description","","",241,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",241,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",242,{"i":[{"n":"self"}],"o":{"n":"catch"}}],[11,"default","","",242,{"o":{"n":"self"}}],[11,"to_tokens","","",242,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",242,{"i":[{"n":"cursor"}],"o":{"g":["catch"],"n":"presult"}}],[11,"description","","",242,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",242,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",243,{"i":[{"n":"self"}],"o":{"n":"const"}}],[11,"default","","",243,{"o":{"n":"self"}}],[11,"to_tokens","","",243,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",243,{"i":[{"n":"cursor"}],"o":{"g":["const"],"n":"presult"}}],[11,"description","","",243,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",243,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",244,{"i":[{"n":"self"}],"o":{"n":"continue"}}],[11,"default","","",244,{"o":{"n":"self"}}],[11,"to_tokens","","",244,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",244,{"i":[{"n":"cursor"}],"o":{"g":["continue"],"n":"presult"}}],[11,"description","","",244,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",244,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",245,{"i":[{"n":"self"}],"o":{"n":"crate"}}],[11,"default","","",245,{"o":{"n":"self"}}],[11,"to_tokens","","",245,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",245,{"i":[{"n":"cursor"}],"o":{"g":["crate"],"n":"presult"}}],[11,"description","","",245,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",245,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",246,{"i":[{"n":"self"}],"o":{"n":"default"}}],[11,"default","","",246,{"o":{"n":"self"}}],[11,"to_tokens","","",246,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",246,{"i":[{"n":"cursor"}],"o":{"g":["default"],"n":"presult"}}],[11,"description","","",246,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",246,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",247,{"i":[{"n":"self"}],"o":{"n":"do"}}],[11,"default","","",247,{"o":{"n":"self"}}],[11,"to_tokens","","",247,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",247,{"i":[{"n":"cursor"}],"o":{"g":["do"],"n":"presult"}}],[11,"description","","",247,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",247,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",248,{"i":[{"n":"self"}],"o":{"n":"dyn"}}],[11,"default","","",248,{"o":{"n":"self"}}],[11,"to_tokens","","",248,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",248,{"i":[{"n":"cursor"}],"o":{"g":["dyn"],"n":"presult"}}],[11,"description","","",248,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",248,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",249,{"i":[{"n":"self"}],"o":{"n":"else"}}],[11,"default","","",249,{"o":{"n":"self"}}],[11,"to_tokens","","",249,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",249,{"i":[{"n":"cursor"}],"o":{"g":["else"],"n":"presult"}}],[11,"description","","",249,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",249,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",250,{"i":[{"n":"self"}],"o":{"n":"enum"}}],[11,"default","","",250,{"o":{"n":"self"}}],[11,"to_tokens","","",250,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",250,{"i":[{"n":"cursor"}],"o":{"g":["enum"],"n":"presult"}}],[11,"description","","",250,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",250,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",251,{"i":[{"n":"self"}],"o":{"n":"extern"}}],[11,"default","","",251,{"o":{"n":"self"}}],[11,"to_tokens","","",251,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",251,{"i":[{"n":"cursor"}],"o":{"g":["extern"],"n":"presult"}}],[11,"description","","",251,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",251,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",252,{"i":[{"n":"self"}],"o":{"n":"fn"}}],[11,"default","","",252,{"o":{"n":"self"}}],[11,"to_tokens","","",252,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",252,{"i":[{"n":"cursor"}],"o":{"g":["fn"],"n":"presult"}}],[11,"description","","",252,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",252,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",253,{"i":[{"n":"self"}],"o":{"n":"for"}}],[11,"default","","",253,{"o":{"n":"self"}}],[11,"to_tokens","","",253,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",253,{"i":[{"n":"cursor"}],"o":{"g":["for"],"n":"presult"}}],[11,"description","","",253,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",253,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",254,{"i":[{"n":"self"}],"o":{"n":"if"}}],[11,"default","","",254,{"o":{"n":"self"}}],[11,"to_tokens","","",254,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",254,{"i":[{"n":"cursor"}],"o":{"g":["if"],"n":"presult"}}],[11,"description","","",254,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",254,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",255,{"i":[{"n":"self"}],"o":{"n":"impl"}}],[11,"default","","",255,{"o":{"n":"self"}}],[11,"to_tokens","","",255,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",255,{"i":[{"n":"cursor"}],"o":{"g":["impl"],"n":"presult"}}],[11,"description","","",255,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",255,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",256,{"i":[{"n":"self"}],"o":{"n":"in"}}],[11,"default","","",256,{"o":{"n":"self"}}],[11,"to_tokens","","",256,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",256,{"i":[{"n":"cursor"}],"o":{"g":["in"],"n":"presult"}}],[11,"description","","",256,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",256,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",257,{"i":[{"n":"self"}],"o":{"n":"let"}}],[11,"default","","",257,{"o":{"n":"self"}}],[11,"to_tokens","","",257,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",257,{"i":[{"n":"cursor"}],"o":{"g":["let"],"n":"presult"}}],[11,"description","","",257,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",257,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",258,{"i":[{"n":"self"}],"o":{"n":"loop"}}],[11,"default","","",258,{"o":{"n":"self"}}],[11,"to_tokens","","",258,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",258,{"i":[{"n":"cursor"}],"o":{"g":["loop"],"n":"presult"}}],[11,"description","","",258,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",258,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",259,{"i":[{"n":"self"}],"o":{"n":"macro"}}],[11,"default","","",259,{"o":{"n":"self"}}],[11,"to_tokens","","",259,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",259,{"i":[{"n":"cursor"}],"o":{"g":["macro"],"n":"presult"}}],[11,"description","","",259,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",259,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",260,{"i":[{"n":"self"}],"o":{"n":"match"}}],[11,"default","","",260,{"o":{"n":"self"}}],[11,"to_tokens","","",260,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",260,{"i":[{"n":"cursor"}],"o":{"g":["match"],"n":"presult"}}],[11,"description","","",260,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",260,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",261,{"i":[{"n":"self"}],"o":{"n":"mod"}}],[11,"default","","",261,{"o":{"n":"self"}}],[11,"to_tokens","","",261,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",261,{"i":[{"n":"cursor"}],"o":{"g":["mod"],"n":"presult"}}],[11,"description","","",261,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",261,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",262,{"i":[{"n":"self"}],"o":{"n":"move"}}],[11,"default","","",262,{"o":{"n":"self"}}],[11,"to_tokens","","",262,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",262,{"i":[{"n":"cursor"}],"o":{"g":["move"],"n":"presult"}}],[11,"description","","",262,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",262,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",263,{"i":[{"n":"self"}],"o":{"n":"mut"}}],[11,"default","","",263,{"o":{"n":"self"}}],[11,"to_tokens","","",263,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",263,{"i":[{"n":"cursor"}],"o":{"g":["mut"],"n":"presult"}}],[11,"description","","",263,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",263,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",264,{"i":[{"n":"self"}],"o":{"n":"pub"}}],[11,"default","","",264,{"o":{"n":"self"}}],[11,"to_tokens","","",264,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",264,{"i":[{"n":"cursor"}],"o":{"g":["pub"],"n":"presult"}}],[11,"description","","",264,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",264,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",265,{"i":[{"n":"self"}],"o":{"n":"ref"}}],[11,"default","","",265,{"o":{"n":"self"}}],[11,"to_tokens","","",265,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",265,{"i":[{"n":"cursor"}],"o":{"g":["ref"],"n":"presult"}}],[11,"description","","",265,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",265,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",266,{"i":[{"n":"self"}],"o":{"n":"return"}}],[11,"default","","",266,{"o":{"n":"self"}}],[11,"to_tokens","","",266,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",266,{"i":[{"n":"cursor"}],"o":{"g":["return"],"n":"presult"}}],[11,"description","","",266,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",266,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",267,{"i":[{"n":"self"}],"o":{"n":"self_"}}],[11,"default","","",267,{"o":{"n":"self"}}],[11,"to_tokens","","",267,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",267,{"i":[{"n":"cursor"}],"o":{"g":["self_"],"n":"presult"}}],[11,"description","","",267,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",267,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",268,{"i":[{"n":"self"}],"o":{"n":"static"}}],[11,"default","","",268,{"o":{"n":"self"}}],[11,"to_tokens","","",268,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",268,{"i":[{"n":"cursor"}],"o":{"g":["static"],"n":"presult"}}],[11,"description","","",268,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",268,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",269,{"i":[{"n":"self"}],"o":{"n":"struct"}}],[11,"default","","",269,{"o":{"n":"self"}}],[11,"to_tokens","","",269,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",269,{"i":[{"n":"cursor"}],"o":{"g":["struct"],"n":"presult"}}],[11,"description","","",269,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",269,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",270,{"i":[{"n":"self"}],"o":{"n":"super"}}],[11,"default","","",270,{"o":{"n":"self"}}],[11,"to_tokens","","",270,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",270,{"i":[{"n":"cursor"}],"o":{"g":["super"],"n":"presult"}}],[11,"description","","",270,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",270,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",271,{"i":[{"n":"self"}],"o":{"n":"trait"}}],[11,"default","","",271,{"o":{"n":"self"}}],[11,"to_tokens","","",271,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",271,{"i":[{"n":"cursor"}],"o":{"g":["trait"],"n":"presult"}}],[11,"description","","",271,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",271,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",272,{"i":[{"n":"self"}],"o":{"n":"type"}}],[11,"default","","",272,{"o":{"n":"self"}}],[11,"to_tokens","","",272,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",272,{"i":[{"n":"cursor"}],"o":{"g":["type"],"n":"presult"}}],[11,"description","","",272,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",272,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",273,{"i":[{"n":"self"}],"o":{"n":"union"}}],[11,"default","","",273,{"o":{"n":"self"}}],[11,"to_tokens","","",273,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",273,{"i":[{"n":"cursor"}],"o":{"g":["union"],"n":"presult"}}],[11,"description","","",273,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",273,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",274,{"i":[{"n":"self"}],"o":{"n":"unsafe"}}],[11,"default","","",274,{"o":{"n":"self"}}],[11,"to_tokens","","",274,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",274,{"i":[{"n":"cursor"}],"o":{"g":["unsafe"],"n":"presult"}}],[11,"description","","",274,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",274,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",275,{"i":[{"n":"self"}],"o":{"n":"use"}}],[11,"default","","",275,{"o":{"n":"self"}}],[11,"to_tokens","","",275,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",275,{"i":[{"n":"cursor"}],"o":{"g":["use"],"n":"presult"}}],[11,"description","","",275,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",275,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",276,{"i":[{"n":"self"}],"o":{"n":"where"}}],[11,"default","","",276,{"o":{"n":"self"}}],[11,"to_tokens","","",276,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",276,{"i":[{"n":"cursor"}],"o":{"g":["where"],"n":"presult"}}],[11,"description","","",276,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",276,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",277,{"i":[{"n":"self"}],"o":{"n":"while"}}],[11,"default","","",277,{"o":{"n":"self"}}],[11,"to_tokens","","",277,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",277,{"i":[{"n":"cursor"}],"o":{"g":["while"],"n":"presult"}}],[11,"description","","",277,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",277,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",278,{"i":[{"n":"self"}],"o":{"n":"yield"}}],[11,"default","","",278,{"o":{"n":"self"}}],[11,"to_tokens","","",278,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",278,{"i":[{"n":"cursor"}],"o":{"g":["yield"],"n":"presult"}}],[11,"description","","",278,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",278,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"parse_inner","syn","",0,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_outer","","",0,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"to_tokens","","",0,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",2,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"attribute"}}],[11,"interpret_meta","","Parses the tokens after the path as a `Meta` if possible.",0,{"i":[{"n":"self"}],"o":{"g":["meta"],"n":"option"}}],[11,"clone","","",153,{"i":[{"n":"self"}],"o":{"n":"attrstyle"}}],[11,"clone","","",154,{"i":[{"n":"self"}],"o":{"n":"meta"}}],[11,"from","","",154,{"i":[{"n":"ident"}],"o":{"n":"meta"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"metalist"}}],[11,"from","","",154,{"i":[{"n":"metalist"}],"o":{"n":"meta"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"metanamevalue"}}],[11,"from","","",154,{"i":[{"n":"metanamevalue"}],"o":{"n":"meta"}}],[11,"to_tokens","","",154,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"name","","Returns the identifier that begins this structured meta item.",154,{"i":[{"n":"self"}],"o":{"n":"ident"}}],[11,"clone","","",155,{"i":[{"n":"self"}],"o":{"n":"nestedmeta"}}],[11,"from","","",155,{"i":[{"n":"meta"}],"o":{"n":"nestedmeta"}}],[11,"from","","",155,{"i":[{"n":"lit"}],"o":{"n":"nestedmeta"}}],[11,"to_tokens","","",155,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",6,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",6,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",4,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",4,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",5,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",5,{"o":{"g":["str"],"n":"option"}}],[11,"parse_named","","",3,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_unnamed","","",3,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse","","",157,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",157,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",6,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",4,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",5,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",3,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",8,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",7,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",9,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"variant"}}],[11,"clone","","",156,{"i":[{"n":"self"}],"o":{"n":"fields"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"fieldsnamed"}}],[11,"from","","",156,{"i":[{"n":"fieldsnamed"}],"o":{"n":"fields"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"fieldsunnamed"}}],[11,"from","","",156,{"i":[{"n":"fieldsunnamed"}],"o":{"n":"fields"}}],[11,"to_tokens","","",156,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"iter","","Get an iterator over the [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",156,{"i":[{"n":"self"}],"o":{"g":["field"],"n":"iter"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"field"}}],[11,"clone","","",157,{"i":[{"n":"self"}],"o":{"n":"visibility"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"vispublic"}}],[11,"from","","",157,{"i":[{"n":"vispublic"}],"o":{"n":"visibility"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"viscrate"}}],[11,"from","","",157,{"i":[{"n":"viscrate"}],"o":{"n":"visibility"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"visrestricted"}}],[11,"from","","",157,{"i":[{"n":"visrestricted"}],"o":{"n":"visibility"}}],[11,"to_tokens","","",157,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",158,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",158,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",29,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",29,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",31,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",31,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",24,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",24,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",34,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",34,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",10,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",10,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",160,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",160,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",42,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",42,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",26,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",26,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",25,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",25,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",23,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",23,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",30,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",30,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",32,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",32,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",19,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",19,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",49,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",49,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",51,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",51,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",47,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",47,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",48,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",48,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",55,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",55,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",21,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",21,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",40,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",40,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",54,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",54,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",38,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",38,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",45,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",45,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",14,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",14,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",162,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",162,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",35,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",35,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",52,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",52,{"o":{"g":["str"],"n":"option"}}],[11,"parse_within","","",52,{"i":[{"n":"cursor"}],"o":{"g":["vec"],"n":"presult"}}],[11,"parse","","",163,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",163,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",161,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",161,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",70,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",70,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",58,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",58,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",59,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",59,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",68,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",68,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",66,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",66,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",53,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",53,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",159,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",159,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",50,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",50,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",62,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",62,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",67,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",67,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",64,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",64,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",60,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",60,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",63,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",63,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",65,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",65,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",61,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",61,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",15,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",27,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",10,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",17,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",33,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",57,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",160,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",42,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",13,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",44,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",29,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",18,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",43,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",25,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",26,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",47,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",48,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",23,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",30,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",32,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",19,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",49,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",20,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",45,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",14,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",11,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",12,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",22,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",159,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",50,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",28,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",36,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",35,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",37,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",16,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",21,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",39,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",31,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",40,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",38,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",24,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",34,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",41,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",46,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",55,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",54,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",51,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",70,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",59,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",66,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",68,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",62,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",67,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",58,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",64,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",60,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",63,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",65,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",61,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",69,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",53,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",52,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",163,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",56,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",158,{"i":[{"n":"self"}],"o":{"n":"expr"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"exprbox"}}],[11,"from","","",158,{"i":[{"n":"exprbox"}],"o":{"n":"expr"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"exprinplace"}}],[11,"from","","",158,{"i":[{"n":"exprinplace"}],"o":{"n":"expr"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"exprarray"}}],[11,"from","","",158,{"i":[{"n":"exprarray"}],"o":{"n":"expr"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"exprcall"}}],[11,"from","","",158,{"i":[{"n":"exprcall"}],"o":{"n":"expr"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"exprmethodcall"}}],[11,"from","","",158,{"i":[{"n":"exprmethodcall"}],"o":{"n":"expr"}}],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"exprtuple"}}],[11,"from","","",158,{"i":[{"n":"exprtuple"}],"o":{"n":"expr"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"exprbinary"}}],[11,"from","","",158,{"i":[{"n":"exprbinary"}],"o":{"n":"expr"}}],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"exprunary"}}],[11,"from","","",158,{"i":[{"n":"exprunary"}],"o":{"n":"expr"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"exprlit"}}],[11,"from","","",158,{"i":[{"n":"exprlit"}],"o":{"n":"expr"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"exprcast"}}],[11,"from","","",158,{"i":[{"n":"exprcast"}],"o":{"n":"expr"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"exprtype"}}],[11,"from","","",158,{"i":[{"n":"exprtype"}],"o":{"n":"expr"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"exprif"}}],[11,"from","","",158,{"i":[{"n":"exprif"}],"o":{"n":"expr"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"expriflet"}}],[11,"from","","",158,{"i":[{"n":"expriflet"}],"o":{"n":"expr"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"exprwhile"}}],[11,"from","","",158,{"i":[{"n":"exprwhile"}],"o":{"n":"expr"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"exprwhilelet"}}],[11,"from","","",158,{"i":[{"n":"exprwhilelet"}],"o":{"n":"expr"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"exprforloop"}}],[11,"from","","",158,{"i":[{"n":"exprforloop"}],"o":{"n":"expr"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"exprloop"}}],[11,"from","","",158,{"i":[{"n":"exprloop"}],"o":{"n":"expr"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"exprmatch"}}],[11,"from","","",158,{"i":[{"n":"exprmatch"}],"o":{"n":"expr"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"exprclosure"}}],[11,"from","","",158,{"i":[{"n":"exprclosure"}],"o":{"n":"expr"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"exprunsafe"}}],[11,"from","","",158,{"i":[{"n":"exprunsafe"}],"o":{"n":"expr"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"exprblock"}}],[11,"from","","",158,{"i":[{"n":"exprblock"}],"o":{"n":"expr"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"exprassign"}}],[11,"from","","",158,{"i":[{"n":"exprassign"}],"o":{"n":"expr"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"exprassignop"}}],[11,"from","","",158,{"i":[{"n":"exprassignop"}],"o":{"n":"expr"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"exprfield"}}],[11,"from","","",158,{"i":[{"n":"exprfield"}],"o":{"n":"expr"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"exprindex"}}],[11,"from","","",158,{"i":[{"n":"exprindex"}],"o":{"n":"expr"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"exprrange"}}],[11,"from","","",158,{"i":[{"n":"exprrange"}],"o":{"n":"expr"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"exprpath"}}],[11,"from","","",158,{"i":[{"n":"exprpath"}],"o":{"n":"expr"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"exprreference"}}],[11,"from","","",158,{"i":[{"n":"exprreference"}],"o":{"n":"expr"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"exprbreak"}}],[11,"from","","",158,{"i":[{"n":"exprbreak"}],"o":{"n":"expr"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"exprcontinue"}}],[11,"from","","",158,{"i":[{"n":"exprcontinue"}],"o":{"n":"expr"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"exprreturn"}}],[11,"from","","",158,{"i":[{"n":"exprreturn"}],"o":{"n":"expr"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"exprmacro"}}],[11,"from","","",158,{"i":[{"n":"exprmacro"}],"o":{"n":"expr"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"exprstruct"}}],[11,"from","","",158,{"i":[{"n":"exprstruct"}],"o":{"n":"expr"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"exprrepeat"}}],[11,"from","","",158,{"i":[{"n":"exprrepeat"}],"o":{"n":"expr"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"exprparen"}}],[11,"from","","",158,{"i":[{"n":"exprparen"}],"o":{"n":"expr"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"exprgroup"}}],[11,"from","","",158,{"i":[{"n":"exprgroup"}],"o":{"n":"expr"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"exprtry"}}],[11,"from","","",158,{"i":[{"n":"exprtry"}],"o":{"n":"expr"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"exprcatch"}}],[11,"from","","",158,{"i":[{"n":"exprcatch"}],"o":{"n":"expr"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"expryield"}}],[11,"from","","",158,{"i":[{"n":"expryield"}],"o":{"n":"expr"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"exprverbatim"}}],[11,"from","","",158,{"i":[{"n":"exprverbatim"}],"o":{"n":"expr"}}],[11,"to_tokens","","",158,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",159,{"i":[{"n":"self"}],"o":{"n":"member"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"index"}}],[11,"from","","",50,{"i":[{"n":"usize"}],"o":{"n":"index"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"methodturbofish"}}],[11,"clone","","",160,{"i":[{"n":"self"}],"o":{"n":"genericmethodargument"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"fieldvalue"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"label"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"block"}}],[11,"clone","","",163,{"i":[{"n":"self"}],"o":{"n":"stmt"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"local"}}],[11,"clone","","",161,{"i":[{"n":"self"}],"o":{"n":"pat"}}],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"patwild"}}],[11,"from","","",161,{"i":[{"n":"patwild"}],"o":{"n":"pat"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"patident"}}],[11,"from","","",161,{"i":[{"n":"patident"}],"o":{"n":"pat"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"patstruct"}}],[11,"from","","",161,{"i":[{"n":"patstruct"}],"o":{"n":"pat"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"pattuplestruct"}}],[11,"from","","",161,{"i":[{"n":"pattuplestruct"}],"o":{"n":"pat"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"patpath"}}],[11,"from","","",161,{"i":[{"n":"patpath"}],"o":{"n":"pat"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"pattuple"}}],[11,"from","","",161,{"i":[{"n":"pattuple"}],"o":{"n":"pat"}}],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"patbox"}}],[11,"from","","",161,{"i":[{"n":"patbox"}],"o":{"n":"pat"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"patref"}}],[11,"from","","",161,{"i":[{"n":"patref"}],"o":{"n":"pat"}}],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"patlit"}}],[11,"from","","",161,{"i":[{"n":"patlit"}],"o":{"n":"pat"}}],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"patrange"}}],[11,"from","","",161,{"i":[{"n":"patrange"}],"o":{"n":"pat"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"patslice"}}],[11,"from","","",161,{"i":[{"n":"patslice"}],"o":{"n":"pat"}}],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"patmacro"}}],[11,"from","","",161,{"i":[{"n":"patmacro"}],"o":{"n":"pat"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"patverbatim"}}],[11,"from","","",161,{"i":[{"n":"patverbatim"}],"o":{"n":"pat"}}],[11,"to_tokens","","",161,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"arm"}}],[11,"clone","","",162,{"i":[{"n":"self"}],"o":{"n":"rangelimits"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"fieldpat"}}],[11,"parse","","",73,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",73,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",164,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",164,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",74,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",74,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",71,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",71,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",79,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",79,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",166,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",166,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",78,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",78,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",165,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",165,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",72,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",72,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",80,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",80,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",167,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",167,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",73,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",279,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",280,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",281,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",71,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",74,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",79,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",78,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",165,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",72,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",80,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",77,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",76,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",75,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"default","","",73,{"o":{"n":"generics"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"generics"}}],[11,"clone","","",164,{"i":[{"n":"self"}],"o":{"n":"genericparam"}}],[11,"clone","","",79,{"i":[{"n":"self"}],"o":{"n":"typeparam"}}],[11,"from","","",164,{"i":[{"n":"typeparam"}],"o":{"n":"genericparam"}}],[11,"clone","","",74,{"i":[{"n":"self"}],"o":{"n":"lifetimedef"}}],[11,"from","","",164,{"i":[{"n":"lifetimedef"}],"o":{"n":"genericparam"}}],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"constparam"}}],[11,"from","","",164,{"i":[{"n":"constparam"}],"o":{"n":"genericparam"}}],[11,"to_tokens","","",164,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type parameters in `self.params`.",73,{"i":[{"n":"self"}],"o":{"n":"typeparams"}}],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type parameters in `self.params`.",73,{"i":[{"n":"self"}],"o":{"n":"typeparamsmut"}}],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime parameters in `self.params`.",73,{"i":[{"n":"self"}],"o":{"n":"lifetimes"}}],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the lifetime parameters in `self.params`.",73,{"i":[{"n":"self"}],"o":{"n":"lifetimesmut"}}],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant parameters in `self.params`.",73,{"i":[{"n":"self"}],"o":{"n":"constparams"}}],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the constant parameters in `self.params`.",73,{"i":[{"n":"self"}],"o":{"n":"constparamsmut"}}],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one present already.",73,{"i":[{"n":"self"}],"o":{"n":"whereclause"}}],[11,"clone","","",279,{"i":[{"n":"self"}],"o":{"n":"implgenerics"}}],[11,"clone","","",280,{"i":[{"n":"self"}],"o":{"n":"typegenerics"}}],[11,"clone","","",281,{"i":[{"n":"self"}],"o":{"n":"turbofish"}}],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",73,null],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",280,{"i":[{"n":"self"}],"o":{"n":"turbofish"}}],[11,"default","","",71,{"o":{"n":"boundlifetimes"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"boundlifetimes"}}],[11,"new","","",74,{"i":[{"n":"lifetime"}],"o":{"n":"self"}}],[11,"from","","",79,{"i":[{"n":"ident"}],"o":{"n":"self"}}],[11,"clone","","",166,{"i":[{"n":"self"}],"o":{"n":"typeparambound"}}],[11,"from","","",166,{"i":[{"n":"traitbound"}],"o":{"n":"typeparambound"}}],[11,"from","","",166,{"i":[{"n":"lifetime"}],"o":{"n":"typeparambound"}}],[11,"to_tokens","","",166,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"traitbound"}}],[11,"clone","","",165,{"i":[{"n":"self"}],"o":{"n":"traitboundmodifier"}}],[11,"clone","","",80,{"i":[{"n":"self"}],"o":{"n":"whereclause"}}],[11,"clone","","",167,{"i":[{"n":"self"}],"o":{"n":"wherepredicate"}}],[11,"clone","","",77,{"i":[{"n":"self"}],"o":{"n":"predicatetype"}}],[11,"from","","",167,{"i":[{"n":"predicatetype"}],"o":{"n":"wherepredicate"}}],[11,"clone","","",76,{"i":[{"n":"self"}],"o":{"n":"predicatelifetime"}}],[11,"from","","",167,{"i":[{"n":"predicatelifetime"}],"o":{"n":"wherepredicate"}}],[11,"clone","","",75,{"i":[{"n":"self"}],"o":{"n":"predicateeq"}}],[11,"from","","",167,{"i":[{"n":"predicateeq"}],"o":{"n":"wherepredicate"}}],[11,"to_tokens","","",167,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",282,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",282,{"o":{"g":["str"],"n":"option"}}],[11,"parse_any","","Parses any identifier",282,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"to_tokens","","",282,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",282,{"i":[{"n":"self"}],"o":{"n":"ident"}}],[11,"fmt","","",282,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates an ident with the given string representation.",282,{"i":[{"n":"str"},{"n":"span"}],"o":{"n":"self"}}],[11,"span","","",282,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",282,{"i":[{"n":"self"},{"n":"span"}]}],[11,"from","","",282,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",282,{"i":[{"n":"self_"}],"o":{"n":"self"}}],[11,"from","","",282,{"i":[{"n":"capself"}],"o":{"n":"self"}}],[11,"from","","",282,{"i":[{"n":"super"}],"o":{"n":"self"}}],[11,"from","","",282,{"i":[{"n":"crate"}],"o":{"n":"self"}}],[11,"from","","",282,{"i":[{"g":["str"],"n":"cow"}],"o":{"n":"self"}}],[11,"from","","",282,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"as_ref","","",282,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",282,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",282,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",282,{"i":[{"n":"self"},{"n":"ident"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",282,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"ordering"}}],[11,"hash","","",282,{"i":[{"n":"self"},{"n":"h"}]}],[11,"parse","","",171,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",171,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",100,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",100,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",101,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",101,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",96,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",96,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",108,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",108,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",173,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",173,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",119,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",119,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",118,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",118,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",120,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",120,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",116,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",116,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",117,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",117,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",103,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",103,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",94,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",94,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",97,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",97,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",168,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",168,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",102,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",102,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",98,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",98,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",169,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",169,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",85,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",85,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",86,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",86,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",87,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",87,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",106,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",106,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",104,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",104,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",95,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",95,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",107,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",107,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",105,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",105,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",172,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",172,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",111,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",111,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",113,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",113,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",114,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",114,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",112,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",112,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",99,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",99,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",170,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",170,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",89,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",89,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",91,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",91,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",92,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",92,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",90,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",90,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",96,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",108,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",103,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",94,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",97,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",102,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",98,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",106,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",95,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",104,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",107,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",105,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",99,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",100,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",101,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",109,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",119,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",118,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",120,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",116,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",117,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",111,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",113,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",114,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",112,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",115,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",89,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",91,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",92,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",90,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",93,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",85,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",86,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",87,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",88,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",110,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",83,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",82,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",81,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",171,{"i":[{"n":"self"}],"o":{"n":"item"}}],[11,"clone","","",96,{"i":[{"n":"self"}],"o":{"n":"itemexterncrate"}}],[11,"from","","",171,{"i":[{"n":"itemexterncrate"}],"o":{"n":"item"}}],[11,"clone","","",108,{"i":[{"n":"self"}],"o":{"n":"itemuse"}}],[11,"from","","",171,{"i":[{"n":"itemuse"}],"o":{"n":"item"}}],[11,"clone","","",103,{"i":[{"n":"self"}],"o":{"n":"itemstatic"}}],[11,"from","","",171,{"i":[{"n":"itemstatic"}],"o":{"n":"item"}}],[11,"clone","","",94,{"i":[{"n":"self"}],"o":{"n":"itemconst"}}],[11,"from","","",171,{"i":[{"n":"itemconst"}],"o":{"n":"item"}}],[11,"clone","","",97,{"i":[{"n":"self"}],"o":{"n":"itemfn"}}],[11,"from","","",171,{"i":[{"n":"itemfn"}],"o":{"n":"item"}}],[11,"clone","","",102,{"i":[{"n":"self"}],"o":{"n":"itemmod"}}],[11,"from","","",171,{"i":[{"n":"itemmod"}],"o":{"n":"item"}}],[11,"clone","","",98,{"i":[{"n":"self"}],"o":{"n":"itemforeignmod"}}],[11,"from","","",171,{"i":[{"n":"itemforeignmod"}],"o":{"n":"item"}}],[11,"clone","","",106,{"i":[{"n":"self"}],"o":{"n":"itemtype"}}],[11,"from","","",171,{"i":[{"n":"itemtype"}],"o":{"n":"item"}}],[11,"clone","","",104,{"i":[{"n":"self"}],"o":{"n":"itemstruct"}}],[11,"from","","",171,{"i":[{"n":"itemstruct"}],"o":{"n":"item"}}],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"itemenum"}}],[11,"from","","",171,{"i":[{"n":"itemenum"}],"o":{"n":"item"}}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"itemunion"}}],[11,"from","","",171,{"i":[{"n":"itemunion"}],"o":{"n":"item"}}],[11,"clone","","",105,{"i":[{"n":"self"}],"o":{"n":"itemtrait"}}],[11,"from","","",171,{"i":[{"n":"itemtrait"}],"o":{"n":"item"}}],[11,"clone","","",99,{"i":[{"n":"self"}],"o":{"n":"itemimpl"}}],[11,"from","","",171,{"i":[{"n":"itemimpl"}],"o":{"n":"item"}}],[11,"clone","","",100,{"i":[{"n":"self"}],"o":{"n":"itemmacro"}}],[11,"from","","",171,{"i":[{"n":"itemmacro"}],"o":{"n":"item"}}],[11,"clone","","",101,{"i":[{"n":"self"}],"o":{"n":"itemmacro2"}}],[11,"from","","",171,{"i":[{"n":"itemmacro2"}],"o":{"n":"item"}}],[11,"clone","","",109,{"i":[{"n":"self"}],"o":{"n":"itemverbatim"}}],[11,"from","","",171,{"i":[{"n":"itemverbatim"}],"o":{"n":"item"}}],[11,"to_tokens","","",171,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"from","","",171,{"i":[{"n":"deriveinput"}],"o":{"n":"item"}}],[11,"clone","","",173,{"i":[{"n":"self"}],"o":{"n":"usetree"}}],[11,"clone","","",119,{"i":[{"n":"self"}],"o":{"n":"usepath"}}],[11,"from","","",173,{"i":[{"n":"usepath"}],"o":{"n":"usetree"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"usename"}}],[11,"from","","",173,{"i":[{"n":"usename"}],"o":{"n":"usetree"}}],[11,"clone","","",120,{"i":[{"n":"self"}],"o":{"n":"userename"}}],[11,"from","","",173,{"i":[{"n":"userename"}],"o":{"n":"usetree"}}],[11,"clone","","",116,{"i":[{"n":"self"}],"o":{"n":"useglob"}}],[11,"from","","",173,{"i":[{"n":"useglob"}],"o":{"n":"usetree"}}],[11,"clone","","",117,{"i":[{"n":"self"}],"o":{"n":"usegroup"}}],[11,"from","","",173,{"i":[{"n":"usegroup"}],"o":{"n":"usetree"}}],[11,"to_tokens","","",173,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",169,{"i":[{"n":"self"}],"o":{"n":"foreignitem"}}],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"foreignitemfn"}}],[11,"from","","",169,{"i":[{"n":"foreignitemfn"}],"o":{"n":"foreignitem"}}],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"foreignitemstatic"}}],[11,"from","","",169,{"i":[{"n":"foreignitemstatic"}],"o":{"n":"foreignitem"}}],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"foreignitemtype"}}],[11,"from","","",169,{"i":[{"n":"foreignitemtype"}],"o":{"n":"foreignitem"}}],[11,"clone","","",88,{"i":[{"n":"self"}],"o":{"n":"foreignitemverbatim"}}],[11,"from","","",169,{"i":[{"n":"foreignitemverbatim"}],"o":{"n":"foreignitem"}}],[11,"to_tokens","","",169,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",172,{"i":[{"n":"self"}],"o":{"n":"traititem"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"traititemconst"}}],[11,"from","","",172,{"i":[{"n":"traititemconst"}],"o":{"n":"traititem"}}],[11,"clone","","",113,{"i":[{"n":"self"}],"o":{"n":"traititemmethod"}}],[11,"from","","",172,{"i":[{"n":"traititemmethod"}],"o":{"n":"traititem"}}],[11,"clone","","",114,{"i":[{"n":"self"}],"o":{"n":"traititemtype"}}],[11,"from","","",172,{"i":[{"n":"traititemtype"}],"o":{"n":"traititem"}}],[11,"clone","","",112,{"i":[{"n":"self"}],"o":{"n":"traititemmacro"}}],[11,"from","","",172,{"i":[{"n":"traititemmacro"}],"o":{"n":"traititem"}}],[11,"clone","","",115,{"i":[{"n":"self"}],"o":{"n":"traititemverbatim"}}],[11,"from","","",172,{"i":[{"n":"traititemverbatim"}],"o":{"n":"traititem"}}],[11,"to_tokens","","",172,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",170,{"i":[{"n":"self"}],"o":{"n":"implitem"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"implitemconst"}}],[11,"from","","",170,{"i":[{"n":"implitemconst"}],"o":{"n":"implitem"}}],[11,"clone","","",91,{"i":[{"n":"self"}],"o":{"n":"implitemmethod"}}],[11,"from","","",170,{"i":[{"n":"implitemmethod"}],"o":{"n":"implitem"}}],[11,"clone","","",92,{"i":[{"n":"self"}],"o":{"n":"implitemtype"}}],[11,"from","","",170,{"i":[{"n":"implitemtype"}],"o":{"n":"implitem"}}],[11,"clone","","",90,{"i":[{"n":"self"}],"o":{"n":"implitemmacro"}}],[11,"from","","",170,{"i":[{"n":"implitemmacro"}],"o":{"n":"implitem"}}],[11,"clone","","",93,{"i":[{"n":"self"}],"o":{"n":"implitemverbatim"}}],[11,"from","","",170,{"i":[{"n":"implitemverbatim"}],"o":{"n":"implitem"}}],[11,"to_tokens","","",170,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"methodsig"}}],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"fndecl"}}],[11,"clone","","",168,{"i":[{"n":"self"}],"o":{"n":"fnarg"}}],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"argselfref"}}],[11,"from","","",168,{"i":[{"n":"argselfref"}],"o":{"n":"fnarg"}}],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"argself"}}],[11,"from","","",168,{"i":[{"n":"argself"}],"o":{"n":"fnarg"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"argcaptured"}}],[11,"from","","",168,{"i":[{"n":"argcaptured"}],"o":{"n":"fnarg"}}],[11,"from","","",168,{"i":[{"n":"pat"}],"o":{"n":"fnarg"}}],[11,"from","","",168,{"i":[{"n":"type"}],"o":{"n":"fnarg"}}],[11,"to_tokens","","",168,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"parse","","",121,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",121,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",121,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",121,{"i":[{"n":"self"}],"o":{"n":"file"}}],[11,"parse","","",283,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",283,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",283,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",283,{"i":[{"n":"self"}],"o":{"n":"lifetime"}}],[11,"new","","",283,{"i":[{"n":"str"},{"n":"span"}],"o":{"n":"self"}}],[11,"span","","",283,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",283,{"i":[{"n":"self"},{"n":"span"}]}],[11,"fmt","","",283,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",283,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",283,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",283,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"ordering"}}],[11,"hash","","",283,{"i":[{"n":"self"},{"n":"h"}]}],[11,"parse","","",176,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",176,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",284,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",284,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",285,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",285,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",286,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",286,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",287,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",287,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",288,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",288,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",289,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",289,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",122,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",122,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",284,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",285,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",286,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",287,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",288,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",289,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",122,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",123,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",176,{"i":[{"n":"literal"}],"o":{"n":"self"}}],[11,"clone","","",176,{"i":[{"n":"self"}],"o":{"n":"lit"}}],[11,"clone","","",284,{"i":[{"n":"self"}],"o":{"n":"litstr"}}],[11,"from","","",176,{"i":[{"n":"litstr"}],"o":{"n":"lit"}}],[11,"clone","","",285,{"i":[{"n":"self"}],"o":{"n":"litbytestr"}}],[11,"from","","",176,{"i":[{"n":"litbytestr"}],"o":{"n":"lit"}}],[11,"clone","","",286,{"i":[{"n":"self"}],"o":{"n":"litbyte"}}],[11,"from","","",176,{"i":[{"n":"litbyte"}],"o":{"n":"lit"}}],[11,"clone","","",287,{"i":[{"n":"self"}],"o":{"n":"litchar"}}],[11,"from","","",176,{"i":[{"n":"litchar"}],"o":{"n":"lit"}}],[11,"clone","","",288,{"i":[{"n":"self"}],"o":{"n":"litint"}}],[11,"from","","",176,{"i":[{"n":"litint"}],"o":{"n":"lit"}}],[11,"clone","","",289,{"i":[{"n":"self"}],"o":{"n":"litfloat"}}],[11,"from","","",176,{"i":[{"n":"litfloat"}],"o":{"n":"lit"}}],[11,"clone","","",122,{"i":[{"n":"self"}],"o":{"n":"litbool"}}],[11,"from","","",176,{"i":[{"n":"litbool"}],"o":{"n":"lit"}}],[11,"clone","","",123,{"i":[{"n":"self"}],"o":{"n":"litverbatim"}}],[11,"from","","",176,{"i":[{"n":"litverbatim"}],"o":{"n":"lit"}}],[11,"to_tokens","","",176,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"new","","",284,{"i":[{"n":"str"},{"n":"span"}],"o":{"n":"self"}}],[11,"value","","",284,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"parse","","Parse a syntax tree node from the content of this string literal.",284,{"i":[{"n":"self"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"span","","",284,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",284,{"i":[{"n":"self"},{"n":"span"}]}],[11,"new","","",285,null],[11,"value","","",285,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"vec"}}],[11,"span","","",285,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",285,{"i":[{"n":"self"},{"n":"span"}]}],[11,"new","","",286,{"i":[{"n":"u8"},{"n":"span"}],"o":{"n":"self"}}],[11,"value","","",286,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"span","","",286,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",286,{"i":[{"n":"self"},{"n":"span"}]}],[11,"new","","",287,{"i":[{"n":"char"},{"n":"span"}],"o":{"n":"self"}}],[11,"value","","",287,{"i":[{"n":"self"}],"o":{"n":"char"}}],[11,"span","","",287,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",287,{"i":[{"n":"self"},{"n":"span"}]}],[11,"new","","",288,{"i":[{"n":"u64"},{"n":"intsuffix"},{"n":"span"}],"o":{"n":"self"}}],[11,"value","","",288,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"suffix","","",288,{"i":[{"n":"self"}],"o":{"n":"intsuffix"}}],[11,"span","","",288,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",288,{"i":[{"n":"self"},{"n":"span"}]}],[11,"new","","",289,{"i":[{"n":"f64"},{"n":"floatsuffix"},{"n":"span"}],"o":{"n":"self"}}],[11,"value","","",289,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"suffix","","",289,{"i":[{"n":"self"}],"o":{"n":"floatsuffix"}}],[11,"span","","",289,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",289,{"i":[{"n":"self"},{"n":"span"}]}],[11,"span","","",123,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",123,{"i":[{"n":"self"},{"n":"span"}]}],[11,"clone","","",177,{"i":[{"n":"self"}],"o":{"n":"strstyle"}}],[11,"clone","","",175,{"i":[{"n":"self"}],"o":{"n":"intsuffix"}}],[11,"clone","","",174,{"i":[{"n":"self"}],"o":{"n":"floatsuffix"}}],[11,"parse","","",124,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",124,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",124,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",124,{"i":[{"n":"self"}],"o":{"n":"macro"}}],[11,"clone","","",178,{"i":[{"n":"self"}],"o":{"n":"macrodelimiter"}}],[11,"parse","","",128,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",128,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",128,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",128,{"i":[{"n":"self"}],"o":{"n":"deriveinput"}}],[11,"clone","","",179,{"i":[{"n":"self"}],"o":{"n":"data"}}],[11,"clone","","",126,{"i":[{"n":"self"}],"o":{"n":"datastruct"}}],[11,"from","","",179,{"i":[{"n":"datastruct"}],"o":{"n":"data"}}],[11,"clone","","",125,{"i":[{"n":"self"}],"o":{"n":"dataenum"}}],[11,"from","","",179,{"i":[{"n":"dataenum"}],"o":{"n":"data"}}],[11,"clone","","",127,{"i":[{"n":"self"}],"o":{"n":"dataunion"}}],[11,"from","","",179,{"i":[{"n":"dataunion"}],"o":{"n":"data"}}],[11,"parse_binop","","",180,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_assign_op","","",180,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse","","",181,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",181,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",180,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",181,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",180,{"i":[{"n":"self"}],"o":{"n":"binop"}}],[11,"clone","","",181,{"i":[{"n":"self"}],"o":{"n":"unop"}}],[11,"parse","","",184,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",184,{"o":{"g":["str"],"n":"option"}}],[11,"without_plus","","",184,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse","","",142,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",142,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",131,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",131,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",140,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",140,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",141,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",141,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",132,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",132,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",137,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",137,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",135,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",135,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",144,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",144,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",136,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",136,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",139,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",139,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",183,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",183,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",143,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",143,{"o":{"g":["str"],"n":"option"}}],[11,"without_plus","","",143,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse","","",134,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",134,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",133,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",133,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",138,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",138,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",130,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",130,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",182,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",182,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",129,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",129,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",142,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",131,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",140,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",141,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",132,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",137,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",144,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",139,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",143,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",134,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",133,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",138,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",135,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",136,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",145,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",183,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",130,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",182,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",129,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",184,{"i":[{"n":"self"}],"o":{"n":"type"}}],[11,"clone","","",142,{"i":[{"n":"self"}],"o":{"n":"typeslice"}}],[11,"from","","",184,{"i":[{"n":"typeslice"}],"o":{"n":"type"}}],[11,"clone","","",131,{"i":[{"n":"self"}],"o":{"n":"typearray"}}],[11,"from","","",184,{"i":[{"n":"typearray"}],"o":{"n":"type"}}],[11,"clone","","",140,{"i":[{"n":"self"}],"o":{"n":"typeptr"}}],[11,"from","","",184,{"i":[{"n":"typeptr"}],"o":{"n":"type"}}],[11,"clone","","",141,{"i":[{"n":"self"}],"o":{"n":"typereference"}}],[11,"from","","",184,{"i":[{"n":"typereference"}],"o":{"n":"type"}}],[11,"clone","","",132,{"i":[{"n":"self"}],"o":{"n":"typebarefn"}}],[11,"from","","",184,{"i":[{"n":"typebarefn"}],"o":{"n":"type"}}],[11,"clone","","",137,{"i":[{"n":"self"}],"o":{"n":"typenever"}}],[11,"from","","",184,{"i":[{"n":"typenever"}],"o":{"n":"type"}}],[11,"clone","","",144,{"i":[{"n":"self"}],"o":{"n":"typetuple"}}],[11,"from","","",184,{"i":[{"n":"typetuple"}],"o":{"n":"type"}}],[11,"clone","","",139,{"i":[{"n":"self"}],"o":{"n":"typepath"}}],[11,"from","","",184,{"i":[{"n":"typepath"}],"o":{"n":"type"}}],[11,"clone","","",143,{"i":[{"n":"self"}],"o":{"n":"typetraitobject"}}],[11,"from","","",184,{"i":[{"n":"typetraitobject"}],"o":{"n":"type"}}],[11,"clone","","",134,{"i":[{"n":"self"}],"o":{"n":"typeimpltrait"}}],[11,"from","","",184,{"i":[{"n":"typeimpltrait"}],"o":{"n":"type"}}],[11,"clone","","",138,{"i":[{"n":"self"}],"o":{"n":"typeparen"}}],[11,"from","","",184,{"i":[{"n":"typeparen"}],"o":{"n":"type"}}],[11,"clone","","",133,{"i":[{"n":"self"}],"o":{"n":"typegroup"}}],[11,"from","","",184,{"i":[{"n":"typegroup"}],"o":{"n":"type"}}],[11,"clone","","",135,{"i":[{"n":"self"}],"o":{"n":"typeinfer"}}],[11,"from","","",184,{"i":[{"n":"typeinfer"}],"o":{"n":"type"}}],[11,"clone","","",136,{"i":[{"n":"self"}],"o":{"n":"typemacro"}}],[11,"from","","",184,{"i":[{"n":"typemacro"}],"o":{"n":"type"}}],[11,"clone","","",145,{"i":[{"n":"self"}],"o":{"n":"typeverbatim"}}],[11,"from","","",184,{"i":[{"n":"typeverbatim"}],"o":{"n":"type"}}],[11,"to_tokens","","",184,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",129,{"i":[{"n":"self"}],"o":{"n":"abi"}}],[11,"clone","","",130,{"i":[{"n":"self"}],"o":{"n":"barefnarg"}}],[11,"clone","","",182,{"i":[{"n":"self"}],"o":{"n":"barefnargname"}}],[11,"clone","","",183,{"i":[{"n":"self"}],"o":{"n":"returntype"}}],[11,"parse","","",150,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",150,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",185,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",185,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",147,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",147,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",149,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",149,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",151,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",151,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",148,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",148,{"o":{"g":["str"],"n":"option"}}],[11,"parse_mod_style","","",150,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"to_tokens","","",150,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",151,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",186,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",185,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",147,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",148,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",149,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",146,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",150,{"i":[{"n":"self"}],"o":{"n":"path"}}],[11,"global","","",150,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",146,{"i":[{"n":"self"}],"o":{"n":"pathtokens"}}],[11,"from","","",150,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"clone","","",151,{"i":[{"n":"self"}],"o":{"n":"pathsegment"}}],[11,"from","","",151,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"clone","","",186,{"i":[{"n":"self"}],"o":{"n":"patharguments"}}],[11,"default","","",186,{"o":{"n":"self"}}],[11,"is_empty","","",186,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",185,{"i":[{"n":"self"}],"o":{"n":"genericargument"}}],[11,"clone","","",147,{"i":[{"n":"self"}],"o":{"n":"anglebracketedgenericarguments"}}],[11,"clone","","",148,{"i":[{"n":"self"}],"o":{"n":"binding"}}],[11,"clone","","",149,{"i":[{"n":"self"}],"o":{"n":"parenthesizedgenericarguments"}}],[11,"clone","","",152,{"i":[{"n":"self"}],"o":{"n":"qself"}}],[0,"buffer","","A stably addressed token buffer supporting efficient traversal based on a cheaply copyable cursor.",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times, unlike `TokenStream` which requires a deep copy in order to traverse more than once.",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",290,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenbuffer"}}],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",290,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenbuffer"}}],[11,"begin","","Creates a cursor referencing the first token in the buffer and able to traverse until the end of the buffer.",290,{"i":[{"n":"self"}],"o":{"n":"cursor"}}],[11,"clone","","",291,{"i":[{"n":"self"}],"o":{"n":"cursor"}}],[11,"eq","","",291,{"i":[{"n":"self"},{"n":"cursor"}],"o":{"n":"bool"}}],[11,"ne","","",291,{"i":[{"n":"self"},{"n":"cursor"}],"o":{"n":"bool"}}],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",291,{"o":{"n":"self"}}],[11,"eof","","Checks whether the cursor is currently pointing at the end of its valid scope.",291,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"group","","If the cursor is pointing at a `Group` with the given delimiter, returns a cursor into that group and one pointing to the next `TokenTree`.",291,{"i":[{"n":"self"},{"n":"delimiter"}],"o":{"n":"option"}}],[11,"term","","If the cursor is pointing at a `Term`, returns it along with a cursor pointing at the next `TokenTree`.",291,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"op","","If the cursor is pointing at an `Op`, returns it along with a cursor pointing at the next `TokenTree`.",291,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"literal","","If the cursor is pointing at a `Literal`, return it along with a cursor pointing at the next `TokenTree`.",291,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"token_stream","","Copies all remaining tokens visible from this cursor into a `TokenStream`.",291,{"i":[{"n":"self"}],"o":{"n":"tokenstream"}}],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it along with a cursor pointing at the next `TokenTree`.",291,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"span","","Returns the `Span` of the current token, or `Span::call_site()` if this cursor points to eof.",291,{"i":[{"n":"self"}],"o":{"n":"span"}}],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by punctuation.",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T` separated by punctuation of type `P`.",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its trailing punctuation of type `P` if any.",null,null],[13,"Punctuated","","",292,null],[13,"End","","",292,null],[11,"to_tokens","","",293,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",292,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"clone","","",293,{"i":[{"n":"self"}],"o":{"n":"punctuated"}}],[11,"new","","Creates an empty punctuated sequence.",293,{"o":{"n":"punctuated"}}],[11,"is_empty","","Determines whether this punctuated sequence is empty, meaning it contains no syntax tree nodes or punctuation.",293,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"len","","Returns the number of syntax tree nodes in this punctuated sequence.",293,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"first","","Borrows the first punctuated pair in this sequence.",293,{"i":[{"n":"self"}],"o":{"g":["pair"],"n":"option"}}],[11,"last","","Borrows the last punctuated pair in this sequence.",293,{"i":[{"n":"self"}],"o":{"g":["pair"],"n":"option"}}],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",293,{"i":[{"n":"self"}],"o":{"g":["pair"],"n":"option"}}],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of type `&T`.",293,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree nodes of type `&mut T`.",293,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"pairs","","Returns an iterator over the contents of this sequence as borrowed punctuated pairs.",293,{"i":[{"n":"self"}],"o":{"n":"pairs"}}],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as mutably borrowed punctuated pairs.",293,{"i":[{"n":"self"}],"o":{"n":"pairsmut"}}],[11,"into_pairs","","Returns an iterator over the contents of this sequence as owned punctuated pairs.",293,{"i":[{"n":"self"}],"o":{"n":"intopairs"}}],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated sequence. The sequence must previously have a trailing punctuation.",293,{"i":[{"n":"self"},{"n":"t"}]}],[11,"push_punct","","Appends a trailing punctuation onto the end of this punctuated sequence. The sequence must be non-empty and must not already have trailing punctuation.",293,{"i":[{"n":"self"},{"n":"p"}]}],[11,"pop","","Removes the last punctuated pair from this sequence, or `None` if the sequence is empty.",293,{"i":[{"n":"self"}],"o":{"g":["pair"],"n":"option"}}],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a trailing punctuation.",293,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it has a trailing punctuation.",293,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Appends a syntax tree node onto the end of this punctuated sequence.",293,{"i":[{"n":"self"},{"n":"t"}]}],[11,"insert","","Inserts an element at position `index`.",293,{"i":[{"n":"self"},{"n":"usize"},{"n":"t"}]}],[11,"from_iter","","",293,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"extend","","",293,{"i":[{"n":"self"},{"n":"i"}]}],[11,"from_iter","","",293,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"extend","","",293,{"i":[{"n":"self"},{"n":"i"}]}],[11,"into_iter","","",293,null],[11,"default","","",293,{"o":{"n":"self"}}],[11,"next","","",294,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",294,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",295,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",295,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",296,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",296,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",297,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",297,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",298,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",298,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",299,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",299,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, discarding the following punctuation.",292,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"value","","Borrows the syntax tree node from this punctuated pair.",292,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated pair.",292,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"punct","","Borrows the punctuation from this punctuated pair, unless this pair is the final one and there is no trailing punctuation.",292,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"new","","Creates a punctuated pair out of a syntax tree node and an optional following punctuation.",292,{"i":[{"n":"t"},{"n":"option"}],"o":{"n":"self"}}],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree node and optional following punctuation.",292,null],[11,"index","","",293,null],[11,"index_mut","","",293,null],[11,"parse_separated","","Parse zero or more syntax tree nodes with punctuation in between and no trailing punctuation.",293,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_separated_nonempty","","Parse one or more syntax tree nodes with punctuation in bewteen and no trailing punctuation. allowing trailing punctuation.",293,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_terminated","","Parse zero or more syntax tree nodes with punctuation in between and optional trailing punctuation.",293,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_terminated_nonempty","","Parse one or more syntax tree nodes with punctuation in between and optional trailing punctuation.",293,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_separated_with","","Parse zero or more syntax tree nodes using the given parser with punctuation in between and no trailing punctuation.",293,null],[11,"parse_separated_nonempty_with","","Parse one or more syntax tree nodes using the given parser with punctuation in between and no trailing punctuation.",293,null],[11,"parse_terminated_with","","Parse zero or more syntax tree nodes using the given parser with punctuation in between and optional trailing punctuation.",293,null],[11,"parse_terminated_nonempty_with","","Parse one or more syntax tree nodes using the given parser with punctuation in between and optional trailing punctuation.",293,null],[0,"synom","syn","Parsing interface for parsing a token stream into a syntax tree node.",null,null],[3,"ParseError","syn::synom","Error returned when a `Synom` parser cannot parse the input tokens.",null,null],[6,"PResult","","The result of a `Synom` parser.",null,null],[8,"Synom","","Parsing interface implemented by all types that can be parsed in a default way from a token stream.",null,null],[10,"parse","","",300,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","A short name of the type being parsed.",300,{"o":{"g":["str"],"n":"option"}}],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax tree node.",null,null],[16,"Output","","",301,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",301,{"i":[{"n":"self"},{"n":"tokenstream"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"parse","","Parse tokens of source code into the chosen syntax tree node.",301,{"i":[{"n":"self"},{"n":"tokenstream"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",301,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["parseerror"],"n":"result"}}],[0,"spanned","syn","A trait that can provide the `Span` of the complete contents of a syntax tree node.",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete contents of a syntax tree node.",null,null],[10,"span","","Returns a `Span` covering the complete contents of this syntax tree node, or [`Span::call_site()`] if this node is empty.",302,{"i":[{"n":"self"}],"o":{"n":"span"}}],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax tree.",null,null],[5,"visit_abi","syn::visit","",null,{"i":[{"n":"v"},{"n":"abi"}]}],[5,"visit_angle_bracketed_generic_arguments","","",null,{"i":[{"n":"v"},{"n":"anglebracketedgenericarguments"}]}],[5,"visit_arg_captured","","",null,{"i":[{"n":"v"},{"n":"argcaptured"}]}],[5,"visit_arg_self","","",null,{"i":[{"n":"v"},{"n":"argself"}]}],[5,"visit_arg_self_ref","","",null,{"i":[{"n":"v"},{"n":"argselfref"}]}],[5,"visit_arm","","",null,{"i":[{"n":"v"},{"n":"arm"}]}],[5,"visit_attr_style","","",null,{"i":[{"n":"v"},{"n":"attrstyle"}]}],[5,"visit_attribute","","",null,{"i":[{"n":"v"},{"n":"attribute"}]}],[5,"visit_bare_fn_arg","","",null,{"i":[{"n":"v"},{"n":"barefnarg"}]}],[5,"visit_bare_fn_arg_name","","",null,{"i":[{"n":"v"},{"n":"barefnargname"}]}],[5,"visit_bin_op","","",null,{"i":[{"n":"v"},{"n":"binop"}]}],[5,"visit_binding","","",null,{"i":[{"n":"v"},{"n":"binding"}]}],[5,"visit_block","","",null,{"i":[{"n":"v"},{"n":"block"}]}],[5,"visit_bound_lifetimes","","",null,{"i":[{"n":"v"},{"n":"boundlifetimes"}]}],[5,"visit_const_param","","",null,{"i":[{"n":"v"},{"n":"constparam"}]}],[5,"visit_data","","",null,{"i":[{"n":"v"},{"n":"data"}]}],[5,"visit_data_enum","","",null,{"i":[{"n":"v"},{"n":"dataenum"}]}],[5,"visit_data_struct","","",null,{"i":[{"n":"v"},{"n":"datastruct"}]}],[5,"visit_data_union","","",null,{"i":[{"n":"v"},{"n":"dataunion"}]}],[5,"visit_derive_input","","",null,{"i":[{"n":"v"},{"n":"deriveinput"}]}],[5,"visit_expr","","",null,{"i":[{"n":"v"},{"n":"expr"}]}],[5,"visit_expr_array","","",null,{"i":[{"n":"v"},{"n":"exprarray"}]}],[5,"visit_expr_assign","","",null,{"i":[{"n":"v"},{"n":"exprassign"}]}],[5,"visit_expr_assign_op","","",null,{"i":[{"n":"v"},{"n":"exprassignop"}]}],[5,"visit_expr_binary","","",null,{"i":[{"n":"v"},{"n":"exprbinary"}]}],[5,"visit_expr_block","","",null,{"i":[{"n":"v"},{"n":"exprblock"}]}],[5,"visit_expr_box","","",null,{"i":[{"n":"v"},{"n":"exprbox"}]}],[5,"visit_expr_break","","",null,{"i":[{"n":"v"},{"n":"exprbreak"}]}],[5,"visit_expr_call","","",null,{"i":[{"n":"v"},{"n":"exprcall"}]}],[5,"visit_expr_cast","","",null,{"i":[{"n":"v"},{"n":"exprcast"}]}],[5,"visit_expr_catch","","",null,{"i":[{"n":"v"},{"n":"exprcatch"}]}],[5,"visit_expr_closure","","",null,{"i":[{"n":"v"},{"n":"exprclosure"}]}],[5,"visit_expr_continue","","",null,{"i":[{"n":"v"},{"n":"exprcontinue"}]}],[5,"visit_expr_field","","",null,{"i":[{"n":"v"},{"n":"exprfield"}]}],[5,"visit_expr_for_loop","","",null,{"i":[{"n":"v"},{"n":"exprforloop"}]}],[5,"visit_expr_group","","",null,{"i":[{"n":"v"},{"n":"exprgroup"}]}],[5,"visit_expr_if","","",null,{"i":[{"n":"v"},{"n":"exprif"}]}],[5,"visit_expr_if_let","","",null,{"i":[{"n":"v"},{"n":"expriflet"}]}],[5,"visit_expr_in_place","","",null,{"i":[{"n":"v"},{"n":"exprinplace"}]}],[5,"visit_expr_index","","",null,{"i":[{"n":"v"},{"n":"exprindex"}]}],[5,"visit_expr_lit","","",null,{"i":[{"n":"v"},{"n":"exprlit"}]}],[5,"visit_expr_loop","","",null,{"i":[{"n":"v"},{"n":"exprloop"}]}],[5,"visit_expr_macro","","",null,{"i":[{"n":"v"},{"n":"exprmacro"}]}],[5,"visit_expr_match","","",null,{"i":[{"n":"v"},{"n":"exprmatch"}]}],[5,"visit_expr_method_call","","",null,{"i":[{"n":"v"},{"n":"exprmethodcall"}]}],[5,"visit_expr_paren","","",null,{"i":[{"n":"v"},{"n":"exprparen"}]}],[5,"visit_expr_path","","",null,{"i":[{"n":"v"},{"n":"exprpath"}]}],[5,"visit_expr_range","","",null,{"i":[{"n":"v"},{"n":"exprrange"}]}],[5,"visit_expr_reference","","",null,{"i":[{"n":"v"},{"n":"exprreference"}]}],[5,"visit_expr_repeat","","",null,{"i":[{"n":"v"},{"n":"exprrepeat"}]}],[5,"visit_expr_return","","",null,{"i":[{"n":"v"},{"n":"exprreturn"}]}],[5,"visit_expr_struct","","",null,{"i":[{"n":"v"},{"n":"exprstruct"}]}],[5,"visit_expr_try","","",null,{"i":[{"n":"v"},{"n":"exprtry"}]}],[5,"visit_expr_tuple","","",null,{"i":[{"n":"v"},{"n":"exprtuple"}]}],[5,"visit_expr_type","","",null,{"i":[{"n":"v"},{"n":"exprtype"}]}],[5,"visit_expr_unary","","",null,{"i":[{"n":"v"},{"n":"exprunary"}]}],[5,"visit_expr_unsafe","","",null,{"i":[{"n":"v"},{"n":"exprunsafe"}]}],[5,"visit_expr_verbatim","","",null,{"i":[{"n":"v"},{"n":"exprverbatim"}]}],[5,"visit_expr_while","","",null,{"i":[{"n":"v"},{"n":"exprwhile"}]}],[5,"visit_expr_while_let","","",null,{"i":[{"n":"v"},{"n":"exprwhilelet"}]}],[5,"visit_expr_yield","","",null,{"i":[{"n":"v"},{"n":"expryield"}]}],[5,"visit_field","","",null,{"i":[{"n":"v"},{"n":"field"}]}],[5,"visit_field_pat","","",null,{"i":[{"n":"v"},{"n":"fieldpat"}]}],[5,"visit_field_value","","",null,{"i":[{"n":"v"},{"n":"fieldvalue"}]}],[5,"visit_fields","","",null,{"i":[{"n":"v"},{"n":"fields"}]}],[5,"visit_fields_named","","",null,{"i":[{"n":"v"},{"n":"fieldsnamed"}]}],[5,"visit_fields_unnamed","","",null,{"i":[{"n":"v"},{"n":"fieldsunnamed"}]}],[5,"visit_file","","",null,{"i":[{"n":"v"},{"n":"file"}]}],[5,"visit_fn_arg","","",null,{"i":[{"n":"v"},{"n":"fnarg"}]}],[5,"visit_fn_decl","","",null,{"i":[{"n":"v"},{"n":"fndecl"}]}],[5,"visit_foreign_item","","",null,{"i":[{"n":"v"},{"n":"foreignitem"}]}],[5,"visit_foreign_item_fn","","",null,{"i":[{"n":"v"},{"n":"foreignitemfn"}]}],[5,"visit_foreign_item_static","","",null,{"i":[{"n":"v"},{"n":"foreignitemstatic"}]}],[5,"visit_foreign_item_type","","",null,{"i":[{"n":"v"},{"n":"foreignitemtype"}]}],[5,"visit_foreign_item_verbatim","","",null,{"i":[{"n":"v"},{"n":"foreignitemverbatim"}]}],[5,"visit_generic_argument","","",null,{"i":[{"n":"v"},{"n":"genericargument"}]}],[5,"visit_generic_method_argument","","",null,{"i":[{"n":"v"},{"n":"genericmethodargument"}]}],[5,"visit_generic_param","","",null,{"i":[{"n":"v"},{"n":"genericparam"}]}],[5,"visit_generics","","",null,{"i":[{"n":"v"},{"n":"generics"}]}],[5,"visit_ident","","",null,{"i":[{"n":"v"},{"n":"ident"}]}],[5,"visit_impl_item","","",null,{"i":[{"n":"v"},{"n":"implitem"}]}],[5,"visit_impl_item_const","","",null,{"i":[{"n":"v"},{"n":"implitemconst"}]}],[5,"visit_impl_item_macro","","",null,{"i":[{"n":"v"},{"n":"implitemmacro"}]}],[5,"visit_impl_item_method","","",null,{"i":[{"n":"v"},{"n":"implitemmethod"}]}],[5,"visit_impl_item_type","","",null,{"i":[{"n":"v"},{"n":"implitemtype"}]}],[5,"visit_impl_item_verbatim","","",null,{"i":[{"n":"v"},{"n":"implitemverbatim"}]}],[5,"visit_index","","",null,{"i":[{"n":"v"},{"n":"index"}]}],[5,"visit_item","","",null,{"i":[{"n":"v"},{"n":"item"}]}],[5,"visit_item_const","","",null,{"i":[{"n":"v"},{"n":"itemconst"}]}],[5,"visit_item_enum","","",null,{"i":[{"n":"v"},{"n":"itemenum"}]}],[5,"visit_item_extern_crate","","",null,{"i":[{"n":"v"},{"n":"itemexterncrate"}]}],[5,"visit_item_fn","","",null,{"i":[{"n":"v"},{"n":"itemfn"}]}],[5,"visit_item_foreign_mod","","",null,{"i":[{"n":"v"},{"n":"itemforeignmod"}]}],[5,"visit_item_impl","","",null,{"i":[{"n":"v"},{"n":"itemimpl"}]}],[5,"visit_item_macro","","",null,{"i":[{"n":"v"},{"n":"itemmacro"}]}],[5,"visit_item_macro2","","",null,{"i":[{"n":"v"},{"n":"itemmacro2"}]}],[5,"visit_item_mod","","",null,{"i":[{"n":"v"},{"n":"itemmod"}]}],[5,"visit_item_static","","",null,{"i":[{"n":"v"},{"n":"itemstatic"}]}],[5,"visit_item_struct","","",null,{"i":[{"n":"v"},{"n":"itemstruct"}]}],[5,"visit_item_trait","","",null,{"i":[{"n":"v"},{"n":"itemtrait"}]}],[5,"visit_item_type","","",null,{"i":[{"n":"v"},{"n":"itemtype"}]}],[5,"visit_item_union","","",null,{"i":[{"n":"v"},{"n":"itemunion"}]}],[5,"visit_item_use","","",null,{"i":[{"n":"v"},{"n":"itemuse"}]}],[5,"visit_item_verbatim","","",null,{"i":[{"n":"v"},{"n":"itemverbatim"}]}],[5,"visit_label","","",null,{"i":[{"n":"v"},{"n":"label"}]}],[5,"visit_lifetime","","",null,{"i":[{"n":"v"},{"n":"lifetime"}]}],[5,"visit_lifetime_def","","",null,{"i":[{"n":"v"},{"n":"lifetimedef"}]}],[5,"visit_lit","","",null,{"i":[{"n":"v"},{"n":"lit"}]}],[5,"visit_lit_bool","","",null,{"i":[{"n":"v"},{"n":"litbool"}]}],[5,"visit_lit_byte","","",null,{"i":[{"n":"v"},{"n":"litbyte"}]}],[5,"visit_lit_byte_str","","",null,{"i":[{"n":"v"},{"n":"litbytestr"}]}],[5,"visit_lit_char","","",null,{"i":[{"n":"v"},{"n":"litchar"}]}],[5,"visit_lit_float","","",null,{"i":[{"n":"v"},{"n":"litfloat"}]}],[5,"visit_lit_int","","",null,{"i":[{"n":"v"},{"n":"litint"}]}],[5,"visit_lit_str","","",null,{"i":[{"n":"v"},{"n":"litstr"}]}],[5,"visit_lit_verbatim","","",null,{"i":[{"n":"v"},{"n":"litverbatim"}]}],[5,"visit_local","","",null,{"i":[{"n":"v"},{"n":"local"}]}],[5,"visit_macro","","",null,{"i":[{"n":"v"},{"n":"macro"}]}],[5,"visit_macro_delimiter","","",null,{"i":[{"n":"v"},{"n":"macrodelimiter"}]}],[5,"visit_member","","",null,{"i":[{"n":"v"},{"n":"member"}]}],[5,"visit_meta","","",null,{"i":[{"n":"v"},{"n":"meta"}]}],[5,"visit_meta_list","","",null,{"i":[{"n":"v"},{"n":"metalist"}]}],[5,"visit_meta_name_value","","",null,{"i":[{"n":"v"},{"n":"metanamevalue"}]}],[5,"visit_method_sig","","",null,{"i":[{"n":"v"},{"n":"methodsig"}]}],[5,"visit_method_turbofish","","",null,{"i":[{"n":"v"},{"n":"methodturbofish"}]}],[5,"visit_nested_meta","","",null,{"i":[{"n":"v"},{"n":"nestedmeta"}]}],[5,"visit_parenthesized_generic_arguments","","",null,{"i":[{"n":"v"},{"n":"parenthesizedgenericarguments"}]}],[5,"visit_pat","","",null,{"i":[{"n":"v"},{"n":"pat"}]}],[5,"visit_pat_box","","",null,{"i":[{"n":"v"},{"n":"patbox"}]}],[5,"visit_pat_ident","","",null,{"i":[{"n":"v"},{"n":"patident"}]}],[5,"visit_pat_lit","","",null,{"i":[{"n":"v"},{"n":"patlit"}]}],[5,"visit_pat_macro","","",null,{"i":[{"n":"v"},{"n":"patmacro"}]}],[5,"visit_pat_path","","",null,{"i":[{"n":"v"},{"n":"patpath"}]}],[5,"visit_pat_range","","",null,{"i":[{"n":"v"},{"n":"patrange"}]}],[5,"visit_pat_ref","","",null,{"i":[{"n":"v"},{"n":"patref"}]}],[5,"visit_pat_slice","","",null,{"i":[{"n":"v"},{"n":"patslice"}]}],[5,"visit_pat_struct","","",null,{"i":[{"n":"v"},{"n":"patstruct"}]}],[5,"visit_pat_tuple","","",null,{"i":[{"n":"v"},{"n":"pattuple"}]}],[5,"visit_pat_tuple_struct","","",null,{"i":[{"n":"v"},{"n":"pattuplestruct"}]}],[5,"visit_pat_verbatim","","",null,{"i":[{"n":"v"},{"n":"patverbatim"}]}],[5,"visit_pat_wild","","",null,{"i":[{"n":"v"},{"n":"patwild"}]}],[5,"visit_path","","",null,{"i":[{"n":"v"},{"n":"path"}]}],[5,"visit_path_arguments","","",null,{"i":[{"n":"v"},{"n":"patharguments"}]}],[5,"visit_path_segment","","",null,{"i":[{"n":"v"},{"n":"pathsegment"}]}],[5,"visit_predicate_eq","","",null,{"i":[{"n":"v"},{"n":"predicateeq"}]}],[5,"visit_predicate_lifetime","","",null,{"i":[{"n":"v"},{"n":"predicatelifetime"}]}],[5,"visit_predicate_type","","",null,{"i":[{"n":"v"},{"n":"predicatetype"}]}],[5,"visit_qself","","",null,{"i":[{"n":"v"},{"n":"qself"}]}],[5,"visit_range_limits","","",null,{"i":[{"n":"v"},{"n":"rangelimits"}]}],[5,"visit_return_type","","",null,{"i":[{"n":"v"},{"n":"returntype"}]}],[5,"visit_span","","",null,{"i":[{"n":"v"},{"n":"span"}]}],[5,"visit_stmt","","",null,{"i":[{"n":"v"},{"n":"stmt"}]}],[5,"visit_trait_bound","","",null,{"i":[{"n":"v"},{"n":"traitbound"}]}],[5,"visit_trait_bound_modifier","","",null,{"i":[{"n":"v"},{"n":"traitboundmodifier"}]}],[5,"visit_trait_item","","",null,{"i":[{"n":"v"},{"n":"traititem"}]}],[5,"visit_trait_item_const","","",null,{"i":[{"n":"v"},{"n":"traititemconst"}]}],[5,"visit_trait_item_macro","","",null,{"i":[{"n":"v"},{"n":"traititemmacro"}]}],[5,"visit_trait_item_method","","",null,{"i":[{"n":"v"},{"n":"traititemmethod"}]}],[5,"visit_trait_item_type","","",null,{"i":[{"n":"v"},{"n":"traititemtype"}]}],[5,"visit_trait_item_verbatim","","",null,{"i":[{"n":"v"},{"n":"traititemverbatim"}]}],[5,"visit_type","","",null,{"i":[{"n":"v"},{"n":"type"}]}],[5,"visit_type_array","","",null,{"i":[{"n":"v"},{"n":"typearray"}]}],[5,"visit_type_bare_fn","","",null,{"i":[{"n":"v"},{"n":"typebarefn"}]}],[5,"visit_type_group","","",null,{"i":[{"n":"v"},{"n":"typegroup"}]}],[5,"visit_type_impl_trait","","",null,{"i":[{"n":"v"},{"n":"typeimpltrait"}]}],[5,"visit_type_infer","","",null,{"i":[{"n":"v"},{"n":"typeinfer"}]}],[5,"visit_type_macro","","",null,{"i":[{"n":"v"},{"n":"typemacro"}]}],[5,"visit_type_never","","",null,{"i":[{"n":"v"},{"n":"typenever"}]}],[5,"visit_type_param","","",null,{"i":[{"n":"v"},{"n":"typeparam"}]}],[5,"visit_type_param_bound","","",null,{"i":[{"n":"v"},{"n":"typeparambound"}]}],[5,"visit_type_paren","","",null,{"i":[{"n":"v"},{"n":"typeparen"}]}],[5,"visit_type_path","","",null,{"i":[{"n":"v"},{"n":"typepath"}]}],[5,"visit_type_ptr","","",null,{"i":[{"n":"v"},{"n":"typeptr"}]}],[5,"visit_type_reference","","",null,{"i":[{"n":"v"},{"n":"typereference"}]}],[5,"visit_type_slice","","",null,{"i":[{"n":"v"},{"n":"typeslice"}]}],[5,"visit_type_trait_object","","",null,{"i":[{"n":"v"},{"n":"typetraitobject"}]}],[5,"visit_type_tuple","","",null,{"i":[{"n":"v"},{"n":"typetuple"}]}],[5,"visit_type_verbatim","","",null,{"i":[{"n":"v"},{"n":"typeverbatim"}]}],[5,"visit_un_op","","",null,{"i":[{"n":"v"},{"n":"unop"}]}],[5,"visit_use_glob","","",null,{"i":[{"n":"v"},{"n":"useglob"}]}],[5,"visit_use_group","","",null,{"i":[{"n":"v"},{"n":"usegroup"}]}],[5,"visit_use_name","","",null,{"i":[{"n":"v"},{"n":"usename"}]}],[5,"visit_use_path","","",null,{"i":[{"n":"v"},{"n":"usepath"}]}],[5,"visit_use_rename","","",null,{"i":[{"n":"v"},{"n":"userename"}]}],[5,"visit_use_tree","","",null,{"i":[{"n":"v"},{"n":"usetree"}]}],[5,"visit_variant","","",null,{"i":[{"n":"v"},{"n":"variant"}]}],[5,"visit_vis_crate","","",null,{"i":[{"n":"v"},{"n":"viscrate"}]}],[5,"visit_vis_public","","",null,{"i":[{"n":"v"},{"n":"vispublic"}]}],[5,"visit_vis_restricted","","",null,{"i":[{"n":"v"},{"n":"visrestricted"}]}],[5,"visit_visibility","","",null,{"i":[{"n":"v"},{"n":"visibility"}]}],[5,"visit_where_clause","","",null,{"i":[{"n":"v"},{"n":"whereclause"}]}],[5,"visit_where_predicate","","",null,{"i":[{"n":"v"},{"n":"wherepredicate"}]}],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax tree.",null,null],[11,"visit_abi","","",303,{"i":[{"n":"self"},{"n":"abi"}]}],[11,"visit_angle_bracketed_generic_arguments","","",303,{"i":[{"n":"self"},{"n":"anglebracketedgenericarguments"}]}],[11,"visit_arg_captured","","",303,{"i":[{"n":"self"},{"n":"argcaptured"}]}],[11,"visit_arg_self","","",303,{"i":[{"n":"self"},{"n":"argself"}]}],[11,"visit_arg_self_ref","","",303,{"i":[{"n":"self"},{"n":"argselfref"}]}],[11,"visit_arm","","",303,{"i":[{"n":"self"},{"n":"arm"}]}],[11,"visit_attr_style","","",303,{"i":[{"n":"self"},{"n":"attrstyle"}]}],[11,"visit_attribute","","",303,{"i":[{"n":"self"},{"n":"attribute"}]}],[11,"visit_bare_fn_arg","","",303,{"i":[{"n":"self"},{"n":"barefnarg"}]}],[11,"visit_bare_fn_arg_name","","",303,{"i":[{"n":"self"},{"n":"barefnargname"}]}],[11,"visit_bin_op","","",303,{"i":[{"n":"self"},{"n":"binop"}]}],[11,"visit_binding","","",303,{"i":[{"n":"self"},{"n":"binding"}]}],[11,"visit_block","","",303,{"i":[{"n":"self"},{"n":"block"}]}],[11,"visit_bound_lifetimes","","",303,{"i":[{"n":"self"},{"n":"boundlifetimes"}]}],[11,"visit_const_param","","",303,{"i":[{"n":"self"},{"n":"constparam"}]}],[11,"visit_data","","",303,{"i":[{"n":"self"},{"n":"data"}]}],[11,"visit_data_enum","","",303,{"i":[{"n":"self"},{"n":"dataenum"}]}],[11,"visit_data_struct","","",303,{"i":[{"n":"self"},{"n":"datastruct"}]}],[11,"visit_data_union","","",303,{"i":[{"n":"self"},{"n":"dataunion"}]}],[11,"visit_derive_input","","",303,{"i":[{"n":"self"},{"n":"deriveinput"}]}],[11,"visit_expr","","",303,{"i":[{"n":"self"},{"n":"expr"}]}],[11,"visit_expr_array","","",303,{"i":[{"n":"self"},{"n":"exprarray"}]}],[11,"visit_expr_assign","","",303,{"i":[{"n":"self"},{"n":"exprassign"}]}],[11,"visit_expr_assign_op","","",303,{"i":[{"n":"self"},{"n":"exprassignop"}]}],[11,"visit_expr_binary","","",303,{"i":[{"n":"self"},{"n":"exprbinary"}]}],[11,"visit_expr_block","","",303,{"i":[{"n":"self"},{"n":"exprblock"}]}],[11,"visit_expr_box","","",303,{"i":[{"n":"self"},{"n":"exprbox"}]}],[11,"visit_expr_break","","",303,{"i":[{"n":"self"},{"n":"exprbreak"}]}],[11,"visit_expr_call","","",303,{"i":[{"n":"self"},{"n":"exprcall"}]}],[11,"visit_expr_cast","","",303,{"i":[{"n":"self"},{"n":"exprcast"}]}],[11,"visit_expr_catch","","",303,{"i":[{"n":"self"},{"n":"exprcatch"}]}],[11,"visit_expr_closure","","",303,{"i":[{"n":"self"},{"n":"exprclosure"}]}],[11,"visit_expr_continue","","",303,{"i":[{"n":"self"},{"n":"exprcontinue"}]}],[11,"visit_expr_field","","",303,{"i":[{"n":"self"},{"n":"exprfield"}]}],[11,"visit_expr_for_loop","","",303,{"i":[{"n":"self"},{"n":"exprforloop"}]}],[11,"visit_expr_group","","",303,{"i":[{"n":"self"},{"n":"exprgroup"}]}],[11,"visit_expr_if","","",303,{"i":[{"n":"self"},{"n":"exprif"}]}],[11,"visit_expr_if_let","","",303,{"i":[{"n":"self"},{"n":"expriflet"}]}],[11,"visit_expr_in_place","","",303,{"i":[{"n":"self"},{"n":"exprinplace"}]}],[11,"visit_expr_index","","",303,{"i":[{"n":"self"},{"n":"exprindex"}]}],[11,"visit_expr_lit","","",303,{"i":[{"n":"self"},{"n":"exprlit"}]}],[11,"visit_expr_loop","","",303,{"i":[{"n":"self"},{"n":"exprloop"}]}],[11,"visit_expr_macro","","",303,{"i":[{"n":"self"},{"n":"exprmacro"}]}],[11,"visit_expr_match","","",303,{"i":[{"n":"self"},{"n":"exprmatch"}]}],[11,"visit_expr_method_call","","",303,{"i":[{"n":"self"},{"n":"exprmethodcall"}]}],[11,"visit_expr_paren","","",303,{"i":[{"n":"self"},{"n":"exprparen"}]}],[11,"visit_expr_path","","",303,{"i":[{"n":"self"},{"n":"exprpath"}]}],[11,"visit_expr_range","","",303,{"i":[{"n":"self"},{"n":"exprrange"}]}],[11,"visit_expr_reference","","",303,{"i":[{"n":"self"},{"n":"exprreference"}]}],[11,"visit_expr_repeat","","",303,{"i":[{"n":"self"},{"n":"exprrepeat"}]}],[11,"visit_expr_return","","",303,{"i":[{"n":"self"},{"n":"exprreturn"}]}],[11,"visit_expr_struct","","",303,{"i":[{"n":"self"},{"n":"exprstruct"}]}],[11,"visit_expr_try","","",303,{"i":[{"n":"self"},{"n":"exprtry"}]}],[11,"visit_expr_tuple","","",303,{"i":[{"n":"self"},{"n":"exprtuple"}]}],[11,"visit_expr_type","","",303,{"i":[{"n":"self"},{"n":"exprtype"}]}],[11,"visit_expr_unary","","",303,{"i":[{"n":"self"},{"n":"exprunary"}]}],[11,"visit_expr_unsafe","","",303,{"i":[{"n":"self"},{"n":"exprunsafe"}]}],[11,"visit_expr_verbatim","","",303,{"i":[{"n":"self"},{"n":"exprverbatim"}]}],[11,"visit_expr_while","","",303,{"i":[{"n":"self"},{"n":"exprwhile"}]}],[11,"visit_expr_while_let","","",303,{"i":[{"n":"self"},{"n":"exprwhilelet"}]}],[11,"visit_expr_yield","","",303,{"i":[{"n":"self"},{"n":"expryield"}]}],[11,"visit_field","","",303,{"i":[{"n":"self"},{"n":"field"}]}],[11,"visit_field_pat","","",303,{"i":[{"n":"self"},{"n":"fieldpat"}]}],[11,"visit_field_value","","",303,{"i":[{"n":"self"},{"n":"fieldvalue"}]}],[11,"visit_fields","","",303,{"i":[{"n":"self"},{"n":"fields"}]}],[11,"visit_fields_named","","",303,{"i":[{"n":"self"},{"n":"fieldsnamed"}]}],[11,"visit_fields_unnamed","","",303,{"i":[{"n":"self"},{"n":"fieldsunnamed"}]}],[11,"visit_file","","",303,{"i":[{"n":"self"},{"n":"file"}]}],[11,"visit_fn_arg","","",303,{"i":[{"n":"self"},{"n":"fnarg"}]}],[11,"visit_fn_decl","","",303,{"i":[{"n":"self"},{"n":"fndecl"}]}],[11,"visit_foreign_item","","",303,{"i":[{"n":"self"},{"n":"foreignitem"}]}],[11,"visit_foreign_item_fn","","",303,{"i":[{"n":"self"},{"n":"foreignitemfn"}]}],[11,"visit_foreign_item_static","","",303,{"i":[{"n":"self"},{"n":"foreignitemstatic"}]}],[11,"visit_foreign_item_type","","",303,{"i":[{"n":"self"},{"n":"foreignitemtype"}]}],[11,"visit_foreign_item_verbatim","","",303,{"i":[{"n":"self"},{"n":"foreignitemverbatim"}]}],[11,"visit_generic_argument","","",303,{"i":[{"n":"self"},{"n":"genericargument"}]}],[11,"visit_generic_method_argument","","",303,{"i":[{"n":"self"},{"n":"genericmethodargument"}]}],[11,"visit_generic_param","","",303,{"i":[{"n":"self"},{"n":"genericparam"}]}],[11,"visit_generics","","",303,{"i":[{"n":"self"},{"n":"generics"}]}],[11,"visit_ident","","",303,{"i":[{"n":"self"},{"n":"ident"}]}],[11,"visit_impl_item","","",303,{"i":[{"n":"self"},{"n":"implitem"}]}],[11,"visit_impl_item_const","","",303,{"i":[{"n":"self"},{"n":"implitemconst"}]}],[11,"visit_impl_item_macro","","",303,{"i":[{"n":"self"},{"n":"implitemmacro"}]}],[11,"visit_impl_item_method","","",303,{"i":[{"n":"self"},{"n":"implitemmethod"}]}],[11,"visit_impl_item_type","","",303,{"i":[{"n":"self"},{"n":"implitemtype"}]}],[11,"visit_impl_item_verbatim","","",303,{"i":[{"n":"self"},{"n":"implitemverbatim"}]}],[11,"visit_index","","",303,{"i":[{"n":"self"},{"n":"index"}]}],[11,"visit_item","","",303,{"i":[{"n":"self"},{"n":"item"}]}],[11,"visit_item_const","","",303,{"i":[{"n":"self"},{"n":"itemconst"}]}],[11,"visit_item_enum","","",303,{"i":[{"n":"self"},{"n":"itemenum"}]}],[11,"visit_item_extern_crate","","",303,{"i":[{"n":"self"},{"n":"itemexterncrate"}]}],[11,"visit_item_fn","","",303,{"i":[{"n":"self"},{"n":"itemfn"}]}],[11,"visit_item_foreign_mod","","",303,{"i":[{"n":"self"},{"n":"itemforeignmod"}]}],[11,"visit_item_impl","","",303,{"i":[{"n":"self"},{"n":"itemimpl"}]}],[11,"visit_item_macro","","",303,{"i":[{"n":"self"},{"n":"itemmacro"}]}],[11,"visit_item_macro2","","",303,{"i":[{"n":"self"},{"n":"itemmacro2"}]}],[11,"visit_item_mod","","",303,{"i":[{"n":"self"},{"n":"itemmod"}]}],[11,"visit_item_static","","",303,{"i":[{"n":"self"},{"n":"itemstatic"}]}],[11,"visit_item_struct","","",303,{"i":[{"n":"self"},{"n":"itemstruct"}]}],[11,"visit_item_trait","","",303,{"i":[{"n":"self"},{"n":"itemtrait"}]}],[11,"visit_item_type","","",303,{"i":[{"n":"self"},{"n":"itemtype"}]}],[11,"visit_item_union","","",303,{"i":[{"n":"self"},{"n":"itemunion"}]}],[11,"visit_item_use","","",303,{"i":[{"n":"self"},{"n":"itemuse"}]}],[11,"visit_item_verbatim","","",303,{"i":[{"n":"self"},{"n":"itemverbatim"}]}],[11,"visit_label","","",303,{"i":[{"n":"self"},{"n":"label"}]}],[11,"visit_lifetime","","",303,{"i":[{"n":"self"},{"n":"lifetime"}]}],[11,"visit_lifetime_def","","",303,{"i":[{"n":"self"},{"n":"lifetimedef"}]}],[11,"visit_lit","","",303,{"i":[{"n":"self"},{"n":"lit"}]}],[11,"visit_lit_bool","","",303,{"i":[{"n":"self"},{"n":"litbool"}]}],[11,"visit_lit_byte","","",303,{"i":[{"n":"self"},{"n":"litbyte"}]}],[11,"visit_lit_byte_str","","",303,{"i":[{"n":"self"},{"n":"litbytestr"}]}],[11,"visit_lit_char","","",303,{"i":[{"n":"self"},{"n":"litchar"}]}],[11,"visit_lit_float","","",303,{"i":[{"n":"self"},{"n":"litfloat"}]}],[11,"visit_lit_int","","",303,{"i":[{"n":"self"},{"n":"litint"}]}],[11,"visit_lit_str","","",303,{"i":[{"n":"self"},{"n":"litstr"}]}],[11,"visit_lit_verbatim","","",303,{"i":[{"n":"self"},{"n":"litverbatim"}]}],[11,"visit_local","","",303,{"i":[{"n":"self"},{"n":"local"}]}],[11,"visit_macro","","",303,{"i":[{"n":"self"},{"n":"macro"}]}],[11,"visit_macro_delimiter","","",303,{"i":[{"n":"self"},{"n":"macrodelimiter"}]}],[11,"visit_member","","",303,{"i":[{"n":"self"},{"n":"member"}]}],[11,"visit_meta","","",303,{"i":[{"n":"self"},{"n":"meta"}]}],[11,"visit_meta_list","","",303,{"i":[{"n":"self"},{"n":"metalist"}]}],[11,"visit_meta_name_value","","",303,{"i":[{"n":"self"},{"n":"metanamevalue"}]}],[11,"visit_method_sig","","",303,{"i":[{"n":"self"},{"n":"methodsig"}]}],[11,"visit_method_turbofish","","",303,{"i":[{"n":"self"},{"n":"methodturbofish"}]}],[11,"visit_nested_meta","","",303,{"i":[{"n":"self"},{"n":"nestedmeta"}]}],[11,"visit_parenthesized_generic_arguments","","",303,{"i":[{"n":"self"},{"n":"parenthesizedgenericarguments"}]}],[11,"visit_pat","","",303,{"i":[{"n":"self"},{"n":"pat"}]}],[11,"visit_pat_box","","",303,{"i":[{"n":"self"},{"n":"patbox"}]}],[11,"visit_pat_ident","","",303,{"i":[{"n":"self"},{"n":"patident"}]}],[11,"visit_pat_lit","","",303,{"i":[{"n":"self"},{"n":"patlit"}]}],[11,"visit_pat_macro","","",303,{"i":[{"n":"self"},{"n":"patmacro"}]}],[11,"visit_pat_path","","",303,{"i":[{"n":"self"},{"n":"patpath"}]}],[11,"visit_pat_range","","",303,{"i":[{"n":"self"},{"n":"patrange"}]}],[11,"visit_pat_ref","","",303,{"i":[{"n":"self"},{"n":"patref"}]}],[11,"visit_pat_slice","","",303,{"i":[{"n":"self"},{"n":"patslice"}]}],[11,"visit_pat_struct","","",303,{"i":[{"n":"self"},{"n":"patstruct"}]}],[11,"visit_pat_tuple","","",303,{"i":[{"n":"self"},{"n":"pattuple"}]}],[11,"visit_pat_tuple_struct","","",303,{"i":[{"n":"self"},{"n":"pattuplestruct"}]}],[11,"visit_pat_verbatim","","",303,{"i":[{"n":"self"},{"n":"patverbatim"}]}],[11,"visit_pat_wild","","",303,{"i":[{"n":"self"},{"n":"patwild"}]}],[11,"visit_path","","",303,{"i":[{"n":"self"},{"n":"path"}]}],[11,"visit_path_arguments","","",303,{"i":[{"n":"self"},{"n":"patharguments"}]}],[11,"visit_path_segment","","",303,{"i":[{"n":"self"},{"n":"pathsegment"}]}],[11,"visit_predicate_eq","","",303,{"i":[{"n":"self"},{"n":"predicateeq"}]}],[11,"visit_predicate_lifetime","","",303,{"i":[{"n":"self"},{"n":"predicatelifetime"}]}],[11,"visit_predicate_type","","",303,{"i":[{"n":"self"},{"n":"predicatetype"}]}],[11,"visit_qself","","",303,{"i":[{"n":"self"},{"n":"qself"}]}],[11,"visit_range_limits","","",303,{"i":[{"n":"self"},{"n":"rangelimits"}]}],[11,"visit_return_type","","",303,{"i":[{"n":"self"},{"n":"returntype"}]}],[11,"visit_span","","",303,{"i":[{"n":"self"},{"n":"span"}]}],[11,"visit_stmt","","",303,{"i":[{"n":"self"},{"n":"stmt"}]}],[11,"visit_trait_bound","","",303,{"i":[{"n":"self"},{"n":"traitbound"}]}],[11,"visit_trait_bound_modifier","","",303,{"i":[{"n":"self"},{"n":"traitboundmodifier"}]}],[11,"visit_trait_item","","",303,{"i":[{"n":"self"},{"n":"traititem"}]}],[11,"visit_trait_item_const","","",303,{"i":[{"n":"self"},{"n":"traititemconst"}]}],[11,"visit_trait_item_macro","","",303,{"i":[{"n":"self"},{"n":"traititemmacro"}]}],[11,"visit_trait_item_method","","",303,{"i":[{"n":"self"},{"n":"traititemmethod"}]}],[11,"visit_trait_item_type","","",303,{"i":[{"n":"self"},{"n":"traititemtype"}]}],[11,"visit_trait_item_verbatim","","",303,{"i":[{"n":"self"},{"n":"traititemverbatim"}]}],[11,"visit_type","","",303,{"i":[{"n":"self"},{"n":"type"}]}],[11,"visit_type_array","","",303,{"i":[{"n":"self"},{"n":"typearray"}]}],[11,"visit_type_bare_fn","","",303,{"i":[{"n":"self"},{"n":"typebarefn"}]}],[11,"visit_type_group","","",303,{"i":[{"n":"self"},{"n":"typegroup"}]}],[11,"visit_type_impl_trait","","",303,{"i":[{"n":"self"},{"n":"typeimpltrait"}]}],[11,"visit_type_infer","","",303,{"i":[{"n":"self"},{"n":"typeinfer"}]}],[11,"visit_type_macro","","",303,{"i":[{"n":"self"},{"n":"typemacro"}]}],[11,"visit_type_never","","",303,{"i":[{"n":"self"},{"n":"typenever"}]}],[11,"visit_type_param","","",303,{"i":[{"n":"self"},{"n":"typeparam"}]}],[11,"visit_type_param_bound","","",303,{"i":[{"n":"self"},{"n":"typeparambound"}]}],[11,"visit_type_paren","","",303,{"i":[{"n":"self"},{"n":"typeparen"}]}],[11,"visit_type_path","","",303,{"i":[{"n":"self"},{"n":"typepath"}]}],[11,"visit_type_ptr","","",303,{"i":[{"n":"self"},{"n":"typeptr"}]}],[11,"visit_type_reference","","",303,{"i":[{"n":"self"},{"n":"typereference"}]}],[11,"visit_type_slice","","",303,{"i":[{"n":"self"},{"n":"typeslice"}]}],[11,"visit_type_trait_object","","",303,{"i":[{"n":"self"},{"n":"typetraitobject"}]}],[11,"visit_type_tuple","","",303,{"i":[{"n":"self"},{"n":"typetuple"}]}],[11,"visit_type_verbatim","","",303,{"i":[{"n":"self"},{"n":"typeverbatim"}]}],[11,"visit_un_op","","",303,{"i":[{"n":"self"},{"n":"unop"}]}],[11,"visit_use_glob","","",303,{"i":[{"n":"self"},{"n":"useglob"}]}],[11,"visit_use_group","","",303,{"i":[{"n":"self"},{"n":"usegroup"}]}],[11,"visit_use_name","","",303,{"i":[{"n":"self"},{"n":"usename"}]}],[11,"visit_use_path","","",303,{"i":[{"n":"self"},{"n":"usepath"}]}],[11,"visit_use_rename","","",303,{"i":[{"n":"self"},{"n":"userename"}]}],[11,"visit_use_tree","","",303,{"i":[{"n":"self"},{"n":"usetree"}]}],[11,"visit_variant","","",303,{"i":[{"n":"self"},{"n":"variant"}]}],[11,"visit_vis_crate","","",303,{"i":[{"n":"self"},{"n":"viscrate"}]}],[11,"visit_vis_public","","",303,{"i":[{"n":"self"},{"n":"vispublic"}]}],[11,"visit_vis_restricted","","",303,{"i":[{"n":"self"},{"n":"visrestricted"}]}],[11,"visit_visibility","","",303,{"i":[{"n":"self"},{"n":"visibility"}]}],[11,"visit_where_clause","","",303,{"i":[{"n":"self"},{"n":"whereclause"}]}],[11,"visit_where_predicate","","",303,{"i":[{"n":"self"},{"n":"wherepredicate"}]}],[0,"fold","syn","Syntax tree traversal to transform the nodes of an owned syntax tree.",null,null],[5,"fold_ident","syn::fold","",null,{"i":[{"n":"v"},{"n":"ident"}],"o":{"n":"ident"}}],[5,"fold_lifetime","","",null,{"i":[{"n":"v"},{"n":"lifetime"}],"o":{"n":"lifetime"}}],[5,"fold_lit_byte","","",null,{"i":[{"n":"v"},{"n":"litbyte"}],"o":{"n":"litbyte"}}],[5,"fold_lit_byte_str","","",null,{"i":[{"n":"v"},{"n":"litbytestr"}],"o":{"n":"litbytestr"}}],[5,"fold_lit_char","","",null,{"i":[{"n":"v"},{"n":"litchar"}],"o":{"n":"litchar"}}],[5,"fold_lit_float","","",null,{"i":[{"n":"v"},{"n":"litfloat"}],"o":{"n":"litfloat"}}],[5,"fold_lit_int","","",null,{"i":[{"n":"v"},{"n":"litint"}],"o":{"n":"litint"}}],[5,"fold_lit_str","","",null,{"i":[{"n":"v"},{"n":"litstr"}],"o":{"n":"litstr"}}],[5,"fold_abi","","",null,{"i":[{"n":"v"},{"n":"abi"}],"o":{"n":"abi"}}],[5,"fold_angle_bracketed_generic_arguments","","",null,{"i":[{"n":"v"},{"n":"anglebracketedgenericarguments"}],"o":{"n":"anglebracketedgenericarguments"}}],[5,"fold_arg_captured","","",null,{"i":[{"n":"v"},{"n":"argcaptured"}],"o":{"n":"argcaptured"}}],[5,"fold_arg_self","","",null,{"i":[{"n":"v"},{"n":"argself"}],"o":{"n":"argself"}}],[5,"fold_arg_self_ref","","",null,{"i":[{"n":"v"},{"n":"argselfref"}],"o":{"n":"argselfref"}}],[5,"fold_arm","","",null,{"i":[{"n":"v"},{"n":"arm"}],"o":{"n":"arm"}}],[5,"fold_attr_style","","",null,{"i":[{"n":"v"},{"n":"attrstyle"}],"o":{"n":"attrstyle"}}],[5,"fold_attribute","","",null,{"i":[{"n":"v"},{"n":"attribute"}],"o":{"n":"attribute"}}],[5,"fold_bare_fn_arg","","",null,{"i":[{"n":"v"},{"n":"barefnarg"}],"o":{"n":"barefnarg"}}],[5,"fold_bare_fn_arg_name","","",null,{"i":[{"n":"v"},{"n":"barefnargname"}],"o":{"n":"barefnargname"}}],[5,"fold_bin_op","","",null,{"i":[{"n":"v"},{"n":"binop"}],"o":{"n":"binop"}}],[5,"fold_binding","","",null,{"i":[{"n":"v"},{"n":"binding"}],"o":{"n":"binding"}}],[5,"fold_block","","",null,{"i":[{"n":"v"},{"n":"block"}],"o":{"n":"block"}}],[5,"fold_bound_lifetimes","","",null,{"i":[{"n":"v"},{"n":"boundlifetimes"}],"o":{"n":"boundlifetimes"}}],[5,"fold_const_param","","",null,{"i":[{"n":"v"},{"n":"constparam"}],"o":{"n":"constparam"}}],[5,"fold_data","","",null,{"i":[{"n":"v"},{"n":"data"}],"o":{"n":"data"}}],[5,"fold_data_enum","","",null,{"i":[{"n":"v"},{"n":"dataenum"}],"o":{"n":"dataenum"}}],[5,"fold_data_struct","","",null,{"i":[{"n":"v"},{"n":"datastruct"}],"o":{"n":"datastruct"}}],[5,"fold_data_union","","",null,{"i":[{"n":"v"},{"n":"dataunion"}],"o":{"n":"dataunion"}}],[5,"fold_derive_input","","",null,{"i":[{"n":"v"},{"n":"deriveinput"}],"o":{"n":"deriveinput"}}],[5,"fold_expr","","",null,{"i":[{"n":"v"},{"n":"expr"}],"o":{"n":"expr"}}],[5,"fold_expr_array","","",null,{"i":[{"n":"v"},{"n":"exprarray"}],"o":{"n":"exprarray"}}],[5,"fold_expr_assign","","",null,{"i":[{"n":"v"},{"n":"exprassign"}],"o":{"n":"exprassign"}}],[5,"fold_expr_assign_op","","",null,{"i":[{"n":"v"},{"n":"exprassignop"}],"o":{"n":"exprassignop"}}],[5,"fold_expr_binary","","",null,{"i":[{"n":"v"},{"n":"exprbinary"}],"o":{"n":"exprbinary"}}],[5,"fold_expr_block","","",null,{"i":[{"n":"v"},{"n":"exprblock"}],"o":{"n":"exprblock"}}],[5,"fold_expr_box","","",null,{"i":[{"n":"v"},{"n":"exprbox"}],"o":{"n":"exprbox"}}],[5,"fold_expr_break","","",null,{"i":[{"n":"v"},{"n":"exprbreak"}],"o":{"n":"exprbreak"}}],[5,"fold_expr_call","","",null,{"i":[{"n":"v"},{"n":"exprcall"}],"o":{"n":"exprcall"}}],[5,"fold_expr_cast","","",null,{"i":[{"n":"v"},{"n":"exprcast"}],"o":{"n":"exprcast"}}],[5,"fold_expr_catch","","",null,{"i":[{"n":"v"},{"n":"exprcatch"}],"o":{"n":"exprcatch"}}],[5,"fold_expr_closure","","",null,{"i":[{"n":"v"},{"n":"exprclosure"}],"o":{"n":"exprclosure"}}],[5,"fold_expr_continue","","",null,{"i":[{"n":"v"},{"n":"exprcontinue"}],"o":{"n":"exprcontinue"}}],[5,"fold_expr_field","","",null,{"i":[{"n":"v"},{"n":"exprfield"}],"o":{"n":"exprfield"}}],[5,"fold_expr_for_loop","","",null,{"i":[{"n":"v"},{"n":"exprforloop"}],"o":{"n":"exprforloop"}}],[5,"fold_expr_group","","",null,{"i":[{"n":"v"},{"n":"exprgroup"}],"o":{"n":"exprgroup"}}],[5,"fold_expr_if","","",null,{"i":[{"n":"v"},{"n":"exprif"}],"o":{"n":"exprif"}}],[5,"fold_expr_if_let","","",null,{"i":[{"n":"v"},{"n":"expriflet"}],"o":{"n":"expriflet"}}],[5,"fold_expr_in_place","","",null,{"i":[{"n":"v"},{"n":"exprinplace"}],"o":{"n":"exprinplace"}}],[5,"fold_expr_index","","",null,{"i":[{"n":"v"},{"n":"exprindex"}],"o":{"n":"exprindex"}}],[5,"fold_expr_lit","","",null,{"i":[{"n":"v"},{"n":"exprlit"}],"o":{"n":"exprlit"}}],[5,"fold_expr_loop","","",null,{"i":[{"n":"v"},{"n":"exprloop"}],"o":{"n":"exprloop"}}],[5,"fold_expr_macro","","",null,{"i":[{"n":"v"},{"n":"exprmacro"}],"o":{"n":"exprmacro"}}],[5,"fold_expr_match","","",null,{"i":[{"n":"v"},{"n":"exprmatch"}],"o":{"n":"exprmatch"}}],[5,"fold_expr_method_call","","",null,{"i":[{"n":"v"},{"n":"exprmethodcall"}],"o":{"n":"exprmethodcall"}}],[5,"fold_expr_paren","","",null,{"i":[{"n":"v"},{"n":"exprparen"}],"o":{"n":"exprparen"}}],[5,"fold_expr_path","","",null,{"i":[{"n":"v"},{"n":"exprpath"}],"o":{"n":"exprpath"}}],[5,"fold_expr_range","","",null,{"i":[{"n":"v"},{"n":"exprrange"}],"o":{"n":"exprrange"}}],[5,"fold_expr_reference","","",null,{"i":[{"n":"v"},{"n":"exprreference"}],"o":{"n":"exprreference"}}],[5,"fold_expr_repeat","","",null,{"i":[{"n":"v"},{"n":"exprrepeat"}],"o":{"n":"exprrepeat"}}],[5,"fold_expr_return","","",null,{"i":[{"n":"v"},{"n":"exprreturn"}],"o":{"n":"exprreturn"}}],[5,"fold_expr_struct","","",null,{"i":[{"n":"v"},{"n":"exprstruct"}],"o":{"n":"exprstruct"}}],[5,"fold_expr_try","","",null,{"i":[{"n":"v"},{"n":"exprtry"}],"o":{"n":"exprtry"}}],[5,"fold_expr_tuple","","",null,{"i":[{"n":"v"},{"n":"exprtuple"}],"o":{"n":"exprtuple"}}],[5,"fold_expr_type","","",null,{"i":[{"n":"v"},{"n":"exprtype"}],"o":{"n":"exprtype"}}],[5,"fold_expr_unary","","",null,{"i":[{"n":"v"},{"n":"exprunary"}],"o":{"n":"exprunary"}}],[5,"fold_expr_unsafe","","",null,{"i":[{"n":"v"},{"n":"exprunsafe"}],"o":{"n":"exprunsafe"}}],[5,"fold_expr_verbatim","","",null,{"i":[{"n":"v"},{"n":"exprverbatim"}],"o":{"n":"exprverbatim"}}],[5,"fold_expr_while","","",null,{"i":[{"n":"v"},{"n":"exprwhile"}],"o":{"n":"exprwhile"}}],[5,"fold_expr_while_let","","",null,{"i":[{"n":"v"},{"n":"exprwhilelet"}],"o":{"n":"exprwhilelet"}}],[5,"fold_expr_yield","","",null,{"i":[{"n":"v"},{"n":"expryield"}],"o":{"n":"expryield"}}],[5,"fold_field","","",null,{"i":[{"n":"v"},{"n":"field"}],"o":{"n":"field"}}],[5,"fold_field_pat","","",null,{"i":[{"n":"v"},{"n":"fieldpat"}],"o":{"n":"fieldpat"}}],[5,"fold_field_value","","",null,{"i":[{"n":"v"},{"n":"fieldvalue"}],"o":{"n":"fieldvalue"}}],[5,"fold_fields","","",null,{"i":[{"n":"v"},{"n":"fields"}],"o":{"n":"fields"}}],[5,"fold_fields_named","","",null,{"i":[{"n":"v"},{"n":"fieldsnamed"}],"o":{"n":"fieldsnamed"}}],[5,"fold_fields_unnamed","","",null,{"i":[{"n":"v"},{"n":"fieldsunnamed"}],"o":{"n":"fieldsunnamed"}}],[5,"fold_file","","",null,{"i":[{"n":"v"},{"n":"file"}],"o":{"n":"file"}}],[5,"fold_fn_arg","","",null,{"i":[{"n":"v"},{"n":"fnarg"}],"o":{"n":"fnarg"}}],[5,"fold_fn_decl","","",null,{"i":[{"n":"v"},{"n":"fndecl"}],"o":{"n":"fndecl"}}],[5,"fold_foreign_item","","",null,{"i":[{"n":"v"},{"n":"foreignitem"}],"o":{"n":"foreignitem"}}],[5,"fold_foreign_item_fn","","",null,{"i":[{"n":"v"},{"n":"foreignitemfn"}],"o":{"n":"foreignitemfn"}}],[5,"fold_foreign_item_static","","",null,{"i":[{"n":"v"},{"n":"foreignitemstatic"}],"o":{"n":"foreignitemstatic"}}],[5,"fold_foreign_item_type","","",null,{"i":[{"n":"v"},{"n":"foreignitemtype"}],"o":{"n":"foreignitemtype"}}],[5,"fold_foreign_item_verbatim","","",null,{"i":[{"n":"v"},{"n":"foreignitemverbatim"}],"o":{"n":"foreignitemverbatim"}}],[5,"fold_generic_argument","","",null,{"i":[{"n":"v"},{"n":"genericargument"}],"o":{"n":"genericargument"}}],[5,"fold_generic_method_argument","","",null,{"i":[{"n":"v"},{"n":"genericmethodargument"}],"o":{"n":"genericmethodargument"}}],[5,"fold_generic_param","","",null,{"i":[{"n":"v"},{"n":"genericparam"}],"o":{"n":"genericparam"}}],[5,"fold_generics","","",null,{"i":[{"n":"v"},{"n":"generics"}],"o":{"n":"generics"}}],[5,"fold_impl_item","","",null,{"i":[{"n":"v"},{"n":"implitem"}],"o":{"n":"implitem"}}],[5,"fold_impl_item_const","","",null,{"i":[{"n":"v"},{"n":"implitemconst"}],"o":{"n":"implitemconst"}}],[5,"fold_impl_item_macro","","",null,{"i":[{"n":"v"},{"n":"implitemmacro"}],"o":{"n":"implitemmacro"}}],[5,"fold_impl_item_method","","",null,{"i":[{"n":"v"},{"n":"implitemmethod"}],"o":{"n":"implitemmethod"}}],[5,"fold_impl_item_type","","",null,{"i":[{"n":"v"},{"n":"implitemtype"}],"o":{"n":"implitemtype"}}],[5,"fold_impl_item_verbatim","","",null,{"i":[{"n":"v"},{"n":"implitemverbatim"}],"o":{"n":"implitemverbatim"}}],[5,"fold_index","","",null,{"i":[{"n":"v"},{"n":"index"}],"o":{"n":"index"}}],[5,"fold_item","","",null,{"i":[{"n":"v"},{"n":"item"}],"o":{"n":"item"}}],[5,"fold_item_const","","",null,{"i":[{"n":"v"},{"n":"itemconst"}],"o":{"n":"itemconst"}}],[5,"fold_item_enum","","",null,{"i":[{"n":"v"},{"n":"itemenum"}],"o":{"n":"itemenum"}}],[5,"fold_item_extern_crate","","",null,{"i":[{"n":"v"},{"n":"itemexterncrate"}],"o":{"n":"itemexterncrate"}}],[5,"fold_item_fn","","",null,{"i":[{"n":"v"},{"n":"itemfn"}],"o":{"n":"itemfn"}}],[5,"fold_item_foreign_mod","","",null,{"i":[{"n":"v"},{"n":"itemforeignmod"}],"o":{"n":"itemforeignmod"}}],[5,"fold_item_impl","","",null,{"i":[{"n":"v"},{"n":"itemimpl"}],"o":{"n":"itemimpl"}}],[5,"fold_item_macro","","",null,{"i":[{"n":"v"},{"n":"itemmacro"}],"o":{"n":"itemmacro"}}],[5,"fold_item_macro2","","",null,{"i":[{"n":"v"},{"n":"itemmacro2"}],"o":{"n":"itemmacro2"}}],[5,"fold_item_mod","","",null,{"i":[{"n":"v"},{"n":"itemmod"}],"o":{"n":"itemmod"}}],[5,"fold_item_static","","",null,{"i":[{"n":"v"},{"n":"itemstatic"}],"o":{"n":"itemstatic"}}],[5,"fold_item_struct","","",null,{"i":[{"n":"v"},{"n":"itemstruct"}],"o":{"n":"itemstruct"}}],[5,"fold_item_trait","","",null,{"i":[{"n":"v"},{"n":"itemtrait"}],"o":{"n":"itemtrait"}}],[5,"fold_item_type","","",null,{"i":[{"n":"v"},{"n":"itemtype"}],"o":{"n":"itemtype"}}],[5,"fold_item_union","","",null,{"i":[{"n":"v"},{"n":"itemunion"}],"o":{"n":"itemunion"}}],[5,"fold_item_use","","",null,{"i":[{"n":"v"},{"n":"itemuse"}],"o":{"n":"itemuse"}}],[5,"fold_item_verbatim","","",null,{"i":[{"n":"v"},{"n":"itemverbatim"}],"o":{"n":"itemverbatim"}}],[5,"fold_label","","",null,{"i":[{"n":"v"},{"n":"label"}],"o":{"n":"label"}}],[5,"fold_lifetime_def","","",null,{"i":[{"n":"v"},{"n":"lifetimedef"}],"o":{"n":"lifetimedef"}}],[5,"fold_lit","","",null,{"i":[{"n":"v"},{"n":"lit"}],"o":{"n":"lit"}}],[5,"fold_lit_bool","","",null,{"i":[{"n":"v"},{"n":"litbool"}],"o":{"n":"litbool"}}],[5,"fold_lit_verbatim","","",null,{"i":[{"n":"v"},{"n":"litverbatim"}],"o":{"n":"litverbatim"}}],[5,"fold_local","","",null,{"i":[{"n":"v"},{"n":"local"}],"o":{"n":"local"}}],[5,"fold_macro","","",null,{"i":[{"n":"v"},{"n":"macro"}],"o":{"n":"macro"}}],[5,"fold_macro_delimiter","","",null,{"i":[{"n":"v"},{"n":"macrodelimiter"}],"o":{"n":"macrodelimiter"}}],[5,"fold_member","","",null,{"i":[{"n":"v"},{"n":"member"}],"o":{"n":"member"}}],[5,"fold_meta","","",null,{"i":[{"n":"v"},{"n":"meta"}],"o":{"n":"meta"}}],[5,"fold_meta_list","","",null,{"i":[{"n":"v"},{"n":"metalist"}],"o":{"n":"metalist"}}],[5,"fold_meta_name_value","","",null,{"i":[{"n":"v"},{"n":"metanamevalue"}],"o":{"n":"metanamevalue"}}],[5,"fold_method_sig","","",null,{"i":[{"n":"v"},{"n":"methodsig"}],"o":{"n":"methodsig"}}],[5,"fold_method_turbofish","","",null,{"i":[{"n":"v"},{"n":"methodturbofish"}],"o":{"n":"methodturbofish"}}],[5,"fold_nested_meta","","",null,{"i":[{"n":"v"},{"n":"nestedmeta"}],"o":{"n":"nestedmeta"}}],[5,"fold_parenthesized_generic_arguments","","",null,{"i":[{"n":"v"},{"n":"parenthesizedgenericarguments"}],"o":{"n":"parenthesizedgenericarguments"}}],[5,"fold_pat","","",null,{"i":[{"n":"v"},{"n":"pat"}],"o":{"n":"pat"}}],[5,"fold_pat_box","","",null,{"i":[{"n":"v"},{"n":"patbox"}],"o":{"n":"patbox"}}],[5,"fold_pat_ident","","",null,{"i":[{"n":"v"},{"n":"patident"}],"o":{"n":"patident"}}],[5,"fold_pat_lit","","",null,{"i":[{"n":"v"},{"n":"patlit"}],"o":{"n":"patlit"}}],[5,"fold_pat_macro","","",null,{"i":[{"n":"v"},{"n":"patmacro"}],"o":{"n":"patmacro"}}],[5,"fold_pat_path","","",null,{"i":[{"n":"v"},{"n":"patpath"}],"o":{"n":"patpath"}}],[5,"fold_pat_range","","",null,{"i":[{"n":"v"},{"n":"patrange"}],"o":{"n":"patrange"}}],[5,"fold_pat_ref","","",null,{"i":[{"n":"v"},{"n":"patref"}],"o":{"n":"patref"}}],[5,"fold_pat_slice","","",null,{"i":[{"n":"v"},{"n":"patslice"}],"o":{"n":"patslice"}}],[5,"fold_pat_struct","","",null,{"i":[{"n":"v"},{"n":"patstruct"}],"o":{"n":"patstruct"}}],[5,"fold_pat_tuple","","",null,{"i":[{"n":"v"},{"n":"pattuple"}],"o":{"n":"pattuple"}}],[5,"fold_pat_tuple_struct","","",null,{"i":[{"n":"v"},{"n":"pattuplestruct"}],"o":{"n":"pattuplestruct"}}],[5,"fold_pat_verbatim","","",null,{"i":[{"n":"v"},{"n":"patverbatim"}],"o":{"n":"patverbatim"}}],[5,"fold_pat_wild","","",null,{"i":[{"n":"v"},{"n":"patwild"}],"o":{"n":"patwild"}}],[5,"fold_path","","",null,{"i":[{"n":"v"},{"n":"path"}],"o":{"n":"path"}}],[5,"fold_path_arguments","","",null,{"i":[{"n":"v"},{"n":"patharguments"}],"o":{"n":"patharguments"}}],[5,"fold_path_segment","","",null,{"i":[{"n":"v"},{"n":"pathsegment"}],"o":{"n":"pathsegment"}}],[5,"fold_predicate_eq","","",null,{"i":[{"n":"v"},{"n":"predicateeq"}],"o":{"n":"predicateeq"}}],[5,"fold_predicate_lifetime","","",null,{"i":[{"n":"v"},{"n":"predicatelifetime"}],"o":{"n":"predicatelifetime"}}],[5,"fold_predicate_type","","",null,{"i":[{"n":"v"},{"n":"predicatetype"}],"o":{"n":"predicatetype"}}],[5,"fold_qself","","",null,{"i":[{"n":"v"},{"n":"qself"}],"o":{"n":"qself"}}],[5,"fold_range_limits","","",null,{"i":[{"n":"v"},{"n":"rangelimits"}],"o":{"n":"rangelimits"}}],[5,"fold_return_type","","",null,{"i":[{"n":"v"},{"n":"returntype"}],"o":{"n":"returntype"}}],[5,"fold_span","","",null,{"i":[{"n":"v"},{"n":"span"}],"o":{"n":"span"}}],[5,"fold_stmt","","",null,{"i":[{"n":"v"},{"n":"stmt"}],"o":{"n":"stmt"}}],[5,"fold_trait_bound","","",null,{"i":[{"n":"v"},{"n":"traitbound"}],"o":{"n":"traitbound"}}],[5,"fold_trait_bound_modifier","","",null,{"i":[{"n":"v"},{"n":"traitboundmodifier"}],"o":{"n":"traitboundmodifier"}}],[5,"fold_trait_item","","",null,{"i":[{"n":"v"},{"n":"traititem"}],"o":{"n":"traititem"}}],[5,"fold_trait_item_const","","",null,{"i":[{"n":"v"},{"n":"traititemconst"}],"o":{"n":"traititemconst"}}],[5,"fold_trait_item_macro","","",null,{"i":[{"n":"v"},{"n":"traititemmacro"}],"o":{"n":"traititemmacro"}}],[5,"fold_trait_item_method","","",null,{"i":[{"n":"v"},{"n":"traititemmethod"}],"o":{"n":"traititemmethod"}}],[5,"fold_trait_item_type","","",null,{"i":[{"n":"v"},{"n":"traititemtype"}],"o":{"n":"traititemtype"}}],[5,"fold_trait_item_verbatim","","",null,{"i":[{"n":"v"},{"n":"traititemverbatim"}],"o":{"n":"traititemverbatim"}}],[5,"fold_type","","",null,{"i":[{"n":"v"},{"n":"type"}],"o":{"n":"type"}}],[5,"fold_type_array","","",null,{"i":[{"n":"v"},{"n":"typearray"}],"o":{"n":"typearray"}}],[5,"fold_type_bare_fn","","",null,{"i":[{"n":"v"},{"n":"typebarefn"}],"o":{"n":"typebarefn"}}],[5,"fold_type_group","","",null,{"i":[{"n":"v"},{"n":"typegroup"}],"o":{"n":"typegroup"}}],[5,"fold_type_impl_trait","","",null,{"i":[{"n":"v"},{"n":"typeimpltrait"}],"o":{"n":"typeimpltrait"}}],[5,"fold_type_infer","","",null,{"i":[{"n":"v"},{"n":"typeinfer"}],"o":{"n":"typeinfer"}}],[5,"fold_type_macro","","",null,{"i":[{"n":"v"},{"n":"typemacro"}],"o":{"n":"typemacro"}}],[5,"fold_type_never","","",null,{"i":[{"n":"v"},{"n":"typenever"}],"o":{"n":"typenever"}}],[5,"fold_type_param","","",null,{"i":[{"n":"v"},{"n":"typeparam"}],"o":{"n":"typeparam"}}],[5,"fold_type_param_bound","","",null,{"i":[{"n":"v"},{"n":"typeparambound"}],"o":{"n":"typeparambound"}}],[5,"fold_type_paren","","",null,{"i":[{"n":"v"},{"n":"typeparen"}],"o":{"n":"typeparen"}}],[5,"fold_type_path","","",null,{"i":[{"n":"v"},{"n":"typepath"}],"o":{"n":"typepath"}}],[5,"fold_type_ptr","","",null,{"i":[{"n":"v"},{"n":"typeptr"}],"o":{"n":"typeptr"}}],[5,"fold_type_reference","","",null,{"i":[{"n":"v"},{"n":"typereference"}],"o":{"n":"typereference"}}],[5,"fold_type_slice","","",null,{"i":[{"n":"v"},{"n":"typeslice"}],"o":{"n":"typeslice"}}],[5,"fold_type_trait_object","","",null,{"i":[{"n":"v"},{"n":"typetraitobject"}],"o":{"n":"typetraitobject"}}],[5,"fold_type_tuple","","",null,{"i":[{"n":"v"},{"n":"typetuple"}],"o":{"n":"typetuple"}}],[5,"fold_type_verbatim","","",null,{"i":[{"n":"v"},{"n":"typeverbatim"}],"o":{"n":"typeverbatim"}}],[5,"fold_un_op","","",null,{"i":[{"n":"v"},{"n":"unop"}],"o":{"n":"unop"}}],[5,"fold_use_glob","","",null,{"i":[{"n":"v"},{"n":"useglob"}],"o":{"n":"useglob"}}],[5,"fold_use_group","","",null,{"i":[{"n":"v"},{"n":"usegroup"}],"o":{"n":"usegroup"}}],[5,"fold_use_name","","",null,{"i":[{"n":"v"},{"n":"usename"}],"o":{"n":"usename"}}],[5,"fold_use_path","","",null,{"i":[{"n":"v"},{"n":"usepath"}],"o":{"n":"usepath"}}],[5,"fold_use_rename","","",null,{"i":[{"n":"v"},{"n":"userename"}],"o":{"n":"userename"}}],[5,"fold_use_tree","","",null,{"i":[{"n":"v"},{"n":"usetree"}],"o":{"n":"usetree"}}],[5,"fold_variant","","",null,{"i":[{"n":"v"},{"n":"variant"}],"o":{"n":"variant"}}],[5,"fold_vis_crate","","",null,{"i":[{"n":"v"},{"n":"viscrate"}],"o":{"n":"viscrate"}}],[5,"fold_vis_public","","",null,{"i":[{"n":"v"},{"n":"vispublic"}],"o":{"n":"vispublic"}}],[5,"fold_vis_restricted","","",null,{"i":[{"n":"v"},{"n":"visrestricted"}],"o":{"n":"visrestricted"}}],[5,"fold_visibility","","",null,{"i":[{"n":"v"},{"n":"visibility"}],"o":{"n":"visibility"}}],[5,"fold_where_clause","","",null,{"i":[{"n":"v"},{"n":"whereclause"}],"o":{"n":"whereclause"}}],[5,"fold_where_predicate","","",null,{"i":[{"n":"v"},{"n":"wherepredicate"}],"o":{"n":"wherepredicate"}}],[8,"Fold","","Syntax tree traversal to transform the nodes of an owned syntax tree.",null,null],[11,"fold_abi","","",304,{"i":[{"n":"self"},{"n":"abi"}],"o":{"n":"abi"}}],[11,"fold_angle_bracketed_generic_arguments","","",304,{"i":[{"n":"self"},{"n":"anglebracketedgenericarguments"}],"o":{"n":"anglebracketedgenericarguments"}}],[11,"fold_arg_captured","","",304,{"i":[{"n":"self"},{"n":"argcaptured"}],"o":{"n":"argcaptured"}}],[11,"fold_arg_self","","",304,{"i":[{"n":"self"},{"n":"argself"}],"o":{"n":"argself"}}],[11,"fold_arg_self_ref","","",304,{"i":[{"n":"self"},{"n":"argselfref"}],"o":{"n":"argselfref"}}],[11,"fold_arm","","",304,{"i":[{"n":"self"},{"n":"arm"}],"o":{"n":"arm"}}],[11,"fold_attr_style","","",304,{"i":[{"n":"self"},{"n":"attrstyle"}],"o":{"n":"attrstyle"}}],[11,"fold_attribute","","",304,{"i":[{"n":"self"},{"n":"attribute"}],"o":{"n":"attribute"}}],[11,"fold_bare_fn_arg","","",304,{"i":[{"n":"self"},{"n":"barefnarg"}],"o":{"n":"barefnarg"}}],[11,"fold_bare_fn_arg_name","","",304,{"i":[{"n":"self"},{"n":"barefnargname"}],"o":{"n":"barefnargname"}}],[11,"fold_bin_op","","",304,{"i":[{"n":"self"},{"n":"binop"}],"o":{"n":"binop"}}],[11,"fold_binding","","",304,{"i":[{"n":"self"},{"n":"binding"}],"o":{"n":"binding"}}],[11,"fold_block","","",304,{"i":[{"n":"self"},{"n":"block"}],"o":{"n":"block"}}],[11,"fold_bound_lifetimes","","",304,{"i":[{"n":"self"},{"n":"boundlifetimes"}],"o":{"n":"boundlifetimes"}}],[11,"fold_const_param","","",304,{"i":[{"n":"self"},{"n":"constparam"}],"o":{"n":"constparam"}}],[11,"fold_data","","",304,{"i":[{"n":"self"},{"n":"data"}],"o":{"n":"data"}}],[11,"fold_data_enum","","",304,{"i":[{"n":"self"},{"n":"dataenum"}],"o":{"n":"dataenum"}}],[11,"fold_data_struct","","",304,{"i":[{"n":"self"},{"n":"datastruct"}],"o":{"n":"datastruct"}}],[11,"fold_data_union","","",304,{"i":[{"n":"self"},{"n":"dataunion"}],"o":{"n":"dataunion"}}],[11,"fold_derive_input","","",304,{"i":[{"n":"self"},{"n":"deriveinput"}],"o":{"n":"deriveinput"}}],[11,"fold_expr","","",304,{"i":[{"n":"self"},{"n":"expr"}],"o":{"n":"expr"}}],[11,"fold_expr_array","","",304,{"i":[{"n":"self"},{"n":"exprarray"}],"o":{"n":"exprarray"}}],[11,"fold_expr_assign","","",304,{"i":[{"n":"self"},{"n":"exprassign"}],"o":{"n":"exprassign"}}],[11,"fold_expr_assign_op","","",304,{"i":[{"n":"self"},{"n":"exprassignop"}],"o":{"n":"exprassignop"}}],[11,"fold_expr_binary","","",304,{"i":[{"n":"self"},{"n":"exprbinary"}],"o":{"n":"exprbinary"}}],[11,"fold_expr_block","","",304,{"i":[{"n":"self"},{"n":"exprblock"}],"o":{"n":"exprblock"}}],[11,"fold_expr_box","","",304,{"i":[{"n":"self"},{"n":"exprbox"}],"o":{"n":"exprbox"}}],[11,"fold_expr_break","","",304,{"i":[{"n":"self"},{"n":"exprbreak"}],"o":{"n":"exprbreak"}}],[11,"fold_expr_call","","",304,{"i":[{"n":"self"},{"n":"exprcall"}],"o":{"n":"exprcall"}}],[11,"fold_expr_cast","","",304,{"i":[{"n":"self"},{"n":"exprcast"}],"o":{"n":"exprcast"}}],[11,"fold_expr_catch","","",304,{"i":[{"n":"self"},{"n":"exprcatch"}],"o":{"n":"exprcatch"}}],[11,"fold_expr_closure","","",304,{"i":[{"n":"self"},{"n":"exprclosure"}],"o":{"n":"exprclosure"}}],[11,"fold_expr_continue","","",304,{"i":[{"n":"self"},{"n":"exprcontinue"}],"o":{"n":"exprcontinue"}}],[11,"fold_expr_field","","",304,{"i":[{"n":"self"},{"n":"exprfield"}],"o":{"n":"exprfield"}}],[11,"fold_expr_for_loop","","",304,{"i":[{"n":"self"},{"n":"exprforloop"}],"o":{"n":"exprforloop"}}],[11,"fold_expr_group","","",304,{"i":[{"n":"self"},{"n":"exprgroup"}],"o":{"n":"exprgroup"}}],[11,"fold_expr_if","","",304,{"i":[{"n":"self"},{"n":"exprif"}],"o":{"n":"exprif"}}],[11,"fold_expr_if_let","","",304,{"i":[{"n":"self"},{"n":"expriflet"}],"o":{"n":"expriflet"}}],[11,"fold_expr_in_place","","",304,{"i":[{"n":"self"},{"n":"exprinplace"}],"o":{"n":"exprinplace"}}],[11,"fold_expr_index","","",304,{"i":[{"n":"self"},{"n":"exprindex"}],"o":{"n":"exprindex"}}],[11,"fold_expr_lit","","",304,{"i":[{"n":"self"},{"n":"exprlit"}],"o":{"n":"exprlit"}}],[11,"fold_expr_loop","","",304,{"i":[{"n":"self"},{"n":"exprloop"}],"o":{"n":"exprloop"}}],[11,"fold_expr_macro","","",304,{"i":[{"n":"self"},{"n":"exprmacro"}],"o":{"n":"exprmacro"}}],[11,"fold_expr_match","","",304,{"i":[{"n":"self"},{"n":"exprmatch"}],"o":{"n":"exprmatch"}}],[11,"fold_expr_method_call","","",304,{"i":[{"n":"self"},{"n":"exprmethodcall"}],"o":{"n":"exprmethodcall"}}],[11,"fold_expr_paren","","",304,{"i":[{"n":"self"},{"n":"exprparen"}],"o":{"n":"exprparen"}}],[11,"fold_expr_path","","",304,{"i":[{"n":"self"},{"n":"exprpath"}],"o":{"n":"exprpath"}}],[11,"fold_expr_range","","",304,{"i":[{"n":"self"},{"n":"exprrange"}],"o":{"n":"exprrange"}}],[11,"fold_expr_reference","","",304,{"i":[{"n":"self"},{"n":"exprreference"}],"o":{"n":"exprreference"}}],[11,"fold_expr_repeat","","",304,{"i":[{"n":"self"},{"n":"exprrepeat"}],"o":{"n":"exprrepeat"}}],[11,"fold_expr_return","","",304,{"i":[{"n":"self"},{"n":"exprreturn"}],"o":{"n":"exprreturn"}}],[11,"fold_expr_struct","","",304,{"i":[{"n":"self"},{"n":"exprstruct"}],"o":{"n":"exprstruct"}}],[11,"fold_expr_try","","",304,{"i":[{"n":"self"},{"n":"exprtry"}],"o":{"n":"exprtry"}}],[11,"fold_expr_tuple","","",304,{"i":[{"n":"self"},{"n":"exprtuple"}],"o":{"n":"exprtuple"}}],[11,"fold_expr_type","","",304,{"i":[{"n":"self"},{"n":"exprtype"}],"o":{"n":"exprtype"}}],[11,"fold_expr_unary","","",304,{"i":[{"n":"self"},{"n":"exprunary"}],"o":{"n":"exprunary"}}],[11,"fold_expr_unsafe","","",304,{"i":[{"n":"self"},{"n":"exprunsafe"}],"o":{"n":"exprunsafe"}}],[11,"fold_expr_verbatim","","",304,{"i":[{"n":"self"},{"n":"exprverbatim"}],"o":{"n":"exprverbatim"}}],[11,"fold_expr_while","","",304,{"i":[{"n":"self"},{"n":"exprwhile"}],"o":{"n":"exprwhile"}}],[11,"fold_expr_while_let","","",304,{"i":[{"n":"self"},{"n":"exprwhilelet"}],"o":{"n":"exprwhilelet"}}],[11,"fold_expr_yield","","",304,{"i":[{"n":"self"},{"n":"expryield"}],"o":{"n":"expryield"}}],[11,"fold_field","","",304,{"i":[{"n":"self"},{"n":"field"}],"o":{"n":"field"}}],[11,"fold_field_pat","","",304,{"i":[{"n":"self"},{"n":"fieldpat"}],"o":{"n":"fieldpat"}}],[11,"fold_field_value","","",304,{"i":[{"n":"self"},{"n":"fieldvalue"}],"o":{"n":"fieldvalue"}}],[11,"fold_fields","","",304,{"i":[{"n":"self"},{"n":"fields"}],"o":{"n":"fields"}}],[11,"fold_fields_named","","",304,{"i":[{"n":"self"},{"n":"fieldsnamed"}],"o":{"n":"fieldsnamed"}}],[11,"fold_fields_unnamed","","",304,{"i":[{"n":"self"},{"n":"fieldsunnamed"}],"o":{"n":"fieldsunnamed"}}],[11,"fold_file","","",304,{"i":[{"n":"self"},{"n":"file"}],"o":{"n":"file"}}],[11,"fold_fn_arg","","",304,{"i":[{"n":"self"},{"n":"fnarg"}],"o":{"n":"fnarg"}}],[11,"fold_fn_decl","","",304,{"i":[{"n":"self"},{"n":"fndecl"}],"o":{"n":"fndecl"}}],[11,"fold_foreign_item","","",304,{"i":[{"n":"self"},{"n":"foreignitem"}],"o":{"n":"foreignitem"}}],[11,"fold_foreign_item_fn","","",304,{"i":[{"n":"self"},{"n":"foreignitemfn"}],"o":{"n":"foreignitemfn"}}],[11,"fold_foreign_item_static","","",304,{"i":[{"n":"self"},{"n":"foreignitemstatic"}],"o":{"n":"foreignitemstatic"}}],[11,"fold_foreign_item_type","","",304,{"i":[{"n":"self"},{"n":"foreignitemtype"}],"o":{"n":"foreignitemtype"}}],[11,"fold_foreign_item_verbatim","","",304,{"i":[{"n":"self"},{"n":"foreignitemverbatim"}],"o":{"n":"foreignitemverbatim"}}],[11,"fold_generic_argument","","",304,{"i":[{"n":"self"},{"n":"genericargument"}],"o":{"n":"genericargument"}}],[11,"fold_generic_method_argument","","",304,{"i":[{"n":"self"},{"n":"genericmethodargument"}],"o":{"n":"genericmethodargument"}}],[11,"fold_generic_param","","",304,{"i":[{"n":"self"},{"n":"genericparam"}],"o":{"n":"genericparam"}}],[11,"fold_generics","","",304,{"i":[{"n":"self"},{"n":"generics"}],"o":{"n":"generics"}}],[11,"fold_ident","","",304,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"ident"}}],[11,"fold_impl_item","","",304,{"i":[{"n":"self"},{"n":"implitem"}],"o":{"n":"implitem"}}],[11,"fold_impl_item_const","","",304,{"i":[{"n":"self"},{"n":"implitemconst"}],"o":{"n":"implitemconst"}}],[11,"fold_impl_item_macro","","",304,{"i":[{"n":"self"},{"n":"implitemmacro"}],"o":{"n":"implitemmacro"}}],[11,"fold_impl_item_method","","",304,{"i":[{"n":"self"},{"n":"implitemmethod"}],"o":{"n":"implitemmethod"}}],[11,"fold_impl_item_type","","",304,{"i":[{"n":"self"},{"n":"implitemtype"}],"o":{"n":"implitemtype"}}],[11,"fold_impl_item_verbatim","","",304,{"i":[{"n":"self"},{"n":"implitemverbatim"}],"o":{"n":"implitemverbatim"}}],[11,"fold_index","","",304,{"i":[{"n":"self"},{"n":"index"}],"o":{"n":"index"}}],[11,"fold_item","","",304,{"i":[{"n":"self"},{"n":"item"}],"o":{"n":"item"}}],[11,"fold_item_const","","",304,{"i":[{"n":"self"},{"n":"itemconst"}],"o":{"n":"itemconst"}}],[11,"fold_item_enum","","",304,{"i":[{"n":"self"},{"n":"itemenum"}],"o":{"n":"itemenum"}}],[11,"fold_item_extern_crate","","",304,{"i":[{"n":"self"},{"n":"itemexterncrate"}],"o":{"n":"itemexterncrate"}}],[11,"fold_item_fn","","",304,{"i":[{"n":"self"},{"n":"itemfn"}],"o":{"n":"itemfn"}}],[11,"fold_item_foreign_mod","","",304,{"i":[{"n":"self"},{"n":"itemforeignmod"}],"o":{"n":"itemforeignmod"}}],[11,"fold_item_impl","","",304,{"i":[{"n":"self"},{"n":"itemimpl"}],"o":{"n":"itemimpl"}}],[11,"fold_item_macro","","",304,{"i":[{"n":"self"},{"n":"itemmacro"}],"o":{"n":"itemmacro"}}],[11,"fold_item_macro2","","",304,{"i":[{"n":"self"},{"n":"itemmacro2"}],"o":{"n":"itemmacro2"}}],[11,"fold_item_mod","","",304,{"i":[{"n":"self"},{"n":"itemmod"}],"o":{"n":"itemmod"}}],[11,"fold_item_static","","",304,{"i":[{"n":"self"},{"n":"itemstatic"}],"o":{"n":"itemstatic"}}],[11,"fold_item_struct","","",304,{"i":[{"n":"self"},{"n":"itemstruct"}],"o":{"n":"itemstruct"}}],[11,"fold_item_trait","","",304,{"i":[{"n":"self"},{"n":"itemtrait"}],"o":{"n":"itemtrait"}}],[11,"fold_item_type","","",304,{"i":[{"n":"self"},{"n":"itemtype"}],"o":{"n":"itemtype"}}],[11,"fold_item_union","","",304,{"i":[{"n":"self"},{"n":"itemunion"}],"o":{"n":"itemunion"}}],[11,"fold_item_use","","",304,{"i":[{"n":"self"},{"n":"itemuse"}],"o":{"n":"itemuse"}}],[11,"fold_item_verbatim","","",304,{"i":[{"n":"self"},{"n":"itemverbatim"}],"o":{"n":"itemverbatim"}}],[11,"fold_label","","",304,{"i":[{"n":"self"},{"n":"label"}],"o":{"n":"label"}}],[11,"fold_lifetime","","",304,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"lifetime"}}],[11,"fold_lifetime_def","","",304,{"i":[{"n":"self"},{"n":"lifetimedef"}],"o":{"n":"lifetimedef"}}],[11,"fold_lit","","",304,{"i":[{"n":"self"},{"n":"lit"}],"o":{"n":"lit"}}],[11,"fold_lit_bool","","",304,{"i":[{"n":"self"},{"n":"litbool"}],"o":{"n":"litbool"}}],[11,"fold_lit_byte","","",304,{"i":[{"n":"self"},{"n":"litbyte"}],"o":{"n":"litbyte"}}],[11,"fold_lit_byte_str","","",304,{"i":[{"n":"self"},{"n":"litbytestr"}],"o":{"n":"litbytestr"}}],[11,"fold_lit_char","","",304,{"i":[{"n":"self"},{"n":"litchar"}],"o":{"n":"litchar"}}],[11,"fold_lit_float","","",304,{"i":[{"n":"self"},{"n":"litfloat"}],"o":{"n":"litfloat"}}],[11,"fold_lit_int","","",304,{"i":[{"n":"self"},{"n":"litint"}],"o":{"n":"litint"}}],[11,"fold_lit_str","","",304,{"i":[{"n":"self"},{"n":"litstr"}],"o":{"n":"litstr"}}],[11,"fold_lit_verbatim","","",304,{"i":[{"n":"self"},{"n":"litverbatim"}],"o":{"n":"litverbatim"}}],[11,"fold_local","","",304,{"i":[{"n":"self"},{"n":"local"}],"o":{"n":"local"}}],[11,"fold_macro","","",304,{"i":[{"n":"self"},{"n":"macro"}],"o":{"n":"macro"}}],[11,"fold_macro_delimiter","","",304,{"i":[{"n":"self"},{"n":"macrodelimiter"}],"o":{"n":"macrodelimiter"}}],[11,"fold_member","","",304,{"i":[{"n":"self"},{"n":"member"}],"o":{"n":"member"}}],[11,"fold_meta","","",304,{"i":[{"n":"self"},{"n":"meta"}],"o":{"n":"meta"}}],[11,"fold_meta_list","","",304,{"i":[{"n":"self"},{"n":"metalist"}],"o":{"n":"metalist"}}],[11,"fold_meta_name_value","","",304,{"i":[{"n":"self"},{"n":"metanamevalue"}],"o":{"n":"metanamevalue"}}],[11,"fold_method_sig","","",304,{"i":[{"n":"self"},{"n":"methodsig"}],"o":{"n":"methodsig"}}],[11,"fold_method_turbofish","","",304,{"i":[{"n":"self"},{"n":"methodturbofish"}],"o":{"n":"methodturbofish"}}],[11,"fold_nested_meta","","",304,{"i":[{"n":"self"},{"n":"nestedmeta"}],"o":{"n":"nestedmeta"}}],[11,"fold_parenthesized_generic_arguments","","",304,{"i":[{"n":"self"},{"n":"parenthesizedgenericarguments"}],"o":{"n":"parenthesizedgenericarguments"}}],[11,"fold_pat","","",304,{"i":[{"n":"self"},{"n":"pat"}],"o":{"n":"pat"}}],[11,"fold_pat_box","","",304,{"i":[{"n":"self"},{"n":"patbox"}],"o":{"n":"patbox"}}],[11,"fold_pat_ident","","",304,{"i":[{"n":"self"},{"n":"patident"}],"o":{"n":"patident"}}],[11,"fold_pat_lit","","",304,{"i":[{"n":"self"},{"n":"patlit"}],"o":{"n":"patlit"}}],[11,"fold_pat_macro","","",304,{"i":[{"n":"self"},{"n":"patmacro"}],"o":{"n":"patmacro"}}],[11,"fold_pat_path","","",304,{"i":[{"n":"self"},{"n":"patpath"}],"o":{"n":"patpath"}}],[11,"fold_pat_range","","",304,{"i":[{"n":"self"},{"n":"patrange"}],"o":{"n":"patrange"}}],[11,"fold_pat_ref","","",304,{"i":[{"n":"self"},{"n":"patref"}],"o":{"n":"patref"}}],[11,"fold_pat_slice","","",304,{"i":[{"n":"self"},{"n":"patslice"}],"o":{"n":"patslice"}}],[11,"fold_pat_struct","","",304,{"i":[{"n":"self"},{"n":"patstruct"}],"o":{"n":"patstruct"}}],[11,"fold_pat_tuple","","",304,{"i":[{"n":"self"},{"n":"pattuple"}],"o":{"n":"pattuple"}}],[11,"fold_pat_tuple_struct","","",304,{"i":[{"n":"self"},{"n":"pattuplestruct"}],"o":{"n":"pattuplestruct"}}],[11,"fold_pat_verbatim","","",304,{"i":[{"n":"self"},{"n":"patverbatim"}],"o":{"n":"patverbatim"}}],[11,"fold_pat_wild","","",304,{"i":[{"n":"self"},{"n":"patwild"}],"o":{"n":"patwild"}}],[11,"fold_path","","",304,{"i":[{"n":"self"},{"n":"path"}],"o":{"n":"path"}}],[11,"fold_path_arguments","","",304,{"i":[{"n":"self"},{"n":"patharguments"}],"o":{"n":"patharguments"}}],[11,"fold_path_segment","","",304,{"i":[{"n":"self"},{"n":"pathsegment"}],"o":{"n":"pathsegment"}}],[11,"fold_predicate_eq","","",304,{"i":[{"n":"self"},{"n":"predicateeq"}],"o":{"n":"predicateeq"}}],[11,"fold_predicate_lifetime","","",304,{"i":[{"n":"self"},{"n":"predicatelifetime"}],"o":{"n":"predicatelifetime"}}],[11,"fold_predicate_type","","",304,{"i":[{"n":"self"},{"n":"predicatetype"}],"o":{"n":"predicatetype"}}],[11,"fold_qself","","",304,{"i":[{"n":"self"},{"n":"qself"}],"o":{"n":"qself"}}],[11,"fold_range_limits","","",304,{"i":[{"n":"self"},{"n":"rangelimits"}],"o":{"n":"rangelimits"}}],[11,"fold_return_type","","",304,{"i":[{"n":"self"},{"n":"returntype"}],"o":{"n":"returntype"}}],[11,"fold_span","","",304,{"i":[{"n":"self"},{"n":"span"}],"o":{"n":"span"}}],[11,"fold_stmt","","",304,{"i":[{"n":"self"},{"n":"stmt"}],"o":{"n":"stmt"}}],[11,"fold_trait_bound","","",304,{"i":[{"n":"self"},{"n":"traitbound"}],"o":{"n":"traitbound"}}],[11,"fold_trait_bound_modifier","","",304,{"i":[{"n":"self"},{"n":"traitboundmodifier"}],"o":{"n":"traitboundmodifier"}}],[11,"fold_trait_item","","",304,{"i":[{"n":"self"},{"n":"traititem"}],"o":{"n":"traititem"}}],[11,"fold_trait_item_const","","",304,{"i":[{"n":"self"},{"n":"traititemconst"}],"o":{"n":"traititemconst"}}],[11,"fold_trait_item_macro","","",304,{"i":[{"n":"self"},{"n":"traititemmacro"}],"o":{"n":"traititemmacro"}}],[11,"fold_trait_item_method","","",304,{"i":[{"n":"self"},{"n":"traititemmethod"}],"o":{"n":"traititemmethod"}}],[11,"fold_trait_item_type","","",304,{"i":[{"n":"self"},{"n":"traititemtype"}],"o":{"n":"traititemtype"}}],[11,"fold_trait_item_verbatim","","",304,{"i":[{"n":"self"},{"n":"traititemverbatim"}],"o":{"n":"traititemverbatim"}}],[11,"fold_type","","",304,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"type"}}],[11,"fold_type_array","","",304,{"i":[{"n":"self"},{"n":"typearray"}],"o":{"n":"typearray"}}],[11,"fold_type_bare_fn","","",304,{"i":[{"n":"self"},{"n":"typebarefn"}],"o":{"n":"typebarefn"}}],[11,"fold_type_group","","",304,{"i":[{"n":"self"},{"n":"typegroup"}],"o":{"n":"typegroup"}}],[11,"fold_type_impl_trait","","",304,{"i":[{"n":"self"},{"n":"typeimpltrait"}],"o":{"n":"typeimpltrait"}}],[11,"fold_type_infer","","",304,{"i":[{"n":"self"},{"n":"typeinfer"}],"o":{"n":"typeinfer"}}],[11,"fold_type_macro","","",304,{"i":[{"n":"self"},{"n":"typemacro"}],"o":{"n":"typemacro"}}],[11,"fold_type_never","","",304,{"i":[{"n":"self"},{"n":"typenever"}],"o":{"n":"typenever"}}],[11,"fold_type_param","","",304,{"i":[{"n":"self"},{"n":"typeparam"}],"o":{"n":"typeparam"}}],[11,"fold_type_param_bound","","",304,{"i":[{"n":"self"},{"n":"typeparambound"}],"o":{"n":"typeparambound"}}],[11,"fold_type_paren","","",304,{"i":[{"n":"self"},{"n":"typeparen"}],"o":{"n":"typeparen"}}],[11,"fold_type_path","","",304,{"i":[{"n":"self"},{"n":"typepath"}],"o":{"n":"typepath"}}],[11,"fold_type_ptr","","",304,{"i":[{"n":"self"},{"n":"typeptr"}],"o":{"n":"typeptr"}}],[11,"fold_type_reference","","",304,{"i":[{"n":"self"},{"n":"typereference"}],"o":{"n":"typereference"}}],[11,"fold_type_slice","","",304,{"i":[{"n":"self"},{"n":"typeslice"}],"o":{"n":"typeslice"}}],[11,"fold_type_trait_object","","",304,{"i":[{"n":"self"},{"n":"typetraitobject"}],"o":{"n":"typetraitobject"}}],[11,"fold_type_tuple","","",304,{"i":[{"n":"self"},{"n":"typetuple"}],"o":{"n":"typetuple"}}],[11,"fold_type_verbatim","","",304,{"i":[{"n":"self"},{"n":"typeverbatim"}],"o":{"n":"typeverbatim"}}],[11,"fold_un_op","","",304,{"i":[{"n":"self"},{"n":"unop"}],"o":{"n":"unop"}}],[11,"fold_use_glob","","",304,{"i":[{"n":"self"},{"n":"useglob"}],"o":{"n":"useglob"}}],[11,"fold_use_group","","",304,{"i":[{"n":"self"},{"n":"usegroup"}],"o":{"n":"usegroup"}}],[11,"fold_use_name","","",304,{"i":[{"n":"self"},{"n":"usename"}],"o":{"n":"usename"}}],[11,"fold_use_path","","",304,{"i":[{"n":"self"},{"n":"usepath"}],"o":{"n":"usepath"}}],[11,"fold_use_rename","","",304,{"i":[{"n":"self"},{"n":"userename"}],"o":{"n":"userename"}}],[11,"fold_use_tree","","",304,{"i":[{"n":"self"},{"n":"usetree"}],"o":{"n":"usetree"}}],[11,"fold_variant","","",304,{"i":[{"n":"self"},{"n":"variant"}],"o":{"n":"variant"}}],[11,"fold_vis_crate","","",304,{"i":[{"n":"self"},{"n":"viscrate"}],"o":{"n":"viscrate"}}],[11,"fold_vis_public","","",304,{"i":[{"n":"self"},{"n":"vispublic"}],"o":{"n":"vispublic"}}],[11,"fold_vis_restricted","","",304,{"i":[{"n":"self"},{"n":"visrestricted"}],"o":{"n":"visrestricted"}}],[11,"fold_visibility","","",304,{"i":[{"n":"self"},{"n":"visibility"}],"o":{"n":"visibility"}}],[11,"fold_where_clause","","",304,{"i":[{"n":"self"},{"n":"whereclause"}],"o":{"n":"whereclause"}}],[11,"fold_where_predicate","","",304,{"i":[{"n":"self"},{"n":"wherepredicate"}],"o":{"n":"wherepredicate"}}],[11,"fmt","syn::synom","",305,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",305,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",305,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[14,"named","syn","Define a parser function with the signature expected by syn parser combinators.",null,null],[14,"call","","Invoke the given parser function with zero or more arguments.",null,null],[14,"map","","Transform the result of a parser by applying a function or closure.",null,null],[14,"not","","Invert the result of a parser by parsing successfully if the given parser fails to parse and vice versa.",null,null],[14,"cond","","Execute a parser only if a condition is met, otherwise return None.",null,null],[14,"cond_reduce","","Execute a parser only if a condition is met, otherwise fail to parse.",null,null],[14,"many0","","Parse zero or more values using the given parser.",null,null],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",null,null],[14,"value","","Produce the given value without parsing anything.",null,null],[14,"reject","","Unconditionally fail to parse anything.",null,null],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",null,null],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",null,null],[14,"do_parse","","Run a series of parsers, optionally naming each intermediate result, followed by a step to combine the intermediate results.",null,null],[14,"input_end","","Parse nothing and succeed only if the end of the enclosing block has been reached.",null,null],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",null,null],[14,"epsilon","","Parses nothing and always succeeds.",null,null],[14,"syn","","Parse any type that implements the `Synom` trait.",null,null],[14,"custom_keyword","","Parse the given word as a keyword.",null,null],[14,"parens","","Parse inside of `(` `)` parentheses.",null,null],[14,"brackets","","Parse inside of `[` `]` square brackets.",null,null],[14,"braces","","Parse inside of `{` `}` curly braces.",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type representation of a given token.",null,null],[14,"punct","","Parse a single Rust punctuation token.",null,null],[14,"keyword","","Parse a single Rust keyword token.",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the [`quote!`] macro but uses type inference to figure out a return type for those tokens.",null,null],[11,"visit_abi","syn::visit","",303,{"i":[{"n":"self"},{"n":"abi"}]}],[11,"visit_angle_bracketed_generic_arguments","","",303,{"i":[{"n":"self"},{"n":"anglebracketedgenericarguments"}]}],[11,"visit_arg_captured","","",303,{"i":[{"n":"self"},{"n":"argcaptured"}]}],[11,"visit_arg_self","","",303,{"i":[{"n":"self"},{"n":"argself"}]}],[11,"visit_arg_self_ref","","",303,{"i":[{"n":"self"},{"n":"argselfref"}]}],[11,"visit_arm","","",303,{"i":[{"n":"self"},{"n":"arm"}]}],[11,"visit_attr_style","","",303,{"i":[{"n":"self"},{"n":"attrstyle"}]}],[11,"visit_attribute","","",303,{"i":[{"n":"self"},{"n":"attribute"}]}],[11,"visit_bare_fn_arg","","",303,{"i":[{"n":"self"},{"n":"barefnarg"}]}],[11,"visit_bare_fn_arg_name","","",303,{"i":[{"n":"self"},{"n":"barefnargname"}]}],[11,"visit_bin_op","","",303,{"i":[{"n":"self"},{"n":"binop"}]}],[11,"visit_binding","","",303,{"i":[{"n":"self"},{"n":"binding"}]}],[11,"visit_block","","",303,{"i":[{"n":"self"},{"n":"block"}]}],[11,"visit_bound_lifetimes","","",303,{"i":[{"n":"self"},{"n":"boundlifetimes"}]}],[11,"visit_const_param","","",303,{"i":[{"n":"self"},{"n":"constparam"}]}],[11,"visit_data","","",303,{"i":[{"n":"self"},{"n":"data"}]}],[11,"visit_data_enum","","",303,{"i":[{"n":"self"},{"n":"dataenum"}]}],[11,"visit_data_struct","","",303,{"i":[{"n":"self"},{"n":"datastruct"}]}],[11,"visit_data_union","","",303,{"i":[{"n":"self"},{"n":"dataunion"}]}],[11,"visit_derive_input","","",303,{"i":[{"n":"self"},{"n":"deriveinput"}]}],[11,"visit_expr","","",303,{"i":[{"n":"self"},{"n":"expr"}]}],[11,"visit_expr_array","","",303,{"i":[{"n":"self"},{"n":"exprarray"}]}],[11,"visit_expr_assign","","",303,{"i":[{"n":"self"},{"n":"exprassign"}]}],[11,"visit_expr_assign_op","","",303,{"i":[{"n":"self"},{"n":"exprassignop"}]}],[11,"visit_expr_binary","","",303,{"i":[{"n":"self"},{"n":"exprbinary"}]}],[11,"visit_expr_block","","",303,{"i":[{"n":"self"},{"n":"exprblock"}]}],[11,"visit_expr_box","","",303,{"i":[{"n":"self"},{"n":"exprbox"}]}],[11,"visit_expr_break","","",303,{"i":[{"n":"self"},{"n":"exprbreak"}]}],[11,"visit_expr_call","","",303,{"i":[{"n":"self"},{"n":"exprcall"}]}],[11,"visit_expr_cast","","",303,{"i":[{"n":"self"},{"n":"exprcast"}]}],[11,"visit_expr_catch","","",303,{"i":[{"n":"self"},{"n":"exprcatch"}]}],[11,"visit_expr_closure","","",303,{"i":[{"n":"self"},{"n":"exprclosure"}]}],[11,"visit_expr_continue","","",303,{"i":[{"n":"self"},{"n":"exprcontinue"}]}],[11,"visit_expr_field","","",303,{"i":[{"n":"self"},{"n":"exprfield"}]}],[11,"visit_expr_for_loop","","",303,{"i":[{"n":"self"},{"n":"exprforloop"}]}],[11,"visit_expr_group","","",303,{"i":[{"n":"self"},{"n":"exprgroup"}]}],[11,"visit_expr_if","","",303,{"i":[{"n":"self"},{"n":"exprif"}]}],[11,"visit_expr_if_let","","",303,{"i":[{"n":"self"},{"n":"expriflet"}]}],[11,"visit_expr_in_place","","",303,{"i":[{"n":"self"},{"n":"exprinplace"}]}],[11,"visit_expr_index","","",303,{"i":[{"n":"self"},{"n":"exprindex"}]}],[11,"visit_expr_lit","","",303,{"i":[{"n":"self"},{"n":"exprlit"}]}],[11,"visit_expr_loop","","",303,{"i":[{"n":"self"},{"n":"exprloop"}]}],[11,"visit_expr_macro","","",303,{"i":[{"n":"self"},{"n":"exprmacro"}]}],[11,"visit_expr_match","","",303,{"i":[{"n":"self"},{"n":"exprmatch"}]}],[11,"visit_expr_method_call","","",303,{"i":[{"n":"self"},{"n":"exprmethodcall"}]}],[11,"visit_expr_paren","","",303,{"i":[{"n":"self"},{"n":"exprparen"}]}],[11,"visit_expr_path","","",303,{"i":[{"n":"self"},{"n":"exprpath"}]}],[11,"visit_expr_range","","",303,{"i":[{"n":"self"},{"n":"exprrange"}]}],[11,"visit_expr_reference","","",303,{"i":[{"n":"self"},{"n":"exprreference"}]}],[11,"visit_expr_repeat","","",303,{"i":[{"n":"self"},{"n":"exprrepeat"}]}],[11,"visit_expr_return","","",303,{"i":[{"n":"self"},{"n":"exprreturn"}]}],[11,"visit_expr_struct","","",303,{"i":[{"n":"self"},{"n":"exprstruct"}]}],[11,"visit_expr_try","","",303,{"i":[{"n":"self"},{"n":"exprtry"}]}],[11,"visit_expr_tuple","","",303,{"i":[{"n":"self"},{"n":"exprtuple"}]}],[11,"visit_expr_type","","",303,{"i":[{"n":"self"},{"n":"exprtype"}]}],[11,"visit_expr_unary","","",303,{"i":[{"n":"self"},{"n":"exprunary"}]}],[11,"visit_expr_unsafe","","",303,{"i":[{"n":"self"},{"n":"exprunsafe"}]}],[11,"visit_expr_verbatim","","",303,{"i":[{"n":"self"},{"n":"exprverbatim"}]}],[11,"visit_expr_while","","",303,{"i":[{"n":"self"},{"n":"exprwhile"}]}],[11,"visit_expr_while_let","","",303,{"i":[{"n":"self"},{"n":"exprwhilelet"}]}],[11,"visit_expr_yield","","",303,{"i":[{"n":"self"},{"n":"expryield"}]}],[11,"visit_field","","",303,{"i":[{"n":"self"},{"n":"field"}]}],[11,"visit_field_pat","","",303,{"i":[{"n":"self"},{"n":"fieldpat"}]}],[11,"visit_field_value","","",303,{"i":[{"n":"self"},{"n":"fieldvalue"}]}],[11,"visit_fields","","",303,{"i":[{"n":"self"},{"n":"fields"}]}],[11,"visit_fields_named","","",303,{"i":[{"n":"self"},{"n":"fieldsnamed"}]}],[11,"visit_fields_unnamed","","",303,{"i":[{"n":"self"},{"n":"fieldsunnamed"}]}],[11,"visit_file","","",303,{"i":[{"n":"self"},{"n":"file"}]}],[11,"visit_fn_arg","","",303,{"i":[{"n":"self"},{"n":"fnarg"}]}],[11,"visit_fn_decl","","",303,{"i":[{"n":"self"},{"n":"fndecl"}]}],[11,"visit_foreign_item","","",303,{"i":[{"n":"self"},{"n":"foreignitem"}]}],[11,"visit_foreign_item_fn","","",303,{"i":[{"n":"self"},{"n":"foreignitemfn"}]}],[11,"visit_foreign_item_static","","",303,{"i":[{"n":"self"},{"n":"foreignitemstatic"}]}],[11,"visit_foreign_item_type","","",303,{"i":[{"n":"self"},{"n":"foreignitemtype"}]}],[11,"visit_foreign_item_verbatim","","",303,{"i":[{"n":"self"},{"n":"foreignitemverbatim"}]}],[11,"visit_generic_argument","","",303,{"i":[{"n":"self"},{"n":"genericargument"}]}],[11,"visit_generic_method_argument","","",303,{"i":[{"n":"self"},{"n":"genericmethodargument"}]}],[11,"visit_generic_param","","",303,{"i":[{"n":"self"},{"n":"genericparam"}]}],[11,"visit_generics","","",303,{"i":[{"n":"self"},{"n":"generics"}]}],[11,"visit_ident","","",303,{"i":[{"n":"self"},{"n":"ident"}]}],[11,"visit_impl_item","","",303,{"i":[{"n":"self"},{"n":"implitem"}]}],[11,"visit_impl_item_const","","",303,{"i":[{"n":"self"},{"n":"implitemconst"}]}],[11,"visit_impl_item_macro","","",303,{"i":[{"n":"self"},{"n":"implitemmacro"}]}],[11,"visit_impl_item_method","","",303,{"i":[{"n":"self"},{"n":"implitemmethod"}]}],[11,"visit_impl_item_type","","",303,{"i":[{"n":"self"},{"n":"implitemtype"}]}],[11,"visit_impl_item_verbatim","","",303,{"i":[{"n":"self"},{"n":"implitemverbatim"}]}],[11,"visit_index","","",303,{"i":[{"n":"self"},{"n":"index"}]}],[11,"visit_item","","",303,{"i":[{"n":"self"},{"n":"item"}]}],[11,"visit_item_const","","",303,{"i":[{"n":"self"},{"n":"itemconst"}]}],[11,"visit_item_enum","","",303,{"i":[{"n":"self"},{"n":"itemenum"}]}],[11,"visit_item_extern_crate","","",303,{"i":[{"n":"self"},{"n":"itemexterncrate"}]}],[11,"visit_item_fn","","",303,{"i":[{"n":"self"},{"n":"itemfn"}]}],[11,"visit_item_foreign_mod","","",303,{"i":[{"n":"self"},{"n":"itemforeignmod"}]}],[11,"visit_item_impl","","",303,{"i":[{"n":"self"},{"n":"itemimpl"}]}],[11,"visit_item_macro","","",303,{"i":[{"n":"self"},{"n":"itemmacro"}]}],[11,"visit_item_macro2","","",303,{"i":[{"n":"self"},{"n":"itemmacro2"}]}],[11,"visit_item_mod","","",303,{"i":[{"n":"self"},{"n":"itemmod"}]}],[11,"visit_item_static","","",303,{"i":[{"n":"self"},{"n":"itemstatic"}]}],[11,"visit_item_struct","","",303,{"i":[{"n":"self"},{"n":"itemstruct"}]}],[11,"visit_item_trait","","",303,{"i":[{"n":"self"},{"n":"itemtrait"}]}],[11,"visit_item_type","","",303,{"i":[{"n":"self"},{"n":"itemtype"}]}],[11,"visit_item_union","","",303,{"i":[{"n":"self"},{"n":"itemunion"}]}],[11,"visit_item_use","","",303,{"i":[{"n":"self"},{"n":"itemuse"}]}],[11,"visit_item_verbatim","","",303,{"i":[{"n":"self"},{"n":"itemverbatim"}]}],[11,"visit_label","","",303,{"i":[{"n":"self"},{"n":"label"}]}],[11,"visit_lifetime","","",303,{"i":[{"n":"self"},{"n":"lifetime"}]}],[11,"visit_lifetime_def","","",303,{"i":[{"n":"self"},{"n":"lifetimedef"}]}],[11,"visit_lit","","",303,{"i":[{"n":"self"},{"n":"lit"}]}],[11,"visit_lit_bool","","",303,{"i":[{"n":"self"},{"n":"litbool"}]}],[11,"visit_lit_byte","","",303,{"i":[{"n":"self"},{"n":"litbyte"}]}],[11,"visit_lit_byte_str","","",303,{"i":[{"n":"self"},{"n":"litbytestr"}]}],[11,"visit_lit_char","","",303,{"i":[{"n":"self"},{"n":"litchar"}]}],[11,"visit_lit_float","","",303,{"i":[{"n":"self"},{"n":"litfloat"}]}],[11,"visit_lit_int","","",303,{"i":[{"n":"self"},{"n":"litint"}]}],[11,"visit_lit_str","","",303,{"i":[{"n":"self"},{"n":"litstr"}]}],[11,"visit_lit_verbatim","","",303,{"i":[{"n":"self"},{"n":"litverbatim"}]}],[11,"visit_local","","",303,{"i":[{"n":"self"},{"n":"local"}]}],[11,"visit_macro","","",303,{"i":[{"n":"self"},{"n":"macro"}]}],[11,"visit_macro_delimiter","","",303,{"i":[{"n":"self"},{"n":"macrodelimiter"}]}],[11,"visit_member","","",303,{"i":[{"n":"self"},{"n":"member"}]}],[11,"visit_meta","","",303,{"i":[{"n":"self"},{"n":"meta"}]}],[11,"visit_meta_list","","",303,{"i":[{"n":"self"},{"n":"metalist"}]}],[11,"visit_meta_name_value","","",303,{"i":[{"n":"self"},{"n":"metanamevalue"}]}],[11,"visit_method_sig","","",303,{"i":[{"n":"self"},{"n":"methodsig"}]}],[11,"visit_method_turbofish","","",303,{"i":[{"n":"self"},{"n":"methodturbofish"}]}],[11,"visit_nested_meta","","",303,{"i":[{"n":"self"},{"n":"nestedmeta"}]}],[11,"visit_parenthesized_generic_arguments","","",303,{"i":[{"n":"self"},{"n":"parenthesizedgenericarguments"}]}],[11,"visit_pat","","",303,{"i":[{"n":"self"},{"n":"pat"}]}],[11,"visit_pat_box","","",303,{"i":[{"n":"self"},{"n":"patbox"}]}],[11,"visit_pat_ident","","",303,{"i":[{"n":"self"},{"n":"patident"}]}],[11,"visit_pat_lit","","",303,{"i":[{"n":"self"},{"n":"patlit"}]}],[11,"visit_pat_macro","","",303,{"i":[{"n":"self"},{"n":"patmacro"}]}],[11,"visit_pat_path","","",303,{"i":[{"n":"self"},{"n":"patpath"}]}],[11,"visit_pat_range","","",303,{"i":[{"n":"self"},{"n":"patrange"}]}],[11,"visit_pat_ref","","",303,{"i":[{"n":"self"},{"n":"patref"}]}],[11,"visit_pat_slice","","",303,{"i":[{"n":"self"},{"n":"patslice"}]}],[11,"visit_pat_struct","","",303,{"i":[{"n":"self"},{"n":"patstruct"}]}],[11,"visit_pat_tuple","","",303,{"i":[{"n":"self"},{"n":"pattuple"}]}],[11,"visit_pat_tuple_struct","","",303,{"i":[{"n":"self"},{"n":"pattuplestruct"}]}],[11,"visit_pat_verbatim","","",303,{"i":[{"n":"self"},{"n":"patverbatim"}]}],[11,"visit_pat_wild","","",303,{"i":[{"n":"self"},{"n":"patwild"}]}],[11,"visit_path","","",303,{"i":[{"n":"self"},{"n":"path"}]}],[11,"visit_path_arguments","","",303,{"i":[{"n":"self"},{"n":"patharguments"}]}],[11,"visit_path_segment","","",303,{"i":[{"n":"self"},{"n":"pathsegment"}]}],[11,"visit_predicate_eq","","",303,{"i":[{"n":"self"},{"n":"predicateeq"}]}],[11,"visit_predicate_lifetime","","",303,{"i":[{"n":"self"},{"n":"predicatelifetime"}]}],[11,"visit_predicate_type","","",303,{"i":[{"n":"self"},{"n":"predicatetype"}]}],[11,"visit_qself","","",303,{"i":[{"n":"self"},{"n":"qself"}]}],[11,"visit_range_limits","","",303,{"i":[{"n":"self"},{"n":"rangelimits"}]}],[11,"visit_return_type","","",303,{"i":[{"n":"self"},{"n":"returntype"}]}],[11,"visit_span","","",303,{"i":[{"n":"self"},{"n":"span"}]}],[11,"visit_stmt","","",303,{"i":[{"n":"self"},{"n":"stmt"}]}],[11,"visit_trait_bound","","",303,{"i":[{"n":"self"},{"n":"traitbound"}]}],[11,"visit_trait_bound_modifier","","",303,{"i":[{"n":"self"},{"n":"traitboundmodifier"}]}],[11,"visit_trait_item","","",303,{"i":[{"n":"self"},{"n":"traititem"}]}],[11,"visit_trait_item_const","","",303,{"i":[{"n":"self"},{"n":"traititemconst"}]}],[11,"visit_trait_item_macro","","",303,{"i":[{"n":"self"},{"n":"traititemmacro"}]}],[11,"visit_trait_item_method","","",303,{"i":[{"n":"self"},{"n":"traititemmethod"}]}],[11,"visit_trait_item_type","","",303,{"i":[{"n":"self"},{"n":"traititemtype"}]}],[11,"visit_trait_item_verbatim","","",303,{"i":[{"n":"self"},{"n":"traititemverbatim"}]}],[11,"visit_type","","",303,{"i":[{"n":"self"},{"n":"type"}]}],[11,"visit_type_array","","",303,{"i":[{"n":"self"},{"n":"typearray"}]}],[11,"visit_type_bare_fn","","",303,{"i":[{"n":"self"},{"n":"typebarefn"}]}],[11,"visit_type_group","","",303,{"i":[{"n":"self"},{"n":"typegroup"}]}],[11,"visit_type_impl_trait","","",303,{"i":[{"n":"self"},{"n":"typeimpltrait"}]}],[11,"visit_type_infer","","",303,{"i":[{"n":"self"},{"n":"typeinfer"}]}],[11,"visit_type_macro","","",303,{"i":[{"n":"self"},{"n":"typemacro"}]}],[11,"visit_type_never","","",303,{"i":[{"n":"self"},{"n":"typenever"}]}],[11,"visit_type_param","","",303,{"i":[{"n":"self"},{"n":"typeparam"}]}],[11,"visit_type_param_bound","","",303,{"i":[{"n":"self"},{"n":"typeparambound"}]}],[11,"visit_type_paren","","",303,{"i":[{"n":"self"},{"n":"typeparen"}]}],[11,"visit_type_path","","",303,{"i":[{"n":"self"},{"n":"typepath"}]}],[11,"visit_type_ptr","","",303,{"i":[{"n":"self"},{"n":"typeptr"}]}],[11,"visit_type_reference","","",303,{"i":[{"n":"self"},{"n":"typereference"}]}],[11,"visit_type_slice","","",303,{"i":[{"n":"self"},{"n":"typeslice"}]}],[11,"visit_type_trait_object","","",303,{"i":[{"n":"self"},{"n":"typetraitobject"}]}],[11,"visit_type_tuple","","",303,{"i":[{"n":"self"},{"n":"typetuple"}]}],[11,"visit_type_verbatim","","",303,{"i":[{"n":"self"},{"n":"typeverbatim"}]}],[11,"visit_un_op","","",303,{"i":[{"n":"self"},{"n":"unop"}]}],[11,"visit_use_glob","","",303,{"i":[{"n":"self"},{"n":"useglob"}]}],[11,"visit_use_group","","",303,{"i":[{"n":"self"},{"n":"usegroup"}]}],[11,"visit_use_name","","",303,{"i":[{"n":"self"},{"n":"usename"}]}],[11,"visit_use_path","","",303,{"i":[{"n":"self"},{"n":"usepath"}]}],[11,"visit_use_rename","","",303,{"i":[{"n":"self"},{"n":"userename"}]}],[11,"visit_use_tree","","",303,{"i":[{"n":"self"},{"n":"usetree"}]}],[11,"visit_variant","","",303,{"i":[{"n":"self"},{"n":"variant"}]}],[11,"visit_vis_crate","","",303,{"i":[{"n":"self"},{"n":"viscrate"}]}],[11,"visit_vis_public","","",303,{"i":[{"n":"self"},{"n":"vispublic"}]}],[11,"visit_vis_restricted","","",303,{"i":[{"n":"self"},{"n":"visrestricted"}]}],[11,"visit_visibility","","",303,{"i":[{"n":"self"},{"n":"visibility"}]}],[11,"visit_where_clause","","",303,{"i":[{"n":"self"},{"n":"whereclause"}]}],[11,"visit_where_predicate","","",303,{"i":[{"n":"self"},{"n":"wherepredicate"}]}],[11,"fold_abi","syn::fold","",304,{"i":[{"n":"self"},{"n":"abi"}],"o":{"n":"abi"}}],[11,"fold_angle_bracketed_generic_arguments","","",304,{"i":[{"n":"self"},{"n":"anglebracketedgenericarguments"}],"o":{"n":"anglebracketedgenericarguments"}}],[11,"fold_arg_captured","","",304,{"i":[{"n":"self"},{"n":"argcaptured"}],"o":{"n":"argcaptured"}}],[11,"fold_arg_self","","",304,{"i":[{"n":"self"},{"n":"argself"}],"o":{"n":"argself"}}],[11,"fold_arg_self_ref","","",304,{"i":[{"n":"self"},{"n":"argselfref"}],"o":{"n":"argselfref"}}],[11,"fold_arm","","",304,{"i":[{"n":"self"},{"n":"arm"}],"o":{"n":"arm"}}],[11,"fold_attr_style","","",304,{"i":[{"n":"self"},{"n":"attrstyle"}],"o":{"n":"attrstyle"}}],[11,"fold_attribute","","",304,{"i":[{"n":"self"},{"n":"attribute"}],"o":{"n":"attribute"}}],[11,"fold_bare_fn_arg","","",304,{"i":[{"n":"self"},{"n":"barefnarg"}],"o":{"n":"barefnarg"}}],[11,"fold_bare_fn_arg_name","","",304,{"i":[{"n":"self"},{"n":"barefnargname"}],"o":{"n":"barefnargname"}}],[11,"fold_bin_op","","",304,{"i":[{"n":"self"},{"n":"binop"}],"o":{"n":"binop"}}],[11,"fold_binding","","",304,{"i":[{"n":"self"},{"n":"binding"}],"o":{"n":"binding"}}],[11,"fold_block","","",304,{"i":[{"n":"self"},{"n":"block"}],"o":{"n":"block"}}],[11,"fold_bound_lifetimes","","",304,{"i":[{"n":"self"},{"n":"boundlifetimes"}],"o":{"n":"boundlifetimes"}}],[11,"fold_const_param","","",304,{"i":[{"n":"self"},{"n":"constparam"}],"o":{"n":"constparam"}}],[11,"fold_data","","",304,{"i":[{"n":"self"},{"n":"data"}],"o":{"n":"data"}}],[11,"fold_data_enum","","",304,{"i":[{"n":"self"},{"n":"dataenum"}],"o":{"n":"dataenum"}}],[11,"fold_data_struct","","",304,{"i":[{"n":"self"},{"n":"datastruct"}],"o":{"n":"datastruct"}}],[11,"fold_data_union","","",304,{"i":[{"n":"self"},{"n":"dataunion"}],"o":{"n":"dataunion"}}],[11,"fold_derive_input","","",304,{"i":[{"n":"self"},{"n":"deriveinput"}],"o":{"n":"deriveinput"}}],[11,"fold_expr","","",304,{"i":[{"n":"self"},{"n":"expr"}],"o":{"n":"expr"}}],[11,"fold_expr_array","","",304,{"i":[{"n":"self"},{"n":"exprarray"}],"o":{"n":"exprarray"}}],[11,"fold_expr_assign","","",304,{"i":[{"n":"self"},{"n":"exprassign"}],"o":{"n":"exprassign"}}],[11,"fold_expr_assign_op","","",304,{"i":[{"n":"self"},{"n":"exprassignop"}],"o":{"n":"exprassignop"}}],[11,"fold_expr_binary","","",304,{"i":[{"n":"self"},{"n":"exprbinary"}],"o":{"n":"exprbinary"}}],[11,"fold_expr_block","","",304,{"i":[{"n":"self"},{"n":"exprblock"}],"o":{"n":"exprblock"}}],[11,"fold_expr_box","","",304,{"i":[{"n":"self"},{"n":"exprbox"}],"o":{"n":"exprbox"}}],[11,"fold_expr_break","","",304,{"i":[{"n":"self"},{"n":"exprbreak"}],"o":{"n":"exprbreak"}}],[11,"fold_expr_call","","",304,{"i":[{"n":"self"},{"n":"exprcall"}],"o":{"n":"exprcall"}}],[11,"fold_expr_cast","","",304,{"i":[{"n":"self"},{"n":"exprcast"}],"o":{"n":"exprcast"}}],[11,"fold_expr_catch","","",304,{"i":[{"n":"self"},{"n":"exprcatch"}],"o":{"n":"exprcatch"}}],[11,"fold_expr_closure","","",304,{"i":[{"n":"self"},{"n":"exprclosure"}],"o":{"n":"exprclosure"}}],[11,"fold_expr_continue","","",304,{"i":[{"n":"self"},{"n":"exprcontinue"}],"o":{"n":"exprcontinue"}}],[11,"fold_expr_field","","",304,{"i":[{"n":"self"},{"n":"exprfield"}],"o":{"n":"exprfield"}}],[11,"fold_expr_for_loop","","",304,{"i":[{"n":"self"},{"n":"exprforloop"}],"o":{"n":"exprforloop"}}],[11,"fold_expr_group","","",304,{"i":[{"n":"self"},{"n":"exprgroup"}],"o":{"n":"exprgroup"}}],[11,"fold_expr_if","","",304,{"i":[{"n":"self"},{"n":"exprif"}],"o":{"n":"exprif"}}],[11,"fold_expr_if_let","","",304,{"i":[{"n":"self"},{"n":"expriflet"}],"o":{"n":"expriflet"}}],[11,"fold_expr_in_place","","",304,{"i":[{"n":"self"},{"n":"exprinplace"}],"o":{"n":"exprinplace"}}],[11,"fold_expr_index","","",304,{"i":[{"n":"self"},{"n":"exprindex"}],"o":{"n":"exprindex"}}],[11,"fold_expr_lit","","",304,{"i":[{"n":"self"},{"n":"exprlit"}],"o":{"n":"exprlit"}}],[11,"fold_expr_loop","","",304,{"i":[{"n":"self"},{"n":"exprloop"}],"o":{"n":"exprloop"}}],[11,"fold_expr_macro","","",304,{"i":[{"n":"self"},{"n":"exprmacro"}],"o":{"n":"exprmacro"}}],[11,"fold_expr_match","","",304,{"i":[{"n":"self"},{"n":"exprmatch"}],"o":{"n":"exprmatch"}}],[11,"fold_expr_method_call","","",304,{"i":[{"n":"self"},{"n":"exprmethodcall"}],"o":{"n":"exprmethodcall"}}],[11,"fold_expr_paren","","",304,{"i":[{"n":"self"},{"n":"exprparen"}],"o":{"n":"exprparen"}}],[11,"fold_expr_path","","",304,{"i":[{"n":"self"},{"n":"exprpath"}],"o":{"n":"exprpath"}}],[11,"fold_expr_range","","",304,{"i":[{"n":"self"},{"n":"exprrange"}],"o":{"n":"exprrange"}}],[11,"fold_expr_reference","","",304,{"i":[{"n":"self"},{"n":"exprreference"}],"o":{"n":"exprreference"}}],[11,"fold_expr_repeat","","",304,{"i":[{"n":"self"},{"n":"exprrepeat"}],"o":{"n":"exprrepeat"}}],[11,"fold_expr_return","","",304,{"i":[{"n":"self"},{"n":"exprreturn"}],"o":{"n":"exprreturn"}}],[11,"fold_expr_struct","","",304,{"i":[{"n":"self"},{"n":"exprstruct"}],"o":{"n":"exprstruct"}}],[11,"fold_expr_try","","",304,{"i":[{"n":"self"},{"n":"exprtry"}],"o":{"n":"exprtry"}}],[11,"fold_expr_tuple","","",304,{"i":[{"n":"self"},{"n":"exprtuple"}],"o":{"n":"exprtuple"}}],[11,"fold_expr_type","","",304,{"i":[{"n":"self"},{"n":"exprtype"}],"o":{"n":"exprtype"}}],[11,"fold_expr_unary","","",304,{"i":[{"n":"self"},{"n":"exprunary"}],"o":{"n":"exprunary"}}],[11,"fold_expr_unsafe","","",304,{"i":[{"n":"self"},{"n":"exprunsafe"}],"o":{"n":"exprunsafe"}}],[11,"fold_expr_verbatim","","",304,{"i":[{"n":"self"},{"n":"exprverbatim"}],"o":{"n":"exprverbatim"}}],[11,"fold_expr_while","","",304,{"i":[{"n":"self"},{"n":"exprwhile"}],"o":{"n":"exprwhile"}}],[11,"fold_expr_while_let","","",304,{"i":[{"n":"self"},{"n":"exprwhilelet"}],"o":{"n":"exprwhilelet"}}],[11,"fold_expr_yield","","",304,{"i":[{"n":"self"},{"n":"expryield"}],"o":{"n":"expryield"}}],[11,"fold_field","","",304,{"i":[{"n":"self"},{"n":"field"}],"o":{"n":"field"}}],[11,"fold_field_pat","","",304,{"i":[{"n":"self"},{"n":"fieldpat"}],"o":{"n":"fieldpat"}}],[11,"fold_field_value","","",304,{"i":[{"n":"self"},{"n":"fieldvalue"}],"o":{"n":"fieldvalue"}}],[11,"fold_fields","","",304,{"i":[{"n":"self"},{"n":"fields"}],"o":{"n":"fields"}}],[11,"fold_fields_named","","",304,{"i":[{"n":"self"},{"n":"fieldsnamed"}],"o":{"n":"fieldsnamed"}}],[11,"fold_fields_unnamed","","",304,{"i":[{"n":"self"},{"n":"fieldsunnamed"}],"o":{"n":"fieldsunnamed"}}],[11,"fold_file","","",304,{"i":[{"n":"self"},{"n":"file"}],"o":{"n":"file"}}],[11,"fold_fn_arg","","",304,{"i":[{"n":"self"},{"n":"fnarg"}],"o":{"n":"fnarg"}}],[11,"fold_fn_decl","","",304,{"i":[{"n":"self"},{"n":"fndecl"}],"o":{"n":"fndecl"}}],[11,"fold_foreign_item","","",304,{"i":[{"n":"self"},{"n":"foreignitem"}],"o":{"n":"foreignitem"}}],[11,"fold_foreign_item_fn","","",304,{"i":[{"n":"self"},{"n":"foreignitemfn"}],"o":{"n":"foreignitemfn"}}],[11,"fold_foreign_item_static","","",304,{"i":[{"n":"self"},{"n":"foreignitemstatic"}],"o":{"n":"foreignitemstatic"}}],[11,"fold_foreign_item_type","","",304,{"i":[{"n":"self"},{"n":"foreignitemtype"}],"o":{"n":"foreignitemtype"}}],[11,"fold_foreign_item_verbatim","","",304,{"i":[{"n":"self"},{"n":"foreignitemverbatim"}],"o":{"n":"foreignitemverbatim"}}],[11,"fold_generic_argument","","",304,{"i":[{"n":"self"},{"n":"genericargument"}],"o":{"n":"genericargument"}}],[11,"fold_generic_method_argument","","",304,{"i":[{"n":"self"},{"n":"genericmethodargument"}],"o":{"n":"genericmethodargument"}}],[11,"fold_generic_param","","",304,{"i":[{"n":"self"},{"n":"genericparam"}],"o":{"n":"genericparam"}}],[11,"fold_generics","","",304,{"i":[{"n":"self"},{"n":"generics"}],"o":{"n":"generics"}}],[11,"fold_ident","","",304,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"ident"}}],[11,"fold_impl_item","","",304,{"i":[{"n":"self"},{"n":"implitem"}],"o":{"n":"implitem"}}],[11,"fold_impl_item_const","","",304,{"i":[{"n":"self"},{"n":"implitemconst"}],"o":{"n":"implitemconst"}}],[11,"fold_impl_item_macro","","",304,{"i":[{"n":"self"},{"n":"implitemmacro"}],"o":{"n":"implitemmacro"}}],[11,"fold_impl_item_method","","",304,{"i":[{"n":"self"},{"n":"implitemmethod"}],"o":{"n":"implitemmethod"}}],[11,"fold_impl_item_type","","",304,{"i":[{"n":"self"},{"n":"implitemtype"}],"o":{"n":"implitemtype"}}],[11,"fold_impl_item_verbatim","","",304,{"i":[{"n":"self"},{"n":"implitemverbatim"}],"o":{"n":"implitemverbatim"}}],[11,"fold_index","","",304,{"i":[{"n":"self"},{"n":"index"}],"o":{"n":"index"}}],[11,"fold_item","","",304,{"i":[{"n":"self"},{"n":"item"}],"o":{"n":"item"}}],[11,"fold_item_const","","",304,{"i":[{"n":"self"},{"n":"itemconst"}],"o":{"n":"itemconst"}}],[11,"fold_item_enum","","",304,{"i":[{"n":"self"},{"n":"itemenum"}],"o":{"n":"itemenum"}}],[11,"fold_item_extern_crate","","",304,{"i":[{"n":"self"},{"n":"itemexterncrate"}],"o":{"n":"itemexterncrate"}}],[11,"fold_item_fn","","",304,{"i":[{"n":"self"},{"n":"itemfn"}],"o":{"n":"itemfn"}}],[11,"fold_item_foreign_mod","","",304,{"i":[{"n":"self"},{"n":"itemforeignmod"}],"o":{"n":"itemforeignmod"}}],[11,"fold_item_impl","","",304,{"i":[{"n":"self"},{"n":"itemimpl"}],"o":{"n":"itemimpl"}}],[11,"fold_item_macro","","",304,{"i":[{"n":"self"},{"n":"itemmacro"}],"o":{"n":"itemmacro"}}],[11,"fold_item_macro2","","",304,{"i":[{"n":"self"},{"n":"itemmacro2"}],"o":{"n":"itemmacro2"}}],[11,"fold_item_mod","","",304,{"i":[{"n":"self"},{"n":"itemmod"}],"o":{"n":"itemmod"}}],[11,"fold_item_static","","",304,{"i":[{"n":"self"},{"n":"itemstatic"}],"o":{"n":"itemstatic"}}],[11,"fold_item_struct","","",304,{"i":[{"n":"self"},{"n":"itemstruct"}],"o":{"n":"itemstruct"}}],[11,"fold_item_trait","","",304,{"i":[{"n":"self"},{"n":"itemtrait"}],"o":{"n":"itemtrait"}}],[11,"fold_item_type","","",304,{"i":[{"n":"self"},{"n":"itemtype"}],"o":{"n":"itemtype"}}],[11,"fold_item_union","","",304,{"i":[{"n":"self"},{"n":"itemunion"}],"o":{"n":"itemunion"}}],[11,"fold_item_use","","",304,{"i":[{"n":"self"},{"n":"itemuse"}],"o":{"n":"itemuse"}}],[11,"fold_item_verbatim","","",304,{"i":[{"n":"self"},{"n":"itemverbatim"}],"o":{"n":"itemverbatim"}}],[11,"fold_label","","",304,{"i":[{"n":"self"},{"n":"label"}],"o":{"n":"label"}}],[11,"fold_lifetime","","",304,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"lifetime"}}],[11,"fold_lifetime_def","","",304,{"i":[{"n":"self"},{"n":"lifetimedef"}],"o":{"n":"lifetimedef"}}],[11,"fold_lit","","",304,{"i":[{"n":"self"},{"n":"lit"}],"o":{"n":"lit"}}],[11,"fold_lit_bool","","",304,{"i":[{"n":"self"},{"n":"litbool"}],"o":{"n":"litbool"}}],[11,"fold_lit_byte","","",304,{"i":[{"n":"self"},{"n":"litbyte"}],"o":{"n":"litbyte"}}],[11,"fold_lit_byte_str","","",304,{"i":[{"n":"self"},{"n":"litbytestr"}],"o":{"n":"litbytestr"}}],[11,"fold_lit_char","","",304,{"i":[{"n":"self"},{"n":"litchar"}],"o":{"n":"litchar"}}],[11,"fold_lit_float","","",304,{"i":[{"n":"self"},{"n":"litfloat"}],"o":{"n":"litfloat"}}],[11,"fold_lit_int","","",304,{"i":[{"n":"self"},{"n":"litint"}],"o":{"n":"litint"}}],[11,"fold_lit_str","","",304,{"i":[{"n":"self"},{"n":"litstr"}],"o":{"n":"litstr"}}],[11,"fold_lit_verbatim","","",304,{"i":[{"n":"self"},{"n":"litverbatim"}],"o":{"n":"litverbatim"}}],[11,"fold_local","","",304,{"i":[{"n":"self"},{"n":"local"}],"o":{"n":"local"}}],[11,"fold_macro","","",304,{"i":[{"n":"self"},{"n":"macro"}],"o":{"n":"macro"}}],[11,"fold_macro_delimiter","","",304,{"i":[{"n":"self"},{"n":"macrodelimiter"}],"o":{"n":"macrodelimiter"}}],[11,"fold_member","","",304,{"i":[{"n":"self"},{"n":"member"}],"o":{"n":"member"}}],[11,"fold_meta","","",304,{"i":[{"n":"self"},{"n":"meta"}],"o":{"n":"meta"}}],[11,"fold_meta_list","","",304,{"i":[{"n":"self"},{"n":"metalist"}],"o":{"n":"metalist"}}],[11,"fold_meta_name_value","","",304,{"i":[{"n":"self"},{"n":"metanamevalue"}],"o":{"n":"metanamevalue"}}],[11,"fold_method_sig","","",304,{"i":[{"n":"self"},{"n":"methodsig"}],"o":{"n":"methodsig"}}],[11,"fold_method_turbofish","","",304,{"i":[{"n":"self"},{"n":"methodturbofish"}],"o":{"n":"methodturbofish"}}],[11,"fold_nested_meta","","",304,{"i":[{"n":"self"},{"n":"nestedmeta"}],"o":{"n":"nestedmeta"}}],[11,"fold_parenthesized_generic_arguments","","",304,{"i":[{"n":"self"},{"n":"parenthesizedgenericarguments"}],"o":{"n":"parenthesizedgenericarguments"}}],[11,"fold_pat","","",304,{"i":[{"n":"self"},{"n":"pat"}],"o":{"n":"pat"}}],[11,"fold_pat_box","","",304,{"i":[{"n":"self"},{"n":"patbox"}],"o":{"n":"patbox"}}],[11,"fold_pat_ident","","",304,{"i":[{"n":"self"},{"n":"patident"}],"o":{"n":"patident"}}],[11,"fold_pat_lit","","",304,{"i":[{"n":"self"},{"n":"patlit"}],"o":{"n":"patlit"}}],[11,"fold_pat_macro","","",304,{"i":[{"n":"self"},{"n":"patmacro"}],"o":{"n":"patmacro"}}],[11,"fold_pat_path","","",304,{"i":[{"n":"self"},{"n":"patpath"}],"o":{"n":"patpath"}}],[11,"fold_pat_range","","",304,{"i":[{"n":"self"},{"n":"patrange"}],"o":{"n":"patrange"}}],[11,"fold_pat_ref","","",304,{"i":[{"n":"self"},{"n":"patref"}],"o":{"n":"patref"}}],[11,"fold_pat_slice","","",304,{"i":[{"n":"self"},{"n":"patslice"}],"o":{"n":"patslice"}}],[11,"fold_pat_struct","","",304,{"i":[{"n":"self"},{"n":"patstruct"}],"o":{"n":"patstruct"}}],[11,"fold_pat_tuple","","",304,{"i":[{"n":"self"},{"n":"pattuple"}],"o":{"n":"pattuple"}}],[11,"fold_pat_tuple_struct","","",304,{"i":[{"n":"self"},{"n":"pattuplestruct"}],"o":{"n":"pattuplestruct"}}],[11,"fold_pat_verbatim","","",304,{"i":[{"n":"self"},{"n":"patverbatim"}],"o":{"n":"patverbatim"}}],[11,"fold_pat_wild","","",304,{"i":[{"n":"self"},{"n":"patwild"}],"o":{"n":"patwild"}}],[11,"fold_path","","",304,{"i":[{"n":"self"},{"n":"path"}],"o":{"n":"path"}}],[11,"fold_path_arguments","","",304,{"i":[{"n":"self"},{"n":"patharguments"}],"o":{"n":"patharguments"}}],[11,"fold_path_segment","","",304,{"i":[{"n":"self"},{"n":"pathsegment"}],"o":{"n":"pathsegment"}}],[11,"fold_predicate_eq","","",304,{"i":[{"n":"self"},{"n":"predicateeq"}],"o":{"n":"predicateeq"}}],[11,"fold_predicate_lifetime","","",304,{"i":[{"n":"self"},{"n":"predicatelifetime"}],"o":{"n":"predicatelifetime"}}],[11,"fold_predicate_type","","",304,{"i":[{"n":"self"},{"n":"predicatetype"}],"o":{"n":"predicatetype"}}],[11,"fold_qself","","",304,{"i":[{"n":"self"},{"n":"qself"}],"o":{"n":"qself"}}],[11,"fold_range_limits","","",304,{"i":[{"n":"self"},{"n":"rangelimits"}],"o":{"n":"rangelimits"}}],[11,"fold_return_type","","",304,{"i":[{"n":"self"},{"n":"returntype"}],"o":{"n":"returntype"}}],[11,"fold_span","","",304,{"i":[{"n":"self"},{"n":"span"}],"o":{"n":"span"}}],[11,"fold_stmt","","",304,{"i":[{"n":"self"},{"n":"stmt"}],"o":{"n":"stmt"}}],[11,"fold_trait_bound","","",304,{"i":[{"n":"self"},{"n":"traitbound"}],"o":{"n":"traitbound"}}],[11,"fold_trait_bound_modifier","","",304,{"i":[{"n":"self"},{"n":"traitboundmodifier"}],"o":{"n":"traitboundmodifier"}}],[11,"fold_trait_item","","",304,{"i":[{"n":"self"},{"n":"traititem"}],"o":{"n":"traititem"}}],[11,"fold_trait_item_const","","",304,{"i":[{"n":"self"},{"n":"traititemconst"}],"o":{"n":"traititemconst"}}],[11,"fold_trait_item_macro","","",304,{"i":[{"n":"self"},{"n":"traititemmacro"}],"o":{"n":"traititemmacro"}}],[11,"fold_trait_item_method","","",304,{"i":[{"n":"self"},{"n":"traititemmethod"}],"o":{"n":"traititemmethod"}}],[11,"fold_trait_item_type","","",304,{"i":[{"n":"self"},{"n":"traititemtype"}],"o":{"n":"traititemtype"}}],[11,"fold_trait_item_verbatim","","",304,{"i":[{"n":"self"},{"n":"traititemverbatim"}],"o":{"n":"traititemverbatim"}}],[11,"fold_type","","",304,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"type"}}],[11,"fold_type_array","","",304,{"i":[{"n":"self"},{"n":"typearray"}],"o":{"n":"typearray"}}],[11,"fold_type_bare_fn","","",304,{"i":[{"n":"self"},{"n":"typebarefn"}],"o":{"n":"typebarefn"}}],[11,"fold_type_group","","",304,{"i":[{"n":"self"},{"n":"typegroup"}],"o":{"n":"typegroup"}}],[11,"fold_type_impl_trait","","",304,{"i":[{"n":"self"},{"n":"typeimpltrait"}],"o":{"n":"typeimpltrait"}}],[11,"fold_type_infer","","",304,{"i":[{"n":"self"},{"n":"typeinfer"}],"o":{"n":"typeinfer"}}],[11,"fold_type_macro","","",304,{"i":[{"n":"self"},{"n":"typemacro"}],"o":{"n":"typemacro"}}],[11,"fold_type_never","","",304,{"i":[{"n":"self"},{"n":"typenever"}],"o":{"n":"typenever"}}],[11,"fold_type_param","","",304,{"i":[{"n":"self"},{"n":"typeparam"}],"o":{"n":"typeparam"}}],[11,"fold_type_param_bound","","",304,{"i":[{"n":"self"},{"n":"typeparambound"}],"o":{"n":"typeparambound"}}],[11,"fold_type_paren","","",304,{"i":[{"n":"self"},{"n":"typeparen"}],"o":{"n":"typeparen"}}],[11,"fold_type_path","","",304,{"i":[{"n":"self"},{"n":"typepath"}],"o":{"n":"typepath"}}],[11,"fold_type_ptr","","",304,{"i":[{"n":"self"},{"n":"typeptr"}],"o":{"n":"typeptr"}}],[11,"fold_type_reference","","",304,{"i":[{"n":"self"},{"n":"typereference"}],"o":{"n":"typereference"}}],[11,"fold_type_slice","","",304,{"i":[{"n":"self"},{"n":"typeslice"}],"o":{"n":"typeslice"}}],[11,"fold_type_trait_object","","",304,{"i":[{"n":"self"},{"n":"typetraitobject"}],"o":{"n":"typetraitobject"}}],[11,"fold_type_tuple","","",304,{"i":[{"n":"self"},{"n":"typetuple"}],"o":{"n":"typetuple"}}],[11,"fold_type_verbatim","","",304,{"i":[{"n":"self"},{"n":"typeverbatim"}],"o":{"n":"typeverbatim"}}],[11,"fold_un_op","","",304,{"i":[{"n":"self"},{"n":"unop"}],"o":{"n":"unop"}}],[11,"fold_use_glob","","",304,{"i":[{"n":"self"},{"n":"useglob"}],"o":{"n":"useglob"}}],[11,"fold_use_group","","",304,{"i":[{"n":"self"},{"n":"usegroup"}],"o":{"n":"usegroup"}}],[11,"fold_use_name","","",304,{"i":[{"n":"self"},{"n":"usename"}],"o":{"n":"usename"}}],[11,"fold_use_path","","",304,{"i":[{"n":"self"},{"n":"usepath"}],"o":{"n":"usepath"}}],[11,"fold_use_rename","","",304,{"i":[{"n":"self"},{"n":"userename"}],"o":{"n":"userename"}}],[11,"fold_use_tree","","",304,{"i":[{"n":"self"},{"n":"usetree"}],"o":{"n":"usetree"}}],[11,"fold_variant","","",304,{"i":[{"n":"self"},{"n":"variant"}],"o":{"n":"variant"}}],[11,"fold_vis_crate","","",304,{"i":[{"n":"self"},{"n":"viscrate"}],"o":{"n":"viscrate"}}],[11,"fold_vis_public","","",304,{"i":[{"n":"self"},{"n":"vispublic"}],"o":{"n":"vispublic"}}],[11,"fold_vis_restricted","","",304,{"i":[{"n":"self"},{"n":"visrestricted"}],"o":{"n":"visrestricted"}}],[11,"fold_visibility","","",304,{"i":[{"n":"self"},{"n":"visibility"}],"o":{"n":"visibility"}}],[11,"fold_where_clause","","",304,{"i":[{"n":"self"},{"n":"whereclause"}],"o":{"n":"whereclause"}}],[11,"fold_where_predicate","","",304,{"i":[{"n":"self"},{"n":"wherepredicate"}],"o":{"n":"wherepredicate"}}]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprCatch"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIfLet"],[3,"ExprInPlace"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprVerbatim"],[3,"ExprWhile"],[3,"ExprWhileLet"],[3,"ExprYield"],[3,"Index"],[3,"Arm"],[3,"Block"],[3,"FieldPat"],[3,"FieldValue"],[3,"Label"],[3,"Local"],[3,"MethodTurbofish"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatPath"],[3,"PatRange"],[3,"PatRef"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatVerbatim"],[3,"PatWild"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ArgCaptured"],[3,"ArgSelf"],[3,"ArgSelfRef"],[3,"FnDecl"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemVerbatim"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemVerbatim"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ItemVerbatim"],[3,"MethodSig"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemVerbatim"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"PathTokens"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericMethodArgument"],[4,"Pat"],[4,"RangeLimits"],[4,"Stmt"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"As"],[3,"Auto"],[3,"Box"],[3,"Break"],[3,"CapSelf"],[3,"Catch"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Self_"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Type"],[3,"Union"],[3,"Unsafe"],[3,"Use"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"Ident"],[3,"Lifetime"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Pair"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"Synom"],[8,"Parser"],[8,"Spanned"],[8,"Visit"],[8,"Fold"],[3,"ParseError"]]};
searchIndex["synom"] = {"doc":"Adapted from `nom` by removing the `IResult::Incomplete` variant which:","items":[[4,"IResult","synom","The result of a parser.",null,null],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",0,null],[13,"Error","","Parsing failed.",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"iresult"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"iresult"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"iresult"}}],[11,"expect","","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"o"}}],[14,"punct","","Parse a piece of punctuation like \"+\" or \"+=\".",null,null],[14,"keyword","","Parse a keyword like \"fn\" or \"struct\".",null,null],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",null,null],[14,"opt_vec","","Turn a failed parse into an empty vector. The argument parser must itself return a vector.",null,null],[14,"epsilon","","Parses nothing and always succeeds.",null,null],[14,"separated_list","","Zero or more values separated by some separator. Does not allow a trailing seperator.",null,null],[14,"terminated_list","","Zero or more values separated by some separator. A trailing separator is allowed.",null,null],[14,"named","","Define a function from a parser combination.",null,null],[14,"call","","Invoke the given parser function with the passed in arguments.",null,null],[14,"map","","Transform the result of a parser by applying a function or closure.",null,null],[14,"not","","Parses successfully if the given parser fails to parse. Does not consume any of the input.",null,null],[14,"cond","","Conditionally execute the given parser.",null,null],[14,"cond_reduce","","Fail to parse if condition is false, otherwise parse the given parser.",null,null],[14,"preceded","","Parse two things, returning the value of the second.",null,null],[14,"terminated","","Parse two things, returning the value of the first.",null,null],[14,"many0","","Parse zero or more values using the given parser.",null,null],[14,"peek","","Parse a value without consuming it from the input data.",null,null],[14,"take_until","","Parse the part of the input up to but not including the given string. Fail to parse if the given string is not present in the input.",null,null],[14,"tag","","Parse the given string from exactly the current position in the input. You almost always want `punct!` or `keyword!` instead of this.",null,null],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",null,null],[14,"value","","Produce the given value without parsing anything. Useful as an argument to `switch!`.",null,null],[14,"delimited","","Value surrounded by a pair of delimiters.",null,null],[14,"separated_nonempty_list","","One or more values separated by some separator. Does not allow a trailing separator.",null,null],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",null,null],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",null,null],[14,"do_parse","","Run a series of parsers, one after another, optionally assigning the results a name. Fail if any of the parsers fails.",null,null]],"paths":[[4,"IResult"]]};
searchIndex["take_mut"] = {"doc":"This crate provides several functions for handling `&mut T` including `take()`.","items":[[5,"take","take_mut","Allows use of a value pointed to by `&mut T` as though it was owned, as long as a `T` is made available afterwards.",null,{"i":[{"n":"t"},{"n":"f"}]}],[5,"take_or_recover","","Allows use of a value pointed to by `&mut T` as though it was owned, as long as a `T` is made available afterwards.",null,{"i":[{"n":"t"},{"n":"r"},{"n":"f"}]}],[0,"scoped","","This module provides a scoped API, allowing for taking an arbitrary number of `&mut T` into `T` within one closure. The references are all required to outlive the closure.",null,null],[3,"Scope","take_mut::scoped","Represents a scope within which, it is possible to take a `T` from a `&mut T` as long as the `&mut T` outlives the scope.",null,null],[3,"Hole","","A `Hole<'c, 'm, T, F>` represents an unfilled `&'m mut T` which must be filled before the end of the `Scope` with lifetime `'c` and recovery closure `F`.",null,null],[5,"scope","","Main function to create a `Scope`.",null,{"i":[{"n":"f"}],"o":{"n":"r"}}],[11,"take_or_recover","","Takes a `(T, Hole<'c, 'm, T, F>)` from an `&'m mut T`.",0,null],[11,"take","","Takes a `(T, Hole<'c, 'm, T, F>)` from an `&'m mut T`.",0,null],[11,"fill","","Fills the Hole.",1,{"i":[{"n":"self"},{"n":"t"}]}],[11,"drop","","",1,{"i":[{"n":"self"}]}]],"paths":[[3,"Scope"],[3,"Hole"]]};
searchIndex["term"] = {"doc":"Terminal formatting library.","items":[[4,"Attr","term","Terminal attributes for use with term.attr().",null,null],[13,"Bold","","Bold (or possibly bright) mode",0,null],[13,"Dim","","Dim mode, also called faint or half-bright. Often not supported",0,null],[13,"Italic","","Italics mode. Often not supported",0,null],[13,"Underline","","Underline mode",0,null],[13,"Blink","","Blink mode",0,null],[13,"Standout","","Standout mode. Often implemented as Reverse, sometimes coupled with Bold",0,null],[13,"Reverse","","Reverse mode, inverts the foreground and background colors",0,null],[13,"Secure","","Secure mode, also called invis mode. Hides the printed text",0,null],[13,"ForegroundColor","","Convenience attribute to set the foreground color",0,null],[13,"BackgroundColor","","Convenience attribute to set the background color",0,null],[4,"Error","","An error arising from interacting with the terminal.",null,null],[13,"Io","","Indicates an error from any underlying IO",1,null],[13,"TerminfoParsing","","Indicates an error during terminfo parsing",1,null],[13,"ParameterizedExpansion","","Indicates an error expanding a parameterized string from the terminfo database",1,null],[13,"NotSupported","","Indicates that the terminal does not support the requested operation.",1,null],[13,"TermUnset","","Indicates that the `TERM` environment variable was unset, and thus we were unable to detect which terminal we should be using.",1,null],[13,"TerminfoEntryNotFound","","Indicates that we were unable to find a terminfo entry for the requested terminal.",1,null],[13,"CursorDestinationInvalid","","Indicates that the cursor could not be moved to the requested position.",1,null],[13,"ColorOutOfRange","","Indicates that the terminal does not support displaying the requested color.",1,null],[5,"stdout","","Return a Terminal wrapping stdout, or None if a terminal couldn't be opened.",null,{"o":{"g":["box"],"n":"option"}}],[5,"stderr","","Return a Terminal wrapping stderr, or None if a terminal couldn't be opened.",null,{"o":{"g":["box"],"n":"option"}}],[0,"terminfo","","Terminfo database interface.",null,null],[3,"TermInfo","term::terminfo","A parsed terminfo database entry.",null,null],[12,"names","","Names for the terminal",2,null],[12,"bools","","Map of capability name to boolean value",2,null],[12,"numbers","","Map of capability name to numeric value",2,null],[12,"strings","","Map of capability name to raw (unexpanded) string",2,null],[3,"TerminfoTerminal","","A Terminal that knows how many colors it supports, with a reference to its parsed Terminfo database record.",null,null],[4,"Error","","An error from parsing a terminfo entry",null,null],[13,"BadMagic","","The \"magic\" number at the start of the file was wrong.",3,null],[13,"NotUtf8","","The names in the file were not valid UTF-8.",3,null],[13,"ShortNames","","The names section of the file was empty",3,null],[13,"TooManyBools","","More boolean parameters are present in the file than this crate knows how to interpret.",3,null],[13,"TooManyNumbers","","More number parameters are present in the file than this crate knows how to interpret.",3,null],[13,"TooManyStrings","","More string parameters are present in the file than this crate knows how to interpret.",3,null],[13,"InvalidLength","","The length of some field was not >= -1.",3,null],[13,"NamesMissingNull","","The names table was missing a trailing null terminator.",3,null],[13,"StringsMissingNull","","The strings table was missing a trailing null terminator.",3,null],[0,"searcher","","ncurses-compatible database discovery",null,null],[5,"get_dbpath_for_term","term::terminfo::searcher","Return path to database entry for `term`",null,{"i":[{"n":"str"}],"o":{"g":["pathbuf"],"n":"option"}}],[0,"parser","term::terminfo","`TermInfo` format parsing. ncurses-compatible compiled terminfo format parsing (term(5))",null,null],[0,"compiled","term::terminfo::parser","ncurses-compatible compiled terminfo format parsing (term(5))",null,null],[5,"parse","term::terminfo::parser::compiled","Parse a compiled terminfo entry, using long capability names if `longnames` is true",null,{"i":[{"n":"read"},{"n":"bool"}],"o":{"g":["terminfo"],"n":"result"}}],[7,"boolfnames","","",null,null],[7,"boolnames","","",null,null],[7,"numfnames","","",null,null],[7,"numnames","","",null,null],[7,"stringfnames","","",null,null],[7,"stringnames","","",null,null],[0,"parm","term::terminfo","Parameterized string expansion",null,null],[3,"Variables","term::terminfo::parm","Container for static and dynamic variable arrays",null,null],[4,"Param","","Types of parameters a capability can use",null,null],[13,"Number","","",4,null],[13,"Words","","",4,null],[4,"Error","","An error from interpreting a parameterized string.",null,null],[13,"StackUnderflow","","Data was requested from the stack, but the stack didn't have enough elements.",5,null],[13,"TypeMismatch","","The type of the element(s) on top of the stack did not match the type that the operator wanted.",5,null],[13,"UnrecognizedFormatOption","","An unrecognized format option was used.",5,null],[13,"InvalidVariableName","","An invalid variable name was used.",5,null],[13,"InvalidParameterIndex","","An invalid parameter index was used.",5,null],[13,"MalformedCharacterConstant","","A malformed character constant was used.",5,null],[13,"IntegerConstantOverflow","","An integer constant was too large (overflowed an i32)",5,null],[13,"MalformedIntegerConstant","","A malformed integer constant was used.",5,null],[13,"FormatWidthOverflow","","A format width constant was too large (overflowed a usize)",5,null],[13,"FormatPrecisionOverflow","","A format precision constant was too large (overflowed a usize)",5,null],[5,"expand","","Expand a parameterized capability",null,null],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"param"}}],[11,"default","","",4,{"o":{"n":"self"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",5,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",5,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"default","","",6,{"o":{"n":"variables"}}],[11,"new","","Return a new zero-initialized Variables",6,{"o":{"n":"variables"}}],[11,"fmt","term::terminfo","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"terminfo"}}],[11,"from_env","","Create a `TermInfo` based on current environment.",2,{"o":{"g":["terminfo"],"n":"result"}}],[11,"from_name","","Create a `TermInfo` for the named terminal.",2,{"i":[{"n":"str"}],"o":{"g":["terminfo"],"n":"result"}}],[11,"from_path","","Parse the given `TermInfo`.",2,{"i":[{"n":"p"}],"o":{"g":["terminfo"],"n":"result"}}],[11,"apply_cap","","Retrieve a capability `cmd` and expand it with `params`, writing result to `out`.",2,null],[11,"reset","","Write the reset string to `out`.",2,{"i":[{"n":"self"},{"n":"write"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",3,{"i":[{"n":"fromutf8error"}],"o":{"n":"self"}}],[11,"description","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",3,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"terminfoterminal"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fg","","",7,{"i":[{"n":"self"},{"n":"color"}],"o":{"n":"result"}}],[11,"bg","","",7,{"i":[{"n":"self"},{"n":"color"}],"o":{"n":"result"}}],[11,"attr","","",7,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"result"}}],[11,"supports_attr","","",7,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"reset","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"supports_reset","","",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"supports_color","","",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"cursor_up","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"delete_line","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"carriage_return","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"get_ref","","",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"new_with_terminfo","","Create a new TerminfoTerminal with the given TermInfo and Write.",7,{"i":[{"n":"t"},{"n":"terminfo"}],"o":{"n":"terminfoterminal"}}],[11,"new","","Create a new TerminfoTerminal for the current environment with the given Write.",7,{"i":[{"n":"t"}],"o":{"g":["terminfoterminal"],"n":"option"}}],[11,"write","","",7,null],[11,"flush","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[0,"color","term","Terminal color definitions",null,null],[6,"Color","term::color","Number for a terminal color",null,null],[17,"BLACK","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"YELLOW","","",null,null],[17,"BLUE","","",null,null],[17,"MAGENTA","","",null,null],[17,"CYAN","","",null,null],[17,"WHITE","","",null,null],[17,"BRIGHT_BLACK","","",null,null],[17,"BRIGHT_RED","","",null,null],[17,"BRIGHT_GREEN","","",null,null],[17,"BRIGHT_YELLOW","","",null,null],[17,"BRIGHT_BLUE","","",null,null],[17,"BRIGHT_MAGENTA","","",null,null],[17,"BRIGHT_CYAN","","",null,null],[17,"BRIGHT_WHITE","","",null,null],[6,"StdoutTerminal","term","Alias for stdout terminals.",null,null],[6,"StderrTerminal","","Alias for stderr terminals.",null,null],[6,"Result","","The canonical `Result` type using this crate's Error type.",null,null],[8,"Terminal","","A terminal with similar capabilities to an ANSI Terminal (foreground/background colors etc).",null,null],[16,"Output","","The terminal's output writer type.",8,null],[10,"fg","","Sets the foreground color to the given color.",8,{"i":[{"n":"self"},{"n":"color"}],"o":{"n":"result"}}],[10,"bg","","Sets the background color to the given color.",8,{"i":[{"n":"self"},{"n":"color"}],"o":{"n":"result"}}],[10,"attr","","Sets the given terminal attribute, if supported.  Returns `Ok(())` if the attribute is supported and was sent to the terminal, or `Err(e)` if there was an error or the attribute wasn't supported.",8,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"result"}}],[10,"supports_attr","","Returns whether the given terminal attribute is supported.",8,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[10,"reset","","Resets all terminal attributes and colors to their defaults.",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"supports_reset","","Returns true if reset is supported.",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"supports_color","","Returns true if color is fully supported.",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"cursor_up","","Moves the cursor up one line.",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"delete_line","","Deletes the text from the cursor location to the end of the line.",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"carriage_return","","Moves the cursor to the left edge of the current line.",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"get_ref","","Gets an immutable reference to the stream inside",8,null],[10,"get_mut","","Gets a mutable reference to the stream inside",8,null],[10,"into_inner","","Returns the contained stream, destroying the `Terminal`",8,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"attr"}],"o":{"n":"bool"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"attr"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",1,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"from","","",1,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"error"}],"o":{"n":"self"}}]],"paths":[[4,"Attr"],[4,"Error"],[3,"TermInfo"],[4,"Error"],[4,"Param"],[4,"Error"],[3,"Variables"],[3,"TerminfoTerminal"],[8,"Terminal"]]};
searchIndex["termcolor"] = {"doc":"This crate provides a cross platform abstraction for writing colored text to a terminal. Colors are written using either ANSI escape sequences or by communicating with a Windows console. Much of this API was motivated by use inside command line applications, where colors or styles can be configured by the end user and/or the environment.","items":[[3,"StandardStream","termcolor","Satisfies `io::Write` and `WriteColor`, and supports optional coloring to either of the standard output streams, stdout and stderr.",null,null],[3,"StandardStreamLock","","`StandardStreamLock` is a locked reference to a `StandardStream`.",null,null],[3,"BufferedStandardStream","","Like `StandardStream`, but does buffered writing.",null,null],[3,"BufferWriter","","Writes colored buffers to stdout or stderr.",null,null],[3,"Buffer","","Write colored text to memory.",null,null],[3,"NoColor","","Satisfies `WriteColor` but ignores all color options.",null,null],[3,"Ansi","","Satisfies `WriteColor` using standard ANSI escape sequences.",null,null],[3,"ColorSpec","","A color specification.",null,null],[3,"ParseColorError","","An error from parsing an invalid color specification.",null,null],[4,"ColorChoice","","ColorChoice represents the color preferences of an end user.",null,null],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI colors on Windows if the console API is unavailable.",0,null],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use anything other than emitting ANSI color codes.",0,null],[13,"Auto","","Try to use colors, but don't force the issue. If the console isn't available on Windows, or if TERM=dumb, for example, then don't use colors.",0,null],[13,"Never","","Never emit colors.",0,null],[4,"Color","","The set of available colors for the terminal foreground/background.",null,null],[13,"Black","","",1,null],[13,"Blue","","",1,null],[13,"Green","","",1,null],[13,"Red","","",1,null],[13,"Cyan","","",1,null],[13,"Magenta","","",1,null],[13,"Yellow","","",1,null],[13,"White","","",1,null],[13,"Ansi256","","",1,null],[13,"Rgb","","",1,null],[8,"WriteColor","","This trait describes the behavior of writers that support colored output.",null,null],[10,"supports_color","","Returns true if and only if the underlying writer supports colors.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"set_color","","Set the color settings of the writer.",2,{"i":[{"n":"self"},{"n":"colorspec"}],"o":{"n":"result"}}],[10,"reset","","Reset the current color settings to their original settings.",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"is_synchronous","","Returns true if and only if the underlying writer must synchronously interact with an end user's device in order to control colors. By default, this always returns `false`.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"colorchoice"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"colorchoice"}],"o":{"n":"bool"}}],[11,"stdout","","Create a new `StandardStream` with the given color preferences that writes to standard output.",3,{"i":[{"n":"colorchoice"}],"o":{"n":"standardstream"}}],[11,"stderr","","Create a new `StandardStream` with the given color preferences that writes to standard error.",3,{"i":[{"n":"colorchoice"}],"o":{"n":"standardstream"}}],[11,"lock","","Lock the underlying writer.",3,{"i":[{"n":"self"}],"o":{"n":"standardstreamlock"}}],[11,"stdout","","Create a new `BufferedStandardStream` with the given color preferences that writes to standard output via a buffered writer.",4,{"i":[{"n":"colorchoice"}],"o":{"n":"bufferedstandardstream"}}],[11,"stderr","","Create a new `BufferedStandardStream` with the given color preferences that writes to standard error via a buffered writer.",4,{"i":[{"n":"colorchoice"}],"o":{"n":"bufferedstandardstream"}}],[11,"write","","",3,null],[11,"flush","","",3,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"supports_color","","",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_color","","",3,{"i":[{"n":"self"},{"n":"colorspec"}],"o":{"n":"result"}}],[11,"reset","","",3,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"is_synchronous","","",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"write","","",5,null],[11,"flush","","",5,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"supports_color","","",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_color","","",5,{"i":[{"n":"self"},{"n":"colorspec"}],"o":{"n":"result"}}],[11,"reset","","",5,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"is_synchronous","","",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"write","","",4,null],[11,"flush","","",4,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"supports_color","","",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_color","","",4,{"i":[{"n":"self"},{"n":"colorspec"}],"o":{"n":"result"}}],[11,"reset","","",4,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"is_synchronous","","",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"stdout","","Create a new `BufferWriter` that writes to stdout with the given color preferences.",6,{"i":[{"n":"colorchoice"}],"o":{"n":"bufferwriter"}}],[11,"stderr","","Create a new `BufferWriter` that writes to stderr with the given color preferences.",6,{"i":[{"n":"colorchoice"}],"o":{"n":"bufferwriter"}}],[11,"separator","","If set, the separator given is printed between buffers. By default, no separator is printed.",6,{"i":[{"n":"self"},{"g":["vec"],"n":"option"}]}],[11,"buffer","","Creates a new `Buffer` with the current color preferences.",6,{"i":[{"n":"self"}],"o":{"n":"buffer"}}],[11,"print","","Prints the contents of the given buffer.",6,{"i":[{"n":"self"},{"n":"buffer"}],"o":{"n":"result"}}],[11,"no_color","","Create a buffer that drops all color information.",7,{"o":{"n":"buffer"}}],[11,"ansi","","Create a buffer that uses ANSI escape sequences.",7,{"o":{"n":"buffer"}}],[11,"is_empty","","Returns true if and only if this buffer is empty.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"len","","Returns the length of this buffer in bytes.",7,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"clear","","Clears this buffer.",7,{"i":[{"n":"self"}]}],[11,"into_inner","","Consume this buffer and return the underlying raw data.",7,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"vec"}}],[11,"as_slice","","Return the underlying data of the buffer.",7,null],[11,"as_mut_slice","","Return the underlying data of the buffer as a mutable slice.",7,null],[11,"write","","",7,null],[11,"flush","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"supports_color","","",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_color","","",7,{"i":[{"n":"self"},{"n":"colorspec"}],"o":{"n":"result"}}],[11,"reset","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"is_synchronous","","",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"new","","Create a new writer that satisfies `WriteColor` but drops all color information.",8,{"i":[{"n":"w"}],"o":{"n":"nocolor"}}],[11,"into_inner","","Consume this `NoColor` value and return the inner writer.",8,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_ref","","Return a reference to the inner writer.",8,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_mut","","Return a mutable reference to the inner writer.",8,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"write","","",8,null],[11,"flush","","",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"supports_color","","",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_color","","",8,{"i":[{"n":"self"},{"n":"colorspec"}],"o":{"n":"result"}}],[11,"reset","","",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"is_synchronous","","",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"new","","Create a new writer that satisfies `WriteColor` using standard ANSI escape sequences.",9,{"i":[{"n":"w"}],"o":{"n":"ansi"}}],[11,"into_inner","","Consume this `Ansi` value and return the inner writer.",9,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_ref","","Return a reference to the inner writer.",9,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_mut","","Return a mutable reference to the inner writer.",9,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"write","","",9,null],[11,"flush","","",9,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"supports_color","","",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_color","","",9,{"i":[{"n":"self"},{"n":"colorspec"}],"o":{"n":"result"}}],[11,"reset","","",9,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"is_synchronous","","",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"colorspec"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",10,{"o":{"n":"colorspec"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"colorspec"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"colorspec"}],"o":{"n":"bool"}}],[11,"new","","Create a new color specification that has no colors or styles.",10,{"o":{"n":"colorspec"}}],[11,"fg","","Get the foreground color.",10,{"i":[{"n":"self"}],"o":{"g":["color"],"n":"option"}}],[11,"set_fg","","Set the foreground color.",10,{"i":[{"n":"self"},{"g":["color"],"n":"option"}],"o":{"n":"colorspec"}}],[11,"bg","","Get the background color.",10,{"i":[{"n":"self"}],"o":{"g":["color"],"n":"option"}}],[11,"set_bg","","Set the background color.",10,{"i":[{"n":"self"},{"g":["color"],"n":"option"}],"o":{"n":"colorspec"}}],[11,"bold","","Get whether this is bold or not.",10,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_bold","","Set whether the text is bolded or not.",10,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"colorspec"}}],[11,"underline","","Get whether this is underline or not.",10,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_underline","","Set whether the text is underlined or not.",10,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"colorspec"}}],[11,"intense","","Get whether this is intense or not.",10,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_intense","","Set whether the text is intense or not.",10,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"colorspec"}}],[11,"is_none","","Returns true if this color specification has no colors or styles.",10,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clear","","Clears this color specification so that it has no color/style settings.",10,{"i":[{"n":"self"}]}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"color"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"color"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"color"}],"o":{"n":"bool"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"parsecolorerror"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"parsecolorerror"}],"o":{"n":"bool"}}],[11,"ne","","",11,{"i":[{"n":"self"},{"n":"parsecolorerror"}],"o":{"n":"bool"}}],[11,"invalid","","Return the string that couldn't be parsed as a valid color.",11,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","","",11,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",1,{"i":[{"n":"str"}],"o":{"g":["color","parsecolorerror"],"n":"result"}}]],"paths":[[4,"ColorChoice"],[4,"Color"],[8,"WriteColor"],[3,"StandardStream"],[3,"BufferedStandardStream"],[3,"StandardStreamLock"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[3,"ParseColorError"]]};
searchIndex["textwrap"] = {"doc":"`textwrap` provides functions for word wrapping and filling text.","items":[[3,"NoHyphenation","textwrap","Use this as a [`Wrapper.splitter`] to avoid any kind of hyphenation:",null,null],[3,"HyphenSplitter","","Simple and default way to split words: splitting on existing hyphens only.",null,null],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text. Use it when the convenience [`wrap_iter`], [`wrap`] and [`fill`] functions are not flexible enough.",null,null],[12,"width","","The width in columns at which the text will be wrapped.",0,null],[12,"initial_indent","","Indentation used for the first line of output.",0,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a line. When set to `false`, some lines may be longer than `self.width`.",0,null],[12,"splitter","","The method for splitting words. If the `hyphenation` feature is enabled, you can use a `hyphenation::language::Corpus` here to get language-aware hyphenation.",0,null],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns a `Wrapper`. An instance of `IntoWrapIter` is typically obtained through either [`wrap_iter`] or [`Wrapper::into_wrap_iter`].",null,null],[3,"WrapIter","","An iterator over the lines of the input string which borrows a `Wrapper`. An instance of `WrapIter` is typically obtained through the [`Wrapper::wrap_iter`] method.",null,null],[5,"fill","","Fill a line of text at `width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",null,{"i":[{"n":"str"},{"n":"usize"}],"o":{"n":"string"}}],[5,"wrap","","Wrap a line of text at `width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",null,{"i":[{"n":"str"},{"n":"usize"}],"o":{"g":["cow"],"n":"vec"}}],[5,"wrap_iter","","Lazily wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",null,{"i":[{"n":"str"},{"n":"usize"}],"o":{"g":["hyphensplitter"],"n":"intowrapiter"}}],[5,"indent","","Add prefix to each non-empty line.",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"n":"string"}}],[5,"dedent","","Removes common leading whitespace from each line.",null,{"i":[{"n":"str"}],"o":{"n":"string"}}],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple with a head, a hyphen, and a tail where `head + &hyphen + &tail == word`. The hyphen can be empty if there is already a hyphen in the head.",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"vec"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"nohyphenation"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"split","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"vec"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"hyphensplitter"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"split","","",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"vec"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"wrapper"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new Wrapper for wrapping at the specified width. By default, we allow words longer than `width` to be broken. A [`HyphenSplitter`] will be used by default for splitting words. See the [`WordSplitter`] trait for other options.",0,{"i":[{"n":"usize"}],"o":{"g":["hyphensplitter"],"n":"wrapper"}}],[11,"with_splitter","","Use the given [`WordSplitter`] to create a new Wrapper for wrapping at the specified width. By default, we allow words longer than `width` to be broken.",0,{"i":[{"n":"usize"},{"n":"s"}],"o":{"n":"wrapper"}}],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is used on the very first line of output.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"wrapper"}}],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent indentation is used on lines following the first line of output.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"wrapper"}}],[11,"break_words","","Change [`self.break_words`]. This controls if words longer than `self.width` can be broken, or if they will be left sticking out into the right margin.",0,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"wrapper"}}],[11,"fill","","Fill a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"string"}}],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["cow"],"n":"vec"}}],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"wrapiter"}}],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"intowrapiter"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",4,{"i":[{"n":"self"}],"o":{"g":["cow"],"n":"option"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",5,{"i":[{"n":"self"}],"o":{"g":["cow"],"n":"option"}}]],"paths":[[3,"Wrapper"],[8,"WordSplitter"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a single thread.",null,null],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",null,null],[11,"default","","",0,{"o":{"n":"threadlocal"}}],[11,"drop","","",0,{"i":[{"n":"self"}]}],[11,"new","","Creates a new empty `ThreadLocal`.",0,{"o":{"n":"threadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn't exist.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn't exist. If `create` fails, that error is returned and no element is added.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",0,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively reseting it to its original state.",0,{"i":[{"n":"self"}]}],[11,"into_iter","","",0,{"i":[{"n":"self"}],"o":{"n":"intoiter"}}],[11,"get_default","","Returns the element for the current thread, or creates a default one if it doesn't exist.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",1,{"i":[{"n":"self"}],"o":{"g":["box"],"n":"option"}}],[11,"size_hint","","",1,null],[11,"next","","",2,{"i":[{"n":"self"}],"o":{"g":["box"],"n":"option"}}],[11,"size_hint","","",2,null],[11,"default","","",3,{"o":{"n":"cachedthreadlocal"}}],[11,"new","","Creates a new empty `CachedThreadLocal`.",3,{"o":{"n":"cachedthreadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",3,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn't exist.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn't exist. If `create` fails, that error is returned and no element is added.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",3,{"i":[{"n":"self"}],"o":{"n":"cacheditermut"}}],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively reseting it to its original state.",3,{"i":[{"n":"self"}]}],[11,"into_iter","","",3,{"i":[{"n":"self"}],"o":{"n":"cachedintoiter"}}],[11,"get_default","","Returns the element for the current thread, or creates a default one if it doesn't exist.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"ThreadLocal"],[3,"IterMut"],[3,"IntoIter"],[3,"CachedThreadLocal"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library implementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where nanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month, day, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time value, including any adjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example, for U.S. Pacific Daylight Time, the value is `-7*60*60 = -25200`.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"g":["tm","parseerror"],"n":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and nanoseconds since 1970-01-01T00:00:00Z.",null,{"o":{"n":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter in nanoseconds since an unspecified epoch.",null,{"o":{"n":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter in seconds since an unspecified epoch.",null,{"o":{"n":"f64"}}],[5,"tzset","","",null,{}],[5,"empty_tm","","",null,{"o":{"n":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"i":[{"n":"timespec"}],"o":{"n":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"o":{"n":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"i":[{"n":"timespec"}],"o":{"n":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"o":{"n":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"i":[{"n":"str"},{"n":"tm"}],"o":{"g":["string","parseerror"],"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"le","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"gt","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"ge","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"ordering"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",4,{"i":[{"n":"f"}],"o":{"n":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 263 microseconds in either direction).",4,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 263 nanoseconds in either direction).",4,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["duration"],"n":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["duration"],"n":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"o":{"n":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"o":{"n":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"o":{"n":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"i":[{"n":"stdduration"}],"o":{"g":["duration","outofrangeerror"],"n":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,{"i":[{"n":"self"}],"o":{"g":["stdduration","outofrangeerror"],"n":"result"}}],[11,"neg","","",4,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"add","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"duration"}}],[11,"sub","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"duration"}}],[11,"mul","","",4,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"duration"}}],[11,"div","","",4,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"duration"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"outofrangeerror"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"outofrangeerror"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"outofrangeerror"}],"o":{"n":"bool"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",5,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"timespec"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"ordering"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",0,null],[11,"new","","",0,{"i":[{"n":"i64"},{"n":"i32"}],"o":{"n":"timespec"}}],[11,"add","","",0,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"timespec"}}],[11,"sub","","",0,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"timespec"}}],[11,"sub","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"duration"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"o":{"n":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of `self` to the value of `later`.",6,{"i":[{"n":"self"},{"n":"precisetime"}],"o":{"n":"duration"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"steadytime"}}],[11,"partial_cmp","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"le","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"gt","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"ge","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"cmp","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"ordering"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"o":{"n":"steadytime"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"sub","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"duration"}}],[11,"sub","","",7,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"steadytime"}}],[11,"add","","",7,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"steadytime"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"tm"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"tm"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"tm"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"tm"}}],[11,"sub","","The resulting Tm is in UTC.",1,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"tm"}}],[11,"sub","","",1,{"i":[{"n":"self"},{"n":"tm"}],"o":{"n":"duration"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"tm"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"tm"}],"o":{"n":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"i":[{"n":"self"}],"o":{"n":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"i":[{"n":"self"}],"o":{"n":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"i":[{"n":"self"}],"o":{"n":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C, in the local timezone.",1,{"i":[{"n":"self"}],"o":{"n":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C.",1,{"i":[{"n":"self"}],"o":{"n":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["tmfmt","parseerror"],"n":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"i":[{"n":"self"}],"o":{"n":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"i":[{"n":"self"}],"o":{"n":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is compatible with ISO 8601.",1,{"i":[{"n":"self"}],"o":{"n":"tmfmt"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"parseerror"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["traitobject"] = {"doc":"traitobject","items":[[5,"data","traitobject","Get the data pointer from this trait object.",null,null],[5,"data_mut","","Get the data pointer from this trait object, mutably.",null,null],[8,"Trait","","A trait implemented for all trait objects.",null,null]],"paths":[]};
searchIndex["typeable"] = {"doc":"Exposes `Typeable`, which exposes the `get_type` method, which gives the `TypeId` of any 'static type.","items":[[8,"Typeable","typeable","Universal mixin trait for adding a `get_type` method.",null,null],[11,"get_type","","Get the `TypeId` of this object.",0,{"i":[{"n":"self"}],"o":{"n":"typeid"}}]],"paths":[[8,"Typeable"]]};
searchIndex["typemap"] = {"doc":"A type-based key value store where one value type is allowed for each key.","items":[[3,"TypeMap","typemap","A map keyed by types.",null,null],[3,"OccupiedEntry","","A view onto an occupied entry in a TypeMap.",null,null],[3,"VacantEntry","","A view onto an unoccupied entry in a TypeMap.",null,null],[4,"Entry","","A view onto an entry in a TypeMap.",null,null],[13,"Occupied","","A view onto an occupied entry in a TypeMap.",0,null],[13,"Vacant","","A view onto an unoccupied entry in a TypeMap.",0,null],[6,"SendMap","","A version of `TypeMap` containing only `Send` types.",null,null],[6,"SyncMap","","A version of `TypeMap` containing only `Sync` types.",null,null],[6,"ShareMap","","A version of `TypeMap` containing only `Send + Sync` types.",null,null],[6,"CloneMap","","A version of `TypeMap` containing only `Clone` types.",null,null],[6,"ShareCloneMap","","A version of `TypeMap` containing only `Clone + Send + Sync` types.",null,null],[6,"DebugMap","","A version of `TypeMap` containing only `Debug` types.",null,null],[6,"ShareDebugMap","","A version of `TypeMap` containing only `Debug + Send + Sync` types.",null,null],[8,"CloneAny","","A marker trait meant for use as the `A` parameter in `TypeMap`.",null,null],[8,"DebugAny","","A marker trait meant for use as the `A` parameter in `TypeMap`.",null,null],[8,"Key","","This trait defines the relationship between keys and values in a TypeMap.",null,null],[16,"Value","","The value type associated with this key type.",1,null],[11,"default","","",2,{"o":{"n":"typemap"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"typemap"}}],[11,"new","","Create a new, empty TypeMap.",2,{"o":{"n":"typemap"}}],[11,"custom","","Create a new, empty TypeMap.",2,{"o":{"n":"typemap"}}],[11,"insert","","Insert a value into the map with a specified key type.",2,null],[11,"get","","Find a value in the map and get a reference to it.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_mut","","Find a value in the map and get a mutable reference to it.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"contains","","Check if a key has an associated value stored in the map.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"remove","","Remove a value from the map.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"entry","","Get the given key's corresponding entry in the map for in-place manipulation.",2,{"i":[{"n":"self"}],"o":{"n":"entry"}}],[11,"data","","Read the underlying HashMap",2,{"i":[{"n":"self"}],"o":{"n":"hashmap"}}],[11,"data_mut","","Get a mutable reference to the underlying HashMap",2,{"i":[{"n":"self"}],"o":{"n":"hashmap"}}],[11,"len","","Get the number of values stored in the map.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Return true if the map contains no values.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clear","","Remove all entries from the map.",2,{"i":[{"n":"self"}]}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.",0,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.",0,null],[11,"get","","Get a reference to the entry's value.",3,null],[11,"get_mut","","Get a mutable reference to the entry's value.",3,null],[11,"into_mut","","Transform the entry into a mutable reference with the same lifetime as the map.",3,null],[11,"insert","","Set the entry's value and return the previous value.",3,null],[11,"remove","","Move the entry's value out of the map, consuming the entry.",3,null],[11,"insert","","Set the entry's value and return a mutable reference to it.",4,null]],"paths":[[4,"Entry"],[8,"Key"],[3,"TypeMap"],[3,"OccupiedEntry"],[3,"VacantEntry"]]};
searchIndex["ucd_util"] = {"doc":"The `ucd-util` crate contains a smattering of utility functions that implement various algorithms specified by Unicode. There is no specific goal for exhaustiveness. Instead, implementations should be added on an as-needed basis.","items":[[5,"hangul_name","ucd_util","Return the character name of the given precomposed Hangul codepoint.",null,{"i":[{"n":"u32"}],"o":{"g":["string"],"n":"option"}}],[5,"hangul_full_canonical_decomposition","","Return the full canonical decomposition of the given precomposed Hangul codepoint.",null,{"i":[{"n":"u32"}],"o":{"n":"option"}}],[5,"ideograph_name","","Return the character name of the given ideograph codepoint.",null,{"i":[{"n":"u32"}],"o":{"g":["string"],"n":"option"}}],[5,"character_name_normalize","","Normalize the given character name in place according to UAX44-LM2.",null,{"i":[{"n":"string"}]}],[5,"symbolic_name_normalize","","Normalize the given symbolic name in place according to UAX44-LM3.",null,{"i":[{"n":"string"}]}],[5,"canonical_property_name","","Find the canonical property name for the given normalized property name.",null,{"i":[{"n":"propertytable"},{"n":"str"}],"o":{"g":["str"],"n":"option"}}],[5,"property_values","","Find the set of possible property values for a given property.",null,{"i":[{"n":"propertyvaluetable"},{"n":"str"}],"o":{"g":["propertyvalues"],"n":"option"}}],[5,"canonical_property_value","","Find the canonical property value for the given normalized property value.",null,{"i":[{"n":"propertyvalues"},{"n":"str"}],"o":{"g":["str"],"n":"option"}}],[6,"PropertyTable","","The type of a property name table.",null,null],[6,"PropertyValueTable","","Type of a property value table.",null,null],[6,"PropertyValues","","A mapping of property values for a specific property.",null,null],[17,"RANGE_HANGUL_SYLLABLE","","A set of ranges that corresponds to the set of all Hangul syllable codepoints.",null,null],[17,"RANGE_IDEOGRAPH","","A set of ranges that corresponds to the set of all ideograph codepoints.",null,null]],"paths":[]};
searchIndex["unicase"] = {"doc":"Case","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",null,null],[12,"0","","",0,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"unicase"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",0,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"deref_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"ordering"}}],[11,"as_ref","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"s2"}],"o":{"n":"bool"}}],[11,"from_str","","",0,{"i":[{"n":"str"}],"o":{"g":["unicase"],"n":"result"}}],[11,"hash","","",0,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",0,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"into","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into","","",0,{"i":[{"n":"self"}],"o":{"n":"string"}}]],"paths":[[3,"UniCase"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional Algorithm][tr9] for display of mixed right-to-left and left-to-right text.  It is written in safe Rust, compatible with the current stable release.","items":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,null],[12,"level","","The paragraph embedding level.",0,null],[3,"InitialInfo","","Initial bidi information of the text.",null,null],[12,"text","","The text",1,null],[12,"original_classes","","The BidiClass of the character at each byte in the text. If a character is multiple bytes, its class will appear multiple times in the vector.",1,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,null],[3,"BidiInfo","","Bidi information of the text.",null,null],[12,"text","","The text",2,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,null],[12,"levels","","The directional embedding level of each byte in the text.",2,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each paragraph within the text.",2,null],[4,"BidiClass","","Represents values of the Unicode character property `Bidi_Class`, also known as the bidirectional character type.",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the `BidiClass` of a single char.",null,{"i":[{"n":"char"}],"o":{"n":"bidiclass"}}],[0,"deprecated","","This module holds deprecated assets only.",null,null],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in visual order.",null,null],[0,"format_chars","unicode_bidi","Directional Formatting Characters",null,null],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",null,null],[17,"LRM","","LEFT-TO-RIGHT MARK",null,null],[17,"RLM","","RIGHT-TO-LEFT MARK",null,null],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",null,null],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",null,null],[17,"FSI","","FIRST STRONG ISOLATE",null,null],[17,"PDI","","POP DIRECTIONAL ISOLATE",null,null],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",null,null],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",null,null],[17,"PDF","","POP DIRECTIONAL FORMATTING",null,null],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",null,null],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",null,null],[0,"level","unicode_bidi","Bidi Embedding Level",null,null],[3,"Level","unicode_bidi::level","Embedding Level",null,null],[4,"Error","","Errors that can occur on Level creation or mutation",null,null],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,null],[5,"has_rtl","","If levels has any RTL (odd) level",null,null],[17,"LTR_LEVEL","","",null,null],[17,"RTL_LEVEL","","",null,null],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go as high as `max_depth`.",null,null],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go as high as `max_depth + 1`.",null,null],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"level"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"cmp","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"ordering"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"le","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"gt","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"ge","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ltr","","New LTR level with smallest number value (0).",5,{"o":{"n":"level"}}],[11,"rtl","","New RTL level with smallest number value (1).",5,{"o":{"n":"level"}}],[11,"max_implicit_depth","","Maximum depth of the directional status stack during implicit resolutions.",5,{"o":{"n":"u8"}}],[11,"max_explicit_depth","","Maximum depth of the directional status stack during explicit resolutions.",5,{"o":{"n":"u8"}}],[11,"new","","Create new level, fail if number is larger than `max_depth + 1`.",5,{"i":[{"n":"u8"}],"o":{"g":["level","error"],"n":"result"}}],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,{"i":[{"n":"u8"}],"o":{"g":["level","error"],"n":"result"}}],[11,"number","","The level number.",5,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"is_ltr","","If this level is left-to-right.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_rtl","","If this level is right-to-left.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"raise","","Raise level by `amount`, fail if number is larger than `max_depth + 1`.",5,{"i":[{"n":"self"},{"n":"u8"}],"o":{"g":["error"],"n":"result"}}],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than `max_depth`.",5,{"i":[{"n":"self"},{"n":"u8"}],"o":{"g":["error"],"n":"result"}}],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,{"i":[{"n":"self"},{"n":"u8"}],"o":{"g":["error"],"n":"result"}}],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if number is larger than `max_depth`.",5,{"i":[{"n":"self"}],"o":{"g":["level","error"],"n":"result"}}],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if number is larger than `max_depth`.",5,{"i":[{"n":"self"}],"o":{"g":["level","error"],"n":"result"}}],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this, or fail if number is larger than `max_depth + 1`.",5,{"i":[{"n":"self"}],"o":{"g":["level","error"],"n":"result"}}],[11,"bidi_class","","Generate a character type based on a level (as specified in steps X10 and N2).",5,{"i":[{"n":"self"}],"o":{"n":"bidiclass"}}],[11,"vec","","",5,null],[11,"into","","Convert to the level number",5,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"from","","Create level by number",5,{"i":[{"n":"u8"}],"o":{"n":"level"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"clone","unicode_bidi","",3,{"i":[{"n":"self"}],"o":{"n":"bidiclass"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"bidiclass"}],"o":{"n":"bool"}}],[6,"LevelRun","","A maximal substring of characters with the same embedding level.",null,null],[17,"UNICODE_VERSION","","The Unicode version of data",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"paragraphinfo"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"paragraphinfo"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"initialinfo"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"initialinfo"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,{"i":[{"n":"str"},{"g":["level"],"n":"option"}],"o":{"n":"initialinfo"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"bidiinfo"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"bidiinfo"}],"o":{"n":"bool"}}],[11,"new","","Split the text into paragraphs and determine the bidi embedding levels for each paragraph.",2,{"i":[{"n":"str"},{"g":["level"],"n":"option"}],"o":{"n":"bidiinfo"}}],[11,"reordered_levels","","Re-order a line based on resolved levels and return only the embedding levels, one `Level` per byte.",2,{"i":[{"n":"self"},{"n":"paragraphinfo"},{"g":["usize"],"n":"range"}],"o":{"g":["level"],"n":"vec"}}],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only the embedding levels, one `Level` per character.",2,{"i":[{"n":"self"},{"n":"paragraphinfo"},{"g":["usize"],"n":"range"}],"o":{"g":["level"],"n":"vec"}}],[11,"reorder_line","","Re-order a line based on resolved levels and return the line in display order.",2,{"i":[{"n":"self"},{"n":"paragraphinfo"},{"g":["usize"],"n":"range"}],"o":{"g":["str"],"n":"cow"}}],[11,"visual_runs","","Find the level runs within a line and return them in visual order.",2,null],[11,"has_rtl","","If processed text has any computed RTL levels",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}]],"paths":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities as described in Unicode Standard Annex #15.","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition's characters.",null,null],[3,"StreamSafe","","UAX15-D4: This iterator keeps track of how many non-starters there have been since the last starter in NFKD and will emit a Combining Grapheme Joiner (U+034F) if the count exceeds 30.",null,null],[4,"IsNormalized","","The QuickCheck algorithm can quickly determine if a text is or isn't normalized without any allocations in many cases, but it has to be able to return `Maybe` when a full decomposition and recomposition is necessary.",null,null],[13,"Yes","","The text is definitely normalized.",0,null],[13,"No","","The text is definitely not normalized.",0,null],[13,"Maybe","","The text may be normalized.",0,null],[5,"is_nfc","","Authoritatively check if a string is in NFC.",null,{"i":[{"n":"str"}],"o":{"n":"bool"}}],[5,"is_nfc_quick","","Quickly check if a string is in NFC, potentially returning `IsNormalized::Maybe` if further checks are necessary.  In this case a check like `s.chars().nfc().eq(s.chars())` should suffice.",null,{"i":[{"n":"i"}],"o":{"n":"isnormalized"}}],[5,"is_nfc_stream_safe","","Authoritatively check if a string is Stream-Safe NFC.",null,{"i":[{"n":"str"}],"o":{"n":"bool"}}],[5,"is_nfc_stream_safe_quick","","Quickly check if a string is Stream-Safe NFC.",null,{"i":[{"n":"i"}],"o":{"n":"isnormalized"}}],[5,"is_nfd","","Authoritatively check if a string is in NFD.",null,{"i":[{"n":"str"}],"o":{"n":"bool"}}],[5,"is_nfd_quick","","Quickly check if a string is in NFD.",null,{"i":[{"n":"i"}],"o":{"n":"isnormalized"}}],[5,"is_nfd_stream_safe","","Authoritatively check if a string is Stream-Safe NFD.",null,{"i":[{"n":"str"}],"o":{"n":"bool"}}],[5,"is_nfd_stream_safe_quick","","Quickly check if a string is Stream-Safe NFD.",null,{"i":[{"n":"i"}],"o":{"n":"isnormalized"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"decompositions"}}],[11,"next","","",1,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[11,"size_hint","","",1,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"recompositions"}}],[11,"next","","",2,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"isnormalized"}],"o":{"n":"bool"}}],[11,"next","","",3,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",null,{"i":[{"n":"char"},{"n":"f"}]}],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",null,{"i":[{"n":"char"},{"n":"f"}]}],[5,"compose","","Compose two characters into a single character, if possible. See Unicode Standard Annex #15 for more information.",null,{"i":[{"n":"char"},{"n":"char"}],"o":{"g":["char"],"n":"option"}}],[5,"canonical_combining_class","","",null,{"i":[{"n":"char"}],"o":{"n":"u8"}}],[5,"is_combining_mark","","",null,{"i":[{"n":"char"}],"o":{"n":"bool"}}],[17,"UNICODE_VERSION","unicode_normalization","",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations as described in Unicode Standard Annex #15.",null,null],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D (canonical decomposition).",4,{"i":[{"n":"self"}],"o":{"n":"decompositions"}}],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD (compatibility decomposition).",4,{"i":[{"n":"self"}],"o":{"n":"decompositions"}}],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C (canonical decomposition followed by canonical composition).",4,{"i":[{"n":"self"}],"o":{"n":"recompositions"}}],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC (compatibility decomposition followed by canonical composition).",4,{"i":[{"n":"self"}],"o":{"n":"recompositions"}}],[10,"stream_safe","","An Iterator over the string with Conjoining Grapheme Joiner characters inserted according to the Stream-Safe Text Process (UAX15-D4)",4,{"i":[{"n":"self"}],"o":{"n":"streamsafe"}}]],"paths":[[4,"IsNormalized"],[3,"Decompositions"],[3,"Recompositions"],[3,"StreamSafe"],[8,"UnicodeNormalization"]]};
searchIndex["unicode_width"] = {"doc":"Determine displayed width of `char` and `str` types according to Unicode Standard Annex #11 rules.","items":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width is based on.",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode characters.",null,null],[10,"width","","Returns the character's displayed width in columns, or `None` if the character is a control character other than `'\\x00'`.",0,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[10,"width_cjk","","Returns the character's displayed width in columns, or `None` if the character is a control character other than `'\\x00'`.",0,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string's displayed width in columns.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"width_cjk","","Returns the string's displayed width in columns.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}]],"paths":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}]],"paths":[[8,"UnicodeXID"]]};
searchIndex["unreachable"] = {"doc":"unreachable","items":[[5,"unreachable","unreachable","Hint to the optimizer that any code path which calls this function is statically unreachable and can be removed.",null,null],[8,"UncheckedOptionExt","","An extension trait for `Option<T>` providing unchecked unwrapping methods.",null,null],[10,"unchecked_unwrap","","Get the value out of this Option without checking for None.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[10,"unchecked_unwrap_none","","Assert that this Option is a None to the optimizer.",0,{"i":[{"n":"self"}]}],[8,"UncheckedResultExt","","An extension trait for `Result<T, E>` providing unchecked unwrapping methods.",null,null],[10,"unchecked_unwrap_ok","","Get the value out of this Result without checking for Err.",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[10,"unchecked_unwrap_err","","Get the error out of this Result without checking for Ok.",1,{"i":[{"n":"self"}],"o":{"n":"e"}}]],"paths":[[8,"UncheckedOptionExt"],[8,"UncheckedResultExt"]]};
searchIndex["unsafe_any"] = {"doc":"Traits for unsafe downcasting from trait objects to & or &mut references of concrete types. These should only be used if you are absolutely certain of the type of the data in said trait object - there be dragons etc.","items":[[8,"UnsafeAny","unsafe_any","A trait providing unchecked downcasting to its contents when stored in a trait object.",null,null],[8,"UnsafeAnyExt","","An extension trait for unchecked downcasting of trait objects.",null,null],[11,"downcast_ref_unchecked","","Returns a reference to the contained value, assuming that it is of type `T`.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"downcast_mut_unchecked","","Returns a mutable reference to the contained value, assuming that it is of type `T`.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"downcast_unchecked","","Returns a the contained value, assuming that it is of type `T`.",0,{"i":[{"n":"box"}],"o":{"n":"box"}}],[11,"downcast_ref_unchecked","","Returns a reference to the contained value, assuming that it is of type `T`.",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"downcast_mut_unchecked","","Returns a mutable reference to the contained value, assuming that it is of type `T`.",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"downcast_unchecked","","Returns a the contained value, assuming that it is of type `T`.",1,{"i":[{"g":["unsafeany"],"n":"box"}],"o":{"n":"box"}}]],"paths":[[8,"UnsafeAnyExt"],[8,"UnsafeAny"]]};
searchIndex["url"] = {"doc":"rust-url is an implementation of the URL Standard for the Rust programming language.","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",null,null],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us to implement `ToSocketAddrs for (Host<S>, u16)`.",null,null],[12,"host","","",0,null],[12,"port","","",0,null],[3,"SocketAddrs","","Socket addresses for an URL.",null,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is not cannot-be-base.",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically not used directly.",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL's scheme, host and port",1,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII labels are encoded in punycode per IDNA if this is the host of a special URL, or percent encoded for non-special URLs. Hosts for non-special URLs are also called opaque hosts.",2,null],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization of this address, as four decimal integers separated by `.` dots.",2,null],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization of that address between `[` and `]` brackets, in the format per RFC 5952 A Recommendation for IPv6 Address Text Representation: lowercase hexadecimal with maximal `::` compression.",2,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",3,null],[13,"IdnaError","","",3,null],[13,"InvalidPort","","",3,null],[13,"InvalidIpv4Address","","",3,null],[13,"InvalidIpv6Address","","",3,null],[13,"InvalidDomainCharacter","","",3,null],[13,"RelativeUrlWithoutBase","","",3,null],[13,"RelativeUrlWithCannotBeABaseBase","","",3,null],[13,"SetHostOnCannotBeABaseUrl","","",3,null],[13,"Overflow","","",3,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",4,null],[13,"C0SpaceIgnored","","",4,null],[13,"EmbeddedCredentials","","",4,null],[13,"ExpectedDoubleSlash","","",4,null],[13,"ExpectedFileDoubleSlash","","",4,null],[13,"FileWithHostAndWindowsDrive","","",4,null],[13,"NonUrlCodePoint","","",4,null],[13,"NullInFragment","","",4,null],[13,"PercentDecode","","",4,null],[13,"TabOrNewlineIgnored","","",4,null],[13,"UnencodedAtSign","","",4,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",5,null],[13,"AfterScheme","","",5,null],[13,"BeforeUsername","","",5,null],[13,"AfterUsername","","",5,null],[13,"BeforePassword","","",5,null],[13,"AfterPassword","","",5,null],[13,"BeforeHost","","",5,null],[13,"AfterHost","","",5,null],[13,"BeforePort","","",5,null],[13,"AfterPort","","",5,null],[13,"BeforePath","","",5,null],[13,"AfterPath","","",5,null],[13,"BeforeQuery","","",5,null],[13,"AfterQuery","","",5,null],[13,"BeforeFragment","","",5,null],[13,"AfterFragment","","",5,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"host"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"le","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"gt","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"ge","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"hash","","",2,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",2,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"host"}}],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",2,{"i":[{"n":"str"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"parse_opaque","","",2,{"i":[{"n":"str"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"hostandport"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",0,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"hostandport"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"to_socket_addrs","","",0,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",6,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"option"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"origin"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"origin"}],"o":{"n":"bool"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"origin"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,{"o":{"n":"origin"}}],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple (as opposed to an opaque origin).",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"ascii_serialization","","https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin",1,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"unicode_serialization","","https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin",1,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"opaqueorigin"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"opaqueorigin"}],"o":{"n":"bool"}}],[11,"hash","","",7,null],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"opaqueorigin"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",8,{"i":[{"n":"self"}]}],[11,"clear","","Remove all segments in the path, leaving the minimal `url.path() == \"/\"`.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty, except if these was only one segment to begin with.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"pop","","Remove the last segment of this URL’s path.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"push","","Append the given segment at the end of this URL’s path.",8,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"extend","","Append each segment from the given iterator at the end of this URL’s path.",8,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"self"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"parseerror"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",3,{"i":[{"n":"errors"}],"o":{"n":"parseerror"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"syntaxviolation"}],"o":{"n":"bool"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"syntaxviolation"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",4,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"index","","",9,{"i":[{"n":"self"},{"n":"rangefull"}],"o":{"n":"str"}}],[11,"index","","",9,{"i":[{"n":"self"},{"g":["position"],"n":"rangefrom"}],"o":{"n":"str"}}],[11,"index","","",9,{"i":[{"n":"self"},{"g":["position"],"n":"rangeto"}],"o":{"n":"str"}}],[11,"index","","",9,{"i":[{"n":"self"},{"g":["position"],"n":"range"}],"o":{"n":"str"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"form_urlencoded","","Parser and serializer for the `application/x-www-form-urlencoded` syntax, as used by HTML forms.",null,null],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",null,null],[5,"parse","","Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.",null,null],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",10,{"i":[{"n":"self"}],"o":{"n":"string"}}],[10,"finish","","",10,null],[16,"Finished","","",10,null],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"parse"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",11,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_owned","","Return a new iterator that yields pairs of `String` instead of pairs of `Cow<str>`.",11,{"i":[{"n":"self"}],"o":{"n":"parseintoowned"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",12,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",13,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"size_hint","","",13,null],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_mut_string","url","",15,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"finish","","",15,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"new","url::form_urlencoded","Create a new `application/x-www-form-urlencoded` serializer for the given target.",14,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded` serializer for a suffix of the given target.",14,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"self"}}],[11,"clear","","Remove any existing name/value pair.",14,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"custom_encoding_override","","Set the character encoding to be used for names and values before percent-encoding.",14,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"append_pair","","Serialize and append a name/value pair.",14,{"i":[{"n":"self"},{"n":"str"},{"n":"str"}],"o":{"n":"self"}}],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",14,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"self"}}],[11,"finish","","If this serializer was constructed with a string, take and return that string.",14,null],[11,"clone","url","",9,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"parseoptions"}}],[11,"base_url","","Change the base URL",16,{"i":[{"n":"self"},{"g":["url"],"n":"option"}],"o":{"n":"self"}}],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse errors, passing a static string description.  This method is deprecated in favor of `syntax_violation_callback` and is implemented as an adaptor for the latter, passing the `SyntaxViolation` description. Only the last value passed to either method will be used by a parser.",16,{"i":[{"n":"self"},{"g":["fn"],"n":"option"}],"o":{"n":"self"}}],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal `SyntaxViolation` when it occurs during parsing. Note that since the provided function is `Fn`, the caller might need to utilize interior mutability, such as with a `RefCell`, to collect the violations.",16,{"i":[{"n":"self"},{"g":["fn"],"n":"option"}],"o":{"n":"self"}}],[11,"parse","","Parse an URL string with the configuration so far.",16,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"parse","","Parse an absolute URL from a string.",9,{"i":[{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its query string.",9,{"i":[{"n":"str"},{"n":"i"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",9,{"o":{"n":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into_string","","Return the serialization of this URL.",9,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",9,{"i":[{"n":"self"}],"o":{"n":"origin"}}],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"has_authority","","Return whether the URL has an 'authority', which can contain a username, password, host, and port number.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning that parsing a relative URL string with this URL as the base will return an error.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"username","","Return the username for this URL (typically the empty string) as a percent-encoded ASCII string.",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"has_host","","Equivalent to `url.host().is_some()`.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"host","","Return the parsed representation of the host for this URL. Non-ASCII domain labels are punycode-encoded per IDNA.",9,{"i":[{"n":"self"}],"o":{"g":["host"],"n":"option"}}],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"port","","Return the port number for this URL, if any.",9,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",9,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["hostandport"],"n":"result"}}],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string. For cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with '/'. For other URLs, this starts with a '/' slash and continues with slash-separated path segments.",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of '/' slash-separated path segments, each as a percent-encoded ASCII string.",9,{"i":[{"n":"self"}],"o":{"g":["split"],"n":"option"}}],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded` and return an iterator of (key, value) pairs.",9,{"i":[{"n":"self"}],"o":{"n":"parse"}}],[11,"fragment","","Return this URL’s fragment identifier, if any.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"set_fragment","","Change this URL’s fragment identifier.",9,{"i":[{"n":"self"},{"g":["str"],"n":"option"}]}],[11,"set_query","","Change this URL’s query string.",9,{"i":[{"n":"self"},{"g":["str"],"n":"option"}]}],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs in `application/x-www-form-urlencoded` syntax.",9,{"i":[{"n":"self"}],"o":{"g":["urlquery"],"n":"serializer"}}],[11,"set_path","","Change this URL’s path.",9,{"i":[{"n":"self"},{"n":"str"}]}],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",9,{"i":[{"n":"self"}],"o":{"g":["pathsegmentsmut"],"n":"result"}}],[11,"set_port","","Change this URL’s port number.",9,{"i":[{"n":"self"},{"g":["u16"],"n":"option"}],"o":{"n":"result"}}],[11,"set_host","","Change this URL’s host.",9,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"set_ip_host","","Change this URL’s host to the given IP address.",9,{"i":[{"n":"self"},{"n":"ipaddr"}],"o":{"n":"result"}}],[11,"set_password","","Change this URL’s password.",9,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"n":"result"}}],[11,"set_username","","Change this URL’s username.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"set_scheme","","Change this URL’s scheme.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",9,{"i":[{"n":"p"}],"o":{"g":["url"],"n":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",9,{"i":[{"n":"p"}],"o":{"g":["url"],"n":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar, convert its path to an absolute `std::path::Path`.",9,{"i":[{"n":"self"}],"o":{"g":["pathbuf"],"n":"result"}}],[11,"to_socket_addrs","","",9,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"from_str","","",9,{"i":[{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"cmp","","",9,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",9,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"hash","","",9,{"i":[{"n":"self"},{"n":"h"}]}],[11,"as_ref","","",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",15,{"i":[{"n":"self"}]}],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",null,null]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[3,"SocketAddrs"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Url"],[8,"Target"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"Serializer"],[3,"UrlQuery"],[3,"ParseOptions"]]};
searchIndex["urlencoded"] = {"doc":"URL Encoded Plugin for Iron.","items":[[3,"UrlEncodedQuery","urlencoded","Plugin for `Request` that extracts URL encoded data from the URL query string.",null,null],[3,"UrlEncodedBody","","Plugin for `Request` that extracts URL encoded data from the request body.",null,null],[4,"UrlDecodingError","","An error representing the two possible errors that can occur during URL decoding.",null,null],[13,"BodyError","","An error parsing the request body",0,null],[13,"EmptyQuery","","An empty query string, either in body or url query",0,null],[6,"QueryMap","","Hashmap mapping strings to vectors of strings.",null,null],[6,"QueryResult","","Result type for decoding query parameters.",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",0,{"i":[{"n":"self"}],"o":{"g":["stderror"],"n":"option"}}],[11,"eval","","",1,{"i":[{"n":"request"}],"o":{"n":"queryresult"}}],[11,"eval","","",2,{"i":[{"n":"request"}],"o":{"n":"queryresult"}}]],"paths":[[4,"UrlDecodingError"],[3,"UrlEncodedQuery"],[3,"UrlEncodedBody"]]};
searchIndex["utf8_ranges"] = {"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent ranges of UTF-8 bytes. This is useful for constructing byte based automatons that need to embed UTF-8 decoding.","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",0,null],[12,"end","","End of byte range (inclusive).",0,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",1,null],[13,"Two","","Two successive byte ranges.",1,null],[13,"Three","","Three successive byte ranges.",1,null],[13,"Four","","Four successive byte ranges.",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"utf8sequence"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"utf8sequence"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"utf8sequence"}],"o":{"n":"bool"}}],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,null],[11,"len","","Returns the number of byte ranges in this sequence.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"matches","","Returns true if and only if a prefix of `bytes` matches this sequence of byte ranges.",1,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"utf8range"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"utf8range"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"utf8range"}],"o":{"n":"bool"}}],[11,"matches","","Returns true if and only if the given byte is in this range.",0,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new iterator over UTF-8 byte ranges for the scalar value range given.",2,{"i":[{"n":"char"},{"n":"char"}],"o":{"n":"self"}}],[11,"next","","",2,{"i":[{"n":"self"}],"o":{"n":"option"}}]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["uuid"] = {"doc":"Generate and parse UUIDs","items":[[3,"Uuid","uuid","A Universally Unique Identifier (UUID).",null,null],[3,"Simple","","An adaptor for formatting a `Uuid` as a simple string.",null,null],[3,"Hyphenated","","An adaptor for formatting a `Uuid` as a hyphenated string.",null,null],[3,"Urn","","An adaptor for formatting a `Uuid` as a URN string.",null,null],[4,"UuidVersion","","The version of the UUID, denoting the generating algorithm.",null,null],[13,"Mac","","Version 1: MAC address",0,null],[13,"Dce","","Version 2: DCE Security",0,null],[13,"Md5","","Version 3: MD5 hash",0,null],[13,"Random","","Version 4: Random",0,null],[13,"Sha1","","Version 5: SHA-1 hash",0,null],[4,"UuidVariant","","The reserved variants of UUIDs.",null,null],[13,"NCS","","Reserved by the NCS for backward compatibility",1,null],[13,"RFC4122","","As described in the RFC4122 Specification (default)",1,null],[13,"Microsoft","","Reserved by Microsoft for backward compatibility",1,null],[13,"Future","","Reserved for future expansion",1,null],[4,"ParseError","","Error details for string parsing failures.",null,null],[13,"InvalidLength","","",2,null],[13,"InvalidCharacter","","",2,null],[13,"InvalidGroups","","",2,null],[13,"InvalidGroupLength","","",2,null],[11,"description","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"serialize","","",3,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"result"}}],[11,"deserialize","","",3,{"i":[{"n":"d"}],"o":{"n":"result"}}],[6,"UuidBytes","","A 128-bit (16 byte) buffer containing the ID.",null,null],[17,"NAMESPACE_DNS","","A UUID of the namespace of fully-qualified domain names",null,null],[17,"NAMESPACE_URL","","A UUID of the namespace of URLs",null,null],[17,"NAMESPACE_OID","","A UUID of the namespace of ISO OIDs",null,null],[17,"NAMESPACE_X500","","A UUID of the namespace of X.500 DNs (in DER or a text output format)",null,null],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"uuidversion"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"uuidversion"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"uuidvariant"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"uuidvariant"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"uuid"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"uuid"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"uuid"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"uuid"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",3,{"i":[{"n":"self"},{"n":"uuid"}],"o":{"n":"bool"}}],[11,"le","","",3,{"i":[{"n":"self"},{"n":"uuid"}],"o":{"n":"bool"}}],[11,"gt","","",3,{"i":[{"n":"self"},{"n":"uuid"}],"o":{"n":"bool"}}],[11,"ge","","",3,{"i":[{"n":"self"},{"n":"uuid"}],"o":{"n":"bool"}}],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"uuid"}],"o":{"n":"ordering"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"parseerror"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"nil","","The 'nil UUID'.",3,{"o":{"n":"uuid"}}],[11,"new","","Creates a new `Uuid`.",3,{"i":[{"n":"uuidversion"}],"o":{"g":["uuid"],"n":"option"}}],[11,"new_v4","","Creates a random `Uuid`.",3,{"o":{"n":"uuid"}}],[11,"from_fields","","Creates a `Uuid` from four field values.",3,null],[11,"from_bytes","","Creates a `Uuid` using the supplied bytes.",3,null],[11,"get_variant","","Returns the variant of the `Uuid` structure.",3,{"i":[{"n":"self"}],"o":{"g":["uuidvariant"],"n":"option"}}],[11,"get_version_num","","Returns the version number of the `Uuid`.",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"get_version","","Returns the version of the `Uuid`.",3,{"i":[{"n":"self"}],"o":{"g":["uuidversion"],"n":"option"}}],[11,"as_bytes","","Return an array of 16 octets containing the UUID data",3,null],[11,"simple","","Returns a wrapper which when formatted via `fmt::Display` will format a string of 32 hexadecimal digits.",3,{"i":[{"n":"self"}],"o":{"n":"simple"}}],[11,"hyphenated","","Returns a wrapper which when formatted via `fmt::Display` will format a string of hexadecimal digits separated into groups with a hyphen.",3,{"i":[{"n":"self"}],"o":{"n":"hyphenated"}}],[11,"urn","","Returns a wrapper which when formatted via `fmt::Display` will format a string of the UUID as a full URN string.",3,{"i":[{"n":"self"}],"o":{"n":"urn"}}],[11,"to_timestamp","","Returns an Optional Tuple of (u64, u16) representing the timestamp and  counter portion of a V1 UUID.  If the supplied UUID is not V1, this  will return None",3,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with optional hyphens.",3,{"i":[{"n":"str"}],"o":{"g":["uuid","parseerror"],"n":"result"}}],[11,"is_nil","","Tests if the UUID is nil",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"default","","Returns the nil UUID, which is all zeroes",3,{"o":{"n":"uuid"}}],[11,"from_str","","Parse a hex string and interpret as a `Uuid`.",3,{"i":[{"n":"str"}],"o":{"g":["uuid","parseerror"],"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",3,{"i":[{"n":"self"},{"n":"s"}]}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"rand","","",3,{"i":[{"n":"r"}],"o":{"n":"uuid"}}]],"paths":[[4,"UuidVersion"],[4,"UuidVariant"],[4,"ParseError"],[3,"Uuid"],[3,"Simple"],[3,"Hyphenated"],[3,"Urn"]]};
searchIndex["vec_map"] = {"doc":"A simple map based on a vector for small integer keys. Space requirements are O(highest integer key).","items":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the values being mutable.",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"ValuesMut","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be vacant or occupied.",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[11,"default","","",1,{"o":{"n":"self"}}],[11,"hash","","",1,{"i":[{"n":"self"},{"n":"h"}]}],[11,"new","","Creates an empty `VecMap`.",1,{"o":{"n":"self"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity` elements before resizing.",1,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without reallocating.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys. In the case of `VecMap` this means reallocations will not occur as long as all inserted keys are less than `len`.",1,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys. In the case of `VecMap` this means reallocations will not occur as long as all inserted keys are less than `len`.",1,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,{"i":[{"n":"self"}]}],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys. The iterator's element type is `usize`.",1,{"i":[{"n":"self"}],"o":{"n":"keys"}}],[11,"values","","Returns an iterator visiting all values in ascending order of the keys. The iterator's element type is `&'r V`.",1,{"i":[{"n":"self"}],"o":{"n":"values"}}],[11,"values_mut","","Returns an iterator visiting all values in ascending order of the keys. The iterator's element type is `&'r mut V`.",1,{"i":[{"n":"self"}],"o":{"n":"valuesmut"}}],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys. The iterator's element type is `(usize, &'r V)`.",1,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys, with mutable references to the values. The iterator's element type is `(usize, &'r mut V)`.",1,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",1,{"i":[{"n":"self"},{"n":"self"}]}],[11,"split_off","","Splits the collection into two at the given key.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of the keys, emptying (but not consuming) the original `VecMap`. The iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",1,{"i":[{"n":"self"}],"o":{"n":"drain"}}],[11,"len","","Returns the number of elements in the map.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clear","","Clears the map, removing all key-value pairs.",1,{"i":[{"n":"self"}]}],[11,"get","","Returns a reference to the value corresponding to the key.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value present in the map, that value is returned. Otherwise, `None` is returned.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"v"}],"o":{"n":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key was previously in the map.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"entry"}}],[11,"retain","","Retains only the elements specified by the predicate.",1,{"i":[{"n":"self"},{"n":"f"}]}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.",0,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key, and returns a mutable reference to it.",2,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"v"}}],[11,"get","","Gets a reference to the value in the entry.",3,{"i":[{"n":"self"}],"o":{"n":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,{"i":[{"n":"self"}],"o":{"n":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,{"i":[{"n":"self"}],"o":{"n":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key, and returns the entry's old value.",3,{"i":[{"n":"self"},{"n":"v"}],"o":{"n":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,{"i":[{"n":"self"}],"o":{"n":"v"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone_from","","",1,{"i":[{"n":"self"},{"n":"self"}]}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"ordering"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_iter","","",1,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys, consuming the original `VecMap`. The iterator's element type is `(usize, &'r V)`.",1,{"i":[{"n":"self"}],"o":{"n":"intoiter"}}],[11,"extend","","",1,{"i":[{"n":"self"},{"n":"i"}]}],[11,"extend","","",1,{"i":[{"n":"self"},{"n":"i"}]}],[11,"index","","",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"v"}}],[11,"index","","",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"v"}}],[11,"index_mut","","",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"v"}}],[11,"index_mut","","",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"v"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"next","","",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"keys"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"values"}}],[11,"next","","",8,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",8,null],[11,"next_back","","",8,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",6,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"size_hint","","",6,null],[11,"next_back","","",6,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"next","","",7,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",7,null],[11,"next_back","","",7,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",9,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",9,null],[11,"next_back","","",9,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",10,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"i":[{"n":"self"}],"o":{"n":"option"}}]],"paths":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"ValuesMut"],[3,"IntoIter"]]};
searchIndex["void"] = {"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,null],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"void"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["ordering"],"n":"option"}}]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
initSearch(searchIndex);
